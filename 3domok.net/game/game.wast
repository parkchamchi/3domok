(module
 (type $FUNCSIG$viii (func (param i32 i32 i32)))
 (type $FUNCSIG$iiiii (func (param i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$viiji (func (param i32 i32 i64 i32)))
 (type $FUNCSIG$vi (func (param i32)))
 (type $FUNCSIG$vii (func (param i32 i32)))
 (type $FUNCSIG$ff (func (param f32) (result f32)))
 (type $FUNCSIG$fff (func (param f32 f32) (result f32)))
 (type $FUNCSIG$iiii (func (param i32 i32 i32) (result i32)))
 (type $FUNCSIG$iidiiii (func (param i32 f64 i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$ii (func (param i32) (result i32)))
 (type $FUNCSIG$jiji (func (param i32 i64 i32) (result i64)))
 (type $FUNCSIG$i (func (result i32)))
 (type $FUNCSIG$iii (func (param i32 i32) (result i32)))
 (type $FUNCSIG$v (func))
 (type $FUNCSIG$vf (func (param f32)))
 (type $FUNCSIG$vff (func (param f32 f32)))
 (type $FUNCSIG$vffff (func (param f32 f32 f32 f32)))
 (type $FUNCSIG$vfi (func (param f32 i32)))
 (type $FUNCSIG$vidd (func (param i32 f64 f64)))
 (type $FUNCSIG$vif (func (param i32 f32)))
 (type $FUNCSIG$viff (func (param i32 f32 f32)))
 (type $FUNCSIG$vifff (func (param i32 f32 f32 f32)))
 (type $FUNCSIG$viffff (func (param i32 f32 f32 f32 f32)))
 (type $FUNCSIG$viif (func (param i32 i32 f32)))
 (type $FUNCSIG$viiii (func (param i32 i32 i32 i32)))
 (type $FUNCSIG$viiiii (func (param i32 i32 i32 i32 i32)))
 (type $FUNCSIG$viiiiii (func (param i32 i32 i32 i32 i32 i32)))
 (type $FUNCSIG$viiiiiii (func (param i32 i32 i32 i32 i32 i32 i32)))
 (type $FUNCSIG$viiiiiiii (func (param i32 i32 i32 i32 i32 i32 i32 i32)))
 (type $FUNCSIG$viiiiiiiii (func (param i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (type $FUNCSIG$vdddd (func (param f64 f64 f64 f64)))
 (type $FUNCSIG$vd (func (param f64)))
 (type $FUNCSIG$vdd (func (param f64 f64)))
 (type $FUNCSIG$vdi (func (param f64 i32)))
 (type $FUNCSIG$viid (func (param i32 i32 f64)))
 (type $FUNCSIG$vid (func (param i32 f64)))
 (type $FUNCSIG$viddd (func (param i32 f64 f64 f64)))
 (type $FUNCSIG$vidddd (func (param i32 f64 f64 f64 f64)))
 (type $FUNCSIG$iiiiii (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $FUNCSIG$d (func (result f64)))
 (import "env" "memory" (memory $memory 256 256))
 (data (i32.const 1028) "\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\04")
 (data (i32.const 1056) "#version 100                       \nattribute vec3 vertexPosition;     \nattribute vec2 vertexTexCoord;     \nattribute vec4 vertexColor;        \nvarying vec2 fragTexCoord;         \nvarying vec4 fragColor;            \nuniform mat4 mvp;                  \nvoid main()                        \n{                                  \n    fragTexCoord = vertexTexCoord; \n    fragColor = vertexColor;       \n    gl_Position = mvp*vec4(vertexPosition, 1.0); \n}                                  \n")
 (data (i32.const 1552) "#version 100                       \nprecision mediump float;           \nvarying vec2 fragTexCoord;         \nvarying vec4 fragColor;            \nuniform sampler2D texture0;        \nuniform vec4 colDiffuse;           \nvoid main()                        \n{                                  \n    vec4 texelColor = texture2D(texture0, fragTexCoord); \n    gl_FragColor = texelColor*colDiffuse*fragColor;      \n}                                  \n")
 (data (i32.const 2016) " \00 \00\00\b0\01")
 (data (i32.const 2032) " %\f9\8e\00\n\02\00\00\80\be}_\f4}\1f\a0\f2+J\1e\tR\08\00@\"AP\14\04\10  ).\12\08\"\08\00 \"AP\14\04\10  \f9\10L\08\fa><\10\"}\de\f7}\10  \a1\e82\08\"\08\00\08\"\05\10\04E\10\00\f0\a3\a42\08R\08\00\04\"\05\10\04E\10  \f9\e2^\08\02\00\81\02>}\1f\f4}\10\00\00 \00\00\b0\01\80")
 (data (i32.const 2208) "\be\0f\00\c0\0f\e0\f7\fb}~\bf_\e8\beP\00\a2\08\08D\e8/\14\n\85\02\81PH\a0P\00\a2(\e4I((\14\n\84\02\81@H\a0H\00\be\0f\02\10\af\eb\f7\t\84>\9f\d8O\a0G\00\"\88\e4\t\a1*\14\n\84\02\81PH\a0H\00\"(\08\04\a0/\14\n\85\02\81PH\a2P\00\be\8f\00\00! \f4\fb}~\81_\e8\9c\d0\07\00\80\00\00\e0\0f")
 (data (i32.const 2380) "\80\01\0c\00\82B\bf\df\ef\f7\fb\0b\05\05\85B\bf\04H\00\c6B\a1P(\14@\08\05%\85B\a0\08\a8\00\aaF\a1P(\14@\08\05%\85B\90\10\08\00\92J\a1_\e8\f7C\08\05%y~\88 \08\00\82R\a1@(\01B\08\89$\85@\84@\08\00\82b\a1@*\02B\08Q$\85@\82\80\08\00\82B\bf\c0/\f4C\f8!\fc\85~\bf\00\t>\00\00\00\00\04\00\00\00\00\00\00\00\80\01\0c")
 (data (i32.const 2560) "\02\04\00\04\00 HA\00\00\00\00\00\08\00\00\04\04\00\04< \00A\00\00\00\00\00\08\00\00\f0}\df\f7\85\efKQ\be\ef\fb\be\ef;Q\04\00EA\14\85(JI\aa(\8a\a2 \08Q\04\f0EA\f4\9d(JG\aa(\8a\a2\e0\0bQ\04\10EA\14\84(JI\aa(\8a\a2\00\n\91\02\f0}\df\f7\85/J\d1\aa\e8\fb\be\e0{\1f\01\00\00\00\00\04\08@\00\00\00\08 ")
 (data (i32.const 2692) "\84\0f`\00\00\00\08 ")
 (data (i32.const 2723) "\ac\01\0f")
 (data (i32.const 2739) "$\01\0f")
 (data (i32.const 2751) "\06\00\00\00$\01\0f\00\00\00\00\00\00\00\80\10\t\a2(\fa$\01\0f")
 (data (i32.const 2782) ">\01*%B\"R\0f\00\00\00\00\00\00\00\80\8a\03*\"\"$)\0f\00\00\00\00\00\00\00\80\n\01*%\12$\01\0f\00\00\00\00\00\00\00\80\n\01\be\e8\fb$\01\0f\00\00\00\00\00\00\00\80\be\0e\00\00\02\ac\01\0f\00\00\00\00\00\00\00\80\04\00\00\e0\03\00\00\0f\00\00\00\00\00\00\00\80")
 (data (i32.const 2900) "8\00\00\00\0e\b8C\84\03: \00\80\a0\be\02 \00\00\f0\8a R\c4\02+ \04\"\91\02\f8;\00\f0\07\8e8K\e4\02: \02\1c\8a\1e\08*\e9\11\04\e0\0bB\f4\02\82$\01\14\04\14\e8\ba\04\d1\05\80\b8\c3\e7\n:\89\00\1c\0e<(\02\tP\04\80\00@\c4\02\80D\00\"\84 \e8\02\00P\04\00\00@\80\02\00 \05\00\8e>\08\02\00\10\04\e0\03@\80B\00\00\07\00\84\00\f8\03\00\f0\07\00\00@\80\"\00\00\04")
 (data (i32.const 3050) "@\80\02\00\00\04")
 (data (i32.const 3072) "\02\07\80\00\c2\a0H\18\00\00\01\84!\t\92\02B&\04\01!Q\00\00\7f?\02B\02\10)\00\"\14\c0\ef\f7\fb\fd~\t\a1\df\ef\f7\bb\bb\03\12\0fD(\14\n\85B\t\81@ \10\10\11\01\08\04D(\14\n\85B\7f\81@ \10\10\11\01\04\82\c7\ef\f7\fb\fd~\t\81\cf\e7\f3\11\11\012\a9P(\14\n\85B\t\a1@ \10\10\11\01@\b8P(\14\n\85By\bf\df\ef\f7\bb\bb\03 \a0\1f\00\00\00\00\00\00\10\00\00\00\00\00\00p ")
 (data (i32.const 3249) "(\02\08\83\"\01\00\02\08C\02\01\00\01\01|\14\04\84D\01\00 \04\84\04\80\08?\82\00\84B\bf\df\ef\f7\03~\a1P(\14\n!\00\00\84F\a1P(\14\8aR\a1P(\14z\a1\ef\03\9eJ\a1P(\14RR\a1P(\14J\1f\08\02\84R\a1P(\14\"J\a1P(\f4K\a1\ef\03\84b\a1P(\14RJ\a1P(\04z\a1(\02|B\bf\df\ef\f7\8b~\bf\df\ef\f7\0b\bd\ef\03\00\00\00\00\00\00\00\04\00\00\00\00\08")
 (data (i32.const 3424) "\08\05 \00\00\04\84\00\"\81E\11\10B\01\00\94BQ\00\00\08BQ\94*\a2 \08\a5P\00\00\00 \00\00\00\00\00\00\00\05\00\00\00\00\08\be\ef\fb\fe\fb\be\ef\fb\14\91\eb\fb\be\ef\fb\00 \08\82 \n\a2(\8a\14\91(\8a\a2(\8a>\be\ef\fb\fe\0b\be\ef\fb\14\91(\8a\a2(\8a\00\a2(\8a\"\08\82 \08\14\91(\8a\a2(\8a\08\be\ef\fb\fe\fb\be\ef\fb\14\91/\fa\be\ef\fb\00\00\00\00\00@")
 (data (i32.const 3572) " ")
 (data (i32.const 3601) "\01!\00\04")
 (data (i32.const 3617) "\82P\14\02\14")
 (data (i32.const 3632) "\10\00\00\00 ")
 (data (i32.const 3648) "\be(\8a\a2(\"")
 (data (i32.const 3664) "\aa(\8a\a2\e8\"")
 (data (i32.const 3680) "\aa(\8a\a2\a8\"")
 (data (i32.const 3696) "\aa(\8a\a2\e8\"")
 (data (i32.const 3712) "\be\ef\fb\be/>")
 (data (i32.const 3728) "\04\00\00\00( ")
 (data (i32.const 3747) "\80\0f>")
 (data (i32.constt\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\02\00\00\00\02\00\00\00\03\00\00\00\03\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\05\00\00\00\03\00\00\00\05\00\00\00\00\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\02\00\00\00\03\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\04\00\00\00\05\00\00\00\04\00\00\00\00\00\00\000b\9f9\15\1f\1f:-\d0n:\15\1f\9f:\a1\f7\c6:\9f\ae\ee:\96C\0b;\15\1f\1f;[\0b3;\da\e6F;XY[;\d3\f9p;&\e4\83;a\e2\8f;a\88\9c;\c4\cd\a9;&\aa\b7;\b16\c6;\9eb\d5;P6\e5;,\ba\f5;\e7r\03<\cc`\0c<\c6\a6\15<\d4D\1f<)?)<\92\913<B@><8KI<\a6\b6T<Z~`<\87\a6l<+/y<\0b\n\83<\d5\ae\89<\f5\85\90<P\8d\97<\00\c7\9e<\1e5\a6<x\d3\ad<@\a6\b5<\\\ab\bd<\ff\e6\c5<\f8T\ce<^\f7\d6<J\d0\df<\a5\dd\e8<\86!\f2<\d4\99\fb<a\a5\02=\1c\99\07=\1a\a8\0c=[\d2\11=\ec\18\17=\cc{\1c=\fd\fa!=}\96\'=MN-=y#3=\f5\149=\cd#?=\01PE=\91\99K=q\ffQ=\c7\84X=l&_=y\e6e=\f0\c4l=\ce\c1s=\16\ddz=c\0b\81=o\b7\84=6s\88=2>\8c=\e7\18\90=X\03\94=\82\fd\97=\e2\06\9c=\81 \a0=bJ\a4=\fd\83\a8=S\cd\ac=\e9&\b1=G\91\b5=_\0b\ba=\b8\95\be=Q0\c3=\b1\db\c7=\d9\97\cc=Ad\d1=\ea@\d6=\e0.\db=\9d-\e0=\9b<\e5=\e6\\\ea=~\8e\ef=W\d0\f4=\03$\fa=v\88\ff=\1b\7f\02>_B\05>\8d\0e\08>a\e3\n>\1e\c1\0d>?\a7\10>J\96\13>?\8e\16>\1d\8f\19>\a2\98\1c>\11\ab\1f>\ac\c6\">\ee\ea%>]\18)>\b5N,>;\8e/>\aa\d62>F(6>\0e\839>\04\e7<>&T@>u\caC>\f1IG>\9a\d2J>\b2dN>;\00R>\f0\a4U>\15SY>\aa\n]>l\cb`>\e1\95d>\c6ih>\1bGl>#.p>\9b\1et>\83\18x>\1d\1c|>\b6\14\80>6 \82>\900\84>\c3E\86>\d0_\88>\b7~\8a>w\a2\8c>2\cb\8e>\e8\f8\90>w+\93>\02c\95>f\9f\97>\e7\e0\99>B\'\9c>\b9r\9e>+\c3\a0>\98\18\a3>\00s\a5>\85\d2\a7>&7\aa>\c3\a0\ac>Z\0f\af>0\83\b1>\"\fc\b3>\10z\b6>;\fd\b8>\83\85\bb>\e8\12\be>j\a5\c0>)=\c3>\'\da\c5>B|\c8>y#\cb>\0f\d0\cd>\c3\81\d0>\d68\d3>\06\f5\d5>\95\b6\d8>c}\db>oI\de>\b9\1a\e1>c\f1\e3>l\cd\e6>\b4\ae\e9>[\95\ec>b\81\ef>\c9r\f2>ni\f5>\95e\f8>\1bg\fb>\01n\fe>4\bd\00?\06F\02?\ab\d1\03?\fe_\05?\02\f1\06?\c7\84\08?\\\1b\n?\a2\b4\0b?\98P\0d?_\ef\0e?\f7\90\10??5\12?Y\dc\13?#\86\15?\cf2\17?;\e2\18?h\94\1a?wI\1c?G\01\1e?\d8\bb\1f?Jy!?\8f9#?\a4\fc$?\8b\c2&?D\8b(?\cdV*?9%,?\88\f6-?\97\ca/?\98\a11?l{3?!X5?\b977?\"\1a9?~\ff:?\bc\e7<?\cc\d2>?\cf\c0@?\c4\b1B?\8b\a5D?E\9cF?\f2\95H?\81\92J?\04\92L?h\94N?\d0\99P?\1a\a2R?X\adT?\88\bbV?\ab\ccX?\d2\e0Z?\db\f7\\?\e8\11_?\e8.a?\ecNc?\e3qe?\dd\97g?\db\c0i?\cc\eck?\c1\1bn?\baMp?\b6\82r?\b6\bat?\a9\f5v?\b13y?\cdt{?\dc\b8}?\00\00\80?\0d\00s\00\0d\00z\00\0d\00\80\00\0d\00\87\00\0d\00\8d\00\0d\00\94\00\0d\00\9a\00\0d\00\a1\00\1a\00\a7\00\1a\00\b4\00\1a\00\c1\00\1a\00\ce\00\1a\00\da\00\1a\00\e7\00\1a\00\f4\00\1a\00\01\013\00\0e\013\00(\013\00A\013\00[\013\00u\013\00\8f\013\00\a8\013\00\c2\01g\00\dc\01g\00\0f\02g\00C\02g\00v\02g\00\aa\02g\00\dd\02g\00\11\03g\00D\03\ce\00x\03\ce\00\df\03\ce\00F\04\ce\00\ad\04\ce\00\14\05\c5\00{\05\bc\00\dd\05\b5\00;\06X\01\97\06B\01B\070\01\e3\07 \01{\08\12\01\0b\t\06\01\94\t\fc\00\17\n\f2\00\95\n\cb\01\0f\0b\ae\01\f4\0b\95\01\cb\0c\80\01\95\0dn\01V\0e^\01\0d\0fP\01\bc\0fC\01c\10d\02\07\11>\028\12\1d\02W\13\01\02f\14\e9\01f\15\d3\01Z\16\c0\01D\17\af\01$\181\03\fe\18\fe\02\96\1a\d2\02\15\1c\ad\02~\1d\8d\02\d4\1ep\02\1a V\02R!@\02}\"C\04\9f#\fe\03\c0%\c4\03\bf\'\92\03\a1)g\03j+A\03\1d-\1f\03\be.\00\03M0\b0\05\d11U\05\a84\07\05R7\c5\04\d59\8b\047<X\04|>*\04\a8@\01\04\bdB\98\07\c2D\1e\07\8eH\b6\06\1cL]\06vO\10\06\a5R\cc\05\acU\8f\05\92XY\05Y[#\n\0c^\80\t\1cc\f6\08\dbg\7f\08Ul\18\08\94p\bd\07\a0tl\07}x#\073|\10\00\00\00\0b\00\00\00\n\00\00\00\10\00\00\00\18\00\00\00(\00\00\003\00\00\00=\00\00\00\0c\00\00\00\0c\00\00\00\0e\00\00\00\13\00\00\00\1a\00\00\00:\00\00\00<\00\00\007\00\00\00\0e\00\00\00\0d\00\00\00\10\00\00\00\18\00\00\00(\00\00\009\00\00\00E\00\00\008\00\00\00\0e\00\00\00\11\00\00\00\16\00\00\00\1d\00\00\003\00\00\00W\00\00\00P\00\00\00>\00\00\00\12\00\00\00\16\00\00\00%\00\00\008\00\00\00D\00\00\00m\00\00\00g\00\00\00M\00\00\00\18\00\00\00#\00\00\007\00\00\00@\00\00\00Q\00\00\00h\00\00\00q\00\00\00\\\00\00\001\00\00\00@\00\00\00N\00\00\00W\00\00\00g\00\00\00y\00\00\00x\00\00\00e\00\00\00H\00\00\00\\\00\00\00_\00\00\00b\00\00\00p\00\00\00d\00\00\00g\00\00\00c\00\00\00\00\01\05\06\0e\0f\1b\1c\02\04\07\0d\10\1a\1d*\03\08\0c\11\19\1e)+\t\0b\12\18\1f(,5\n\13\17 \'-46\14\16!&.37<\15\"%/28;=#$019:>?\11\00\00\00\12\00\00\00\18\00\00\00/\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00\12\00\00\00\15\00\00\00\1a\00\00\00B\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00\18\00\00\00\1a\00\00\008\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00/\00\00\00B\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00c\00\00\00\f3\045@\bf\14{@_\83l@0\dbT@\f3\045@\da9\0e@\15\ef\c3?\c2\c5G?\ff\d8\ff\e0\00\10JFIF\00\01\01\00\00\01\00\01\00\00\ff\db\00\84")
 (data (i32.const 7074) "\01\05\01\01\01\01\01\01")
 (data (i32.const 7106) "\02\01\03\03\02\04\03\05\05\04\04\00\00\01}")
 (data (i32.const 7136) "\01\02\03\00\04\11\05\12!1A\06\13Qa\07\"q\142\81\91\a1\08#B\b1\c1\15R\d1\f0$3br\82\t\n\16\17\18\19\1a%&\'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\83\84\85\86\87\88\89\8a\92\93\94\95\96\97\98\99\9a\a2\a3\a4\a5\a6\a7\a8\a9\aa\b2\b3\b4\b5\b6\b7\b8\b9\ba\c2\c3\c4\c5\c6\c7\c8\c9\ca\d2\d3\d4\d5\d6\d7\d8\d9\da\e1\e2\e3\e4\e5\e6\e7\e8\e9\ea\f1\f2\f3\f4\f5\f6\f7\f8\f9\fa")
 (data (i32.const 7314) "\03\01\01\01\01\01\01\01\01\01")
 (data (i32.const 7346) "\02\01\02\04\04\03\04\07\05\04\04\00\01\02w")
 (data (i32.const 7377) "\01\02\03\11\04\05!1\06\12AQ\07aq\13\"2\81\08\14B\91\a1\b1\c1\t#3R\f0\15br\d1\n\16$4\e1%\f1\17\18\19\1a&\'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\82\83\84\85\86\87\88\89\8a\92\93\94\95\96\97\98\99\9a\a2\a3\a4\a5\a6\a7\a8\a9\aa\b2\b3\b4\b5\b6\b7\b8\b9\ba\c2\c3\c4\c5\c6\c7\c8\c9\ca\d2\d3\d4\d5\d6\d7\d8\d9\da\e2\e3\e4\e5\e6\e7\e8\e9\ea\f2\f3\f4\f5\f6\f7\f8\f9\fa")
 (data (i32.const 7554) "\02\00\02\00\03\00\03\00\03\00\04\00\03\00\05\00\03\00\06\00\03\00\0e\00\04\00\1e\00\05\00>\00\06\00~\00\07\00\fe\00\08\00\fe\01\t")
 (data (i32.const 8576) "\n\00\04\00\00\00\02\00\01\00\02\00\04\00\03\00\0b\00\04\00\1a\00\05\00x\00\07\00\f8\00\08\00\f6\03\n\00\82\ff\10\00\83\ff\10")
 (data (i32.const 8644) "\0c\00\04\00\1b\00\05\00y\00\07\00\f6\01\t\00\f6\07\0b\00\84\ff\10\00\85\ff\10\00\86\ff\10\00\87\ff\10\00\88\ff\10")
 (data (i32.const 8708) "\1c\00\05\00\f9\00\08\00\f7\03\n\00\f4\0f\0c\00\89\ff\10\00\8a\ff\10\00\8b\ff\10\00\8c\ff\10\00\8d\ff\10\00\8e\ff\10")
 (data (i32.const 8772) ":\00\06\00\f7\01\t\00\f5\0f\0c\00\8f\ff\10\00\90\ff\10\00\91\ff\10\00\92\ff\10\00\93\ff\10\00\94\ff\10\00\95\ff\10")
 (data (i32.const 8836) ";\00\06\00\f8\03\n\00\96\ff\10\00\97\ff\10\00\98\ff\10\00\99\ff\10\00\9a\ff\10\00\9b\ff\10\00\9c\ff\10\00\9d\ff\10")
 (data (i32.const 8900) "z\00\07\00\f7\07\0b\00\9e\ff\10\00\9f\ff\10\00\a0\ff\10\00\a1\ff\10\00\a2\ff\10\00\a3\ff\10\00\a4\ff\10\00\a5\ff\10")
 (data (i32.const 8964) "{\00\07\00\f6\0f\0c\00\a6\ff\10\00\a7\ff\10\00\a8\ff\10\00\a9\ff\10\00\aa\ff\10\00\ab\ff\10\00\ac\ff\10\00\ad\ff\10")
 (data (i32.const 9028) "\fa\00\08\00\f7\0f\0c\00\ae\ff\10\00\af\ff\10\00\b0\ff\10\00\b1\ff\10\00\b2\ff\10\00\b3\ff\10\00\b4\ff\10\00\b5\ff\10")
 (data (i32.const 9092) "\f8\01\t\00\c0\7f\0f\00\b6\ff\10\00\b7\ff\10\00\b8\ff\10\00\b9\ff\10\00\ba\ff\10\00\bb\ff\10\00\bc\ff\10\00\bd\ff\10")
 (data (i32.const 9156) "\f9\01\t\00\be\ff\10\00\bf\ff\10\00\c0\ff\10\00\c1\ff\10\00\c2\ff\10\00\c3\ff\10\00\c4\ff\10\00\c5\ff\10\00\c6\ff\10")
 (data (i32.const 9220) "\fa\01\t\00\c7\ff\10\00\c8\ff\10\00\c9\ff\10\00\ca\ff\10\00\cb\ff\10\00\cc\ff\10\00\cd\ff\10\00\ce\ff\10\00\cf\ff\10")
 (data (i32.const 9284) "\f9\03\n\00\d0\ff\10\00\d1\ff\10\00\d2\ff\10\00\d3\ff\10\00\d4\ff\10\00\d5\ff\10\00\d6\ff\10\00\d7\ff\10\00\d8\ff\10")
 (data (i32.const 9348) "\fa\03\n\00\d9\ff\10\00\da\ff\10\00\db\ff\10\00\dc\ff\10\00\dd\ff\10\00\de\ff\10\00\df\ff\10\00\e0\ff\10\00\e1\ff\10")
 (data (i32.const 9412) "\f8\07\0b\00\e2\ff\10\00\e3\ff\10\00\e4\ff\10\00\e5\ff\10\00\e6\ff\10\00\e7\ff\10\00\e8\ff\10\00\e9\ff\10\00\ea\ff\10")
 (data (i32.const 9476) "\eb\ff\10\00\ec\ff\10\00\ed\ff\10\00\ee\ff\10\00\ef\ff\10\00\f0\ff\10\00\f1\ff\10\00\f2\ff\10\00\f3\ff\10\00\f4\ff\10")
 (data (i32.const 9536) "\f9\07\0b\00\f5\ff\10\00\f6\ff\10\00\f7\ff\10\00\f8\ff\10\00\f9\ff\10\00\fa\ff\10\00\fb\ff\10\00\fc\ff\10\00\fd\ff\10\00\fe\ff\10")
 (data (i32.const 9602) "\02\00\01\00\02\00\02\00\02\00\06\00\03\00\0e\00\04\00\1e\00\05\00>\00\06\00~\00\07\00\fe\00\08\00\fe\01\t\00\fe\03\n\00\fe\07\0b")
 (data (i32.const 10626) "\02\00\01\00\02\00\04\00\03\00\n\00\04\00\18\00\05\00\19\00\05\008\00\06\00x\00\07\00\f4\01\t\00\f6\03\n\00\f4\0f\0c")
 (data (i32.const 10692) "\0b\00\04\009\00\06\00\f6\00\08\00\f5\01\t\00\f6\07\0b\00\f5\0f\0c\00\88\ff\10\00\89\ff\10\00\8a\ff\10\00\8b\ff\10")
 (data (i32.const 10756) "\1a\00\05\00\f7\00\08\00\f7\03\n\00\f6\0f\0c\00\c2\7f\0f\00\8c\ff\10\00\8d\ff\10\00\8e\ff\10\00\8f\ff\10\00\90\ff\10")
 (data (i32.const 10820) "\1b\00\05\00\f8\00\08\00\f8\03\n\00\f7\0f\0c\00\91\ff\10\00\92\ff\10\00\93\ff\10\00\94\ff\10\00\95\ff\10\00\96\ff\10")
 (data (i32.const 10884) ":\00\06\00\f6\01\t\00\97\ff\10\00\98\ff\10\00\99\ff\10\00\9a\ff\10\00\9b\ff\10\00\9c\ff\10\00\9d\ff\10\00\9e\ff\10")
 (data (i32.const 10948) ";\00\06\00\f9\03\n\00\9f\ff\10\00\a0\ff\10\00\a1\ff\10\00\a2\ff\10\00\a3\ff\10\00\a4\ff\10\00\a5\ff\10\00\a6\ff\10")
 (data (i32.const 11012) "y\00\07\00\f7\07\0b\00\a7\ff\10\00\a8\ff\10\00\a9\ff\10\00\aa\ff\10\00\ab\ff\10\00\ac\ff\10\00\ad\ff\10\00\ae\ff\10")
 (data (i32.const 11076) "z\00\07\00\f8\07\0b\00\af\ff\10\00\b0\ff\10\00\b1\ff\10\00\b2\ff\10\00\b3\ff\10\00\b4\ff\10\00\b5\ff\10\00\b6\ff\10")
 (data (i32.const 11140) "\f9\00\08\00\b7\ff\10\00\b8\ff\10\00\b9\ff\10\00\ba\ff\10\00\bb\ff\10\00\bc\ff\10\00\bd\ff\10\00\be\ff\10\00\bf\ff\10")
 (data (i32.const 11204) "\f7\01\t\00\c0\ff\10\00\c1\ff\10\00\c2\ff\10\00\c3\ff\10\00\c4\ff\10\00\c5\ff\10\00\c6\ff\10\00\c7\ff\10\00\c8\ff\10")
 (data (i32.const 11268) "\f8\01\t\00\c9\ff\10\00\ca\ff\10\00\cb\ff\10\00\cc\ff\10\00\cd\ff\10\00\ce\ff\10\00\cf\ff\10\00\d0\ff\10\00\d1\ff\10")
 (data (i32.const 11332) "\f9\01\t\00\d2\ff\10\00\d3\ff\10\00\d4\ff\10\00\d5\ff\10\00\d6\ff\10\00\d7\ff\10\00\d8\ff\10\00\d9\ff\10\00\da\ff\10")
 (data (i32.const 11396) "\fa\01\t\00\db\ff\10\00\dc\ff\10\00\dd\ff\10\00\de\ff\10\00\df\ff\10\00\e0\ff\10\00\e1\ff\10\00\e2\ff\10\00\e3\ff\10")
 (data (i32.const 11460) "\f9\07\0b\00\e4\ff\10\00\e5\ff\10\00\e6\ff\10\00\e7\ff\10\00\e8\ff\10\00\e9\ff\10\00\ea\ff\10\00\eb\ff\10\00\ec\ff\10")
 (data (i32.const 11524) "\e0?\0e\00\ed\ff\10\00\ee\ff\10\00\ef\ff\10\00\f0\ff\10\00\f1\ff\10\00\f2\ff\10\00\f3\ff\10\00\f4\ff\10\00\f5\ff\10")
 (data (i32.const 11584) "\fa\03\n\00\c3\7f\0f\00\f6\ff\10\00\f7\ff\10\00\f8\ff\10\00\f9\ff\10\00\fa\ff\10\00\fb\ff\10\00\fc\ff\10\00\fd\ff\10\00\fe\ff\10")
 (data (i32.const 11648) "\ff\ff\ff\ff\00\00\00\00\04\00\00\00\02\00\00\00\06")
 (data (i32.const 11684) "\960\07w,a\0e\ee\baQ\t\99\19\c4m\07\8f\f4jp5\a5c\e9\a3\95d\9e2\88\db\0e\a4\b8\dcy\1e\e9\d5\e0\88\d9\d2\97+L\b6\t\bd|\b1~\07-\b8\e7\91\1d\bf\90d\10\b7\1d\f2 \b0jHq\b9\f3\deA\be\84}\d4\da\1a\eb\e4\ddmQ\b5\d4\f4\c7\85\d3\83V\98l\13\c0\a8kdz\f9b\fd\ec\c9e\8aO\\\01\14\d9l\06cc=\0f\fa\f5\0d\08\8d\c8 n;^\10iL\e4A`\d5rqg\a2\d1\e4\03<G\d4\04K\fd\85\0d\d2k\b5\n\a5\fa\a8\b55l\98\b2B\d6\c9\bb\db@\f9\bc\ac\e3l\d82u\\\dfE\cf\0d\d6\dcY=\d1\ab\ac0\d9&:\00\deQ\80Q\d7\c8\16a\d0\bf\b5\f4\b4!#\c4\b3V\99\95\ba\cf\0f\a5\bd\b8\9e\b8\02(\08\88\05_\b2\d9\0c\c6$\e9\0b\b1\87|o/\11LhX\ab\1da\c1=-f\b6\90A\dcv\06q\db\01\bc \d2\98*\10\d5\ef\89\85\b1q\1f\b5\b6\06\a5\e4\bf\9f3\d4\b8\e8\a2\c9\07x4\f9\00\0f\8e\a8\t\96\18\98\0e\e1\bb\0dj\7f-=m\08\97ld\91\01\\c\e6\f4Qkkbal\1c\d80e\85N\00b\f2\ed\95\06l{\a5\01\1b\c1\f4\08\82W\c4\0f\f5\c6\d9\b0eP\e9\b7\12\ea\b8\be\8b|\88\b9\fc\df\1d\ddbI-\da\15\f3|\d3\8ceL\d4\fbXa\b2M\ceQ\b5:t\00\bc\a3\e20\bb\d4A\a5\dfJ\d7\95\d8=m\c4\d1\a4\fb\f4\d6\d3j\e9iC\fc\d9n4F\88g\ad\d0\b8`\das-\04D\e5\1d\033_L\n\aa\c9|\0d\dd<q\05P\aaA\02\'\10\10\0b\be\86 \0c\c9%\b5hW\b3\85o \t\d4f\b9\9f\e4a\ce\0e\f9\de^\98\c9\d9)\"\98\d0\b0\b4\a8\d7\c7\17=\b3Y\81\0d\b4.;\\\bd\b7\adl\ba\c0 \83\b8\ed\b6\b3\bf\9a\0c\e2\b6\03\9a\d2\b1t9G\d5\ea\afw\d2\9d\15&\db\04\83\16\dcs\12\0bc\e3\84;d\94>jm\0d\a8Zjz\0b\cf\0e\e4\9d\ff\t\93\'\ae\00\n\b1\9e\07}D\93\0f\f0\d2\a3\08\87h\f2\01\1e\fe\c2\06i]Wb\f7\cbge\80q6l\19\e7\06knv\1b\d4\fe\e0+\d3\89Zz\da\10\ccJ\ddgo\df\b9\f9\f9\ef\be\8eC\be\b7\17\d5\8e\b0`\e8\a3\d6\d6~\93\d1\a1\c4\c2\d88R\f2\dfO\f1g\bb\d1gW\bc\a6\dd\06\b5?K6\b2H\da+\0d\d8L\1b\n\af\f6J\036`z\04A\c3\ef`\dfU\dfg\a8\ef\8en1y\beiF\8c\b3a\cb\1a\83f\bc\a0\d2o%6\e2hR\95w\0c\cc\03G\0b\bb\b9\16\02\"/&\05U\be;\ba\c5(\0b\bd\b2\92Z\b4+\04j\b3\\\a7\ff\d7\c21\cf\d0\b5\8b\9e\d9,\1d\ae\de[\b0\c2d\9b&\f2c\ec\9c\a3ju\n\93m\02\a9\06\t\9c?6\0e\eb\85g\07r\13W\00\05\82J\bf\95\14z\b8\e2\ae+\b1{8\1b\b6\0c\9b\8e\d2\92\0d\be\d5\e5\b7\ef\dc|!\df\db\0b\d4\d2\d3\86B\e2\d4\f1\f8\b3\ddhn\83\da\1f\cd\16\be\81[&\b9\f6\e1w\b0owG\b7\18\e6Z\08\88pj\0f\ff\ca;\06f\\\0b\01\11\ff\9ee\8fi\aeb\f8\d3\ffkaE\cfl\16x\e2\n\a0\ee\d2\0d\d7T\83\04N\c2\b3\039a&g\a7\f7\16`\d0MGiI\dbwn>Jj\d1\ae\dcZ\d6\d9f\0b\df@\f0;\d87S\ae\bc\a9\c5\9e\bb\de\7f\cf\b2G\e9\ff\b50\1c\f2\bd\bd\8a\c2\ba\ca0\93\b3S\a6\a3\b4$\056\d0\ba\93\06\d7\cd)W\deT\bfg\d9#.zf\b3\b8Ja\c4\02\1bh]\94+o*7\be\0b\b4\a1\8e\0c\c3\1b\df\05Z\8d\ef\02-\03\00\04\00\05\00\06\00\07\00\08\00\t\00\n\00\0b\00\0d\00\0f\00\11\00\13\00\17\00\1b\00\1f\00#\00+\003\00;\00C\00S\00c\00s\00\83\00\a3\00\c3\00\e3\00\02\01\03\01")
 (data (i32.const 12776) "\01\01\01\01\02\02\02\02\03\03\03\03\04\04\04\04\05\05\05\05\00\00\00\00\01\00\02\00\03\00\04\00\05\00\07\00\t\00\0d\00\11\00\19\00!\001\00A\00a\00\81\00\c1\00\01\01\81\01\01\02\01\03\01\04\01\06\01\08\01\0c\01\10\01\18\01 \010\01@\01`\00\80\00\00\00\00\00\00\01\01\02\02\03\03\04\04\05\05\06\06\07\07\08\08\t\t\n\n\0b\0b\0c\0c\0d\0d\00\00\00\00\00\00\01\00\00\00\00\00\00\00\05\00\00\00\06")
 (data (i32.const 12932) "\01\00\00\00\02\00\00\00\03\00\00\00\04")
 (data (i32.const 12960) "\11\00\n\00\11\11\11\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b")
 (data (i32.const 12992) "\11\00\0f\n\11\11\11\03\n\07\00\01\13\t\0b\0b\00\00\t\06\0b\00\00\0b\00\06\11\00\00\00\11\11\11")
 (data (i32.const 13041) "\0b")
 (data (i32.const 13050) "\11\00\n\n\11\11\11\00\n\00\00\02\00\t\0b\00\00\00\t\00\0b\00\00\0b")
 (data (i32.const 13099) "\0c")
 (data (i32.const 13111) "\0c\00\00\00\00\0c\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c")
 (data (i32.const 13157) "\0e")
 (data (i32.const 13169) "\0d\00\00\00\04\0d\00\00\00\00\t\0e\00\00\00\00\00\0e\00\00\0e")
 (data (i32.const 13215) "\10")
 (data (i32.const 13227) "\0f\00\00\00\00\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\12\00\00\00\12\12\12")
 (data (i32.const 13282) "\12\00\00\00\12\12\12\00\00\00\00\00\00\t")
 (data (i32.const 13331) "\0b")
 (data (i32.const 13343) "\n\00\00\00\00\n\00\00\00\00\t\0b\00\00\00\00\00\0b\00\00\0b")
 (data (i32.const 13389) "\0c")
 (data (i32.const 13401) "\0c\00\00\00\00\0c\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\000123456789ABCDEF\03\00\00\00\04\00\00\00\04\00\00\00\06\00\00\00\83\f9\a2\00DNn\00\fc)\15\00\d1W\'\00\dd4\f5\00b\db\c0\00<\99\95\00A\90C\00cQ\fe\00\bb\de\ab\00\b7a\c5\00:n$\00\d2MB\00I\06\e0\00\t\ea.\00\1c\92\d1\00\eb\1d\fe\00)\b1\1c\00\e8>\a7\00\f55\82\00D\bb.\00\9c\e9\84\00\b4&p\00A~_\00\d6\919\00S\839\00\9c\f49\00\8b_\84\00(\f9\bd\00\f8\1f;\00\de\ff\97\00\0f\98\05\00\11/\ef\00\nZ\8b\00m\1fm\00\cf~6\00\t\cb\'\00FO\b7\00\9ef?\00-\ea_\00\ba\'u\00\e5\eb\c7\00={\f1\00\f79\07\00\92R\8a\00\fbk\ea\00\1f\b1_\00\08]\8d\000\03V\00{\fcF\00\f0\abk\00 \bc\cf\006\f4\9a\00\e3\a9\1d\00^a\91\00\08\1b\e6\00\85\99e\00\a0\14_\00\8d@h\00\80\d8\ff\00\'sM\00\06\061\00\caV\15\00\c9\a8s\00{\e2`\00k\8c\c0")
 (data (i32.const 13731) "@\fb!\f9?\00\00\00\00-Dt>\00\00\00\80\98F\f8<\00\00\00`Q\ccx;\00\00\00\80\83\1b\f09\00\00\00@ %z8\00\00\00\80\"\82\e36\00\00\00\00\1d\f3i58c\ed>\da\0fI?^\98{?\da\0f\c9?i7\ac1h!\"3\b4\0f\143h!\a23\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
 (data (i32.const 13848) "\06\d0\cfC\eb\fdL>")
 (data (i32.const 13867) "@\03\b8\e2?\05")
 (data (i32.const 13884) "\01")
 (data (i32.const 13908) "\01\00\00\00\01\00\00\00\08|\00\00\00\04")
 (data (i32.const 13932) "\01")
 (data (i32.const 13947) "\n\ff\ff\ff\ff")
 (data (i32.const 14052) "\02")
 (data (i32.const 14091) "\ff\ff\ff\ff\ff")
 (data (i32.const 14162) "\80?\00\00\b4B33\b3?\cd\cc\9c@\00\00\87C\00\801D\00\00\a0@\00\00\a0@\01\00\00\00\04\00\00\00\04\00\00\00\ff\ff\ff\ffO\00\00\00<\00\00\00\ff\ff\ff\ff\00\00\80\bf\ff\ff\ff\ff\cd\cc\ec?06\00\0006")
 (data (i32.const 14428) "\e8\85")
 (data (i32.const 14484) "\7f\00\07\003D Omok\00\00\00\00\ff\00\00\00\ff%d%d%d\00x\00y\00z\00Timeover!\n\00HTML version\n3D OMOK alpha v0.1\nBy parkchamchi@gmail.com\n- Game Rules -\nLines: %d\nWinning condition: %d\n- Score -\nP0 (RED): %d, P1 (BLUE): %d\n- Camera -\nr: %.2f, th: %.2f, ph: %.2f\n\n\00Time for P%d left: %2ds\n\00WASD | KP8456:\n Move the grid\nLCLICK: Select a piece\nQE | KP79, MWHEEL:\n Zoom in/out\nESC: Exit\n-----------------------\n1. Reset the game.\n2. Change game rules.\n3. Change the timelimit.\n7. Change the piece size.\n8. Swap players.\n9. Insert a coordinate.\n\00Will you reset the game?\n0: No.\n1: Yes.\n\00Insert new lines.\n(2 <= lines <= 9)\nThen insert new win.cond.\n(2 <= win.c. <= lines)\n\00Insert new timelimit/10.\n(0 < timelimit/10)\n\00Change the piece size?\n0: No.\n1: To small.\n2: To default.\n3: To big.\n\00Swap players?\nThis only applys when\nRequired: 5 pieces located.\n0: No.\n1: Yes.\n\00Insert: \00Invalid coordinate.\n\00Got %c == %d.\n\00ERROR: invalid coord.\n\00%d%d%d is already occupied.\n\00ERROR: unknown(PC).\n\00P%d selected %d%d%d.\n\00P%d has won!\n\00ERROR: checking status\n\00Grid is full!\n\00There should be 5 pieces.\n\00Swapped players.\n\00Piece size changed.\n\00Invalid timelimit value.\n\00Timelimit changed.\n\00Got new lines.\n\00Got new win. cond.\n\00Invalid win.c. value.\n\00Winning condition changed.\n\00Invalid lines value.\n\00Lines value changed.\n\00Win.c. changed to lines.\n\00ERROR: InitGrid Fail\n\00Game has been reset.\n\00Game has been started!\n\00frameCount > 0\00external/mini_al.h\00mal_device__read_frames_from_client\00pSamples != ((void*)0)\00mal_device__send_frames_to_client\00pDSP->isPostFormatConversionRequired == 1\00mal_dsp_read\00Matrix stack overflow\00INFO: \00WARN: \00MAX_BATCH_ELEMENTS overflow\00GPU: Vendor:   %s\00GPU: Renderer: %s\00GPU: Version:  %s\00GPU: GLSL:     %s\00 \00Number of supported extensions: %i\00GL_OES_vertex_array_object\00GL_OES_texture_npot\00GL_OES_texture_float\00GL_EXT_texture_compression_s3tc\00GL_WEBGL_compressed_texture_s3tc\00GL_WEBKIT_WEBGL_compressed_texture_s3tc\00GL_OES_compressed_ETC1_RGB8_texture\00GL_WEBGL_compressed_texture_etc1\00GL_ARB_ES3_compatibility\00GL_IMG_texture_compression_pvrtc\00GL_KHR_texture_compression_astc_hdr\00GL_EXT_texture_filter_anisotropic\00GL_EXT_texture_mirror_clamp\00GL_EXT_debug_marker\00[EXTENSION] VAO extension detected, VAO functions initialized successfully\00[EXTENSION] VAO extension not found, VAO usage not supported\00[EXTENSION] NPOT textures extension detected, full NPOT textures supported\00[EXTENSION] NPOT textures extension not found, limited NPOT support (no-mipmaps, no-repeat)\00[EXTENSION] DXT compressed textures supported\00[EXTENSION] ETC1 compressed textures supported\00[EXTENSION] ETC2/EAC compressed textures supported\00[EXTENSION] PVRT compressed textures supported\00[EXTENSION] ASTC compressed textures supported\00[EXTENSION] Anisotropic textures filtering supported (max: %.0fX)\00[EXTENSION] Mirror clamp wrap texture mode supported\00[EXTENSION] Debug Marker supported\00[TEX ID %i] Base white texture loaded successfully\00Base white texture could not be loaded\00OpenGL default states initialized successfully\00Internal buffers initialized successfully (CPU)\00Internal buffers uploaded successfully (GPU)\00[SHDR ID %i] Default shader loaded successfully\00vertexPosition\00vertexTexCoord\00vertexColor\00mvp\00colDiffuse\00texture0\00[SHDR ID %i] Default shader could not be loaded\00vertexNormal\00vertexTangent\00vertexTexCoord2\00[SHDR ID %i] Failed to link shader program...\00%s\00[SHDR ID %i] Shader program loaded successfully\00[SHDR ID %i] Failed to compile shader...\00[SHDR ID %i] Shader compiled successfully\00DXT compressed texture format not supported\00ETC1 compressed texture format not supported\00ETC2 compressed texture format not supported\00PVRT compressed texture format not supported\00ASTC compressed texture format not supported\00Load texture from data memory address: 0x%x\00Load mipmap level %i (%i x %i), size: %i, offset: %i\00[TEX ID %i] Texture created successfully (%ix%i - %i mipmaps)\00Texture could not be created\00Texture format not supported\00[TEX ID %i] Unloaded texture data (base white texture) from VRAM\00GIF89a\00NETSCAPE2.0\00Initializing raylib %s\002.4-dev\00#canvas\00Target time per frame: %02.03f milliseconds\00Escape\00Canvas scaled to fullscreen. ElementSize: (%ix%i), ScreenSize(%ix%i)\00Canvas scaled to windowed. ElementSize: (%ix%i), ScreenSize(%ix%i)\00[TEX ID %i] Default font loaded successfully\00Image data format is compressed, can not be converted\00Next mipmap level: %i x %i - current size %i\00Mipmaps available: %i - Mipmaps required: %i\00Mipmaps total size required: %i\00Image data memory start address: 0x%x\00Image data memory point reallocated: 0x%x\00Mipmaps required memory could not be allocated\00Gen mipmap level: %i (%i x %i) - size: %i - offset: 0x%x\00Image mipmaps already available\00\01\02\04\04info->channels >= 0\00./external/stb_image_resize.h\00stbir__resize_allocated\00info->channels <= 64\00info->horizontal_filter < (sizeof((stbir__filter_info_table))/sizeof((stbir__filter_info_table)[0]))\00info->vertical_filter < (sizeof((stbir__filter_info_table))/sizeof((stbir__filter_info_table)[0]))\00alpha_channel >= 0 && alpha_channel < info->channels\00tempmem\00tempmem_size_in_bytes >= memory_required\00(size_t)(unsigned char*)(((unsigned char*)info->encode_buffer) + info->encode_buffer_size) == (size_t)tempmem + tempmem_size_in_bytes\00(size_t)(unsigned char*)(((unsigned char*)info->ring_buffer) + info->ring_buffer_size) == (size_t)tempmem + tempmem_size_in_bytes\00!stbir__use_height_upsampling(stbir_info)\00stbir__buffer_loop_downsample\00out_last_scanline - out_first_scanline + 1 <= stbir_info->ring_buffer_num_entries\00stbir__resample_vertical_downsample\00ring_buffer_index != stbir_info->ring_buffer_begin_index\00stbir__add_empty_ring_buffer_entry\00!stbir__use_width_upsampling(stbir_info)\00stbir__resample_horizontal_downsample\00coefficient != 0\00n1 >= n0\00stbir__resample_horizontal_upsample\00n0 >= -stbir_info->horizontal_filter_pixel_margin\00n1 >= -stbir_info->horizontal_filter_pixel_margin\00n0 < stbir_info->input_w + stbir_info->horizontal_filter_pixel_margin\00n1 < stbir_info->input_w + stbir_info->horizontal_filter_pixel_margin\00!\"Unknown type/colorspace/channels combination.\"\00stbir__decode_scanline\00!\"Unimplemented edge type\"\00stbir__edge_wrap_slow\00stbir__encode_scanline\00scale <= 1\00stbir__support_trapezoid\00stbir__filter_trapezoid\00stbir__use_height_upsampling(stbir_info)\00stbir__buffer_loop_upsample\00in_last_scanline - in_first_scanline + 1 <= stbir_info->ring_buffer_num_entries\00stbir__resample_vertical_upsample\00total > 0.9f\00stbir__normalize_downsample_coefficients\00total < 1.1f\00out_last_pixel - out_first_pixel <= (int)ceil(stbir__filter_info_table[filter].support(scale_ratio) * 2)\00stbir__calculate_coefficients_downsample\00contributor->n1 >= contributor->n0\00stbir__filter_info_table[filter].kernel((float)(out_last_pixel + 1) + 0.5f - out_center_of_in, scale_ratio) == 0\00in_last_pixel - in_first_pixel <= (int)ceil(stbir__filter_info_table[filter].support(1/scale) * 2)\00stbir__calculate_coefficients_upsample\00stbir__filter_info_table[filter].kernel((float)(in_last_pixel + 1) + 0.5f - in_center_of_out, 1/scale) == 0\00total_filter > 0.9\00total_filter < 1.1f\00filter != 0\00stbir__get_filter_pixel_width\00filter < (sizeof((stbir__filter_info_table))/sizeof((stbir__filter_info_table)[0]))\00info->horizontal_filter != 0\00stbir__calculate_memory\00info->vertical_filter != 0\00Pixel data retrieval not supported for compressed image formats\0032bit pixel format converted to 8bit per channel\00Failed to initialize GLFW\00Closest fullscreen videomode: %i x %i\00GLFW Failed to initialize Window\00Display device initialized successfully\00Render size: %i x %i\00Screen size: %i x %i\00Viewport offsets: %i, %i\00Trying to enable VSYNC\00screenrec%03i.gif\00SaveFileFromMEMFSToDisk(\'%s\',\'%s\')\00End animated GIF recording\00/screenrec%03i.gif\00Begin animated GIF recording: %s\00screenshot%03i.png\00Screenshot taken: %s\00\\/\00.png\00.bmp\00.tga\00.jpg\00.ktx\00.raw\00wb\00Image exported successfully: %s\00Image could not be exported.\00[%s] KTX image file could not be created\00\c2\abKTX 11\c2\bb\0d\n\1a\n\00Image format not supported for KTX export.\00\00\01\02\03\04\05\06\07\08\t\n\0b\00\01\02\03\04\05\06\07\08\t\n\0b\ff\da\00\0c\03\01\00\02\11\03\11\00?\00111 221 2222 11\000\00./external/stb_image_write.h\00stbiw__writefv\0011 4 22 44 44 22 444444\00o == out + *out_len\00stbi_write_png_to_mem\00d <= 32767 && best <= 258\00stbi_zlib_compress\00p\00stbiw__sbgrowf\00DOWNSCALING: Required screen size (%ix%i) is bigger than display size (%ix%i)\00Downscale matrix generated, content will be rendered at: %i x %i\00UPSCALING: Required screen size: %i x %i -> Display size: %i x %i\00[GLFW3 Error] Code: %i Decription: %s\00Window closed successfully\00[TEX ID %i] Unloaded texture data from VRAM (GPU)\00RECORDING\00-+   0X0x\00(null)\00-0X+0X 0X-0x+0x 0x\00inf\00INF\00nan\00NAN\00.\00rwa\00EXT\00ARB\00OES\00ANGLE\00WEBGL\00glGenQueries\00glDeleteQueries\00glIsQuery\00glBeginQuery\00glEndQuery\00glQueryCounter\00glGetQueryiv\00glGetQueryObjectiv\00glGetQueryObjectuiv\00glGetQueryObjecti64v\00glGetQueryObjectui64v\00glBindVertexArray\00glDeleteVertexArrays\00glGenVertexArrays\00glIsVertexArray\00glDrawBuffers\00glDrawArraysInstanced\00glDrawElementsInstanced\00glVertexAttribDivisor\00glActiveTexture\00glAttachShader\00glBindAttribLocation\00glBindBuffer\00glBindFramebuffer\00glBindRenderbuffer\00glBindTexture\00glBlendColor\00glBlendEquation\00glBlendEquationSeparate\00glBlendFunc\00glBlendFuncSeparate\00glBufferData\00glBufferSubData\00glCheckFramebufferStatus\00glClear\00glClearColor\00glClearDepthf\00glClearStencil\00glColorMask\00glCompileShader\00glCompressedTexImage2D\00glCompressedTexSubImage2D\00glCopyTexImage2D\00glCopyTexSubImage2D\00glCreateProgram\00glCreateShader\00glCullFace\00glDeleteBuffers\00glDeleteFramebuffers\00glDeleteProgram\00glDeleteRenderbuffers\00glDeleteShader\00glDeleteTextures\00glDepthFunc\00glDepthMask\00glDepthRangef\00glDetachShader\00glDisable\00glDisableVertexAttribArray\00glDrawArrays\00glDrawElements\00glEnable\00glEnableVertexAttribArray\00glFinish\00glFlush\00glFramebufferRenderbuffer\00glFramebufferTexture2D\00glFrontFace\00glGenBuffers\00glGenerateMipmap\00glGenFramebuffers\00glGenRenderbuffers\00glGenTextures\00glGetActiveAttrib\00glGetActiveUniform\00glGetAttachedShaders\00glGetAttribLocation\00glGetBooleanv\00glGetBufferParameteriv\00glGetError\00glGetFloatv\00glGetFramebufferAttachmentParameteriv\00glGetIntegerv\00glGetProgramiv\00glGetProgramInfoLog\00glGetRenderbufferParameteriv\00glGetShaderiv\00glGetShaderInfoLog\00glGetShaderPrecisionFormat\00glGetShaderSource\00glGetString\00glGetTexParameterfv\00glGetTexParameteriv\00glGetUniformfv\00glGetUniformiv\00glGetUniformLocation\00glGetVertexAttribfv\00glGetVertexAttribiv\00glGetVertexAttribPointerv\00glHint\00glIsBuffer\00glIsEnabled\00glIsFramebuffer\00glIsProgram\00glIsRenderbuffer\00glIsShader\00glIsTexture\00glLineWidth\00glLinkProgram\00glPixelStorei\00glPolygonOffset\00glReadPixels\00glReleaseShaderCompiler\00glRenderbufferStorage\00glSampleCoverage\00glScissor\00glShaderBinary\00glShaderSource\00glStencilFunc\00glStencilFuncSeparate\00glStencilMask\00glStencilMaskSeparate\00glStencilOp\00glStencilOpSeparate\00glTexImage2D\00glTexParameterf\00glTexParameterfv\00glTexParameteri\00glTexParameteriv\00glTexSubImage2D\00glUniform1f\00glUniform1fv\00glUniform1i\00glUniform1iv\00glUniform2f\00glUniform2fv\00glUniform2i\00glUniform2iv\00glUniform3f\00glUniform3fv\00glUniform3i\00glUniform3iv\00glUniform4f\00glUniform4fv\00glUniform4i\00glUniform4iv\00glUniformMatrix2fv\00glUniformMatrix3fv\00glUniformMatrix4fv\00glUseProgram\00glValidateProgram\00glVertexAttrib1f\00glVertexAttrib1fv\00glVertexAttrib2f\00glVertexAttrib2fv\00glVertexAttrib3f\00glVertexAttrib3fv\00glVertexAttrib4f\00glVertexAttrib4fv\00glVertexAttribPointer\00glViewport\00glGenQueriesEXT\00glDeleteQueriesEXT\00glIsQueryEXT\00glBeginQueryEXT\00glEndQueryEXT\00glQueryCounterEXT\00glGetQueryivEXT\00glGetQueryObjectivEXT\00glGetQueryObjectuivEXT\00glGetQueryObjecti64vEXT\00glGetQueryObjectui64vEXT\00glBindVertexArrayOES\00glDeleteVertexArraysOES\00glGenVertexArraysOES\00glIsVertexArrayOES\00glDrawBuffersWEBGL\00glDrawArraysInstancedANGLE\00glDrawElementsInstancedANGLE\00glVertexAttribDivisorANGLE")
 (import "env" "table" (table $table 322 322 funcref))
 (elem (global.get $__table_base) $b0 $_stbir__support_zero $_stbir__support_trapezoid $_stbir__support_one $_stbir__support_two $b0 $b0 $b0 $b1 $_stbir__filter_trapezoid $_stbir__filter_triangle $_stbir__filter_cubic $_stbir__filter_catmullrom $_stbir__filter_mitchell $b1 $b1 $b2 $_emscripten_glCreateProgram $_emscripten_glGetError $b2 $b3 $___emscripten_stdout_close $___stdio_close $_emscripten_glCheckFramebufferStatus $_emscripten_glCreateShader $_emscripten_glGetString $_emscripten_glIsBuffer $_emscripten_glIsEnabled $_emscripten_glIsFramebuffer $_emscripten_glIsProgram $_emscripten_glIsRenderbuffer $_emscripten_glIsShader $_emscripten_glIsTexture $_emscripten_glIsQueryEXT $_emscripten_glIsVertexArrayOES $b3 $b4 $_fmt_fp $b5 $_emscripten_glGetAttribLocation $_emscripten_glGetUniformLocation $b5 $b6 $___stdio_write $_sn_write $_EmscriptenFullscreenChangeCallback $_EmscriptenKeyboardCallback $_EmscriptenMouseCallback $_EmscriptenTouchCallback $_EmscriptenGamepadCallback $___stdio_read $b6 $b6 $b6 $b6 $b6 $b6 $b6 $b7 $b8 $___emscripten_stdout_seek $___stdio_seek $b8 $b9 $_UpdateDrawFrame $_emscripten_glFinish $_emscripten_glFlush $_emscripten_glReleaseShaderCompiler $b9 $b9 $b9 $b10 $_emscripten_glClearDepthf$legalf32 $_emscripten_glLineWidth$legalf32 $b10 $b11 $_emscripten_glDepthRangef$legalf32 $_emscripten_glPolygonOffset$legalf32 $b11 $b12 $_emscripten_glBlendColor$legalf32 $_emscripten_glClearColor$legalf32 $b12 $b13 $_emscripten_glSampleCoverage$legalf32 $b14 $_emscripten_glActiveTexture $_emscripten_glBlendEquation $_emscripten_glClear $_emscripten_glClearStencil $_emscripten_glCompileShader $_emscripten_glCullFace $_emscripten_glDeleteProgram $_emscripten_glDeleteShader $_emscripten_glDepthFunc $_emscripten_glDepthMask $_emscripten_glDisable $_emscripten_glDisableVertexAttribArray $_emscripten_glEnable $_emscripten_glEnableVertexAttribArray $_emscripten_glFrontFace $_emscripten_glGenerateMipmap $_emscripten_glLinkProgram $_emscripten_glStencilMask $_emscripten_glUseProgram $_emscripten_glValidateProgram $_emscripten_glEndQueryEXT $_emscripten_glBindVertexArrayOES $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b14 $b15 $_MouseCursorPosCallback $_ScrollCallback $b15 $b16 $_emscripten_glUniform1f$legalf32 $_emscripten_glVertexAttrib1f$legalf32 $b16 $b17 $_emscripten_glUniform2f$legalf32 $_emscripten_glVertexAttrib2f$legalf32 $b17 $b18 $_emscripten_glUniform3f$legalf32 $_emscripten_glVertexAttrib3f$legalf32 $b18 $b19 $_emscripten_glUniform4f$legalf32 $_emscripten_glVertexAttrib4f$legalf32 $b19 $b20 $_ErrorCallback $_CursorEnterCallback $_CursorEnterCallback $_WindowIconifyCallback $_pop_arg_long_double $_emscripten_glVertexAttribDivisorANGLE $_emscripten_glAttachShader $_emscripten_glBindBuffer $_emscripten_glBindFramebuffer $_emscripten_glBindRenderbuffer $_emscripten_glBindTexture $_emscripten_glBlendEquationSeparate $_emscripten_glBlendFunc $_emscripten_glDeleteBuffers $_emscripten_glDeleteFramebuffers $_emscripten_glDeleteRenderbuffers $_emscripten_glDeleteTextures $_emscripten_glDetachShader $_emscripten_glGenBuffers $_emscripten_glGenFramebuffers $_emscripten_glGenRenderbuffers $_emscripten_glGenTextures $_emscripten_glGetBooleanv $_emscripten_glGetFloatv $_emscripten_glGetIntegerv $_emscripten_glHint $_emscripten_glPixelStorei $_emscripten_glStencilMaskSeparate $_emscripten_glUniform1i $_emscripten_glVertexAttrib1fv $_emscripten_glVertexAttrib2fv $_emscripten_glVertexAttrib3fv $_emscripten_glVertexAttrib4fv $_emscripten_glGenQueriesEXT $_emscripten_glDeleteQueriesEXT $_emscripten_glBeginQueryEXT $_emscripten_glQueryCounterEXT $_emscripten_glDeleteVertexArraysOES $_emscripten_glGenVertexArraysOES $_emscripten_glDrawBuffersWEBGL $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b20 $b21 $_emscripten_glTexParameterf$legalf32 $b22 $_WindowSizeCallback $_WindowDropCallback $_stbi__stdio_write $_emscripten_glBindAttribLocation $_emscripten_glDrawArrays $_emscripten_glGetBufferParameteriv $_emscripten_glGetProgramiv $_emscripten_glGetRenderbufferParameteriv $_emscripten_glGetShaderiv $_emscripten_glGetTexParameterfv $_emscripten_glGetTexParameteriv $_emscripten_glGetUniformfv $_emscripten_glGetUniformiv $_emscripten_glGetVertexAttribfv $_emscripten_glGetVertexAttribiv $_emscripten_glGetVertexAttribPointerv $_emscripten_glStencilFunc $_emscripten_glStencilOp $_emscripten_glTexParameterfv $_emscripten_glTexParameteri $_emscripten_glTexParameteriv $_emscripten_glUniform1fv $_emscripten_glUniform1iv $_emscripten_glUniform2fv $_emscripten_glUniform2i $_emscripten_glUniform2iv $_emscripten_glUniform3fv $_emscripten_glUniform3iv $_emscripten_glUniform4fv $_emscripten_glUniform4iv $_emscripten_glGetQueryivEXT $_emscripten_glGetQueryObjectivEXT $_emscripten_glGetQueryObjectuivEXT $_emscripten_glGetQueryObjecti64vEXT $_emscripten_glGetQueryObjectui64vEXT $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b22 $b23 $_MouseButtonCallback $_emscripten_glBlendFuncSeparate $_emscripten_glBufferData $_emscripten_glBufferSubData $_emscripten_glColorMask $_emscripten_glDrawElements $_emscripten_glFramebufferRenderbuffer $_emscripten_glGetAttachedShaders $_emscripten_glGetFramebufferAttachmentParameteriv $_emscripten_glGetProgramInfoLog $_emscripten_glGetShaderInfoLog $_emscripten_glGetShaderPrecisionFormat $_emscripten_glGetShaderSource $_emscripten_glRenderbufferStorage $_emscripten_glScissor $_emscripten_glShaderSource $_emscripten_glStencilFuncSeparate $_emscripten_glStencilOpSeparate $_emscripten_glUniform3i $_emscripten_glUniformMatrix2fv $_emscripten_glUniformMatrix3fv $_emscripten_glUniformMatrix4fv $_emscripten_glViewport $_emscripten_glDrawArraysInstancedANGLE $b23 $b23 $b23 $b23 $b23 $b23 $b23 $b24 $_KeyCallback $_emscripten_glFramebufferTexture2D $_emscripten_glShaderBinary $_emscripten_glUniform4i $_emscripten_glDrawElementsInstancedANGLE $b24 $b24 $b25 $_emscripten_glVertexAttribPointer $b26 $_emscripten_glGetActiveAttrib $_emscripten_glGetActiveUniform $_emscripten_glReadPixels $b27 $_emscripten_glCompressedTexImage2D $_emscripten_glCopyTexImage2D $_emscripten_glCopyTexSubImage2D $b28 $_emscripten_glCompressedTexSubImage2D $_emscripten_glTexImage2D $_emscripten_glTexSubImage2D $b29)
 (import "env" "__table_base" (global $__table_base i32))
 (import "global" "Infinity" (global $inf$asm2wasm$import f64))
 (import "env" "abortStackOverflow" (func $abortStackOverflow (param i32)))
 (import "env" "nullFunc_ff" (func $nullFunc_ff (param i32)))
 (import "env" "nullFunc_fff" (func $nullFunc_fff (param i32)))
 (import "env" "nullFunc_i" (func $nullFunc_i (param i32)))
 (import "env" "nullFunc_ii" (func $nullFunc_ii (param i32)))
 (import "env" "nullFunc_iidiiii" (func $nullFunc_iidiiii (param i32)))
 (import "env" "nullFunc_iii" (func $nullFunc_iii (param i32)))
 (import "env" "nullFunc_iiii" (func $nullFunc_iiii (param i32)))
 (import "env" "nullFunc_iiiii" (func $nullFunc_iiiii (param i32)))
 (import "env" "nullFunc_jiji" (func $nullFunc_jiji (param i32)))
 (import "env" "nullFunc_v" (func $nullFunc_v (param i32)))
 (import "env" "nullFunc_vf" (func $nullFunc_vf (param i32)))
 (import "env" "nullFunc_vff" (func $nullFunc_vff (param i32)))
 (import "env" "nullFunc_vffff" (func $nullFunc_vffff (param i32)))
 (import "env" "nullFunc_vfi" (func $nullFunc_vfi (param i32)))
 (import "env" "nullFunc_vi" (func $nullFunc_vi (param i32)))
 (import "env" "nullFunc_vidd" (func $nullFunc_vidd (param i32)))
 (import "env" "nullFunc_vif" (func $nullFunc_vif (param i32)))
 (import "env" "nullFunc_viff" (func $nullFunc_viff (param i32)))
 (import "env" "nullFunc_vifff" (func $nullFunc_vifff (param i32)))
 (import "env" "nullFunc_viffff" (func $nullFunc_viffff (param i32)))
 (import "env" "nullFunc_vii" (func $nullFunc_vii (param i32)))
 (import "env" "nullFunc_viif" (func $nullFunc_viif (param i32)))
 (import "env" "nullFunc_viii" (func $nullFunc_viii (param i32)))
 (import "env" "nullFunc_viiii" (func $nullFunc_viiii (param i32)))
 (import "env" "nullFunc_viiiii" (func $nullFunc_viiiii (param i32)))
 (import "env" "nullFunc_viiiiii" (func $nullFunc_viiiiii (param i32)))
 (import "env" "nullFunc_viiiiiii" (func $nullFunc_viiiiiii (param i32)))
 (import "env" "nullFunc_viiiiiiii" (func $nullFunc_viiiiiiii (param i32)))
 (import "env" "nullFunc_viiiiiiiii" (func $nullFunc_viiiiiiiii (param i32)))
 (import "env" "nullFunc_viiji" (func $nullFunc_viiji (param i32)))
 (import "env" "___assert_fail" (func $___assert_fail (param i32 i32 i32 i32)))
 (import "env" "___lock" (func $___lock (param i32)))
 (import "env" "___syscall221" (func $___syscall221 (param i32 i32) (result i32)))
 (import "env" "___syscall5" (func $___syscall5 (param i32 i32) (result i32)))
 (import "env" "___syscall54" (func $___syscall54 (param i32 i32) (result i32)))
 (import "env" "___unlock" (func $___unlock (param i32)))
 (import "env" "___wasi_fd_close" (func $___wasi_fd_close (param i32) (result i32)))
 (import "env" "___wasi_fd_read" (func $___wasi_fd_read (param i32 i32 i32 i32) (result i32)))
 (import "env" "___wasi_fd_write" (func $___wasi_fd_write (param i32 i32 i32 i32) (result i32)))
 (import "env" "_abort" (func $_abort))
 (import "env" "_clock" (func $_clock (result i32)))
 (import "env" "_eglGetProcAddress" (func $_eglGetProcAddress (param i32) (result i32)))
 (import "env" "_emscripten_exit_pointerlock" (func $_emscripten_exit_pointerlock (result i32)))
 (import "env" "_emscripten_get_gamepad_status" (func $_emscripten_get_gamepad_status (param i32 i32) (result i32)))
 (import "env" "_emscripten_get_heap_size" (func $_emscripten_get_heap_size (result i32)))
 (import "env" "_emscripten_get_num_gamepads" (func $_emscripten_get_num_gamepads (result i32)))
 (import "env" "_emscripten_get_pointerlock_status" (func $_emscripten_get_pointerlock_status (param i32) (result i32)))
 (import "env" "_emscripten_glActiveTexture" (func $_emscripten_glActiveTexture (param i32)))
 (import "env" "_emscripten_glAttachShader" (func $_emscripten_glAttachShader (param i32 i32)))
 (import "env" "_emscripten_glBeginQueryEXT" (func $_emscripten_glBeginQueryEXT (param i32 i32)))
 (import "env" "_emscripten_glBindAttribLocation" (func $_emscripten_glBindAttribLocation (param i32 i32 i32)))
 (import "env" "_emscripten_glBindBuffer" (func $_emscripten_glBindBuffer (param i32 i32)))
 (import "env" "_emscripten_glBindFramebuffer" (func $_emscripten_glBindFramebuffer (param i32 i32)))
 (import "env" "_emscripten_glBindRenderbuffer" (func $_emscripten_glBindRenderbuffer (param i32 i32)))
 (import "env" "_emscripten_glBindTexture" (func $_emscripten_glBindTexture (param i32 i32)))
 (import "env" "_emscripten_glBindVertexArrayOES" (func $_emscripten_glBindVertexArrayOES (param i32)))
 (import "env" "_emscripten_glBlendColor" (func $_emscripten_glBlendColor (param f64 f64 f64 f64)))
 (import "env" "_emscripten_glBlendEquation" (func $_emscripten_glBlendEquation (param i32)))
 (import "env" "_emscripten_glBlendEquationSeparate" (func $_emscripten_glBlendEquationSeparate (param i32 i32)))
 (import "env" "_emscripten_glBlendFunc" (func $_emscripten_glBlendFunc (param i32 i32)))
 (import "env" "_emscripten_glBlendFuncSeparate" (func $_emscripten_glBlendFuncSeparate (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glBufferData" (func $_emscripten_glBufferData (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glBufferSubData" (func $_emscripten_glBufferSubData (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glCheckFramebufferStatus" (func $_emscripten_glCheckFramebufferStatus (param i32) (result i32)))
 (import "env" "_emscripten_glClear" (func $_emscripten_glClear (param i32)))
 (import "env" "_emscripten_glClearColor" (func $_emscripten_glClearColor (param f64 f64 f64 f64)))
 (import "env" "_emscripten_glClearDepthf" (func $_emscripten_glClearDepthf (param f64)))
 (import "env" "_emscripten_glClearStencil" (func $_emscripten_glClearStencil (param i32)))
 (import "env" "_emscripten_glColorMask" (func $_emscripten_glColorMask (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glCompileShader" (func $_emscripten_glCompileShader (param i32)))
 (import "env" "_emscripten_glCompressedTexImage2D" (func $_emscripten_glCompressedTexImage2D (param i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glCompressedTexSubImage2D" (func $_emscripten_glCompressedTexSubImage2D (param i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glCopyTexImage2D" (func $_emscripten_glCopyTexImage2D (param i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glCopyTexSubImage2D" (func $_emscripten_glCopyTexSubImage2D (param i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glCreateProgram" (func $_emscripten_glCreateProgram (result i32)))
 (import "env" "_emscripten_glCreateShader" (func $_emscripten_glCreateShader (param i32) (result i32)))
 (import "env" "_emscripten_glCullFace" (func $_emscripten_glCullFace (param i32)))
 (import "env" "_emscripten_glDeleteBuffers" (func $_emscripten_glDeleteBuffers (param i32 i32)))
 (import "env" "_emscripten_glDeleteFramebuffers" (func $_emscripten_glDeleteFramebuffers (param i32 i32)))
 (import "env" "_emscripten_glDeleteProgram" (func $_emscripten_glDeleteProgram (param i32)))
 (import "env" "_emscripten_glDeleteQueriesEXT" (func $_emscripten_glDeleteQueriesEXT (param i32 i32)))
 (import "env" "_emscripten_glDeleteRenderbuffers" (func $_emscripten_glDeleteRenderbuffers (param i32 i32)))
 (import "env" "_emscripten_glDeleteShader" (func $_emscripten_glDeleteShader (param i32)))
 (import "env" "_emscripten_glDeleteTextures" (func $_emscripten_glDeleteTextures (param i32 i32)))
 (import "env" "_emscripten_glDeleteVertexArraysOES" (func $_emscripten_glDeleteVertexArraysOES (param i32 i32)))
 (import "env" "_emscripten_glDepthFunc" (func $_emscripten_glDepthFunc (param i32)))
 (import "env" "_emscripten_glDepthMask" (func $_emscripten_glDepthMask (param i32)))
 (import "env" "_emscripten_glDepthRangef" (func $_emscripten_glDepthRangef (param f64 f64)))
 (import "env" "_emscripten_glDetachShader" (func $_emscripten_glDetachShader (param i32 i32)))
 (import "env" "_emscripten_glDisable" (func $_emscripten_glDisable (param i32)))
 (import "env" "_emscripten_glDisableVertexAttribArray" (func $_emscripten_glDisableVertexAttribArray (param i32)))
 (import "env" "_emscripten_glDrawArrays" (func $_emscripten_glDrawArrays (param i32 i32 i32)))
 (import "env" "_emscripten_glDrawArraysInstancedANGLE" (func $_emscripten_glDrawArraysInstancedANGLE (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glDrawBuffersWEBGL" (func $_emscripten_glDrawBuffersWEBGL (param i32 i32)))
 (import "env" "_emscripten_glDrawElements" (func $_emscripten_glDrawElements (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glDrawElementsInstancedANGLE" (func $_emscripten_glDrawElementsInstancedANGLE (param i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glEnable" (func $_emscripten_glEnable (param i32)))
 (import "env" "_emscripten_glEnableVertexAttribArray" (func $_emscripten_glEnableVertexAttribArray (param i32)))
 (import "env" "_emscripten_glEndQueryEXT" (func $_emscripten_glEndQueryEXT (param i32)))
 (import "env" "_emscripten_glFinish" (func $_emscripten_glFinish))
 (import "env" "_emscripten_glFlush" (func $_emscripten_glFlush))
 (import "env" "_emscripten_glFramebufferRenderbuffer" (func $_emscripten_glFramebufferRenderbuffer (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glFramebufferTexture2D" (func $_emscripten_glFramebufferTexture2D (param i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glFrontFace" (func $_emscripten_glFrontFace (param i32)))
 (import "env" "_emscripten_glGenBuffers" (func $_emscripten_glGenBuffers (param i32 i32)))
 (import "env" "_emscripten_glGenFramebuffers" (func $_emscripten_glGenFramebuffers (param i32 i32)))
 (import "env" "_emscripten_glGenQueriesEXT" (func $_emscripten_glGenQueriesEXT (param i32 i32)))
 (import "env" "_emscripten_glGenRenderbuffers" (func $_emscripten_glGenRenderbuffers (param i32 i32)))
 (import "env" "_emscripten_glGenTextures" (func $_emscripten_glGenTextures (param i32 i32)))
 (import "env" "_emscripten_glGenVertexArraysOES" (func $_emscripten_glGenVertexArraysOES (param i32 i32)))
 (import "env" "_emscripten_glGenerateMipmap" (func $_emscripten_glGenerateMipmap (param i32)))
 (import "env" "_emscripten_glGetActiveAttrib" (func $_emscripten_glGetActiveAttrib (param i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetActiveUniform" (func $_emscripten_glGetActiveUniform (param i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetAttachedShaders" (func $_emscripten_glGetAttachedShaders (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetAttribLocation" (func $_emscripten_glGetAttribLocation (param i32 i32) (result i32)))
 (import "env" "_emscripten_glGetBooleanv" (func $_emscripten_glGetBooleanv (param i32 i32)))
 (import "env" "_emscripten_glGetBufferParameteriv" (func $_emscripten_glGetBufferParameteriv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetError" (func $_emscripten_glGetError (result i32)))
 (import "env" "_emscripten_glGetFloatv" (func $_emscripten_glGetFloatv (param i32 i32)))
 (import "env" "_emscripten_glGetFramebufferAttachmentParameteriv" (func $_emscripten_glGetFramebufferAttachmentParameteriv (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetIntegerv" (func $_emscripten_glGetIntegerv (param i32 i32)))
 (import "env" "_emscripten_glGetProgramInfoLog" (func $_emscripten_glGetProgramInfoLog (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetProgramiv" (func $_emscripten_glGetProgramiv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetQueryObjecti64vEXT" (func $_emscripten_glGetQueryObjecti64vEXT (param i32 i32 i32)))
 (import "env" "_emscripten_glGetQueryObjectivEXT" (func $_emscripten_glGetQueryObjectivEXT (param i32 i32 i32)))
 (import "env" "_emscripten_glGetQueryObjectui64vEXT" (func $_emscripten_glGetQueryObjectui64vEXT (param i32 i32 i32)))
 (import "env" "_emscripten_glGetQueryObjectuivEXT" (func $_emscripten_glGetQueryObjectuivEXT (param i32 i32 i32)))
 (import "env" "_emscripten_glGetQueryivEXT" (func $_emscripten_glGetQueryivEXT (param i32 i32 i32)))
 (import "env" "_emscripten_glGetRenderbufferParameteriv" (func $_emscripten_glGetRenderbufferParameteriv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetShaderInfoLog" (func $_emscripten_glGetShaderInfoLog (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetShaderPrecisionFormat" (func $_emscripten_glGetShaderPrecisionFormat (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetShaderSource" (func $_emscripten_glGetShaderSource (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glGetShaderiv" (func $_emscripten_glGetShaderiv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetString" (func $_emscripten_glGetString (param i32) (result i32)))
 (import "env" "_emscripten_glGetTexParameterfv" (func $_emscripten_glGetTexParameterfv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetTexParameteriv" (func $_emscripten_glGetTexParameteriv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetUniformLocation" (func $_emscripten_glGetUniformLocation (param i32 i32) (result i32)))
 (import "env" "_emscripten_glGetUniformfv" (func $_emscripten_glGetUniformfv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetUniformiv" (func $_emscripten_glGetUniformiv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetVertexAttribPointerv" (func $_emscripten_glGetVertexAttribPointerv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetVertexAttribfv" (func $_emscripten_glGetVertexAttribfv (param i32 i32 i32)))
 (import "env" "_emscripten_glGetVertexAttribiv" (func $_emscripten_glGetVertexAttribiv (param i32 i32 i32)))
 (import "env" "_emscripten_glHint" (func $_emscripten_glHint (param i32 i32)))
 (import "env" "_emscripten_glIsBuffer" (func $_emscripten_glIsBuffer (param i32) (result i32)))
 (import "env" "_emscripten_glIsEnabled" (func $_emscripten_glIsEnabled (param i32) (result i32)))
 (import "env" "_emscripten_glIsFramebuffer" (func $_emscripten_glIsFramebuffer (param i32) (result i32)))
 (import "env" "_emscripten_glIsProgram" (func $_emscripten_glIsProgram (param i32) (result i32)))
 (import "env" "_emscripten_glIsQueryEXT" (func $_emscripten_glIsQueryEXT (param i32) (result i32)))
 (import "env" "_emscripten_glIsRenderbuffer" (func $_emscripten_glIsRenderbuffer (param i32) (result i32)))
 (import "env" "_emscripten_glIsShader" (func $_emscripten_glIsShader (param i32) (result i32)))
 (import "env" "_emscripten_glIsTexture" (func $_emscripten_glIsTexture (param i32) (result i32)))
 (import "env" "_emscripten_glIsVertexArrayOES" (func $_emscripten_glIsVertexArrayOES (param i32) (result i32)))
 (import "env" "_emscripten_glLineWidth" (func $_emscripten_glLineWidth (param f64)))
 (import "env" "_emscripten_glLinkProgram" (func $_emscripten_glLinkProgram (param i32)))
 (import "env" "_emscripten_glPixelStorei" (func $_emscripten_glPixelStorei (param i32 i32)))
 (import "env" "_emscripten_glPolygonOffset" (func $_emscripten_glPolygonOffset (param f64 f64)))
 (import "env" "_emscripten_glQueryCounterEXT" (func $_emscripten_glQueryCounterEXT (param i32 i32)))
 (import "env" "_emscripten_glReadPixels" (func $_emscripten_glReadPixels (param i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glReleaseShaderCompiler" (func $_emscripten_glReleaseShaderCompiler))
 (import "env" "_emscripten_glRenderbufferStorage" (func $_emscripten_glRenderbufferStorage (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glSampleCoverage" (func $_emscripten_glSampleCoverage (param f64 i32)))
 (import "env" "_emscripten_glScissor" (func $_emscripten_glScissor (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glShaderBinary" (func $_emscripten_glShaderBinary (param i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glShaderSource" (func $_emscripten_glShaderSource (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glStencilFunc" (func $_emscripten_glStencilFunc (param i32 i32 i32)))
 (import "env" "_emscripten_glStencilFuncSeparate" (func $_emscripten_glStencilFuncSeparate (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glStencilMask" (func $_emscripten_glStencilMask (param i32)))
 (import "env" "_emscripten_glStencilMaskSeparate" (func $_emscripten_glStencilMaskSeparate (param i32 i32)))
 (import "env" "_emscripten_glStencilOp" (func $_emscripten_glStencilOp (param i32 i32 i32)))
 (import "env" "_emscripten_glStencilOpSeparate" (func $_emscripten_glStencilOpSeparate (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glTexImage2D" (func $_emscripten_glTexImage2D (param i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glTexParameterf" (func $_emscripten_glTexParameterf (param i32 i32 f64)))
 (import "env" "_emscripten_glTexParameterfv" (func $_emscripten_glTexParameterfv (param i32 i32 i32)))
 (import "env" "_emscripten_glTexParameteri" (func $_emscripten_glTexParameteri (param i32 i32 i32)))
 (import "env" "_emscripten_glTexParameteriv" (func $_emscripten_glTexParameteriv (param i32 i32 i32)))
 (import "env" "_emscripten_glTexSubImage2D" (func $_emscripten_glTexSubImage2D (param i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glUniform1f" (func $_emscripten_glUniform1f (param i32 f64)))
 (import "env" "_emscripten_glUniform1fv" (func $_emscripten_glUniform1fv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform1i" (func $_emscripten_glUniform1i (param i32 i32)))
 (import "env" "_emscripten_glUniform1iv" (func $_emscripten_glUniform1iv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform2f" (func $_emscripten_glUniform2f (param i32 f64 f64)))
 (import "env" "_emscripten_glUniform2fv" (func $_emscripten_glUniform2fv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform2i" (func $_emscripten_glUniform2i (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform2iv" (func $_emscripten_glUniform2iv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform3f" (func $_emscripten_glUniform3f (param i32 f64 f64 f64)))
 (import "env" "_emscripten_glUniform3fv" (func $_emscripten_glUniform3fv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform3i" (func $_emscripten_glUniform3i (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glUniform3iv" (func $_emscripten_glUniform3iv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform4f" (func $_emscripten_glUniform4f (param i32 f64 f64 f64 f64)))
 (import "env" "_emscripten_glUniform4fv" (func $_emscripten_glUniform4fv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniform4i" (func $_emscripten_glUniform4i (param i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glUniform4iv" (func $_emscripten_glUniform4iv (param i32 i32 i32)))
 (import "env" "_emscripten_glUniformMatrix2fv" (func $_emscripten_glUniformMatrix2fv (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glUniformMatrix3fv" (func $_emscripten_glUniformMatrix3fv (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glUniformMatrix4fv" (func $_emscripten_glUniformMatrix4fv (param i32 i32 i32 i32)))
 (import "env" "_emscripten_glUseProgram" (func $_emscripten_glUseProgram (param i32)))
 (import "env" "_emscripten_glValidateProgram" (func $_emscripten_glValidateProgram (param i32)))
 (import "env" "_emscripten_glVertexAttrib1f" (func $_emscripten_glVertexAttrib1f (param i32 f64)))
 (import "env" "_emscripten_glVertexAttrib1fv" (func $_emscripten_glVertexAttrib1fv (param i32 i32)))
 (import "env" "_emscripten_glVertexAttrib2f" (func $_emscripten_glVertexAttrib2f (param i32 f64 f64)))
 (import "env" "_emscripten_glVertexAttrib2fv" (func $_emscripten_glVertexAttrib2fv (param i32 i32)))
 (import "env" "_emscripten_glVertexAttrib3f" (func $_emscripten_glVertexAttrib3f (param i32 f64 f64 f64)))
 (import "env" "_emscripten_glVertexAttrib3fv" (func $_emscripten_glVertexAttrib3fv (param i32 i32)))
 (import "env" "_emscripten_glVertexAttrib4f" (func $_emscripten_glVertexAttrib4f (param i32 f64 f64 f64 f64)))
 (import "env" "_emscripten_glVertexAttrib4fv" (func $_emscripten_glVertexAttrib4fv (param i32 i32)))
 (import "env" "_emscripten_glVertexAttribDivisorANGLE" (func $_emscripten_glVertexAttribDivisorANGLE (param i32 i32)))
 (import "env" "_emscripten_glVertexAttribPointer" (func $_emscripten_glVertexAttribPointer (param i32 i32 i32 i32 i32 i32)))
 (import "env" "_emscripten_glViewport" (func $_emscripten_glViewport (param i32 i32 i32 i32)))
 (import "env" "_emscripten_memcpy_big" (func $_emscripten_memcpy_big (param i32 i32 i32) (result i32)))
 (import "env" "_emscripten_request_pointerlock" (func $_emscripten_request_pointerlock (param i32 i32) (result i32)))
 (import "env" "_emscripten_resize_heap" (func $_emscripten_resize_heap (param i32) (result i32)))
 (import "env" "_emscripten_run_script" (func $_emscripten_run_script (param i32)))
 (import "env" "_emscripten_sample_gamepad_data" (func $_emscripten_sample_gamepad_data (result i32)))
 (import "env" "_emscripten_set_click_callback_on_thread" (func $_emscripten_set_click_callback_on_thread (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_fullscreenchange_callback_on_thread" (func $_emscripten_set_fullscreenchange_callback_on_thread (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_gamepadconnected_callback_on_thread" (func $_emscripten_set_gamepadconnected_callback_on_thread (param i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_gamepaddisconnected_callback_on_thread" (func $_emscripten_set_gamepaddisconnected_callback_on_thread (param i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_keypress_callback_on_thread" (func $_emscripten_set_keypress_callback_on_thread (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_main_loop" (func $_emscripten_set_main_loop (param i32 i32 i32)))
 (import "env" "_emscripten_set_touchcancel_callback_on_thread" (func $_emscripten_set_touchcancel_callback_on_thread (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_touchend_callback_on_thread" (func $_emscripten_set_touchend_callback_on_thread (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_touchmove_callback_on_thread" (func $_emscripten_set_touchmove_callback_on_thread (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_emscripten_set_touchstart_callback_on_thread" (func $_emscripten_set_touchstart_callback_on_thread (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_exit" (func $_exit (param i32)))
 (import "env" "_glActiveTexture" (func $_glActiveTexture (param i32)))
 (import "env" "_glAttachShader" (func $_glAttachShader (param i32 i32)))
 (import "env" "_glBindAttribLocation" (func $_glBindAttribLocation (param i32 i32 i32)))
 (import "env" "_glBindBuffer" (func $_glBindBuffer (param i32 i32)))
 (import "env" "_glBindTexture" (func $_glBindTexture (param i32 i32)))
 (import "env" "_glBlendFunc" (func $_glBlendFunc (param i32 i32)))
 (import "env" "_glBufferData" (func $_glBufferData (param i32 i32 i32 i32)))
 (import "env" "_glBufferSubData" (func $_glBufferSubData (param i32 i32 i32 i32)))
 (import "env" "_glClear" (func $_glClear (param i32)))
 (import "env" "_glClearColor" (func $_glClearColor (param f64 f64 f64 f64)))
 (import "env" "_glClearDepthf" (func $_glClearDepthf (param f64)))
 (import "env" "_glCompileShader" (func $_glCompileShader (param i32)))
 (import "env" "_glCompressedTexImage2D" (func $_glCompressedTexImage2D (param i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_glCreateProgram" (func $_glCreateProgram (result i32)))
 (import "env" "_glCreateShader" (func $_glCreateShader (param i32) (result i32)))
 (import "env" "_glCullFace" (func $_glCullFace (param i32)))
 (import "env" "_glDeleteBuffers" (func $_glDeleteBuffers (param i32 i32)))
 (import "env" "_glDeleteProgram" (func $_glDeleteProgram (param i32)))
 (import "env" "_glDeleteShader" (func $_glDeleteShader (param i32)))
 (import "env" "_glDeleteTextures" (func $_glDeleteTextures (param i32 i32)))
 (import "env" "_glDepthFunc" (func $_glDepthFunc (param i32)))
 (import "env" "_glDetachShader" (func $_glDetachShader (param i32 i32)))
 (import "env" "_glDisable" (func $_glDisable (param i32)))
 (import "env" "_glDisableVertexAttribArray" (func $_glDisableVertexAttribArray (param i32)))
 (import "env" "_glDrawArrays" (func $_glDrawArrays (param i32 i32 i32)))
 (import "env" "_glDrawElements" (func $_glDrawElements (param i32 i32 i32 i32)))
 (import "env" "_glEnable" (func $_glEnable (param i32)))
 (import "env" "_glEnableVertexAttribArray" (func $_glEnableVertexAttribArray (param i32)))
 (import "env" "_glFrontFace" (func $_glFrontFace (param i32)))
 (import "env" "_glGenBuffers" (func $_glGenBuffers (param i32 i32)))
 (import "env" "_glGenTextures" (func $_glGenTextures (param i32 i32)))
 (import "env" "_glGetAttribLocation" (func $_glGetAttribLocation (param i32 i32) (result i32)))
 (import "env" "_glGetFloatv" (func $_glGetFloatv (param i32 i32)))
 (import "env" "_glGetProgramInfoLog" (func $_glGetProgramInfoLog (param i32 i32 i32 i32)))
 (import "env" "_glGetProgramiv" (func $_glGetProgramiv (param i32 i32 i32)))
 (import "env" "_glGetShaderInfoLog" (func $_glGetShaderInfoLog (param i32 i32 i32 i32)))
 (import "env" "_glGetShaderiv" (func $_glGetShaderiv (param i32 i32 i32)))
 (import "env" "_glGetString" (func $_glGetString (param i32) (result i32)))
 (import "env" "_glGetUniformLocation" (func $_glGetUniformLocation (param i32 i32) (result i32)))
 (import "env" "_glLinkProgram" (func $_glLinkProgram (param i32)))
 (import "env" "_glPixelStorei" (func $_glPixelStorei (param i32 i32)))
 (import "env" "_glReadPixels" (func $_glReadPixels (param i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_glShaderSource" (func $_glShaderSource (param i32 i32 i32 i32)))
 (import "env" "_glTexImage2D" (func $_glTexImage2D (param i32 i32 i32 i32 i32 i32 i32 i32 i32)))
 (import "env" "_glTexParameteri" (func $_glTexParameteri (param i32 i32 i32)))
 (import "env" "_glUniform1i" (func $_glUniform1i (param i32 i32)))
 (import "env" "_glUniform4f" (func $_glUniform4f (param i32 f64 f64 f64 f64)))
 (import "env" "_glUniformMatrix4fv" (func $_glUniformMatrix4fv (param i32 i32 i32 i32)))
 (import "env" "_glUseProgram" (func $_glUseProgram (param i32)))
 (import "env" "_glVertexAttribPointer" (func $_glVertexAttribPointer (param i32 i32 i32 i32 i32 i32)))
 (import "env" "_glViewport" (func $_glViewport (param i32 i32 i32 i32)))
 (import "env" "_glfwCreateWindow" (func $_glfwCreateWindow (param i32 i32 i32 i32 i32) (result i32)))
 (import "env" "_glfwDefaultWindowHints" (func $_glfwDefaultWindowHints))
 (import "env" "_glfwDestroyWindow" (func $_glfwDestroyWindow (param i32)))
 (import "env" "_glfwGetCursorPos" (func $_glfwGetCursorPos (param i32 i32 i32)))
 (import "env" "_glfwGetKey" (func $_glfwGetKey (param i32 i32) (result i32)))
 (import "env" "_glfwGetMouseButton" (func $_glfwGetMouseButton (param i32 i32) (result i32)))
 (import "env" "_glfwGetTime" (func $_glfwGetTime (result f64)))
 (import "env" "_glfwInit" (func $_glfwInit (result i32)))
 (import "env" "_glfwMakeContextCurrent" (func $_glfwMakeContextCurrent (param i32)))
 (import "env" "_glfwSetCharCallback" (func $_glfwSetCharCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetCursorEnterCallback" (func $_glfwSetCursorEnterCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetCursorPosCallback" (func $_glfwSetCursorPosCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetDropCallback" (func $_glfwSetDropCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetErrorCallback" (func $_glfwSetErrorCallback (param i32) (result i32)))
 (import "env" "_glfwSetKeyCallback" (func $_glfwSetKeyCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetMouseButtonCallback" (func $_glfwSetMouseButtonCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetScrollCallback" (func $_glfwSetScrollCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetWindowIconifyCallback" (func $_glfwSetWindowIconifyCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSetWindowShouldClose" (func $_glfwSetWindowShouldClose (param i32 i32)))
 (import "env" "_glfwSetWindowSizeCallback" (func $_glfwSetWindowSizeCallback (param i32 i32) (result i32)))
 (import "env" "_glfwSwapBuffers" (func $_glfwSwapBuffers (param i32)))
 (import "env" "_glfwTerminate" (func $_glfwTerminate))
 (import "env" "_glfwWindowHint" (func $_glfwWindowHint (param i32 i32)))
 (import "env" "_llvm_stackrestore" (func $_llvm_stackrestore (param i32)))
 (import "env" "_llvm_stacksave" (func $_llvm_stacksave (result i32)))
 (import "env" "_time" (func $_time (param i32) (result i32)))
 (import "env" "setTempRet0" (func $setTempRet0 (param i32)))
 (import "env" "___wasi_fd_seek" (func $legalimport$___wasi_fd_seek (param i32 i32 i32 i32 i32) (result i32)))
 (global $STACKTOP (mut i32) (i32.const 36080))
 (global $STACK_MAX (mut i32) (i32.const 5278960))
 (export "___errno_location" (func $___errno_location))
 (export "_emscripten_GetProcAddress" (func $_emscripten_GetProcAddress))
 (export "_emscripten_get_sbrk_ptr" (func $_emscripten_get_sbrk_ptr))
 (export "_fflush" (func $_fflush))
 (export "_free" (func $_free))
 (export "_llvm_maxnum_f64" (func $_llvm_maxnum_f64))
 (export "_llvm_minnum_f64" (func $_llvm_minnum_f64))
 (export "_llvm_round_f32" (func $_llvm_round_f32))
 (export "_main" (func $_main))
 (export "_mal_device_process_pcm_frames__webaudio" (func $_mal_device_process_pcm_frames__webaudio))
 (export "_malloc" (func $_malloc))
 (export "_memcpy" (func $_memcpy))
 (export "_memmove" (func $_memmove))
 (export "_memset" (func $_memset))
 (export "_strstr" (func $_strstr))
 (export "dynCall_ff" (func $dynCall_ff))
 (export "dynCall_fff" (func $dynCall_fff))
 (export "dynCall_i" (func $dynCall_i))
 (export "dynCall_ii" (func $dynCall_ii))
 (export "dynCall_iidiiii" (func $dynCall_iidiiii))
 (export "dynCall_iii" (func $dynCall_iii))
 (export "dynCall_iiii" (func $dynCall_iiii))
 (export "dynCall_iiiii" (func $dynCall_iiiii))
 (export "dynCall_jiji" (func $legalstub$dynCall_jiji))
 (export "dynCall_v" (func $dynCall_v))
 (export "dynCall_vf" (func $dynCall_vf))
 (export "dynCall_vff" (func $dynCall_vff))
 (export "dynCall_vffff" (func $dynCall_vffff))
 (export "dynCall_vfi" (func $dynCall_vfi))
 (export "dynCall_vi" (func $dynCall_vi))
 (export "dynCall_vidd" (func $dynCall_vidd))
 (export "dynCall_vif" (func $dynCall_vif))
 (export "dynCall_viff" (func $dynCall_viff))
 (export "dynCall_vifff" (func $dynCall_vifff))
 (export "dynCall_viffff" (func $dynCall_viffff))
 (export "dynCall_vii" (func $dynCall_vii))
 (export "dynCall_viif" (func $dynCall_viif))
 (export "dynCall_viii" (func $dynCall_viii))
 (export "dynCall_viiii" (func $dynCall_viiii))
 (export "dynCall_viiiii" (func $dynCall_viiiii))
 (export "dynCall_viiiiii" (func $dynCall_viiiiii))
 (export "dynCall_viiiiiii" (func $dynCall_viiiiiii))
 (export "dynCall_viiiiiiii" (func $dynCall_viiiiiiii))
 (export "dynCall_viiiiiiiii" (func $dynCall_viiiiiiiii))
 (export "dynCall_viiji" (func $legalstub$dynCall_viiji))
 (export "establishStackSpace" (func $establishStackSpace))
 (export "stackAlloc" (func $stackAlloc))
 (export "stackRestore" (func $stackRestore))
 (export "stackSave" (func $stackSave))
 (func $stackAlloc (; 304 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (local.get $0)
    (global.get $STACKTOP)
   )
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 15)
    )
    (i32.const -16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (local.get $0)
   )
  )
  (local.get $1)
 )
 (func $stackSave (; 305 ;) (; has Stack IR ;) (result i32)
  (global.get $STACKTOP)
 )
 (func $stackRestore (; 306 ;) (; has Stack IR ;) (param $0 i32)
  (global.set $STACKTOP
   (local.get $0)
  )
 )
 (func $establishStackSpace (; 307 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (global.set $STACKTOP
   (local.get $0)
  )
  (global.set $STACK_MAX
   (local.get $1)
  )
 )
 (func $_main (; 308 ;) (; has Stack IR ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 f32)
  (local $3 f32)
  (local $4 f32)
  (local $5 f32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 48)
   )
  )
  (local.set $0
   (local.get $1)
  )
  ;;@ visual.c:102:0
  (call $_InitWindow)
  ;;@ visual.c:105:0
  (f32.store
   (i32.const 32880)
   (f32.mul
    (local.tee $4
     (f32.mul
      (local.tee $2
       (f32.load
        (i32.const 14164)
       )
      )
      (call $_sinf
       (local.tee $3
        (f32.load
         (i32.const 14168)
        )
       )
      )
     )
    )
    (call $_cosf
     (local.tee $5
      (f32.load
       (i32.const 14172)
      )
     )
    )
   )
  )
  (f32.store
   (i32.const 32884)
   (f32.mul
    (local.get $4)
    (call $_sinf
     (local.get $5)
    )
   )
  )
  (f32.store
   (i32.const 32888)
   (f32.mul
    (local.get $2)
    (call $_cosf
     (local.get $3)
    )
   )
  )
  (i64.store align=4
   (i32.const 32892)
   (i64.const 0)
  )
  (i64.store align=4
   (i32.const 32900)
   (i64.const 0)
  )
  ;;@ visual.c:106:0
  (i32.store
   (i32.const 32908)
   (i32.const 0)
  )
  ;;@ visual.c:107:0
  (f32.store
   (i32.const 32912)
   (f32.const 1)
  )
  ;;@ visual.c:108:0
  (f32.store
   (i32.const 32916)
   (f32.const 45)
  )
  ;;@ visual.c:109:0
  (i32.store
   (i32.const 32920)
   (i32.const 0)
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32880)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32888)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32896)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32904)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32912)
   )
  )
  ;;@ visual.c:111:0
  (i32.store offset=40
   (local.get $0)
   (i32.load
    (i32.const 32920)
   )
  )
  (call $_SetCameraMode
   (local.get $0)
  )
  (if
   ;;@ visual.c:113:0
   (i32.eq
    ;;@ visualscript.c:311:0
    (if (result i32)
     ;;@ visualscript.c:304:0
     (i32.eq
      (call $_InitGrid)
      (i32.const -1)
     )
     (i32.const -1)
     (block (result i32)
      ;;@ visualscript.c:309:0
      (call $_UpdateNotiBox
       (i32.const 15817)
      )
      (i32.const 0)
     )
    )
    (i32.const -1)
   )
   ;;@ visual.c:113:0
   (call $_exit
    (i32.const 1)
   )
   (block
    ;;@ visual.c:116:0
    (drop
     (call $_emscripten_sample_gamepad_data)
    )
    ;;@ visual.c:117:0
    (call $_emscripten_set_main_loop
     (i32.const 1)
     (i32.const 0)
     (i32.const 1)
    )
    ;;@ visual.c:131:0
    (call $_CloseWindow)
    (global.set $STACKTOP
     (local.get $1)
    )
    ;;@ visual.c:134:0
    (return
     (i32.const 0)
    )
   )
  )
  (i32.const 0)
 )
 (func $_UpdateDrawFrame (; 309 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 272)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 272)
   )
  )
  (local.set $3
   (i32.add
    (local.get $1)
    (i32.const 152)
   )
  )
  (local.set $7
   (i32.add
    (local.get $1)
    (i32.const 140)
   )
  )
  (local.set $8
   (local.get $1)
  )
  (local.set $9
   (i32.add
    (local.get $1)
    (i32.const 252)
   )
  )
  (local.set $11
   (i32.add
    (local.get $1)
    (i32.const 236)
   )
  )
  (local.set $13
   (i32.add
    (local.get $1)
    (i32.const 120)
   )
  )
  (local.set $14
   (i32.add
    (local.get $1)
    (i32.const 96)
   )
  )
  (local.set $15
   (i32.add
    (local.get $1)
    (i32.const 88)
   )
  )
  (local.set $16
   (i32.add
    (local.get $1)
    (i32.const 80)
   )
  )
  (local.set $17
   (i32.add
    (local.get $1)
    (i32.const 72)
   )
  )
  (local.set $18
   (i32.sub
    (local.get $1)
    (i32.const -64)
   )
  )
  (local.set $19
   (i32.add
    (local.get $1)
    (i32.const 56)
   )
  )
  (local.set $20
   (i32.add
    (local.get $1)
    (i32.const 48)
   )
  )
  (local.set $21
   (i32.add
    (local.get $1)
    (i32.const 220)
   )
  )
  (local.set $22
   (i32.add
    (local.get $1)
    (i32.const 216)
   )
  )
  (local.set $23
   (i32.add
    (local.get $1)
    (i32.const 212)
   )
  )
  ;;@ visual.c:147:0
  (i32.store8 offset=260
   (local.get $1)
   (i32.const 0)
  )
  (i32.store8 offset=261
   (local.get $1)
   (i32.const 117)
  )
  (i32.store8 offset=262
   (local.get $1)
   (i32.const 44)
  )
  (i32.store8 offset=263
   (local.get $1)
   (i32.const -1)
  )
  (i32.store align=1
   (local.tee $0
    (i32.add
     (local.get $1)
     (i32.const 164)
    )
   )
   (i32.load offset=260 align=1
    (local.get $1)
   )
  )
  (call $_Fade
   (i32.add
    (local.get $1)
    (i32.const 208)
   )
   (local.get $0)
   (f32.const 0.800000011920929)
  )
  ;;@ visual.c:154:0
  (f32.store offset=40
   (local.get $1)
   (f32.const 270)
  )
  (f32.store offset=44
   (local.get $1)
   (f32.const 532.5)
  )
  ;;@ visual.c:156:0
  (f32.store offset=32
   (local.get $1)
   (f32.const 5)
  )
  (f32.store offset=36
   (local.get $1)
   (f32.const 537.5)
  )
  ;;@ visual.c:157:0
  (f32.store offset=24
   (local.get $1)
   (f32.const 270)
  )
  (f32.store offset=28
   (local.get $1)
   (f32.const 177.5)
  )
  ;;@ visual.c:160:0
  (f32.store offset=16
   (local.get $1)
   (f32.const 1005)
  )
  (f32.store offset=20
   (local.get $1)
   (f32.const 5)
  )
  ;;@ visual.c:170:0
  (call $_UpdateCameraPos)
  ;;@ visual.c:172:0
  (call $_CheckMouseCollision)
  ;;@ visual.c:174:0
  (call $_UpdateScriptBoxes)
  (if
   ;;@ visual.c:177:0
   (i32.ne
    (i32.load
     (i32.const 32924)
    )
    (i32.load
     (i32.const 14196)
    )
   )
   (block
    ;;@ visual.c:178:0
    (call $_AllocPiecepos)
    ;;@ visual.c:179:0
    (call $_SetAxisEnd)
    ;;@ visual.c:180:0
    (i32.store
     (i32.const 32924)
     (i32.load
      (i32.const 14196)
     )
    )
   )
  )
  ;;@ visual.c:187:0
  (call $_BeginDrawing)
  ;;@ visual.c:189:0
  (i32.store8 offset=256
   (local.get $1)
   (i32.const -11)
  )
  (i32.store8 offset=257
   (local.get $1)
   (i32.const -11)
  )
  (i32.store8 offset=258
   (local.get $1)
   (i32.const -11)
  )
  (i32.store8 offset=259
   (local.get $1)
   (i32.const -1)
  )
  (i32.store align=1
   (local.get $0)
   (i32.load offset=256 align=1
    (local.get $1)
   )
  )
  (call $_ClearBackground
   (local.get $0)
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32880)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32888)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32896)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32904)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32912)
   )
  )
  ;;@ visual.c:191:0
  (i32.store offset=40
   (local.get $0)
   (i32.load
    (i32.const 32920)
   )
  )
  (call $_BeginMode3D
   (local.get $0)
  )
  (if
   ;;@ visual.c:194:0
   (i32.gt_s
    (local.tee $2
     (i32.load
      (i32.const 14196)
     )
    )
    (i32.const 0)
   )
   (block
    (loop $while-in
     (if
      ;;@ visual.c:195:0
      (i32.gt_s
       (local.get $2)
       (i32.const 0)
      )
      (block
       (local.set $4
        (i32.const 0)
       )
       (loop $while-in1
        (if
         ;;@ visual.c:196:0
         (i32.gt_s
          (local.get $2)
          (i32.const 0)
         )
         (block
          (local.set $5
           (i32.const 0)
          )
          (loop $while-in3
           ;;@ visual.c:201:0
           (local.set $12
            (i32.add
             (i32.load
              (i32.add
               (i32.load
                (i32.add
                 (i32.load
                  (i32.const 32928)
                 )
                 (i32.shl
                  (local.get $6)
                  (i32.const 2)
                 )
                )
               )
               (i32.shl
                (local.get $4)
                (i32.const 2)
               )
              )
             )
             (i32.mul
              (local.get $5)
              (i32.const 12)
             )
            )
           )
           ;;@ visual.c:202:0
           (local.set $10
            (f32.mul
             (f32.mul
              (f32.div
               (f32.div
                (f32.const 30)
                (f32.convert_i32_s
                 (i32.add
                  (local.get $2)
                  (i32.const -1)
                 )
                )
               )
               (f32.const 5)
              )
              (f32.const 1.25)
             )
             (f32.load
              (i32.const 14160)
             )
            )
           )
           (block $switch
            (block $switch-default
             (block $switch-case4
              (if
               (local.tee $2
                (i32.load16_s
                 (i32.add
                  (i32.load
                   (i32.add
                    (i32.load
                     (i32.add
                      (i32.load
                       (i32.const 32980)
                      )
                      (i32.shl
                       (local.get $6)
                       (i32.const 2)
                      )
                     )
                    )
                    (i32.shl
                     (local.get $4)
                     (i32.const 2)
                    )
                   )
                  )
                  (i32.shl
                   (local.get $5)
                   (i32.const 1)
                  )
                 )
                )
               )
               (if
                (i32.eq
                 (local.get $2)
                 (i32.const 79)
                )
                (br $switch-case4)
                (br $switch-default)
               )
              )
              (i32.store8 offset=248
               (local.get $1)
               (i32.const -126)
              )
              (i32.store8 offset=249
               (local.get $1)
               (i32.const -126)
              )
              (i32.store8 offset=250
               (local.get $1)
               (i32.const -126)
              )
              (i32.store8 offset=251
               (local.get $1)
               (i32.const -1)
              )
              (i32.store align=1
               (local.get $0)
               (i32.load offset=248 align=1
                (local.get $1)
               )
              )
              (call $_Fade
               (local.get $9)
               (local.get $0)
               (f32.const 0.5)
              )
              (br $switch)
             )
             (i32.store8 offset=244
              (local.get $1)
              (i32.const -26)
             )
             (i32.store8 offset=245
              (local.get $1)
              (i32.const 41)
             )
             (i32.store8 offset=246
              (local.get $1)
              (i32.const 55)
             )
             (i32.store8 offset=247
              (local.get $1)
              (i32.const -1)
             )
             (i32.store align=1
              (local.get $0)
              (i32.load offset=244 align=1
               (local.get $1)
              )
             )
             (call $_Fade
              (local.get $9)
              (local.get $0)
              (f32.const 0.75)
             )
             (br $switch)
            )
            (i32.store8 offset=240
             (local.get $1)
             (i32.const 0)
            )
            (i32.store8 offset=241
             (local.get $1)
             (i32.const 121)
            )
            (i32.store8 offset=242
             (local.get $1)
             (i32.const -15)
            )
            (i32.store8 offset=243
             (local.get $1)
             (i32.const -1)
            )
            (i32.store align=1
             (local.get $0)
             (i32.load offset=240 align=1
              (local.get $1)
             )
            )
            (call $_Fade
             (local.get $9)
             (local.get $0)
             (f32.const 0.75)
            )
           )
           (i64.store align=4
            (local.get $3)
            (i64.load align=4
             (local.get $12)
            )
           )
           ;;@ visual.c:201:0
           (i32.store offset=8
            (local.get $3)
            (i32.load offset=8
             (local.get $12)
            )
           )
           (i32.store align=1
            (local.get $0)
            (i32.load align=1
             (local.get $9)
            )
           )
           (call $_DrawCube
            (local.get $3)
            (local.get $10)
            (local.get $10)
            (local.get $10)
            (local.get $0)
           )
           ;;@ visual.c:203:0
           (local.set $2
            (i32.add
             (i32.load
              (i32.add
               (i32.load
                (i32.add
                 (i32.load
                  (i32.const 32928)
                 )
                 (i32.shl
                  (local.get $6)
                  (i32.const 2)
                 )
                )
               )
               (i32.shl
                (local.get $4)
                (i32.const 2)
               )
              )
             )
             (i32.mul
              (local.get $5)
              (i32.const 12)
             )
            )
           )
           ;;@ visual.c:204:0
           (local.set $10
            (f32.mul
             (f32.load
              (i32.const 14160)
             )
             (f32.mul
              (f32.div
               (f32.div
                (f32.const 30)
                (f32.convert_i32_s
                 (i32.add
                  (i32.load
                   (i32.const 14196)
                  )
                  (i32.const -1)
                 )
                )
               )
               (f32.const 5)
              )
              (f32.const 1.25)
             )
            )
           )
           (block $switch5
            (block $switch-default8
             (block $switch-case7
              (if
               (local.tee $12
                (i32.load16_s
                 (i32.add
                  (i32.load
                   (i32.add
                    (i32.load
                     (i32.add
                      (i32.load
                       (i32.const 32980)
                      )
                      (i32.shl
                       (local.get $6)
                       (i32.const 2)
                      )
                     )
                    )
                    (i32.shl
                     (local.get $4)
                     (i32.const 2)
                    )
                   )
                  )
                  (i32.shl
                   (local.get $5)
                   (i32.const 1)
                  )
                 )
                )
               )
               (if
                (i32.eq
                 (local.get $12)
                 (i32.const 79)
                )
                (br $switch-case7)
                (br $switch-default8)
               )
              )
              (i32.store8 offset=232
               (local.get $1)
               (i32.const -126)
              )
              (i32.store8 offset=233
               (local.get $1)
               (i32.const -126)
              )
              (i32.store8 offset=234
               (local.get $1)
               (i32.const -126)
              )
              (i32.store8 offset=235
               (local.get $1)
               (i32.const -1)
              )
              (i32.store align=1
               (local.get $0)
               (i32.load offset=232 align=1
                (local.get $1)
               )
              )
              (call $_Fade
               (local.get $11)
               (local.get $0)
               (f32.const 0.5)
              )
              (br $switch5)
             )
             (i32.store8 offset=228
              (local.get $1)
              (i32.const -26)
             )
             (i32.store8 offset=229
              (local.get $1)
              (i32.const 41)
             )
             (i32.store8 offset=230
              (local.get $1)
              (i32.const 55)
             )
             (i32.store8 offset=231
              (local.get $1)
              (i32.const -1)
             )
             (i32.store align=1
              (local.get $0)
              (i32.load offset=228 align=1
               (local.get $1)
              )
             )
             (call $_Fade
              (local.get $11)
              (local.get $0)
              (f32.const 0.75)
             )
             (br $switch5)
            )
            (i32.store8 offset=224
             (local.get $1)
             (i32.const 0)
            )
            (i32.store8 offset=225
             (local.get $1)
             (i32.const 121)
            )
            (i32.store8 offset=226
             (local.get $1)
             (i32.const -15)
            )
            (i32.store8 offset=227
             (local.get $1)
             (i32.const -1)
            )
            (i32.store align=1
             (local.get $0)
             (i32.load offset=224 align=1
              (local.get $1)
             )
            )
            (call $_Fade
             (local.get $11)
             (local.get $0)
             (f32.const 0.75)
            )
           )
           (i64.store align=4
            (local.get $3)
            (i64.load align=4
             (local.get $2)
            )
           )
           ;;@ visual.c:203:0
           (i32.store offset=8
            (local.get $3)
            (i32.load offset=8
             (local.get $2)
            )
           )
           (i32.store align=1
            (local.get $0)
            (i32.load align=1
             (local.get $11)
            )
           )
           (call $_DrawCubeWires
            (local.get $3)
            (local.get $10)
            (local.get $10)
            (local.get $10)
            (local.get $0)
           )
           ;;@ visual.c:196:0
           (br_if $while-in3
            (i32.lt_s
             (local.tee $5
              (i32.add
               (local.get $5)
               (i32.const 1)
              )
             )
             (local.tee $2
              (i32.load
               (i32.const 14196)
              )
             )
            )
           )
          )
         )
        )
        ;;@ visual.c:195:0
        (br_if $while-in1
         (i32.lt_s
          (local.tee $4
           (i32.add
            (local.get $4)
            (i32.const 1)
           )
          )
          (local.get $2)
         )
        )
       )
      )
     )
     ;;@ visual.c:194:0
     (br_if $while-in
      (i32.lt_s
       (local.tee $6
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.get $2)
      )
     )
    )
    (if
     ;;@ visual.c:210:0
     (i32.gt_s
      (local.get $2)
      (i32.const 0)
     )
     (block
      (local.set $6
       (i32.const 0)
      )
      (loop $while-in10
       (if
        ;;@ visual.c:211:0
        (i32.gt_s
         (local.get $2)
         (i32.const 0)
        )
        (block
         (local.set $4
          (i32.const 0)
         )
         (loop $while-in12
          ;;@ visual.c:212:0
          (local.set $5
           (i32.add
            (i32.load
             (i32.add
              (i32.load
               (local.tee $9
                (i32.load
                 (i32.const 32928)
                )
               )
              )
              (i32.shl
               (local.get $6)
               (i32.const 2)
              )
             )
            )
            (i32.mul
             (local.get $4)
             (i32.const 12)
            )
           )
          )
          (local.set $2
           (i32.add
            (i32.load
             (i32.add
              (i32.load
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $2)
                  (i32.const -1)
                 )
                 (i32.const 2)
                )
                (local.get $9)
               )
              )
              (i32.shl
               (local.get $6)
               (i32.const 2)
              )
             )
            )
            (i32.mul
             (local.get $4)
             (i32.const 12)
            )
           )
          )
          (i64.store align=4
           (local.get $7)
           (i64.load align=4
            (local.get $5)
           )
          )
          (i32.store offset=8
           (local.get $7)
           (i32.load offset=8
            (local.get $5)
           )
          )
          (i64.store align=4
           (local.get $3)
           (i64.load align=4
            (local.get $2)
           )
          )
          (i32.store offset=8
           (local.get $3)
           (i32.load offset=8
            (local.get $2)
           )
          )
          (i32.store align=1
           (local.get $0)
           (i32.load align=1
            (i32.const 14496)
           )
          )
          (call $_DrawLine3D
           (local.get $7)
           (local.get $3)
           (local.get $0)
          )
          ;;@ visual.c:211:0
          (br_if $while-in12
           (i32.lt_s
            (local.tee $4
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
            (local.tee $2
             (i32.load
              (i32.const 14196)
             )
            )
           )
          )
         )
        )
       )
       ;;@ visual.c:210:0
       (br_if $while-in10
        (i32.lt_s
         (local.tee $6
          (i32.add
           (local.get $6)
           (i32.const 1)
          )
         )
         (local.get $2)
        )
       )
      )
      (if
       ;;@ visual.c:214:0
       (i32.gt_s
        (local.get $2)
        (i32.const 0)
       )
       (block
        (local.set $6
         (i32.const 0)
        )
        (loop $while-in14
         (if
          ;;@ visual.c:215:0
          (i32.gt_s
           (local.get $2)
           (i32.const 0)
          )
          (block
           (local.set $4
            (i32.const 0)
           )
           (loop $while-in16
            ;;@ visual.c:216:0
            (local.set $5
             (i32.add
              (i32.load
               (local.tee $9
                (i32.load
                 (i32.add
                  (i32.load
                   (i32.const 32928)
                  )
                  (i32.shl
                   (local.get $4)
                   (i32.const 2)
                  )
                 )
                )
               )
              )
              (i32.mul
               (local.get $6)
               (i32.const 12)
              )
             )
            )
            (local.set $2
             (i32.add
              (i32.load
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $2)
                  (i32.const -1)
                 )
                 (i32.const 2)
                )
                (local.get $9)
               )
              )
              (i32.mul
               (local.get $6)
               (i32.const 12)
              )
             )
            )
            (i64.store align=4
             (local.get $7)
             (i64.load align=4
              (local.get $5)
             )
            )
            (i32.store offset=8
             (local.get $7)
             (i32.load offset=8
              (local.get $5)
             )
            )
            (i64.store align=4
             (local.get $3)
             (i64.load align=4
              (local.get $2)
             )
            )
            (i32.store offset=8
             (local.get $3)
             (i32.load offset=8
              (local.get $2)
             )
            )
            (i32.store align=1
             (local.get $0)
             (i32.load align=1
              (i32.const 14496)
             )
            )
            (call $_DrawLine3D
             (local.get $7)
             (local.get $3)
             (local.get $0)
            )
            ;;@ visual.c:215:0
            (br_if $while-in16
             (i32.lt_s
              (local.tee $4
               (i32.add
                (local.get $4)
                (i32.const 1)
               )
              )
              (local.tee $2
               (i32.load
                (i32.const 14196)
               )
              )
             )
            )
           )
          )
         )
         ;;@ visual.c:214:0
         (br_if $while-in14
          (i32.lt_s
           (local.tee $6
            (i32.add
             (local.get $6)
             (i32.const 1)
            )
           )
           (local.get $2)
          )
         )
        )
        (if
         ;;@ visual.c:218:0
         (i32.gt_s
          (local.get $2)
          (i32.const 0)
         )
         (block
          (local.set $6
           (i32.const 0)
          )
          (loop $while-in18
           (if
            ;;@ visual.c:219:0
            (i32.gt_s
             (local.get $2)
             (i32.const 0)
            )
            (block
             (local.set $4
              (i32.const 0)
             )
             (loop $while-in20
              ;;@ visual.c:220:0
              (local.set $2
               (i32.add
                (local.tee $5
                 (i32.load
                  (i32.add
                   (i32.load
                    (i32.add
                     (i32.load
                      (i32.const 32928)
                     )
                     (i32.shl
                      (local.get $4)
                      (i32.const 2)
                     )
                    )
                   )
                   (i32.shl
                    (local.get $6)
                    (i32.const 2)
                   )
                  )
                 )
                )
                (i32.mul
                 (i32.add
                  (local.get $2)
                  (i32.const -1)
                 )
                 (i32.const 12)
                )
               )
              )
              (i64.store align=4
               (local.get $7)
               (i64.load align=4
                (local.get $5)
               )
              )
              (i32.store offset=8
               (local.get $7)
               (i32.load offset=8
                (local.get $5)
               )
              )
              (i64.store align=4
               (local.get $3)
               (i64.load align=4
                (local.get $2)
               )
              )
              (i32.store offset=8
               (local.get $3)
               (i32.load offset=8
                (local.get $2)
               )
              )
              (i32.store align=1
               (local.get $0)
               (i32.load align=1
                (i32.const 14496)
               )
              )
              (call $_DrawLine3D
               (local.get $7)
               (local.get $3)
               (local.get $0)
              )
              ;;@ visual.c:219:0
              (br_if $while-in20
               (i32.lt_s
                (local.tee $4
                 (i32.add
                  (local.get $4)
                  (i32.const 1)
                 )
                )
                (local.tee $2
                 (i32.load
                  (i32.const 14196)
                 )
                )
               )
              )
             )
            )
           )
           ;;@ visual.c:218:0
           (br_if $while-in18
            (i32.lt_s
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const 1)
              )
             )
             (local.get $2)
            )
           )
          )
         )
        )
       )
      )
     )
    )
   )
  )
  ;;@ visual.c:223:0
  (i64.store align=4
   (local.get $7)
   (i64.load align=4
    (local.tee $2
     (i32.load
      (i32.load
       (i32.load
        (i32.const 32928)
       )
      )
     )
    )
   )
  )
  (i32.store offset=8
   (local.get $7)
   (i32.load offset=8
    (local.get $2)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 32932)
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.load
    (i32.const 32940)
   )
  )
  (i32.store align=1
   (local.get $0)
   (i32.load align=1
    (i32.const 14496)
   )
  )
  (call $_DrawLine3D
   (local.get $7)
   (local.get $3)
   (local.get $0)
  )
  ;;@ visual.c:224:0
  (i64.store align=4
   (local.get $7)
   (i64.load align=4
    (local.tee $2
     (i32.load
      (i32.load
       (i32.load
        (i32.const 32928)
       )
      )
     )
    )
   )
  )
  (i32.store offset=8
   (local.get $7)
   (i32.load offset=8
    (local.get $2)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 32944)
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.load
    (i32.const 32952)
   )
  )
  (i32.store align=1
   (local.get $0)
   (i32.load align=1
    (i32.const 14496)
   )
  )
  (call $_DrawLine3D
   (local.get $7)
   (local.get $3)
   (local.get $0)
  )
  ;;@ visual.c:225:0
  (i64.store align=4
   (local.get $7)
   (i64.load align=4
    (local.tee $2
     (i32.load
      (i32.load
       (i32.load
        (i32.const 32928)
       )
      )
     )
    )
   )
  )
  (i32.store offset=8
   (local.get $7)
   (i32.load offset=8
    (local.get $2)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 32956)
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.load
    (i32.const 32964)
   )
  )
  (i32.store align=1
   (local.get $0)
   (i32.load align=1
    (i32.const 14496)
   )
  )
  (call $_DrawLine3D
   (local.get $7)
   (local.get $3)
   (local.get $0)
  )
  (call $_rlglDraw)
  (call $_rlMatrixMode
   (i32.const 5889)
  )
  (call $_rlPopMatrix)
  (call $_rlMatrixMode
   (i32.const 5888)
  )
  (call $_rlLoadIdentity)
  (call $_glDisable
   (i32.const 2929)
  )
  (if
   ;;@ visual.c:230:0
   (i32.gt_s
    (local.tee $2
     (i32.load
      (i32.const 14196)
     )
    )
    (i32.const 0)
   )
   (block
    (local.set $6
     (i32.const 0)
    )
    (loop $while-in22
     (if
      ;;@ visual.c:231:0
      (i32.gt_s
       (local.get $2)
       (i32.const 0)
      )
      (block
       (local.set $4
        (i32.const 0)
       )
       (loop $while-in24
        (if
         ;;@ visual.c:232:0
         (i32.gt_s
          (local.get $2)
          (i32.const 0)
         )
         (block
          (local.set $2
           (i32.const 0)
          )
          (local.set $2
           (loop $while-in26 (result i32)
            ;;@ visual.c:233:0
            (i32.store
             (local.get $8)
             (local.get $2)
            )
            (i32.store offset=4
             (local.get $8)
             (local.get $4)
            )
            (i32.store offset=8
             (local.get $8)
             (local.get $6)
            )
            (local.set $9
             (call $_TextFormat
              (i32.const 14504)
              (local.get $8)
             )
            )
            ;;@ visual.c:234:0
            (i32.store offset=128
             (local.get $1)
             (i32.load
              (i32.add
               (local.tee $5
                (i32.load
                 (i32.add
                  (i32.load
                   (i32.add
                    (i32.load
                     (i32.const 32928)
                    )
                    (i32.shl
                     (local.get $6)
                     (i32.const 2)
                    )
                   )
                  )
                  (i32.shl
                   (local.get $4)
                   (i32.const 2)
                  )
                 )
                )
               )
               (i32.mul
                (local.get $2)
                (i32.const 12)
               )
              )
             )
            )
            (i32.store offset=132
             (local.get $1)
             (i32.load offset=4
              (i32.add
               (i32.mul
                (local.get $2)
                (i32.const 12)
               )
               (local.get $5)
              )
             )
            )
            (i32.store offset=136
             (local.get $1)
             (i32.load offset=8
              (i32.add
               (i32.mul
                (local.get $2)
                (i32.const 12)
               )
               (local.get $5)
              )
             )
            )
            (i64.store align=4
             (local.get $3)
             (i64.load offset=128 align=4
              (local.get $1)
             )
            )
            (i32.store offset=8
             (local.get $3)
             (i32.load offset=136
              (local.get $1)
             )
            )
            (i64.store align=4
             (local.get $0)
             (i64.load align=4
              (i32.const 32880)
             )
            )
            (i64.store offset=8 align=4
             (local.get $0)
             (i64.load align=4
              (i32.const 32888)
             )
            )
            (i64.store offset=16 align=4
             (local.get $0)
             (i64.load align=4
              (i32.const 32896)
             )
            )
            (i64.store offset=24 align=4
             (local.get $0)
             (i64.load align=4
              (i32.const 32904)
             )
            )
            (i64.store offset=32 align=4
             (local.get $0)
             (i64.load align=4
              (i32.const 32912)
             )
            )
            (i32.store offset=40
             (local.get $0)
             (i32.load
              (i32.const 32920)
             )
            )
            (call $_GetWorldToScreen
             (local.get $13)
             (local.get $3)
             (local.get $0)
            )
            (local.set $11
             (i32.trunc_f32_s
              (f32.load
               (local.get $13)
              )
             )
            )
            (i32.store offset=104
             (local.get $1)
             (i32.load
              (i32.add
               (local.tee $5
                (i32.load
                 (i32.add
                  (i32.load
                   (i32.add
                    (i32.load
                     (i32.const 32928)
                    )
                    (i32.shl
                     (local.get $6)
                     (i32.const 2)
                    )
                   )
                  )
                  (i32.shl
                   (local.get $4)
                   (i32.const 2)
                  )
                 )
                )
               )
               (i32.mul
                (local.get $2)
                (i32.const 12)
               )
              )
             )
            )
            (i32.store offset=108
             (local.get $1)
             (i32.load offset=4
              (i32.add
               (i32.mul
                (local.get $2)
                (i32.const 12)
               )
               (local.get $5)
              )
             )
            )
            (i32.store offset=112
             (local.get $1)
             (i32.load offset=8
              (i32.add
               (i32.mul
                (local.get $2)
                (i32.const 12)
               )
               (local.get $5)
              )
             )
            )
            (i64.store align=4
             (local.get $3)
             (i64.load offset=104 align=4
              (local.get $1)
             )
            )
            (i32.store offset=8
             (local.get $3)
             (i32.load offset=112
              (local.get $1)
             )
            )
            (i64.store align=4
             (local.get $0)
             (i64.load align=4
              (i32.const 32880)
             )
            )
            (i64.store offset=8 align=4
             (local.get $0)
             (i64.load align=4
              (i32.const 32888)
             )
            )
            (i64.store offset=16 align=4
             (local.get $0)
             (i64.load align=4
              (i32.const 32896)
             )
            )
            (i64.store offset=24 align=4
             (local.get $0)
             (i64.load align=4
              (i32.const 32904)
             )
            )
            (i64.store offset=32 align=4
             (local.get $0)
             (i64.load align=4
              (i32.const 32912)
             )
            )
            (i32.store offset=40
             (local.get $0)
             (i32.load
              (i32.const 32920)
             )
            )
            (call $_GetWorldToScreen
             (local.get $14)
             (local.get $3)
             (local.get $0)
            )
            (local.set $5
             (i32.trunc_f32_s
              (f32.load offset=4
               (local.get $14)
              )
             )
            )
            ;;@ visual.c:233:0
            (i32.store align=1
             (local.get $0)
             (i32.load offset=208 align=1
              (local.get $1)
             )
            )
            (call $_DrawText
             (local.get $9)
             (local.get $11)
             (local.get $5)
             (i32.const 10)
             (local.get $0)
            )
            ;;@ visual.c:232:0
            (br_if $while-in26
             (i32.lt_s
              (local.tee $2
               (i32.add
                (local.get $2)
                (i32.const 1)
               )
              )
              (local.tee $5
               (i32.load
                (i32.const 14196)
               )
              )
             )
            )
            (local.get $5)
           )
          )
         )
        )
        ;;@ visual.c:231:0
        (br_if $while-in24
         (i32.lt_s
          (local.tee $4
           (i32.add
            (local.get $4)
            (i32.const 1)
           )
          )
          (local.get $2)
         )
        )
       )
      )
     )
     ;;@ visual.c:230:0
     (br_if $while-in22
      (i32.lt_s
       (local.tee $6
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.get $2)
      )
     )
    )
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 32956)
   )
  )
  ;;@ visual.c:237:0
  (i32.store offset=8
   (local.get $3)
   (i32.load
    (i32.const 32964)
   )
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32880)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32888)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32896)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32904)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32912)
   )
  )
  (i32.store offset=40
   (local.get $0)
   (i32.load
    (i32.const 32920)
   )
  )
  (call $_GetWorldToScreen
   (local.get $15)
   (local.get $3)
   (local.get $0)
  )
  (local.set $8
   (i32.trunc_f32_s
    (f32.load
     (local.get $15)
    )
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 32956)
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.load
    (i32.const 32964)
   )
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32880)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32888)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32896)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32904)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32912)
   )
  )
  (i32.store offset=40
   (local.get $0)
   (i32.load
    (i32.const 32920)
   )
  )
  (call $_GetWorldToScreen
   (local.get $16)
   (local.get $3)
   (local.get $0)
  )
  (local.set $2
   (i32.trunc_f32_s
    (f32.load offset=4
     (local.get $16)
    )
   )
  )
  (i32.store align=1
   (local.get $0)
   (i32.load offset=208 align=1
    (local.get $1)
   )
  )
  (call $_DrawText
   (i32.const 14511)
   (local.get $8)
   (local.get $2)
   (i32.const 25)
   (local.get $0)
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 32944)
   )
  )
  ;;@ visual.c:238:0
  (i32.store offset=8
   (local.get $3)
   (i32.load
    (i32.const 32952)
   )
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32880)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32888)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32896)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32904)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32912)
   )
  )
  (i32.store offset=40
   (local.get $0)
   (i32.load
    (i32.const 32920)
   )
  )
  (call $_GetWorldToScreen
   (local.get $17)
   (local.get $3)
   (local.get $0)
  )
  (local.set $8
   (i32.trunc_f32_s
    (f32.load
     (local.get $17)
    )
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 32944)
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.load
    (i32.const 32952)
   )
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32880)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32888)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32896)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32904)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32912)
   )
  )
  (i32.store offset=40
   (local.get $0)
   (i32.load
    (i32.const 32920)
   )
  )
  (call $_GetWorldToScreen
   (local.get $18)
   (local.get $3)
   (local.get $0)
  )
  (local.set $2
   (i32.trunc_f32_s
    (f32.load offset=4
     (local.get $18)
    )
   )
  )
  (i32.store align=1
   (local.get $0)
   (i32.load offset=208 align=1
    (local.get $1)
   )
  )
  (call $_DrawText
   (i32.const 14513)
   (local.get $8)
   (local.get $2)
   (i32.const 25)
   (local.get $0)
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 32932)
   )
  )
  ;;@ visual.c:239:0
  (i32.store offset=8
   (local.get $3)
   (i32.load
    (i32.const 32940)
   )
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32880)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32888)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32896)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32904)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32912)
   )
  )
  (i32.store offset=40
   (local.get $0)
   (i32.load
    (i32.const 32920)
   )
  )
  (call $_GetWorldToScreen
   (local.get $19)
   (local.get $3)
   (local.get $0)
  )
  (local.set $8
   (i32.trunc_f32_s
    (f32.load
     (local.get $19)
    )
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 32932)
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.load
    (i32.const 32940)
   )
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32880)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32888)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32896)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32904)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 32912)
   )
  )
  (i32.store offset=40
   (local.get $0)
   (i32.load
    (i32.const 32920)
   )
  )
  (call $_GetWorldToScreen
   (local.get $20)
   (local.get $3)
   (local.get $0)
  )
  (local.set $2
   (i32.trunc_f32_s
    (f32.load offset=4
     (local.get $20)
    )
   )
  )
  (i32.store align=1
   (local.get $0)
   (i32.load offset=208 align=1
    (local.get $1)
   )
  )
  (call $_DrawText
   (i32.const 14515)
   (local.get $8)
   (local.get $2)
   (i32.const 25)
   (local.get $0)
  )
  ;;@ visual.c:242:0
  (call $_GetColor
   (local.get $21)
   (i32.load
    (i32.const 33004)
   )
  )
  (i64.store align=4
   (local.get $7)
   (i64.load align=4
    (i32.const 14184)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $1)
   )
  )
  (i32.store align=1
   (local.get $0)
   (i32.load align=1
    (local.get $21)
   )
  )
  (call $_DrawRectangleV
   (local.get $7)
   (local.get $3)
   (local.get $0)
  )
  ;;@ visual.c:243:0
  (i32.store align=1
   (local.get $0)
   (i32.load align=1
    (i32.const 14500)
   )
  )
  (call $_DrawText
   (i32.const 26064)
   (i32.const 10)
   (i32.const 10)
   (i32.const 20)
   (local.get $0)
  )
  ;;@ visual.c:246:0
  (call $_GetColor
   (local.get $22)
   (i32.const -858993613)
  )
  (i64.store align=4
   (local.get $7)
   (i64.load offset=32 align=4
    (local.get $1)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $1)
   )
  )
  (i32.store align=1
   (local.get $0)
   (i32.load align=1
    (local.get $22)
   )
  )
  (call $_DrawRectangleV
   (local.get $7)
   (local.get $3)
   (local.get $0)
  )
  ;;@ visual.c:247:0
  (local.set $8
   (i32.trunc_f32_s
    (f32.add
     (f32.load offset=32
      (local.get $1)
     )
     (f32.const 5)
    )
   )
  )
  (local.set $2
   (i32.trunc_f32_s
    (f32.add
     (f32.load offset=36
      (local.get $1)
     )
     (f32.const 5)
    )
   )
  )
  (i32.store align=1
   (local.get $0)
   (i32.load align=1
    (i32.const 14500)
   )
  )
  (call $_DrawText
   (i32.const 26576)
   (local.get $8)
   (local.get $2)
   (i32.const 20)
   (local.get $0)
  )
  ;;@ visual.c:250:0
  (call $_GetColor
   (local.get $23)
   (i32.const -858993613)
  )
  (i64.store align=4
   (local.get $7)
   (i64.load offset=16 align=4
    (local.get $1)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (i32.const 14176)
   )
  )
  (i32.store align=1
   (local.get $0)
   (i32.load align=1
    (local.get $23)
   )
  )
  (call $_DrawRectangleV
   (local.get $7)
   (local.get $3)
   (local.get $0)
  )
  ;;@ visual.c:251:0
  (local.set $8
   (i32.trunc_f32_s
    (f32.add
     (f32.load offset=16
      (local.get $1)
     )
     (f32.const 5)
    )
   )
  )
  (local.set $3
   (i32.trunc_f32_s
    (f32.add
     (f32.load offset=20
      (local.get $1)
     )
     (f32.const 5)
    )
   )
  )
  (i32.store align=1
   (local.get $0)
   (i32.load align=1
    (i32.const 14500)
   )
  )
  (call $_DrawText
   (i32.const 26752)
   (local.get $8)
   (local.get $3)
   (i32.const 20)
   (local.get $0)
  )
  ;;@ visual.c:254:0
  (call $_EndDrawing)
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $_UpdateCameraPos (; 310 ;) (; has Stack IR ;)
  (local $0 f32)
  (local $1 f32)
  (local $2 f32)
  (local $3 f32)
  (block $__rjto$1
   ;;@ visual.c:263:0
   (f32.store
    (i32.const 14168)
    (block $__rjti$1 (result f32)
     (block $__rjti$0
      (br_if $__rjti$0
       (call $_GetKeyStatus
        (i32.const 87)
       )
      )
      (br_if $__rjti$0
       (call $_GetKeyStatus
        (i32.const 328)
       )
      )
      (block $do-once
       (if
        ;;@ visual.c:269:0
        (i32.eqz
         (call $_GetKeyStatus
          (i32.const 83)
         )
        )
        (br_if $do-once
         (i32.eqz
          (call $_GetKeyStatus
           (i32.const 325)
          )
         )
        )
       )
       (drop
        ;;@ visual.c:271:0
        (br_if $__rjti$1
         (f32.add
          ;;@ visual.c:270:0
          (local.tee $0
           (f32.load
            (i32.const 14168)
           )
          )
          (f32.const -0.05000000074505806)
         )
         (i32.load
          (i32.const 14192)
         )
        )
       )
       ;;@ visual.c:273:0
       (br $__rjti$1
        (f32.add
         (local.get $0)
         (f32.const 0.05000000074505806)
        )
       )
      )
      (br $__rjto$1)
     )
     (select
      ;;@ visual.c:265:0
      (f32.add
       ;;@ visual.c:264:0
       (local.tee $0
        (f32.load
         (i32.const 14168)
        )
       )
       (f32.const 0.05000000074505806)
      )
      ;;@ visual.c:267:0
      (f32.add
       (local.get $0)
       (f32.const -0.05000000074505806)
      )
      (i32.load
       (i32.const 14192)
      )
     )
    )
   )
  )
  (block $__rjto$2
   (block $__rjti$2
    (if
     ;;@ visual.c:275:0
     (call $_GetKeyStatus
      (i32.const 65)
     )
     (block
      (local.set $0
       (f32.const 0.05000000074505806)
      )
      (br $__rjti$2)
     )
     (if
      (call $_GetKeyStatus
       (i32.const 324)
      )
      (block
       (local.set $0
        (f32.const 0.05000000074505806)
       )
       (br $__rjti$2)
      )
      (if
       ;;@ visual.c:276:0
       (call $_GetKeyStatus
        (i32.const 68)
       )
       (block
        (local.set $0
         (f32.const -0.05000000074505806)
        )
        (br $__rjti$2)
       )
       (if
        (call $_GetKeyStatus
         (i32.const 326)
        )
        (block
         (local.set $0
          (f32.const -0.05000000074505806)
         )
         (br $__rjti$2)
        )
       )
      )
     )
    )
    (br $__rjto$2)
   )
   (f32.store
    (i32.const 14172)
    (f32.add
     (f32.load
      (i32.const 14172)
     )
     (local.get $0)
    )
   )
  )
  (if
   ;;@ visual.c:278:0
   (f32.lt
    (local.tee $0
     (f32.load
      (i32.const 14168)
     )
    )
    (f32.const 0)
   )
   (block
    ;;@ visual.c:279:0
    (f32.store
     (i32.const 14168)
     (f32.neg
      (local.get $0)
     )
    )
    ;;@ visual.c:280:0
    (i32.store
     (i32.const 14192)
     (i32.eqz
      (i32.load
       (i32.const 14192)
      )
     )
    )
    ;;@ visual.c:281:0
    (f32.store
     (i32.const 32912)
     (f32.neg
      (f32.load
       (i32.const 32912)
      )
     )
    )
    ;;@ visual.c:282:0
    (f32.store
     (i32.const 14172)
     (local.tee $0
      (f32.add
       (f32.load
        (i32.const 14172)
       )
       (f32.const 3.141592025756836)
      )
     )
    )
   )
   (if
    ;;@ visual.c:284:0
    (f32.gt
     (local.get $0)
     (f32.const 3.141592025756836)
    )
    (block
     ;;@ visual.c:285:0
     (f32.store
      (i32.const 14168)
      (f32.sub
       (f32.const 6.283184051513672)
       (local.get $0)
      )
     )
     ;;@ visual.c:286:0
     (i32.store
      (i32.const 14192)
      (i32.eqz
       (i32.load
        (i32.const 14192)
       )
      )
     )
     ;;@ visual.c:287:0
     (f32.store
      (i32.const 32912)
      (f32.neg
       (f32.load
        (i32.const 32912)
       )
      )
     )
     ;;@ visual.c:288:0
     (f32.store
      (i32.const 14172)
      (local.tee $0
       (f32.add
        (f32.load
         (i32.const 14172)
        )
        (f32.const 3.141592025756836)
       )
      )
     )
    )
    ;;@ visual.c:290:0
    (local.set $0
     (f32.load
      (i32.const 14172)
     )
    )
   )
  )
  (block $__rjto$3
   (block $__rjti$3
    (if
     (f32.lt
      (local.get $0)
      (f32.const 0)
     )
     (block
      (local.set $1
       (f32.const 6.283184051513672)
      )
      (br $__rjti$3)
     )
     (if
      ;;@ visual.c:291:0
      (f32.ge
       (local.get $0)
       (f32.const 6.283184051513672)
      )
      (block
       (local.set $1
        (f32.const -6.283184051513672)
       )
       (br $__rjti$3)
      )
     )
    )
    (br $__rjto$3)
   )
   (f32.store
    (i32.const 14172)
    (f32.add
     (local.get $0)
     (local.get $1)
    )
   )
  )
  ;;@ visual.c:294:0
  (local.set $0
   (f32.mul
    (f32.convert_i32_s
     (call $_GetMouseWheelMove)
    )
    (f32.const 10)
   )
  )
  (f32.store
   (i32.const 14164)
   (f32.sub
    (f32.load
     (i32.const 14164)
    )
    (local.get $0)
   )
  )
  (block $__rjto$4
   (block $__rjti$4
    ;;@ visual.c:295:0
    (br_if $__rjti$4
     (call $_IsKeyPressed
      (i32.const 327)
     )
    )
    (br_if $__rjti$4
     (call $_IsKeyPressed
      (i32.const 81)
     )
    )
    (block $do-once4
     (if
      ;;@ visual.c:296:0
      (i32.eqz
       (call $_IsKeyPressed
        (i32.const 329)
       )
      )
      (if
       (i32.eqz
        (call $_IsKeyPressed
         (i32.const 69)
        )
       )
       (block
        ;;@ visual.c:298:0
        (local.set $0
         (f32.load
          (i32.const 14164)
         )
        )
        (br $do-once4)
       )
      )
     )
     ;;@ visual.c:296:0
     (f32.store
      (i32.const 14164)
      (local.tee $0
       (f32.add
        (f32.load
         (i32.const 14164)
        )
        (f32.const -10)
       )
      )
     )
    )
    (br $__rjto$4)
   )
   ;;@ visual.c:295:0
   (f32.store
    (i32.const 14164)
    (local.tee $0
     (f32.add
      (f32.load
       (i32.const 14164)
      )
      (f32.const 10)
     )
    )
   )
  )
  (block $__rjto$5
   (block $__rjti$5
    (if
     ;;@ visual.c:298:0
     (f32.le
      (local.get $0)
      (f32.const 0)
     )
     (block
      (local.set $0
       (f32.const 10)
      )
      (br $__rjti$5)
     )
     (if
      ;;@ visual.c:299:0
      (f32.gt
       (local.get $0)
       (f32.const 180)
      )
      (block
       (local.set $0
        (f32.const 180)
       )
       (br $__rjti$5)
      )
     )
    )
    (br $__rjto$5)
   )
   (f32.store
    (i32.const 14164)
    (local.get $0)
   )
  )
  ;;@ visual.c:302:0
  (f32.store
   (i32.const 32880)
   (f32.mul
    (local.tee $2
     (f32.mul
      (local.get $0)
      (call $_sinf
       (local.tee $1
        (f32.load
         (i32.const 14168)
        )
       )
      )
     )
    )
    (call $_cosf
     (local.tee $3
      (f32.load
       (i32.const 14172)
      )
     )
    )
   )
  )
  (f32.store
   (i32.const 32884)
   (f32.mul
    (local.get $2)
    (call $_sinf
     (local.get $3)
    )
   )
  )
  (f32.store
   (i32.const 32888)
   (f32.mul
    (local.get $0)
    (call $_cosf
     (local.get $1)
    )
   )
  )
  ;;@ visual.c:303:0
  (call $_UpdateCamera)
 )
 (func $_CheckMouseCollision (; 311 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (local $14 i32)
  (local $15 f32)
  (local $16 f32)
  (local $17 f32)
  (local $18 f32)
  (local $19 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 128)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 128)
   )
  )
  (local.set $5
   (i32.add
    (local.get $11)
    (i32.const 80)
   )
  )
  (local.set $12
   (i32.add
    (local.get $11)
    (i32.const 56)
   )
  )
  (local.set $3
   (i32.add
    (local.get $11)
    (i32.const 48)
   )
  )
  (local.set $0
   (i32.add
    (local.get $11)
    (i32.const 24)
   )
  )
  (i64.store align=4
   (local.tee $7
    (local.get $11)
   )
   (i64.const 0)
  )
  (i64.store offset=8 align=4
   (local.get $7)
   (i64.const 0)
  )
  ;;@ visual.c:307:0
  (i64.store offset=16 align=4
   (local.get $7)
   (i64.const 0)
  )
  (block $__rjto$2
   (block $__rjti$2
    (block $__rjti$1
     (if
      ;;@ visual.c:314:0
      (call $_IsMouseButtonPressed)
      (block
       ;;@ visual.c:315:0
       (local.set $8
        (i32.load
         (i32.const 32968)
        )
       )
       (br_if $__rjti$2
        (local.get $8)
       )
       ;;@ visual.c:316:0
       (call $_GetMousePosition
        (local.get $3)
       )
       (i64.store align=4
        (local.get $12)
        (i64.load align=4
         (local.get $3)
        )
       )
       (i64.store align=4
        (local.get $5)
        (i64.load align=4
         (i32.const 32880)
        )
       )
       (i64.store offset=8 align=4
        (local.get $5)
        (i64.load align=4
         (i32.const 32888)
        )
       )
       (i64.store offset=16 align=4
        (local.get $5)
        (i64.load align=4
         (i32.const 32896)
        )
       )
       (i64.store offset=24 align=4
        (local.get $5)
        (i64.load align=4
         (i32.const 32904)
        )
       )
       (i64.store offset=32 align=4
        (local.get $5)
        (i64.load align=4
         (i32.const 32912)
        )
       )
       (i32.store offset=40
        (local.get $5)
        (i32.load
         (i32.const 32920)
        )
       )
       (call $_GetMouseRay
        (local.get $0)
        (local.get $12)
        (local.get $5)
       )
       (i64.store align=4
        (local.get $7)
        (i64.load align=4
         (local.get $0)
        )
       )
       (i64.store offset=8 align=4
        (local.get $7)
        (i64.load offset=8 align=4
         (local.get $0)
        )
       )
       (i64.store offset=16 align=4
        (local.get $7)
        (i64.load offset=16 align=4
         (local.get $0)
        )
       )
       ;;@ visual.c:318:0
       (local.set $0
        (i32.load
         (i32.const 14196)
        )
       )
       (if
        (i32.gt_s
         (local.get $0)
         (i32.const 0)
        )
        (block
         (local.set $8
          (i32.const 0)
         )
         (loop $while-in
          (if
           ;;@ visual.c:319:0
           (i32.gt_s
            (local.get $0)
            (i32.const 0)
           )
           (block
            (local.set $9
             (i32.const 0)
            )
            (loop $while-in1
             (if
              ;;@ visual.c:320:0
              (i32.gt_s
               (local.get $0)
               (i32.const 0)
              )
              (block
               (local.set $14
                (i32.add
                 (i32.mul
                  (local.get $9)
                  (i32.const 10)
                 )
                 (local.get $8)
                )
               )
               (local.set $3
                (i32.const 0)
               )
               (local.set $0
                (loop $while-in3 (result i32)
                 ;;@ visual.c:325:0
                 (local.set $0
                  (i32.load
                   (i32.const 32976)
                  )
                 )
                 (local.set $0
                  (i32.add
                   (i32.shl
                    (local.get $8)
                    (i32.const 2)
                   )
                   (local.get $0)
                  )
                 )
                 (local.set $0
                  (i32.load
                   (local.get $0)
                  )
                 )
                 (local.set $0
                  (i32.add
                   (i32.shl
                    (local.get $9)
                    (i32.const 2)
                   )
                   (local.get $0)
                  )
                 )
                 (local.set $0
                  (i32.load
                   (local.get $0)
                  )
                 )
                 (local.set $0
                  (i32.add
                   (i32.mul
                    (local.get $3)
                    (i32.const 24)
                   )
                   (local.get $0)
                  )
                 )
                 (i64.store align=4
                  (local.get $12)
                  (i64.load align=4
                   (local.get $7)
                  )
                 )
                 (i64.store offset=8 align=4
                  (local.get $12)
                  (i64.load offset=8 align=4
                   (local.get $7)
                  )
                 )
                 (i64.store offset=16 align=4
                  (local.get $12)
                  (i64.load offset=16 align=4
                   (local.get $7)
                  )
                 )
                 (i64.store align=4
                  (local.get $5)
                  (i64.load align=4
                   (local.get $0)
                  )
                 )
                 (i64.store offset=8 align=4
                  (local.get $5)
                  (i64.load offset=8 align=4
                   (local.get $0)
                  )
                 )
                 (i64.store offset=16 align=4
                  (local.get $5)
                  (i64.load offset=16 align=4
                   (local.get $0)
                  )
                 )
                 (local.set $0
                  (call $_CheckCollisionRayBox
                   (local.get $12)
                   (local.get $5)
                  )
                 )
                 (local.set $2
                  (i32.load
                   (i32.const 32968)
                  )
                 )
                 (if
                  (local.get $0)
                  (block $do-once
                   ;;@ visual.c:328:0
                   (local.set $0
                    (i32.add
                     (local.get $2)
                     (i32.const 1)
                    )
                   )
                   (i32.store
                    (i32.const 32968)
                    (local.get $0)
                   )
                   ;;@ visual.c:331:0
                   (local.set $4
                    (f32.load
                     (i32.add
                      (local.tee $10
                       (i32.load
                        (i32.add
                         (i32.load
                          (i32.add
                           (i32.load
                            (i32.const 32928)
                           )
                           (i32.shl
                            (local.get $8)
                            (i32.const 2)
                           )
                          )
                         )
                         (i32.shl
                          (local.get $9)
                          (i32.const 2)
                         )
                        )
                       )
                      )
                      (i32.mul
                       (local.get $3)
                       (i32.const 12)
                      )
                     )
                    )
                   )
                   (local.set $13
                    (f32.load
                     (i32.const 32880)
                    )
                   )
                   (if
                    (local.get $2)
                    (block
                     (local.set $4
                      (f32.sub
                       (local.get $4)
                       (local.get $13)
                      )
                     )
                     (local.set $1
                      (f64.promote_f32
                       (local.get $4)
                      )
                     )
                     (local.set $6
                      (f64.mul
                       (local.get $1)
                       (local.get $1)
                      )
                     )
                     (local.set $2
                      (i32.add
                       (i32.mul
                        (local.get $3)
                        (i32.const 12)
                       )
                       (local.get $10)
                      )
                     )
                     (local.set $4
                      (f32.load offset=4
                       (local.get $2)
                      )
                     )
                     (local.set $13
                      (f32.load
                       (i32.const 32884)
                      )
                     )
                     (local.set $4
                      (f32.sub
                       (local.get $4)
                       (local.get $13)
                      )
                     )
                     (local.set $1
                      (f64.promote_f32
                       (local.get $4)
                      )
                     )
                     (local.set $1
                      (f64.mul
                       (local.get $1)
                       (local.get $1)
                      )
                     )
                     (local.set $6
                      (f64.add
                       (local.get $6)
                       (local.get $1)
                      )
                     )
                     (local.set $2
                      (i32.add
                       (i32.mul
                        (local.get $3)
                        (i32.const 12)
                       )
                       (local.get $10)
                      )
                     )
                     (local.set $4
                      (f32.load offset=8
                       (local.get $2)
                      )
                     )
                     (local.set $13
                      (f32.load
                       (i32.const 32888)
                      )
                     )
                     (local.set $4
                      (f32.sub
                       (local.get $4)
                       (local.get $13)
                      )
                     )
                     (local.set $1
                      (f64.promote_f32
                       (local.get $4)
                      )
                     )
                     (local.set $1
                      (f64.mul
                       (local.get $1)
                       (local.get $1)
                      )
                     )
                     (local.set $1
                      (f64.add
                       (local.get $6)
                       (local.get $1)
                      )
                     )
                     (local.set $6
                      (f64.load
                       (i32.const 32784)
                      )
                     )
                     (br_if $do-once
                      (i32.eqz
                       (f64.lt
                        (local.get $1)
                        (local.get $6)
                       )
                      )
                     )
                    )
                    (block
                     (local.set $2
                      (i32.add
                       (i32.mul
                        (local.get $3)
                        (i32.const 12)
                       )
                       (local.get $10)
                      )
                     )
                     ;;@ visual.c:333:0
                     (local.set $15
                      (f32.load offset=4
                       (local.get $2)
                      )
                     )
                     (local.set $16
                      (f32.load
                       (i32.const 32884)
                      )
                     )
                     (local.set $2
                      (i32.add
                       (i32.mul
                        (local.get $3)
                        (i32.const 12)
                       )
                       (local.get $10)
                      )
                     )
                     (local.set $17
                      (f32.load offset=8
                       (local.get $2)
                      )
                     )
                     (local.set $18
                      (f32.load
                       (i32.const 32888)
                      )
                     )
                     (local.set $4
                      (f32.sub
                       (local.get $4)
                       (local.get $13)
                      )
                     )
                     (local.set $1
                      (f64.promote_f32
                       (local.get $4)
                      )
                     )
                     (local.set $6
                      (f64.mul
                       (local.get $1)
                       (local.get $1)
                      )
                     )
                     (local.set $4
                      (f32.sub
                       (local.get $15)
                       (local.get $16)
                      )
                     )
                     (local.set $1
                      (f64.promote_f32
                       (local.get $4)
                      )
                     )
                     (local.set $1
                      (f64.mul
                       (local.get $1)
                       (local.get $1)
                      )
                     )
                     (local.set $6
                      (f64.add
                       (local.get $6)
                       (local.get $1)
                      )
                     )
                     (local.set $4
                      (f32.sub
                       (local.get $17)
                       (local.get $18)
                      )
                     )
                     (local.set $1
                      (f64.promote_f32
                       (local.get $4)
                      )
                     )
                     (local.set $1
                      (f64.mul
                       (local.get $1)
                       (local.get $1)
                      )
                     )
                     (local.set $1
                      (f64.add
                       (local.get $6)
                       (local.get $1)
                      )
                     )
                    )
                   )
                   ;;@ visual.c:332:0
                   (local.set $2
                    (i32.mul
                     (local.get $3)
                     (i32.const 100)
                    )
                   )
                   (local.set $2
                    (i32.add
                     (local.get $2)
                     (local.get $14)
                    )
                   )
                   (i32.store
                    (i32.const 32972)
                    (local.get $2)
                   )
                   ;;@ visual.c:333:0
                   (f64.store
                    (i32.const 32784)
                    (local.get $1)
                   )
                  )
                  (local.set $0
                   (local.get $2)
                  )
                 )
                 ;;@ visual.c:336:0
                 (local.set $2
                  (i32.load
                   (i32.const 14196)
                  )
                 )
                 (local.set $10
                  (i32.lt_s
                   (local.get $0)
                   (local.get $2)
                  )
                 )
                 ;;@ visual.c:320:0
                 (local.set $3
                  (i32.add
                   (local.get $3)
                   (i32.const 1)
                  )
                 )
                 (local.set $19
                  (i32.lt_s
                   (local.get $3)
                   (local.get $2)
                  )
                 )
                 ;;@ visual.c:336:0
                 (br_if $while-in3
                  (i32.and
                   (local.get $10)
                   (local.get $19)
                  )
                 )
                 (local.set $3
                  (local.get $0)
                 )
                 (local.get $2)
                )
               )
              )
              ;;@ visual.c:338:0
              (local.set $3
               (i32.load
                (i32.const 32968)
               )
              )
             )
             (local.set $2
              (i32.lt_s
               (local.get $3)
               (local.get $0)
              )
             )
             ;;@ visual.c:319:0
             (local.set $9
              (i32.add
               (local.get $9)
               (i32.const 1)
              )
             )
             (local.set $10
              (i32.lt_s
               (local.get $9)
               (local.get $0)
              )
             )
             ;;@ visual.c:338:0
             (br_if $while-in1
              (i32.and
               (local.get $2)
               (local.get $10)
              )
             )
            )
           )
           ;;@ visual.c:340:0
           (local.set $3
            (i32.load
             (i32.const 32968)
            )
           )
          )
          (local.set $9
           (i32.lt_s
            (local.get $3)
            (local.get $0)
           )
          )
          ;;@ visual.c:318:0
          (br_if $__rjti$1
           (i32.eqz
            (local.get $9)
           )
          )
          (local.set $8
           (i32.add
            (local.get $8)
            (i32.const 1)
           )
          )
          (br_if $while-in
           (i32.lt_s
            (local.get $8)
            (local.get $0)
           )
          )
         )
        )
       )
      )
     )
     ;;@ visual.c:346:0
     (local.set $3
      (i32.load
       (i32.const 32968)
      )
     )
    )
    (if
     (local.get $3)
     (block
      ;;@ visual.c:347:0
      (local.set $0
       (i32.load
        (i32.const 32972)
       )
      )
      (call $_PieceClicked
       (local.get $0)
      )
      (br $__rjti$2)
     )
    )
    (br $__rjto$2)
   )
   (f64.store
    (i32.const 32784)
    (f64.const 0)
   )
   (i32.store
    (i32.const 32972)
    (i32.const 0)
   )
   (i32.store
    (i32.const 32968)
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $11)
  )
 )
 (func $_UpdateScriptBoxes (; 312 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 f32)
  (local $3 f32)
  (local $4 f32)
  (loop $while-in
   (block $while-out
    ;;@ visual.c:357:0
    (local.set $1
     (i32.add
      (local.get $0)
      (i32.const 48)
     )
    )
    (br_if $while-out
     (call $_IsKeyPressed
      (local.get $1)
     )
    )
    ;;@ visual.c:356:0
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 1)
     )
    )
    (br_if $while-in
     (i32.lt_u
      (local.get $0)
      (i32.const 10)
     )
    )
    (local.set $0
     (i32.const 10)
    )
   )
  )
  ;;@ visual.c:358:0
  (call $_UpdateMenuBox
   (local.get $0)
  )
  ;;@ visual.c:364:0
  (local.set $2
   (f32.load
    (i32.const 14164)
   )
  )
  (local.set $3
   (f32.load
    (i32.const 14168)
   )
  )
  (local.set $4
   (f32.load
    (i32.const 14172)
   )
  )
  (call $_UpdateInfoBox
   (local.get $2)
   (local.get $3)
   (local.get $4)
  )
  ;;@ visual.c:367:0
  (call $_UpdateNotiBox
   (i32.const 0)
  )
 )
 (func $_AllocPiecepos (; 313 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  ;;@ visual.c:372:0
  (local.set $0
   (i32.load
    (i32.const 32924)
   )
  )
  (local.set $2
   (i32.load
    (i32.const 14196)
   )
  )
  (if
   (i32.ne
    (local.get $0)
    (local.get $2)
   )
   (block $do-once
    (if
     ;;@ visual.c:379:0
     (i32.gt_s
      (local.get $0)
      (i32.const 0)
     )
     (loop $while-in
      ;;@ visual.c:380:0
      (local.set $2
       (i32.load
        (i32.add
         (i32.load
          (i32.const 32928)
         )
         (i32.shl
          (local.get $3)
          (i32.const 2)
         )
        )
       )
      )
      (if
       (i32.gt_s
        (local.get $0)
        (i32.const 0)
       )
       (block
        (local.set $0
         (local.get $2)
        )
        (local.set $2
         (i32.const 0)
        )
        (loop $while-in1
         ;;@ visual.c:381:0
         (local.set $0
          (i32.add
           (i32.shl
            (local.get $2)
            (i32.const 2)
           )
           (local.get $0)
          )
         )
         (local.set $0
          (i32.load
           (local.get $0)
          )
         )
         (call $_free
          (local.get $0)
         )
         ;;@ visual.c:380:0
         (local.set $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (local.set $1
          (i32.load
           (i32.const 32924)
          )
         )
         (local.set $0
          (i32.load
           (i32.add
            (i32.load
             (i32.const 32928)
            )
            (i32.shl
             (local.get $3)
             (i32.const 2)
            )
           )
          )
         )
         (br_if $while-in1
          (i32.lt_s
           (local.get $2)
           (local.get $1)
          )
         )
        )
       )
       (local.set $0
        (local.get $2)
       )
      )
      ;;@ visual.c:383:0
      (call $_free
       (local.get $0)
      )
      ;;@ visual.c:379:0
      (local.set $3
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (local.set $0
       (i32.load
        (i32.const 32924)
       )
      )
      (br_if $while-in
       (i32.lt_s
        (local.get $3)
        (local.get $0)
       )
      )
     )
    )
    ;;@ visual.c:386:0
    (local.set $0
     (i32.load
      (i32.const 32928)
     )
    )
    (call $_free
     (local.get $0)
    )
    ;;@ visual.c:389:0
    (local.set $1
     (i32.load
      (i32.const 14196)
     )
    )
    (local.set $9
     (call $_calloc
      (local.get $1)
      (i32.const 4)
     )
    )
    (i32.store
     (i32.const 32928)
     (local.get $9)
    )
    (if
     ;;@ visual.c:390:0
     (i32.eqz
      (local.get $9)
     )
     (call $_exit
      (i32.const 1)
     )
    )
    (block $__rjto$6
     (block $__rjti$6
      ;;@ visual.c:392:0
      (br_if $__rjti$6
       (i32.eqz
        (local.tee $10
         (i32.gt_s
          (local.get $1)
          (i32.const 0)
         )
        )
       )
      )
      (local.set $3
       (i32.const 0)
      )
      (block $__rjto$2
       (block $__rjti$2
        (block $__rjti$1
         (loop $label$continue$L18
          (block $__rjti$0
           ;;@ visual.c:393:0
           (local.set $0
            (call $_calloc
             (local.get $1)
             (i32.const 4)
            )
           )
           (local.set $6
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 2)
             )
             (local.get $9)
            )
           )
           (i32.store
            (local.get $6)
            (local.get $0)
           )
           ;;@ visual.c:394:0
           (br_if $__rjti$0
            (i32.eqz
             (local.get $0)
            )
           )
           (local.set $2
            (i32.const 0)
           )
           (loop $while-in5
            ;;@ visual.c:397:0
            (local.set $4
             (call $_calloc
              (local.get $1)
              (i32.const 12)
             )
            )
            (local.set $0
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (local.get $0)
             )
            )
            (i32.store
             (local.get $0)
             (local.get $4)
            )
            ;;@ visual.c:398:0
            (local.set $0
             (i32.load
              (local.get $6)
             )
            )
            (local.set $4
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (local.get $0)
             )
            )
            (local.set $4
             (i32.load
              (local.get $4)
             )
            )
            (local.set $4
             (i32.eqz
              (local.get $4)
             )
            )
            ;;@ visual.c:396:0
            (br_if $__rjti$1
             (local.get $4)
            )
            (local.set $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (br_if $while-in5
             (i32.lt_s
              (local.get $2)
              (local.get $1)
             )
            )
           )
           ;;@ visual.c:392:0
           (local.set $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
           (br_if $label$continue$L18
            (i32.lt_s
             (local.get $3)
             (local.get $1)
            )
           )
           (br $__rjti$2)
          )
         )
         ;;@ visual.c:394:0
         (call $_exit
          (i32.const 1)
         )
         (br $__rjto$2)
        )
        ;;@ visual.c:398:0
        (call $_exit
         (i32.const 1)
        )
        (br $__rjto$2)
       )
       (br_if $__rjti$6
        (i32.eqz
         (local.get $10)
        )
       )
       (local.set $5
        (f32.div
         (f32.const 30)
         (f32.convert_i32_s
          (i32.add
           (local.get $1)
           (i32.const -1)
          )
         )
        )
       )
       (local.set $2
        (i32.const 0)
       )
       (loop $while-in7
        (local.set $11
         (f32.add
          (f32.mul
           (local.get $5)
           (f32.convert_i32_s
            (local.get $2)
           )
          )
          (f32.const -15)
         )
        )
        (local.set $10
         (i32.load
          (i32.add
           (i32.shl
            (local.get $2)
            (i32.const 2)
           )
           (local.get $9)
          )
         )
        )
        (local.set $3
         (i32.const 0)
        )
        (loop $while-in9
         (local.set $6
          (i32.load
           (i32.add
            (i32.shl
             (local.get $3)
             (i32.const 2)
            )
            (local.get $10)
           )
          )
         )
         (local.set $12
          (f32.add
           (f32.mul
            (local.get $5)
            (f32.convert_i32_s
             (local.get $3)
            )
           )
           (f32.const -15)
          )
         )
         (local.set $0
          (i32.const 0)
         )
         (loop $while-in11
          ;;@ visual.c:406:0
          (local.set $8
           (f32.convert_i32_s
            (local.get $0)
           )
          )
          (local.set $8
           (f32.mul
            (local.get $5)
            (local.get $8)
           )
          )
          (local.set $8
           (f32.add
            (local.get $8)
            (f32.const -15)
           )
          )
          (local.set $4
           (i32.add
            (i32.mul
             (local.get $0)
             (i32.const 12)
            )
            (local.get $6)
           )
          )
          (f32.store
           (local.get $4)
           (local.get $8)
          )
          ;;@ visual.c:407:0
          (local.set $4
           (i32.add
            (i32.mul
             (local.get $0)
             (i32.const 12)
            )
            (local.get $6)
           )
          )
          (f32.store offset=4
           (local.get $4)
           (local.get $12)
          )
          ;;@ visual.c:408:0
          (local.set $4
           (i32.add
            (i32.mul
             (local.get $0)
             (i32.const 12)
            )
            (local.get $6)
           )
          )
          (f32.store offset=8
           (local.get $4)
           (local.get $11)
          )
          ;;@ visual.c:405:0
          (local.set $0
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
          (br_if $while-in11
           (i32.ne
            (local.get $0)
            (local.get $1)
           )
          )
         )
         ;;@ visual.c:404:0
         (local.set $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (br_if $while-in9
          (i32.ne
           (local.get $1)
           (local.get $3)
          )
         )
        )
        ;;@ visual.c:403:0
        (local.set $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (br_if $while-in7
         (i32.ne
          (local.get $1)
          (local.get $2)
         )
        )
       )
      )
      (br $__rjto$6)
     )
     ;;@ visual.c:412:0
     (local.set $0
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
     )
     (local.set $5
      (f32.convert_i32_s
       (local.get $0)
      )
     )
     (local.set $5
      (f32.div
       (f32.const 30)
       (local.get $5)
      )
     )
    )
    (local.set $5
     (f32.div
      (local.get $5)
      (f32.const 5)
     )
    )
    (local.set $5
     (f32.mul
      (local.get $5)
      (f32.const 1.25)
     )
    )
    (local.set $5
     (f32.mul
      (local.get $5)
      (f32.const 0.5)
     )
    )
    ;;@ visual.c:416:0
    (local.set $0
     (i32.load
      (i32.const 32924)
     )
    )
    (if
     (i32.gt_s
      (local.get $0)
      (i32.const 0)
     )
     (block
      (local.set $3
       (i32.const 0)
      )
      (loop $while-in13
       ;;@ visual.c:417:0
       (local.set $2
        (i32.load
         (i32.add
          (i32.load
           (i32.const 32976)
          )
          (i32.shl
           (local.get $3)
           (i32.const 2)
          )
         )
        )
       )
       (if
        (i32.gt_s
         (local.get $0)
         (i32.const 0)
        )
        (block
         (local.set $0
          (local.get $2)
         )
         (local.set $2
          (i32.const 0)
         )
         (loop $while-in15
          ;;@ visual.c:418:0
          (local.set $0
           (i32.add
            (i32.shl
             (local.get $2)
             (i32.const 2)
            )
            (local.get $0)
           )
          )
          (local.set $0
           (i32.load
            (local.get $0)
           )
          )
          (call $_free
           (local.get $0)
          )
          ;;@ visual.c:417:0
          (local.set $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (local.set $1
           (i32.load
            (i32.const 32924)
           )
          )
          (local.set $0
           (i32.load
            (i32.add
             (i32.load
              (i32.const 32976)
             )
             (i32.shl
              (local.get $3)
              (i32.const 2)
             )
            )
           )
          )
          (br_if $while-in15
           (i32.lt_s
            (local.get $2)
            (local.get $1)
           )
          )
         )
        )
        (local.set $0
         (local.get $2)
        )
       )
       ;;@ visual.c:420:0
       (call $_free
        (local.get $0)
       )
       ;;@ visual.c:416:0
       (local.set $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.set $0
        (i32.load
         (i32.const 32924)
        )
       )
       (br_if $while-in13
        (i32.lt_s
         (local.get $3)
         (local.get $0)
        )
       )
      )
     )
    )
    ;;@ visual.c:423:0
    (local.set $0
     (i32.load
      (i32.const 32976)
     )
    )
    (call $_free
     (local.get $0)
    )
    ;;@ visual.c:426:0
    (local.set $1
     (i32.load
      (i32.const 14196)
     )
    )
    (local.set $9
     (call $_calloc
      (local.get $1)
      (i32.const 4)
     )
    )
    (i32.store
     (i32.const 32976)
     (local.get $9)
    )
    (if
     ;;@ visual.c:427:0
     (i32.eqz
      (local.get $9)
     )
     (call $_exit
      (i32.const 1)
     )
    )
    (if
     ;;@ visual.c:429:0
     (local.tee $10
      (i32.gt_s
       (local.get $1)
       (i32.const 0)
      )
     )
     (block
      (local.set $3
       (i32.const 0)
      )
      (block $__rjto$5
       (block $__rjti$5
        (block $__rjti$4
         (loop $label$continue$L55
          (block $__rjti$3
           ;;@ visual.c:430:0
           (local.set $0
            (call $_calloc
             (local.get $1)
             (i32.const 4)
            )
           )
           (local.set $6
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 2)
             )
             (local.get $9)
            )
           )
           (i32.store
            (local.get $6)
            (local.get $0)
           )
           ;;@ visual.c:431:0
           (br_if $__rjti$3
            (i32.eqz
             (local.get $0)
            )
           )
           (local.set $2
            (i32.const 0)
           )
           (loop $while-in17
            ;;@ visual.c:434:0
            (local.set $4
             (call $_calloc
              (local.get $1)
              (i32.const 24)
             )
            )
            (local.set $0
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (local.get $0)
             )
            )
            (i32.store
             (local.get $0)
             (local.get $4)
            )
            ;;@ visual.c:435:0
            (local.set $0
             (i32.load
              (local.get $6)
             )
            )
            (local.set $4
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (local.get $0)
             )
            )
            (local.set $4
             (i32.load
              (local.get $4)
             )
            )
            (local.set $4
             (i32.eqz
              (local.get $4)
             )
            )
            ;;@ visual.c:433:0
            (br_if $__rjti$4
             (local.get $4)
            )
            (local.set $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (br_if $while-in17
             (i32.lt_s
              (local.get $2)
              (local.get $1)
             )
            )
           )
           ;;@ visual.c:429:0
           (local.set $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
           (br_if $label$continue$L55
            (i32.lt_s
             (local.get $3)
             (local.get $1)
            )
           )
           (br $__rjti$5)
          )
         )
         ;;@ visual.c:431:0
         (call $_exit
          (i32.const 1)
         )
         (br $__rjto$5)
        )
        ;;@ visual.c:435:0
        (call $_exit
         (i32.const 1)
        )
        (br $__rjto$5)
       )
       (br_if $do-once
        (i32.eqz
         (local.get $10)
        )
       )
       (local.set $10
        (i32.load
         (i32.const 32928)
        )
       )
       (local.set $0
        (local.get $1)
       )
       (local.set $3
        (i32.const 0)
       )
       (loop $while-in19
        (if
         ;;@ visual.c:441:0
         (i32.gt_s
          (local.get $0)
          (i32.const 0)
         )
         (block
          (local.set $4
           (i32.add
            (i32.shl
             (local.get $3)
             (i32.const 2)
            )
            (local.get $10)
           )
          )
          (local.set $6
           (i32.add
            (i32.shl
             (local.get $3)
             (i32.const 2)
            )
            (local.get $9)
           )
          )
          (local.set $2
           (i32.const 0)
          )
          (loop $while-in21
           (if
            ;;@ visual.c:442:0
            (i32.gt_s
             (local.get $0)
             (i32.const 0)
            )
            (block
             (local.set $0
              (i32.const 0)
             )
             (local.set $0
              (loop $while-in23 (result i32)
               ;;@ visual.c:443:0
               (local.set $1
                (i32.load
                 (local.get $4)
                )
               )
               (local.set $1
                (i32.add
                 (i32.shl
                  (local.get $2)
                  (i32.const 2)
                 )
                 (local.get $1)
                )
               )
               (local.set $1
                (i32.load
                 (local.get $1)
                )
               )
               (local.set $7
                (i32.add
                 (i32.mul
                  (local.get $0)
                  (i32.const 12)
                 )
                 (local.get $1)
                )
               )
               (local.set $11
                (f32.load
                 (local.get $7)
                )
               )
               (local.set $7
                (i32.add
                 (i32.mul
                  (local.get $0)
                  (i32.const 12)
                 )
                 (local.get $1)
                )
               )
               (local.set $12
                (f32.load offset=4
                 (local.get $7)
                )
               )
               (local.set $1
                (i32.add
                 (i32.mul
                  (local.get $0)
                  (i32.const 12)
                 )
                 (local.get $1)
                )
               )
               (local.set $8
                (f32.load offset=8
                 (local.get $1)
                )
               )
               ;;@ visual.c:444:0
               (local.set $1
                (i32.load
                 (local.get $6)
                )
               )
               (local.set $1
                (i32.add
                 (i32.shl
                  (local.get $2)
                  (i32.const 2)
                 )
                 (local.get $1)
                )
               )
               (local.set $1
                (i32.load
                 (local.get $1)
                )
               )
               (local.set $13
                (f32.sub
                 (local.get $11)
                 (local.get $5)
                )
               )
               (local.set $14
                (f32.sub
                 (local.get $12)
                 (local.get $5)
                )
               )
               (local.set $15
                (f32.sub
                 (local.get $8)
                 (local.get $5)
                )
               )
               (local.set $7
                (i32.add
                 (i32.mul
                  (local.get $0)
                  (i32.const 24)
                 )
                 (local.get $1)
                )
               )
               (f32.store
                (local.get $7)
                (local.get $13)
               )
               (local.set $7
                (i32.add
                 (i32.mul
                  (local.get $0)
                  (i32.const 24)
                 )
                 (local.get $1)
                )
               )
               (f32.store offset=4
                (local.get $7)
                (local.get $14)
               )
               (local.set $1
                (i32.add
                 (i32.mul
                  (local.get $0)
                  (i32.const 24)
                 )
                 (local.get $1)
                )
               )
               (f32.store offset=8
                (local.get $1)
                (local.get $15)
               )
               ;;@ visual.c:445:0
               (local.set $1
                (i32.load
                 (local.get $6)
                )
               )
               (local.set $1
                (i32.add
                 (i32.shl
                  (local.get $2)
                  (i32.const 2)
                 )
                 (local.get $1)
                )
               )
               (local.set $1
                (i32.load
                 (local.get $1)
                )
               )
               (local.set $11
                (f32.add
                 (local.get $5)
                 (local.get $11)
                )
               )
               (local.set $12
                (f32.add
                 (local.get $5)
                 (local.get $12)
                )
               )
               (local.set $8
                (f32.add
                 (local.get $5)
                 (local.get $8)
                )
               )
               (local.set $7
                (i32.add
                 (i32.mul
                  (local.get $0)
                  (i32.const 24)
                 )
                 (local.get $1)
                )
               )
               (f32.store offset=12
                (local.get $7)
                (local.get $11)
               )
               (local.set $7
                (i32.add
                 (i32.mul
                  (local.get $0)
                  (i32.const 24)
                 )
                 (local.get $1)
                )
               )
               (f32.store offset=16
                (local.get $7)
                (local.get $12)
               )
               (local.set $1
                (i32.add
                 (i32.mul
                  (local.get $0)
                  (i32.const 24)
                 )
                 (local.get $1)
                )
               )
               (f32.store offset=20
                (local.get $1)
                (local.get $8)
               )
               ;;@ visual.c:442:0
               (local.set $0
                (i32.add
                 (local.get $0)
                 (i32.const 1)
                )
               )
               (local.set $1
                (i32.load
                 (i32.const 14196)
                )
               )
               (br_if $while-in23
                (i32.lt_s
                 (local.get $0)
                 (local.get $1)
                )
               )
               (local.get $1)
              )
             )
            )
           )
           ;;@ visual.c:441:0
           (local.set $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (br_if $while-in21
            (i32.lt_s
             (local.get $2)
             (local.get $0)
            )
           )
          )
         )
        )
        ;;@ visual.c:440:0
        (local.set $3
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (br_if $while-in19
         (i32.lt_s
          (local.get $3)
          (local.get $0)
         )
        )
       )
      )
     )
    )
   )
  )
 )
 (func $_SetAxisEnd (; 314 ;) (; has Stack IR ;)
  (local $0 f32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  ;;@ visual.c:454:0
  (local.set $1
   (i32.load
    (i32.const 32928)
   )
  )
  (local.set $3
   (i32.load
    (local.get $1)
   )
  )
  (local.set $2
   (i32.load
    (local.get $3)
   )
  )
  (local.set $3
   (i32.load
    (i32.const 14196)
   )
  )
  (local.set $3
   (i32.add
    (local.get $3)
    (i32.const -1)
   )
  )
  (i64.store align=4
   (i32.const 32956)
   (i64.load align=4
    (local.tee $2
     (i32.add
      (i32.mul
       (local.get $3)
       (i32.const 12)
      )
      (local.get $2)
     )
    )
   )
  )
  (i32.store
   (i32.const 32964)
   (i32.load offset=8
    (local.get $2)
   )
  )
  ;;@ visual.c:455:0
  (local.set $0
   (f32.load
    (i32.const 32956)
   )
  )
  (local.set $0
   (f32.add
    (local.get $0)
    (f32.const 10)
   )
  )
  (f32.store
   (i32.const 32956)
   (local.get $0)
  )
  ;;@ visual.c:457:0
  (local.set $2
   (i32.load
    (local.get $1)
   )
  )
  (local.set $2
   (i32.add
    (i32.shl
     (local.get $3)
     (i32.const 2)
    )
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 32944)
   (i64.load align=4
    (local.tee $2
     (i32.load
      (local.get $2)
     )
    )
   )
  )
  (i32.store
   (i32.const 32952)
   (i32.load offset=8
    (local.get $2)
   )
  )
  ;;@ visual.c:458:0
  (local.set $0
   (f32.load
    (i32.const 32948)
   )
  )
  (local.set $0
   (f32.add
    (local.get $0)
    (f32.const 10)
   )
  )
  (f32.store
   (i32.const 32948)
   (local.get $0)
  )
  ;;@ visual.c:460:0
  (local.set $1
   (i32.add
    (i32.shl
     (local.get $3)
     (i32.const 2)
    )
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load
    (local.get $1)
   )
  )
  (i64.store align=4
   (i32.const 32932)
   (i64.load align=4
    (local.tee $1
     (i32.load
      (local.get $1)
     )
    )
   )
  )
  (i32.store
   (i32.const 32940)
   (i32.load offset=8
    (local.get $1)
   )
  )
  ;;@ visual.c:461:0
  (local.set $0
   (f32.load
    (i32.const 32940)
   )
  )
  (local.set $0
   (f32.add
    (local.get $0)
    (f32.const 10)
   )
  )
  (f32.store
   (i32.const 32940)
   (local.get $0)
  )
 )
 (func $_InitGrid (; 315 ;) (; has Stack IR ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  ;;@ base.c:27:0
  (local.set $1
   (i32.load
    (i32.const 32980)
   )
  )
  (if
   (local.get $1)
   (block
    ;;@ base.c:28:0
    (local.set $0
     (i32.load
      (i32.const 32988)
     )
    )
    (if
     (i32.gt_s
      (local.get $0)
      (i32.const 0)
     )
     (block
      (loop $while-in
       ;;@ base.c:29:0
       (local.set $1
        (i32.load
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
          (local.get $1)
         )
        )
       )
       (if
        (i32.gt_s
         (local.get $0)
         (i32.const 0)
        )
        (block
         (local.set $0
          (local.get $1)
         )
         (local.set $1
          (i32.const 0)
         )
         (loop $while-in1
          ;;@ base.c:30:0
          (local.set $0
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
            (local.get $0)
           )
          )
          (local.set $0
           (i32.load
            (local.get $0)
           )
          )
          (call $_free
           (local.get $0)
          )
          ;;@ base.c:29:0
          (local.set $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (local.set $4
           (i32.load
            (i32.const 32988)
           )
          )
          (local.set $0
           (i32.load
            (i32.add
             (i32.load
              (i32.const 32980)
             )
             (i32.shl
              (local.get $2)
              (i32.const 2)
             )
            )
           )
          )
          (br_if $while-in1
           (i32.lt_s
            (local.get $1)
            (local.get $4)
           )
          )
         )
        )
        (local.set $0
         (local.get $1)
        )
       )
       ;;@ base.c:31:0
       (call $_free
        (local.get $0)
       )
       ;;@ base.c:28:0
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (local.set $0
        (i32.load
         (i32.const 32988)
        )
       )
       (if
        (i32.lt_s
         (local.get $2)
         (local.get $0)
        )
        (block
         (local.set $1
          (i32.load
           (i32.const 32980)
          )
         )
         (br $while-in)
        )
       )
      )
      ;;@ base.c:33:0
      (local.set $1
       (i32.load
        (i32.const 32980)
       )
      )
     )
    )
    (call $_free
     (local.get $1)
    )
   )
  )
  ;;@ base.c:37:0
  (local.set $4
   (i32.load
    (i32.const 14196)
   )
  )
  (local.set $0
   (call $_calloc
    (local.get $4)
    (i32.const 4)
   )
  )
  (i32.store
   (i32.const 32980)
   (local.get $0)
  )
  (local.set $0
   (if (result i32)
    ;;@ base.c:38:0
    (local.get $0)
    (block $label$break$L16 (result i32)
     (if
      ;;@ base.c:40:0
      (i32.gt_s
       (local.get $4)
       (i32.const 0)
      )
      (block
       (local.set $1
        (i32.const 0)
       )
       (loop $while-in3
        ;;@ base.c:41:0
        (local.set $2
         (call $_calloc
          (local.get $4)
          (i32.const 4)
         )
        )
        (local.set $0
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $0)
         )
        )
        (i32.store
         (local.get $0)
         (local.get $2)
        )
        ;;@ base.c:42:0
        (local.set $0
         (i32.load
          (i32.const 32980)
         )
        )
        (local.set $2
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $0)
         )
        )
        (local.set $2
         (i32.load
          (local.get $2)
         )
        )
        (drop
         (br_if $label$break$L16
          (i32.const -1)
          (i32.eqz
           (local.get $2)
          )
         )
        )
        (local.set $2
         (i32.const 0)
        )
        (loop $while-in5
         ;;@ base.c:45:0
         (local.set $3
          (call $_calloc
           (local.get $4)
           (i32.const 2)
          )
         )
         (local.set $0
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
           (local.get $0)
          )
         )
         (local.set $0
          (i32.load
           (local.get $0)
          )
         )
         (local.set $0
          (i32.add
           (i32.shl
            (local.get $2)
            (i32.const 2)
           )
           (local.get $0)
          )
         )
         (i32.store
          (local.get $0)
          (local.get $3)
         )
         ;;@ base.c:46:0
         (local.set $0
          (i32.load
           (i32.const 32980)
          )
         )
         (local.set $3
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
           (local.get $0)
          )
         )
         (local.set $3
          (i32.load
           (local.get $3)
          )
         )
         (local.set $3
          (i32.add
           (i32.shl
            (local.get $2)
            (i32.const 2)
           )
           (local.get $3)
          )
         )
         (local.set $3
          (i32.load
           (local.get $3)
          )
         )
         (local.set $3
          (i32.eqz
           (local.get $3)
          )
         )
         ;;@ base.c:44:0
         (drop
          (br_if $label$break$L16
           (i32.const -1)
           (local.get $3)
          )
         )
         (local.set $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (br_if $while-in5
          (i32.lt_s
           (local.get $2)
           (local.get $4)
          )
         )
        )
        ;;@ base.c:40:0
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (br_if $while-in3
         (i32.lt_s
          (local.get $1)
          (local.get $4)
         )
        )
       )
      )
     )
     ;;@ base.c:50:0
     (i32.store
      (i32.const 32984)
      (i32.const 0)
     )
     ;;@ base.c:51:0
     (i32.store
      (i32.const 32988)
      (local.get $4)
     )
     (i32.const 0)
    )
    (i32.const -1)
   )
  )
  ;;@ base.c:53:0
  (local.get $0)
 )
 (func $_InputPiece (; 316 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  ;;@ base.c:57:0
  (local.set $3
   (i32.rem_s
    (local.get $1)
    (i32.const 10)
   )
  )
  ;;@ base.c:59:0
  (local.set $2
   (i32.sub
    (local.get $1)
    (i32.mul
     (local.tee $5
      (i32.div_s
       (local.get $1)
       (i32.const 100)
      )
     )
     (i32.const 100)
    )
   )
  )
  ;;@ base.c:58:0
  (local.set $6
   (i32.div_s
    (local.get $2)
    (i32.const 10)
   )
  )
  (local.set $0
   (if (result i32)
    ;;@ base.c:62:0
    (i32.lt_s
     (local.get $1)
     (i32.const -99)
    )
    (i32.const -1)
    (block $label$break$L1 (result i32)
     (local.set $1
      (i32.load
       (i32.const 14196)
      )
     )
     (local.set $4
      (i32.le_s
       (local.get $1)
       (local.get $5)
      )
     )
     (local.set $2
      (i32.lt_s
       (local.get $2)
       (i32.const -9)
      )
     )
     (if (result i32)
      (i32.or
       (local.get $2)
       (local.get $4)
      )
      (i32.const -1)
      (block (result i32)
       (local.set $2
        (i32.gt_s
         (local.get $1)
         (local.get $6)
        )
       )
       (local.set $4
        (i32.gt_s
         (local.get $3)
         (i32.const -1)
        )
       )
       (local.set $2
        (i32.and
         (local.get $2)
         (local.get $4)
        )
       )
       (local.set $1
        (i32.gt_s
         (local.get $1)
         (local.get $3)
        )
       )
       (if (result i32)
        (i32.and
         (local.get $1)
         (local.get $2)
        )
        (block (result i32)
         ;;@ base.c:66:0
         (local.set $1
          (i32.load
           (i32.const 32980)
          )
         )
         (local.set $1
          (i32.add
           (i32.shl
            (local.get $3)
            (i32.const 2)
           )
           (local.get $1)
          )
         )
         (local.set $1
          (i32.load
           (local.get $1)
          )
         )
         (local.set $1
          (i32.add
           (i32.shl
            (local.get $6)
            (i32.const 2)
           )
           (local.get $1)
          )
         )
         (local.set $1
          (i32.load
           (local.get $1)
          )
         )
         (local.set $1
          (i32.add
           (i32.shl
            (local.get $5)
            (i32.const 1)
           )
           (local.get $1)
          )
         )
         (block $switch
          (block $switch-case0
           (br_table $switch-case0 $switch $switch $switch $switch $switch $switch $switch $switch $switch-case0 $switch
            (i32.sub
             (i32.load16_s
              (local.get $1)
             )
             (i32.const 79)
            )
           )
          )
          (br $label$break$L1
           (i32.const -2)
          )
         )
         ;;@ base.c:70:0
         (local.set $0
          (i32.and
           (local.get $0)
           (i32.const 65535)
          )
         )
         (i32.store16
          (local.get $1)
          (local.get $0)
         )
         ;;@ base.c:71:0
         (local.set $0
          (i32.load
           (i32.const 32984)
          )
         )
         (local.set $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (i32.store
          (i32.const 32984)
          (local.get $0)
         )
         (i32.const 0)
        )
        (i32.const -1)
       )
      )
     )
    )
   )
  )
  ;;@ base.c:73:0
  (local.get $0)
 )
 (func $_CheckStatus (; 317 ;) (; has Stack IR ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  ;;@ base.c:99:0
  (local.set $3
   (i32.load
    (i32.const 32984)
   )
  )
  (local.set $0
   (i32.load
    (i32.const 14196)
   )
  )
  (local.set $2
   (i32.mul
    (local.get $0)
    (local.get $0)
   )
  )
  (local.set $2
   (i32.mul
    (local.get $0)
    (local.get $2)
   )
  )
  (if
   (i32.gt_s
    (local.get $3)
    (local.get $2)
   )
   (local.set $0
    (i32.const -2)
   )
   (block $label$break$L1
    (local.set $0
     (if (result i32)
      ;;@ base.c:107:0
      (i32.gt_s
       (local.get $0)
       (i32.const 0)
      )
      (block (result i32)
       (local.set $3
        (i32.const 0)
       )
       (block $__rjto$11
        (block $__rjti$11
         (loop $label$continue$L4
          (if
           ;;@ base.c:108:0
           (i32.gt_s
            (local.get $0)
            (i32.const 0)
           )
           (block
            (local.set $2
             (i32.const 0)
            )
            (loop $while-in
             ;;@ base.c:110:0
             (drop
              (call $_CheckLine
               (i32.const 0)
               (i32.const 0)
               (i32.const 0)
               (i32.const 1)
              )
             )
             ;;@ base.c:111:0
             (local.set $0
              (i32.load
               (i32.const 14196)
              )
             )
             (if
              (i32.gt_s
               (local.get $0)
               (i32.const 0)
              )
              (block
               (local.set $4
                (i32.const 0)
               )
               (loop $while-in1
                (block $switch
                 ;;@ base.c:112:0
                 (br_table $label$break$L1 $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $__rjti$11 $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $switch $__rjti$11 $switch
                  (i32.sub
                   (local.tee $0
                    (call $_CheckLine
                     (local.get $4)
                     (local.get $2)
                     (local.get $3)
                     (i32.const 0)
                    )
                   )
                   (i32.const -1)
                  )
                 )
                )
                ;;@ base.c:111:0
                (local.set $4
                 (i32.add
                  (local.get $4)
                  (i32.const 1)
                 )
                )
                (local.set $1
                 (i32.load
                  (i32.const 14196)
                 )
                )
                (br_if $while-in1
                 (i32.lt_s
                  (local.get $4)
                  (local.get $1)
                 )
                )
               )
               ;;@ base.c:122:0
               (br_if $label$break$L1
                (local.get $0)
               )
               (local.set $0
                (local.get $1)
               )
              )
             )
             ;;@ base.c:108:0
             (local.set $2
              (i32.add
               (local.get $2)
               (i32.const 1)
              )
             )
             (br_if $while-in
              (i32.lt_s
               (local.get $2)
               (local.get $0)
              )
             )
            )
           )
          )
          ;;@ base.c:107:0
          (local.set $3
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (br_if $label$continue$L4
           (i32.lt_s
            (local.get $3)
            (local.get $0)
           )
          )
         )
         (br $__rjto$11)
        )
        (local.set $0
         (i32.div_u
          (local.get $0)
          (i32.const 10)
         )
        )
        (br $label$break$L1)
       )
       (if (result i32)
        ;;@ base.c:128:0
        (i32.gt_s
         (local.get $0)
         (i32.const 0)
        )
        (block (result i32)
         (local.set $3
          (i32.const 0)
         )
         (block $__rjto$10
          (block $__rjti$10
           (loop $label$continue$L22
            (if
             ;;@ base.c:129:0
             (i32.gt_s
              (local.get $0)
              (i32.const 0)
             )
             (block
              (local.set $2
               (i32.const 0)
              )
              (loop $while-in5
               ;;@ base.c:131:0
               (drop
                (call $_CheckLine
                 (i32.const 0)
                 (i32.const 0)
                 (i32.const 0)
                 (i32.const 1)
                )
               )
               ;;@ base.c:132:0
               (local.set $0
                (i32.load
                 (i32.const 14196)
                )
               )
               (if
                (i32.gt_s
                 (local.get $0)
                 (i32.const 0)
                )
                (block
                 (local.set $0
                  (i32.const 0)
                 )
                 (loop $while-in7
                  (block $switch8
                   (if
                    ;;@ base.c:133:0
                    (local.tee $1
                     (i32.sub
                      (local.tee $4
                       (call $_CheckLine
                        (local.get $2)
                        (local.get $0)
                        (local.get $3)
                        (i32.const 0)
                       )
                      )
                      (i32.const -1)
                     )
                    )
                    (if
                     (i32.eq
                      (local.get $1)
                      (i32.const 791)
                     )
                     (br $__rjti$10)
                     (br $switch8)
                    )
                   )
                   (local.set $0
                    (i32.const -1)
                   )
                   (br $label$break$L1)
                  )
                  ;;@ base.c:132:0
                  (local.set $0
                   (i32.add
                    (local.get $0)
                    (i32.const 1)
                   )
                  )
                  (local.set $1
                   (i32.load
                    (i32.const 14196)
                   )
                  )
                  (br_if $while-in7
                   (i32.lt_s
                    (local.get $0)
                    (local.get $1)
                   )
                  )
                 )
                 (local.set $0
                  (if (result i32)
                   ;;@ base.c:137:0
                   (local.get $4)
                   (block
                    (local.set $0
                     (local.get $4)
                    )
                    (br $label$break$L1)
                   )
                   (local.get $1)
                  )
                 )
                )
               )
               ;;@ base.c:129:0
               (local.set $2
                (i32.add
                 (local.get $2)
                 (i32.const 1)
                )
               )
               (br_if $while-in5
                (i32.lt_s
                 (local.get $2)
                 (local.get $0)
                )
               )
              )
             )
            )
            ;;@ base.c:128:0
            (local.set $3
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
            (br_if $label$continue$L22
             (i32.lt_s
              (local.get $3)
              (local.get $0)
             )
            )
           )
           (br $__rjto$10)
          )
          (local.set $0
           (i32.const 79)
          )
          (br $label$break$L1)
         )
         (if (result i32)
          ;;@ base.c:143:0
          (i32.gt_s
           (local.get $0)
           (i32.const 0)
          )
          (block (result i32)
           (local.set $3
            (i32.const 0)
           )
           (block $__rjto$9
            (block $__rjti$9
             (loop $label$continue$L40
              (if
               ;;@ base.c:144:0
               (i32.gt_s
                (local.get $0)
                (i32.const 0)
               )
               (block
                (local.set $2
                 (i32.const 0)
                )
                (loop $while-in13
                 ;;@ base.c:145:0
                 (drop
                  (call $_CheckLine
                   (i32.const 0)
                   (i32.const 0)
                   (i32.const 0)
                   (i32.const 1)
                  )
                 )
                 ;;@ base.c:146:0
                 (local.set $0
                  (i32.load
                   (i32.const 14196)
                  )
                 )
                 (if
                  (i32.gt_s
                   (local.get $0)
                   (i32.const 0)
                  )
                  (block
                   (local.set $0
                    (i32.const 0)
                   )
                   (loop $while-in15
                    (block $switch16
                     (if
                      ;;@ base.c:147:0
                      (local.tee $1
                       (i32.sub
                        (local.tee $4
                         (call $_CheckLine
                          (local.get $3)
                          (local.get $2)
                          (local.get $0)
                          (i32.const 0)
                         )
                        )
                        (i32.const -1)
                       )
                      )
                      (if
                       (i32.eq
                        (local.get $1)
                        (i32.const 791)
                       )
                       (br $__rjti$9)
                       (br $switch16)
                      )
                     )
                     (local.set $0
                      (i32.const -1)
                     )
                     (br $label$break$L1)
                    )
                    ;;@ base.c:146:0
                    (local.set $0
                     (i32.add
                      (local.get $0)
                      (i32.const 1)
                     )
                    )
                    (local.set $1
                     (i32.load
                      (i32.const 14196)
                     )
                    )
                    (br_if $while-in15
                     (i32.lt_s
                      (local.get $0)
                      (local.get $1)
                     )
                    )
                   )
                   (local.set $0
                    (if (result i32)
                     ;;@ base.c:151:0
                     (local.get $4)
                     (block
                      (local.set $0
                       (local.get $4)
                      )
                      (br $label$break$L1)
                     )
                     (local.get $1)
                    )
                   )
                  )
                 )
                 ;;@ base.c:144:0
                 (local.set $2
                  (i32.add
                   (local.get $2)
                   (i32.const 1)
                  )
                 )
                 (br_if $while-in13
                  (i32.lt_s
                   (local.get $2)
                   (local.get $0)
                  )
                 )
                )
               )
              )
              ;;@ base.c:143:0
              (local.set $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (br_if $label$continue$L40
               (i32.lt_s
                (local.get $3)
                (local.get $0)
               )
              )
             )
             (br $__rjto$9)
            )
            (local.set $0
             (i32.const 79)
            )
            (br $label$break$L1)
           )
           (if (result i32)
            ;;@ base.c:161:0
            (i32.gt_s
             (local.get $0)
             (i32.const 0)
            )
            (block (result i32)
             (local.set $1
              (i32.const 0)
             )
             (block $__rjto$8
              (block $__rjti$8
               (loop $label$continue$L58
                (if
                 ;;@ base.c:162:0
                 (i32.gt_s
                  (local.get $0)
                  (i32.const 0)
                 )
                 (block
                  (local.set $3
                   (local.get $0)
                  )
                  (loop $while-in21
                   (local.set $2
                    (i32.add
                     (local.get $3)
                     (i32.const -1)
                    )
                   )
                   ;;@ base.c:163:0
                   (drop
                    (call $_CheckLine
                     (i32.const 0)
                     (i32.const 0)
                     (i32.const 0)
                     (i32.const 1)
                    )
                   )
                   ;;@ base.c:164:0
                   (local.set $0
                    (i32.load
                     (i32.const 14196)
                    )
                   )
                   (local.set $4
                    (i32.gt_s
                     (local.get $0)
                     (i32.const 0)
                    )
                   )
                   (local.set $5
                    (i32.le_s
                     (local.get $3)
                     (local.get $0)
                    )
                   )
                   (if
                    (i32.and
                     (local.get $4)
                     (local.get $5)
                    )
                    (block
                     (local.set $5
                      (i32.const 0)
                     )
                     (local.set $0
                      (local.get $2)
                     )
                     (loop $while-in23
                      (block $switch24
                       (block $switch-case25
                        ;;@ base.c:165:0
                        (br_table $switch-case25 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $__rjti$8 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $switch24 $__rjti$8 $switch24
                         (i32.sub
                          (local.tee $4
                           (call $_CheckLine
                            (local.get $5)
                            (local.get $0)
                            (local.get $1)
                            (i32.const 0)
                           )
                          )
                          (i32.const -1)
                         )
                        )
                       )
                       (local.set $0
                        (local.get $4)
                       )
                       (br $label$break$L1)
                      )
                      ;;@ base.c:164:0
                      (local.set $5
                       (i32.add
                        (local.get $5)
                        (i32.const 1)
                       )
                      )
                      (local.set $0
                       (i32.add
                        (local.get $0)
                        (i32.const 1)
                       )
                      )
                      (local.set $6
                       (i32.load
                        (i32.const 14196)
                       )
                      )
                      (local.set $7
                       (i32.lt_s
                        (local.get $5)
                        (local.get $6)
                       )
                      )
                      (local.set $8
                       (i32.lt_s
                        (local.get $0)
                        (local.get $6)
                       )
                      )
                      (br_if $while-in23
                       (i32.and
                        (local.get $7)
                        (local.get $8)
                       )
                      )
                     )
                     (local.set $0
                      (if (result i32)
                       ;;@ base.c:169:0
                       (local.get $4)
                       (block
                        (local.set $0
                         (local.get $4)
                        )
                        (br $label$break$L1)
                       )
                       (local.get $6)
                      )
                     )
                    )
                   )
                   (if
                    ;;@ base.c:162:0
                    (i32.gt_s
                     (local.get $3)
                     (i32.const 1)
                    )
                    (block
                     (local.set $3
                      (local.get $2)
                     )
                     (br $while-in21)
                    )
                   )
                  )
                 )
                )
                ;;@ base.c:161:0
                (local.set $1
                 (i32.add
                  (local.get $1)
                  (i32.const 1)
                 )
                )
                (br_if $label$continue$L58
                 (i32.lt_s
                  (local.get $1)
                  (local.get $0)
                 )
                )
               )
               (br $__rjto$8)
              )
              (local.set $0
               (i32.div_u
                (local.get $4)
                (i32.const 10)
               )
              )
              (br $label$break$L1)
             )
             (if (result i32)
              ;;@ base.c:175:0
              (i32.gt_s
               (local.get $0)
               (i32.const 0)
              )
              (block (result i32)
               (local.set $5
                (i32.const 0)
               )
               (block $__rjto$7
                (block $__rjti$7
                 (loop $label$continue$L76
                  (if
                   ;;@ base.c:176:0
                   (i32.gt_s
                    (local.get $0)
                    (i32.const 0)
                   )
                   (block
                    (local.set $3
                     (local.get $0)
                    )
                    (loop $while-in30
                     (local.set $4
                      (i32.add
                       (local.get $3)
                       (i32.const -1)
                      )
                     )
                     ;;@ base.c:177:0
                     (drop
                      (call $_CheckLine
                       (i32.const 0)
                       (i32.const 0)
                       (i32.const 0)
                       (i32.const 1)
                      )
                     )
                     ;;@ base.c:178:0
                     (local.set $0
                      (i32.load
                       (i32.const 14196)
                      )
                     )
                     (local.set $2
                      (i32.gt_s
                       (local.get $0)
                       (i32.const 0)
                      )
                     )
                     (local.set $1
                      (i32.le_s
                       (local.get $3)
                       (local.get $0)
                      )
                     )
                     (if
                      (i32.and
                       (local.get $1)
                       (local.get $2)
                      )
                      (block
                       (local.set $2
                        (local.get $4)
                       )
                       (loop $while-in32
                        (local.set $6
                         (i32.add
                          (local.get $0)
                          (i32.const -1)
                         )
                        )
                        (block $switch33
                         (block $switch-case34
                          ;;@ base.c:179:0
                          (br_table $switch-case34 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $__rjti$7 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $switch33 $__rjti$7 $switch33
                           (i32.sub
                            (local.tee $1
                             (call $_CheckLine
                              (local.get $6)
                              (local.get $2)
                              (local.get $5)
                              (i32.const 0)
                             )
                            )
                            (i32.const -1)
                           )
                          )
                         )
                         (local.set $0
                          (local.get $1)
                         )
                         (br $label$break$L1)
                        )
                        ;;@ base.c:178:0
                        (local.set $2
                         (i32.add
                          (local.get $2)
                          (i32.const 1)
                         )
                        )
                        (local.set $7
                         (i32.gt_s
                          (local.get $0)
                          (i32.const 1)
                         )
                        )
                        (local.set $0
                         (i32.load
                          (i32.const 14196)
                         )
                        )
                        (local.set $8
                         (i32.lt_s
                          (local.get $2)
                          (local.get $0)
                         )
                        )
                        (if
                         (i32.and
                          (local.get $7)
                          (local.get $8)
                         )
                         (block
                          (local.set $0
                           (local.get $6)
                          )
                          (br $while-in32)
                         )
                        )
                       )
                       (if
                        ;;@ base.c:183:0
                        (local.get $1)
                        (block
                         (local.set $0
                          (local.get $1)
                         )
                         (br $label$break$L1)
                        )
                       )
                      )
                     )
                     (if
                      ;;@ base.c:176:0
                      (i32.gt_s
                       (local.get $3)
                       (i32.const 1)
                      )
                      (block
                       (local.set $3
                        (local.get $4)
                       )
                       (br $while-in30)
                      )
                     )
                    )
                   )
                  )
                  ;;@ base.c:175:0
                  (local.set $5
                   (i32.add
                    (local.get $5)
                    (i32.const 1)
                   )
                  )
                  (br_if $label$continue$L76
                   (i32.lt_s
                    (local.get $5)
                    (local.get $0)
                   )
                  )
                 )
                 (br $__rjto$7)
                )
                (local.set $0
                 (i32.div_u
                  (local.get $1)
                  (i32.const 10)
                 )
                )
                (br $label$break$L1)
               )
               (if (result i32)
                ;;@ base.c:189:0
                (i32.gt_s
                 (local.get $0)
                 (i32.const 0)
                )
                (block (result i32)
                 (local.set $1
                  (i32.const 0)
                 )
                 (block $__rjto$6
                  (block $__rjti$6
                   (loop $label$continue$L94
                    (if
                     ;;@ base.c:190:0
                     (i32.gt_s
                      (local.get $0)
                      (i32.const 0)
                     )
                     (block
                      (local.set $3
                       (local.get $0)
                      )
                      (loop $while-in39
                       (local.set $2
                        (i32.add
                         (local.get $3)
                         (i32.const -1)
                        )
                       )
                       ;;@ base.c:191:0
                       (drop
                        (call $_CheckLine
                         (i32.const 0)
                         (i32.const 0)
                         (i32.const 0)
                         (i32.const 1)
                        )
                       )
                       ;;@ base.c:192:0
                       (local.set $0
                        (i32.load
                         (i32.const 14196)
                        )
                       )
                       (local.set $4
                        (i32.gt_s
                         (local.get $0)
                         (i32.const 0)
                        )
                       )
                       (local.set $5
                        (i32.le_s
                         (local.get $3)
                         (local.get $0)
                        )
                       )
                       (if
                        (i32.and
                         (local.get $4)
                         (local.get $5)
                        )
                        (block
                         (local.set $5
                          (i32.const 0)
                         )
                         (local.set $0
                          (local.get $2)
                         )
                         (loop $while-in41
                          (block $switch42
                           (block $switch-case43
                            ;;@ base.c:193:0
                            (br_table $switch-case43 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $__rjti$6 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $switch42 $__rjti$6 $switch42
                             (i32.sub
                              (local.tee $4
                               (call $_CheckLine
                                (local.get $1)
                                (local.get $5)
                                (local.get $0)
                                (i32.const 0)
                               )
                              )
                              (i32.const -1)
                             )
                            )
                           )
                           (local.set $0
                            (local.get $4)
                           )
                           (br $label$break$L1)
                          )
                          ;;@ base.c:192:0
                          (local.set $5
                           (i32.add
                            (local.get $5)
                            (i32.const 1)
                           )
                          )
                          (local.set $0
                           (i32.add
                            (local.get $0)
                            (i32.const 1)
                           )
                          )
                          (local.set $6
                           (i32.load
                            (i32.const 14196)
                           )
                          )
                          (local.set $7
                           (i32.lt_s
                            (local.get $5)
                            (local.get $6)
                           )
                          )
                          (local.set $8
                           (i32.lt_s
                            (local.get $0)
                            (local.get $6)
                           )
                          )
                          (br_if $while-in41
                           (i32.and
                            (local.get $7)
                            (local.get $8)
                           )
                          )
                         )
                         (local.set $0
                          (if (result i32)
                           ;;@ base.c:197:0
                           (local.get $4)
                           (block
                            (local.set $0
                             (local.get $4)
                            )
                            (br $label$break$L1)
                           )
                           (local.get $6)
                          )
                         )
                        )
                       )
                       (if
                        ;;@ base.c:190:0
                        (i32.gt_s
                         (local.get $3)
                         (i32.const 1)
                        )
                        (block
                         (local.set $3
                          (local.get $2)
                         )
                         (br $while-in39)
                        )
                       )
                      )
                     )
                    )
                    ;;@ base.c:189:0
                    (local.set $1
                     (i32.add
                      (local.get $1)
                      (i32.const 1)
                     )
                    )
                    (br_if $label$continue$L94
                     (i32.lt_s
                      (local.get $1)
                      (local.get $0)
                     )
                    )
                   )
                   (br $__rjto$6)
                  )
                  (local.set $0
                   (i32.div_u
                    (local.get $4)
                    (i32.const 10)
                   )
                  )
                  (br $label$break$L1)
                 )
                 (if (result i32)
                  ;;@ base.c:203:0
                  (i32.gt_s
                   (local.get $0)
                   (i32.const 0)
                  )
                  (block (result i32)
                   (local.set $5
                    (i32.const 0)
                   )
                   (block $__rjto$5
                    (block $__rjti$5
                     (loop $label$continue$L112
                      (if
                       ;;@ base.c:204:0
                       (i32.gt_s
                        (local.get $0)
                        (i32.const 0)
                       )
                       (block
                        (local.set $3
                         (local.get $0)
                        )
                        (loop $while-in48
                         (local.set $4
                          (i32.add
                           (local.get $3)
                           (i32.const -1)
                          )
                         )
                         ;;@ base.c:205:0
                         (drop
                          (call $_CheckLine
                           (i32.const 0)
                           (i32.const 0)
                           (i32.const 0)
                           (i32.const 1)
                          )
                         )
                         ;;@ base.c:206:0
                         (local.set $0
                          (i32.load
                           (i32.const 14196)
                          )
                         )
                         (local.set $2
                          (i32.gt_s
                           (local.get $0)
                           (i32.const 0)
                          )
                         )
                         (local.set $1
                          (i32.le_s
                           (local.get $3)
                           (local.get $0)
                          )
                         )
                         (if
                          (i32.and
                           (local.get $1)
                           (local.get $2)
                          )
                          (block
                           (local.set $2
                            (local.get $4)
                           )
                           (loop $while-in50
                            (local.set $6
                             (i32.add
                              (local.get $0)
                              (i32.const -1)
                             )
                            )
                            (block $switch51
                             (block $switch-case52
                              ;;@ base.c:207:0
                              (br_table $switch-case52 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $__rjti$5 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $switch51 $__rjti$5 $switch51
                               (i32.sub
                                (local.tee $1
                                 (call $_CheckLine
                                  (local.get $5)
                                  (local.get $6)
                                  (local.get $2)
                                  (i32.const 0)
                                 )
                                )
                                (i32.const -1)
                               )
                              )
                             )
                             (local.set $0
                              (local.get $1)
                             )
                             (br $label$break$L1)
                            )
                            ;;@ base.c:206:0
                            (local.set $2
                             (i32.add
                              (local.get $2)
                              (i32.const 1)
                             )
                            )
                            (local.set $7
                             (i32.gt_s
                              (local.get $0)
                              (i32.const 1)
                             )
                            )
                            (local.set $0
                             (i32.load
                              (i32.const 14196)
                             )
                            )
                            (local.set $8
                             (i32.lt_s
                              (local.get $2)
                              (local.get $0)
                             )
                            )
                            (if
                             (i32.and
                              (local.get $7)
                              (local.get $8)
                             )
                             (block
                              (local.set $0
                               (local.get $6)
                              )
                              (br $while-in50)
                             )
                            )
                           )
                           (if
                            ;;@ base.c:211:0
                            (local.get $1)
                            (block
                             (local.set $0
                              (local.get $1)
                             )
                             (br $label$break$L1)
                            )
                           )
                          )
                         )
                         (if
                          ;;@ base.c:204:0
                          (i32.gt_s
                           (local.get $3)
                           (i32.const 1)
                          )
                          (block
                           (local.set $3
                            (local.get $4)
                           )
                           (br $while-in48)
                          )
                         )
                        )
                       )
                      )
                      ;;@ base.c:203:0
                      (local.set $5
                       (i32.add
                        (local.get $5)
                        (i32.const 1)
                       )
                      )
                      (br_if $label$continue$L112
                       (i32.lt_s
                        (local.get $5)
                        (local.get $0)
                       )
                      )
                     )
                     (br $__rjto$5)
                    )
                    (local.set $0
                     (i32.div_u
                      (local.get $1)
                      (i32.const 10)
                     )
                    )
                    (br $label$break$L1)
                   )
                   (if (result i32)
                    ;;@ base.c:217:0
                    (i32.gt_s
                     (local.get $0)
                     (i32.const 0)
                    )
                    (block (result i32)
                     (local.set $1
                      (i32.const 0)
                     )
                     (block $__rjto$4
                      (block $__rjti$4
                       (loop $label$continue$L130
                        (if
                         ;;@ base.c:218:0
                         (i32.gt_s
                          (local.get $0)
                          (i32.const 0)
                         )
                         (block
                          (local.set $3
                           (local.get $0)
                          )
                          (loop $while-in57
                           (local.set $2
                            (i32.add
                             (local.get $3)
                             (i32.const -1)
                            )
                           )
                           ;;@ base.c:219:0
                           (drop
                            (call $_CheckLine
                             (i32.const 0)
                             (i32.const 0)
                             (i32.const 0)
                             (i32.const 1)
                            )
                           )
                           ;;@ base.c:220:0
                           (local.set $0
                            (i32.load
                             (i32.const 14196)
                            )
                           )
                           (local.set $4
                            (i32.gt_s
                             (local.get $0)
                             (i32.const 0)
                            )
                           )
                           (local.set $5
                            (i32.le_s
                             (local.get $3)
                             (local.get $0)
                            )
                           )
                           (if
                            (i32.and
                             (local.get $4)
                             (local.get $5)
                            )
                            (block
                             (local.set $0
                              (local.get $2)
                             )
                             (local.set $5
                              (i32.const 0)
                             )
                             (loop $while-in59
                              (block $switch60
                               (block $switch-case61
                                ;;@ base.c:221:0
                                (br_table $switch-case61 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $__rjti$4 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $switch60 $__rjti$4 $switch60
                                 (i32.sub
                                  (local.tee $4
                                   (call $_CheckLine
                                    (local.get $0)
                                    (local.get $1)
                                    (local.get $5)
                                    (i32.const 0)
                                   )
                                  )
                                  (i32.const -1)
                                 )
                                )
                               )
                               (local.set $0
                                (local.get $4)
                               )
                               (br $label$break$L1)
                              )
                              ;;@ base.c:220:0
                              (local.set $5
                               (i32.add
                                (local.get $5)
                                (i32.const 1)
                               )
                              )
                              (local.set $0
                               (i32.add
                                (local.get $0)
                                (i32.const 1)
                               )
                              )
                              (local.set $6
                               (i32.load
                                (i32.const 14196)
                               )
                              )
                              (local.set $7
                               (i32.lt_s
                                (local.get $5)
                                (local.get $6)
                               )
                              )
                              (local.set $8
                               (i32.lt_s
                                (local.get $0)
                                (local.get $6)
                               )
                              )
                              (br_if $while-in59
                               (i32.and
                                (local.get $7)
                                (local.get $8)
                               )
                              )
                             )
                             (local.set $0
                              (if (result i32)
                               ;;@ base.c:225:0
                               (local.get $4)
                               (block
                                (local.set $0
                                 (local.get $4)
                                )
                                (br $label$break$L1)
                               )
                               (local.get $6)
                              )
                             )
                            )
                           )
                           (if
                            ;;@ base.c:218:0
                            (i32.gt_s
                             (local.get $3)
                             (i32.const 1)
                            )
                            (block
                             (local.set $3
                              (local.get $2)
                             )
                             (br $while-in57)
                            )
                           )
                          )
                         )
                        )
                        ;;@ base.c:217:0
                        (local.set $1
                         (i32.add
                          (local.get $1)
                          (i32.const 1)
                         )
                        )
                        (br_if $label$continue$L130
                         (i32.lt_s
                          (local.get $1)
                          (local.get $0)
                         )
                        )
                       )
                       (br $__rjto$4)
                      )
                      (local.set $0
                       (i32.div_u
                        (local.get $4)
                        (i32.const 10)
                       )
                      )
                      (br $label$break$L1)
                     )
                     (if (result i32)
                      ;;@ base.c:231:0
                      (i32.gt_s
                       (local.get $0)
                       (i32.const 0)
                      )
                      (block (result i32)
                       (local.set $5
                        (i32.const 0)
                       )
                       (block $__rjto$3
                        (block $__rjti$3
                         (loop $label$continue$L148
                          (if
                           ;;@ base.c:232:0
                           (i32.gt_s
                            (local.get $0)
                            (i32.const 0)
                           )
                           (block
                            (local.set $3
                             (local.get $0)
                            )
                            (loop $while-in66
                             (local.set $4
                              (i32.add
                               (local.get $3)
                               (i32.const -1)
                              )
                             )
                             ;;@ base.c:233:0
                             (drop
                              (call $_CheckLine
                               (i32.const 0)
                               (i32.const 0)
                               (i32.const 0)
                               (i32.const 1)
                              )
                             )
                             ;;@ base.c:234:0
                             (local.set $2
                              (i32.load
                               (i32.const 14196)
                              )
                             )
                             (local.set $0
                              (i32.gt_s
                               (local.get $2)
                               (i32.const 0)
                              )
                             )
                             (local.set $1
                              (i32.le_s
                               (local.get $3)
                               (local.get $2)
                              )
                             )
                             (local.set $0
                              (if (result i32)
                               (i32.and
                                (local.get $0)
                                (local.get $1)
                               )
                               (block (result i32)
                                (local.set $0
                                 (local.get $4)
                                )
                                (loop $while-in68
                                 (local.set $6
                                  (i32.add
                                   (local.get $2)
                                   (i32.const -1)
                                  )
                                 )
                                 (block $switch69
                                  (block $switch-case70
                                   ;;@ base.c:235:0
                                   (br_table $switch-case70 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $__rjti$3 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $switch69 $__rjti$3 $switch69
                                    (i32.sub
                                     (local.tee $1
                                      (call $_CheckLine
                                       (local.get $0)
                                       (local.get $5)
                                       (local.get $6)
                                       (i32.const 0)
                                      )
                                     )
                                     (i32.const -1)
                                    )
                                   )
                                  )
                                  (local.set $0
                                   (local.get $1)
                                  )
                                  (br $label$break$L1)
                                 )
                                 ;;@ base.c:234:0
                                 (local.set $0
                                  (i32.add
                                   (local.get $0)
                                   (i32.const 1)
                                  )
                                 )
                                 (local.set $7
                                  (i32.gt_s
                                   (local.get $2)
                                   (i32.const 1)
                                  )
                                 )
                                 (local.set $2
                                  (i32.load
                                   (i32.const 14196)
                                  )
                                 )
                                 (local.set $8
                                  (i32.lt_s
                                   (local.get $0)
                                   (local.get $2)
                                  )
                                 )
                                 (if
                                  (i32.and
                                   (local.get $7)
                                   (local.get $8)
                                  )
                                  (block
                                   (local.set $2
                                    (local.get $6)
                                   )
                                   (br $while-in68)
                                  )
                                 )
                                )
                                (if (result i32)
                                 ;;@ base.c:239:0
                                 (local.get $1)
                                 (block
                                  (local.set $0
                                   (local.get $1)
                                  )
                                  (br $label$break$L1)
                                 )
                                 (local.get $2)
                                )
                               )
                               (local.get $2)
                              )
                             )
                             (if
                              ;;@ base.c:232:0
                              (i32.gt_s
                               (local.get $3)
                               (i32.const 1)
                              )
                              (block
                               (local.set $3
                                (local.get $4)
                               )
                               (br $while-in66)
                              )
                             )
                            )
                           )
                          )
                          ;;@ base.c:231:0
                          (local.set $5
                           (i32.add
                            (local.get $5)
                            (i32.const 1)
                           )
                          )
                          (br_if $label$continue$L148
                           (i32.lt_s
                            (local.get $5)
                            (local.get $0)
                           )
                          )
                         )
                         (br $__rjto$3)
                        )
                        (local.set $0
                         (i32.div_u
                          (local.get $1)
                          (i32.const 10)
                         )
                        )
                        (br $label$break$L1)
                       )
                       (if (result i32)
                        ;;@ base.c:249:0
                        (i32.gt_s
                         (local.get $0)
                         (i32.const 0)
                        )
                        (block (result i32)
                         (local.set $3
                          (i32.const 0)
                         )
                         (block $__rjto$2
                          (block $__rjti$2
                           (loop $label$continue$L166
                            (if
                             ;;@ base.c:250:0
                             (i32.gt_s
                              (local.get $0)
                              (i32.const 0)
                             )
                             (block
                              (local.set $2
                               (i32.const 0)
                              )
                              (loop $while-in75
                               ;;@ base.c:251:0
                               (drop
                                (call $_CheckLine
                                 (i32.const 0)
                                 (i32.const 0)
                                 (i32.const 0)
                                 (i32.const 1)
                                )
                               )
                               ;;@ base.c:252:0
                               (local.set $0
                                (i32.load
                                 (i32.const 14196)
                                )
                               )
                               (local.set $4
                                (i32.gt_s
                                 (local.get $0)
                                 (i32.const 0)
                                )
                               )
                               (local.set $1
                                (i32.lt_s
                                 (local.get $3)
                                 (local.get $0)
                                )
                               )
                               (local.set $4
                                (i32.and
                                 (local.get $1)
                                 (local.get $4)
                                )
                               )
                               (local.set $1
                                (i32.lt_s
                                 (local.get $2)
                                 (local.get $0)
                                )
                               )
                               (if
                                (i32.and
                                 (local.get $1)
                                 (local.get $4)
                                )
                                (block
                                 (local.set $0
                                  (local.get $3)
                                 )
                                 (local.set $4
                                  (local.get $2)
                                 )
                                 (local.set $5
                                  (i32.const 0)
                                 )
                                 (loop $while-in77
                                  (block $switch78
                                   (block $switch-case79
                                    ;;@ base.c:253:0
                                    (br_table $switch-case79 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $__rjti$2 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $switch78 $__rjti$2 $switch78
                                     (i32.sub
                                      (local.tee $1
                                       (call $_CheckLine
                                        (local.get $0)
                                        (local.get $4)
                                        (local.get $5)
                                        (i32.const 0)
                                       )
                                      )
                                      (i32.const -1)
                                     )
                                    )
                                   )
                                   (local.set $0
                                    (local.get $1)
                                   )
                                   (br $label$break$L1)
                                  )
                                  ;;@ base.c:252:0
                                  (local.set $5
                                   (i32.add
                                    (local.get $5)
                                    (i32.const 1)
                                   )
                                  )
                                  (local.set $0
                                   (i32.add
                                    (local.get $0)
                                    (i32.const 1)
                                   )
                                  )
                                  (local.set $4
                                   (i32.add
                                    (local.get $4)
                                    (i32.const 1)
                                   )
                                  )
                                  (local.set $6
                                   (i32.load
                                    (i32.const 14196)
                                   )
                                  )
                                  (local.set $7
                                   (i32.lt_s
                                    (local.get $5)
                                    (local.get $6)
                                   )
                                  )
                                  (local.set $8
                                   (i32.lt_s
                                    (local.get $0)
                                    (local.get $6)
                                   )
                                  )
                                  (local.set $7
                                   (i32.and
                                    (local.get $7)
                                    (local.get $8)
                                   )
                                  )
                                  (local.set $8
                                   (i32.lt_s
                                    (local.get $4)
                                    (local.get $6)
                                   )
                                  )
                                  (br_if $while-in77
                                   (i32.and
                                    (local.get $7)
                                    (local.get $8)
                                   )
                                  )
                                 )
                                 (local.set $0
                                  (if (result i32)
                                   ;;@ base.c:257:0
                                   (local.get $1)
                                   (block
                                    (local.set $0
                                     (local.get $1)
                                    )
                                    (br $label$break$L1)
                                   )
                                   (local.get $6)
                                  )
                                 )
                                )
                               )
                               ;;@ base.c:250:0
                               (local.set $2
                                (i32.add
                                 (local.get $2)
                                 (i32.const 1)
                                )
                               )
                               (br_if $while-in75
                                (i32.lt_s
                                 (local.get $2)
                                 (local.get $0)
                                )
                               )
                              )
                             )
                            )
                            ;;@ base.c:249:0
                            (local.set $3
                             (i32.add
                              (local.get $3)
                              (i32.const 1)
                             )
                            )
                            (br_if $label$continue$L166
                             (i32.lt_s
                              (local.get $3)
                              (local.get $0)
                             )
                            )
                           )
                           (br $__rjto$2)
                          )
                          (local.set $0
                           (i32.div_u
                            (local.get $1)
                            (i32.const 10)
                           )
                          )
                          (br $label$break$L1)
                         )
                         (if (result i32)
                          ;;@ base.c:263:0
                          (i32.gt_s
                           (local.get $0)
                           (i32.const 0)
                          )
                          (block (result i32)
                           (local.set $3
                            (i32.const 0)
                           )
                           (block $__rjto$1
                            (block $__rjti$1
                             (loop $label$continue$L184
                              (if
                               ;;@ base.c:264:0
                               (i32.gt_s
                                (local.get $0)
                                (i32.const 0)
                               )
                               (block
                                (local.set $2
                                 (i32.const 0)
                                )
                                (loop $while-in84
                                 ;;@ base.c:265:0
                                 (drop
                                  (call $_CheckLine
                                   (i32.const 0)
                                   (i32.const 0)
                                   (i32.const 0)
                                   (i32.const 1)
                                  )
                                 )
                                 ;;@ base.c:266:0
                                 (local.set $5
                                  (i32.load
                                   (i32.const 14196)
                                  )
                                 )
                                 (if
                                  (i32.gt_s
                                   (local.get $5)
                                   (i32.const 0)
                                  )
                                  (block
                                   (local.set $0
                                    (i32.lt_s
                                     (local.get $3)
                                     (local.get $5)
                                    )
                                   )
                                   (local.set $4
                                    (i32.lt_s
                                     (local.get $2)
                                     (local.get $5)
                                    )
                                   )
                                   (if
                                    (i32.and
                                     (local.get $0)
                                     (local.get $4)
                                    )
                                    (block $label$break$L192
                                     (local.set $4
                                      (local.get $3)
                                     )
                                     (local.set $1
                                      (local.get $2)
                                     )
                                     (loop $while-in87
                                      (local.set $6
                                       (i32.add
                                        (local.get $5)
                                        (i32.const -1)
                                       )
                                      )
                                      (block $switch88
                                       ;;@ base.c:267:0
                                       (br_table $label$break$L1 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $__rjti$1 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $switch88 $__rjti$1 $switch88
                                        (i32.sub
                                         (local.tee $0
                                          (call $_CheckLine
                                           (local.get $4)
                                           (local.get $1)
                                           (local.get $6)
                                           (i32.const 0)
                                          )
                                         )
                                         (i32.const -1)
                                        )
                                       )
                                      )
                                      ;;@ base.c:266:0
                                      (br_if $label$break$L192
                                       (i32.le_s
                                        (local.get $5)
                                        (i32.const 1)
                                       )
                                      )
                                      (local.set $1
                                       (i32.add
                                        (local.get $1)
                                        (i32.const 1)
                                       )
                                      )
                                      (local.set $4
                                       (i32.add
                                        (local.get $4)
                                        (i32.const 1)
                                       )
                                      )
                                      (local.set $5
                                       (i32.load
                                        (i32.const 14196)
                                       )
                                      )
                                      (local.set $7
                                       (i32.lt_s
                                        (local.get $4)
                                        (local.get $5)
                                       )
                                      )
                                      (local.set $5
                                       (i32.lt_s
                                        (local.get $1)
                                        (local.get $5)
                                       )
                                      )
                                      (if
                                       (i32.and
                                        (local.get $5)
                                        (local.get $7)
                                       )
                                       (block
                                        (local.set $5
                                         (local.get $6)
                                        )
                                        (br $while-in87)
                                       )
                                      )
                                     )
                                    )
                                    (local.set $0
                                     (i32.const 0)
                                    )
                                   )
                                   ;;@ base.c:271:0
                                   (br_if $label$break$L1
                                    (local.get $0)
                                   )
                                  )
                                 )
                                 ;;@ base.c:264:0
                                 (local.set $2
                                  (i32.add
                                   (local.get $2)
                                   (i32.const 1)
                                  )
                                 )
                                 (local.set $0
                                  (i32.load
                                   (i32.const 14196)
                                  )
                                 )
                                 (br_if $while-in84
                                  (i32.lt_s
                                   (local.get $2)
                                   (local.get $0)
                                  )
                                 )
                                )
                               )
                              )
                              ;;@ base.c:263:0
                              (local.set $3
                               (i32.add
                                (local.get $3)
                                (i32.const 1)
                               )
                              )
                              (br_if $label$continue$L184
                               (i32.lt_s
                                (local.get $3)
                                (local.get $0)
                               )
                              )
                             )
                             (br $__rjto$1)
                            )
                            (local.set $0
                             (i32.div_u
                              (local.get $0)
                              (i32.const 10)
                             )
                            )
                            (br $label$break$L1)
                           )
                           (if (result i32)
                            ;;@ base.c:277:0
                            (i32.gt_s
                             (local.get $0)
                             (i32.const 0)
                            )
                            (block (result i32)
                             (local.set $3
                              (i32.const 0)
                             )
                             (block $__rjto$0
                              (block $__rjti$0
                               (loop $label$continue$L205
                                (if
                                 ;;@ base.c:278:0
                                 (i32.gt_s
                                  (local.get $0)
                                  (i32.const 0)
                                 )
                                 (block
                                  (local.set $2
                                   (i32.const 0)
                                  )
                                  (loop $while-in94
                                   ;;@ base.c:279:0
                                   (drop
                                    (call $_CheckLine
                                     (i32.const 0)
                                     (i32.const 0)
                                     (i32.const 0)
                                     (i32.const 1)
                                    )
                                   )
                                   ;;@ base.c:280:0
                                   (local.set $0
                                    (i32.load
                                     (i32.const 14196)
                                    )
                                   )
                                   (if
                                    (i32.gt_s
                                     (local.get $0)
                                     (i32.const 0)
                                    )
                                    (block
                                     (local.set $0
                                      (local.get $2)
                                     )
                                     (local.set $5
                                      (i32.const 0)
                                     )
                                     (local.set $4
                                      (local.get $3)
                                     )
                                     (loop $while-in96
                                      (block $switch97
                                       (block $switch-case98
                                        ;;@ base.c:281:0
                                        (br_table $switch-case98 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $__rjti$0 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $switch97 $__rjti$0 $switch97
                                         (i32.sub
                                          (local.tee $1
                                           (call $_CheckLine
                                            (local.get $0)
                                            (local.get $5)
                                            (local.get $4)
                                            (i32.const 0)
                                           )
                                          )
                                          (i32.const -1)
                                         )
                                        )
                                       )
                                       (local.set $0
                                        (local.get $1)
                                       )
                                       (br $label$break$L1)
                                      )
                                      ;;@ base.c:280:0
                                      (local.set $5
                                       (i32.add
                                        (local.get $5)
                                        (i32.const 1)
                                       )
                                      )
                                      (local.set $0
                                       (i32.add
                                        (local.get $0)
                                        (i32.const -1)
                                       )
                                      )
                                      (local.set $4
                                       (i32.add
                                        (local.get $4)
                                        (i32.const -1)
                                       )
                                      )
                                      (local.set $6
                                       (i32.load
                                        (i32.const 14196)
                                       )
                                      )
                                      (local.set $7
                                       (i32.lt_s
                                        (local.get $5)
                                        (local.get $6)
                                       )
                                      )
                                      (local.set $8
                                       (i32.or
                                        (local.get $0)
                                        (local.get $4)
                                       )
                                      )
                                      (local.set $8
                                       (i32.gt_s
                                        (local.get $8)
                                        (i32.const -1)
                                       )
                                      )
                                      (br_if $while-in96
                                       (i32.and
                                        (local.get $7)
                                        (local.get $8)
                                       )
                                      )
                                     )
                                     (local.set $0
                                      (if (result i32)
                                       ;;@ base.c:285:0
                                       (local.get $1)
                                       (block
                                        (local.set $0
                                         (local.get $1)
                                        )
                                        (br $label$break$L1)
                                       )
                                       (local.get $6)
                                      )
                                     )
                                    )
                                   )
                                   ;;@ base.c:278:0
                                   (local.set $2
                                    (i32.add
                                     (local.get $2)
                                     (i32.const 1)
                                    )
                                   )
                                   (br_if $while-in94
                                    (i32.lt_s
                                     (local.get $2)
                                     (local.get $0)
                                    )
                                   )
                                  )
                                 )
                                )
                                ;;@ base.c:277:0
                                (local.set $3
                                 (i32.add
                                  (local.get $3)
                                  (i32.const 1)
                                 )
                                )
                                (br_if $label$continue$L205
                                 (i32.lt_s
                                  (local.get $3)
                                  (local.get $0)
                                 )
                                )
                               )
                               (br $__rjto$0)
                              )
                              (local.set $0
                               (i32.div_u
                                (local.get $1)
                                (i32.const 10)
                               )
                              )
                              (br $label$break$L1)
                             )
                             (if (result i32)
                              ;;@ base.c:291:0
                              (i32.gt_s
                               (local.get $0)
                               (i32.const 0)
                              )
                              (block (result i32)
                               (local.set $3
                                (i32.const 0)
                               )
                               (loop $label$continue$L223
                                (block $label$break$L223
                                 (if
                                  ;;@ base.c:292:0
                                  (i32.gt_s
                                   (local.get $0)
                                   (i32.const 0)
                                  )
                                  (block
                                   (local.set $2
                                    (i32.const 0)
                                   )
                                   (loop $while-in103
                                    ;;@ base.c:293:0
                                    (drop
                                     (call $_CheckLine
                                      (i32.const 0)
                                      (i32.const 0)
                                      (i32.const 0)
                                      (i32.const 1)
                                     )
                                    )
                                    ;;@ base.c:294:0
                                    (local.set $0
                                     (i32.load
                                      (i32.const 14196)
                                     )
                                    )
                                    (local.set $4
                                     (i32.gt_s
                                      (local.get $0)
                                      (i32.const 0)
                                     )
                                    )
                                    (local.set $1
                                     (i32.lt_s
                                      (local.get $3)
                                      (local.get $0)
                                     )
                                    )
                                    (if
                                     (i32.and
                                      (local.get $1)
                                      (local.get $4)
                                     )
                                     (block
                                      (local.set $0
                                       (local.get $2)
                                      )
                                      (local.set $5
                                       (i32.const 0)
                                      )
                                      (local.set $4
                                       (local.get $3)
                                      )
                                      (loop $while-in105
                                       (block $switch106
                                        (block $switch-case107
                                         ;;@ base.c:295:0
                                         (br_table $switch-case107 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $label$break$L223 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $switch106 $label$break$L223 $switch106
                                          (i32.sub
                                           (local.tee $1
                                            (call $_CheckLine
                                             (local.get $0)
                                             (local.get $5)
                                             (local.get $4)
                                             (i32.const 0)
                                            )
                                           )
                                           (i32.const -1)
                                          )
                                         )
                                        )
                                        (local.set $0
                                         (local.get $1)
                                        )
                                        (br $label$break$L1)
                                       )
                                       ;;@ base.c:294:0
                                       (local.set $5
                                        (i32.add
                                         (local.get $5)
                                         (i32.const 1)
                                        )
                                       )
                                       (local.set $6
                                        (i32.add
                                         (local.get $0)
                                         (i32.const -1)
                                        )
                                       )
                                       (local.set $4
                                        (i32.add
                                         (local.get $4)
                                         (i32.const 1)
                                        )
                                       )
                                       (local.set $7
                                        (i32.load
                                         (i32.const 14196)
                                        )
                                       )
                                       (local.set $8
                                        (i32.lt_s
                                         (local.get $5)
                                         (local.get $7)
                                        )
                                       )
                                       (local.set $0
                                        (i32.gt_s
                                         (local.get $0)
                                         (i32.const 0)
                                        )
                                       )
                                       (local.set $0
                                        (i32.and
                                         (local.get $0)
                                         (local.get $8)
                                        )
                                       )
                                       (local.set $8
                                        (i32.lt_s
                                         (local.get $4)
                                         (local.get $7)
                                        )
                                       )
                                       (if
                                        (i32.and
                                         (local.get $0)
                                         (local.get $8)
                                        )
                                        (block
                                         (local.set $0
                                          (local.get $6)
                                         )
                                         (br $while-in105)
                                        )
                                       )
                                      )
                                      (local.set $0
                                       (if (result i32)
                                        ;;@ base.c:299:0
                                        (local.get $1)
                                        (block
                                         (local.set $0
                                          (local.get $1)
                                         )
                                         (br $label$break$L1)
                                        )
                                        (local.get $7)
                                       )
                                      )
                                     )
                                    )
                                    ;;@ base.c:292:0
                                    (local.set $2
                                     (i32.add
                                      (local.get $2)
                                      (i32.const 1)
                                     )
                                    )
                                    (br_if $while-in103
                                     (i32.lt_s
                                      (local.get $2)
                                      (local.get $0)
                                     )
                                    )
                                   )
                                  )
                                 )
                                 ;;@ base.c:291:0
                                 (local.set $3
                                  (i32.add
                                   (local.get $3)
                                   (i32.const 1)
                                  )
                                 )
                                 (br_if $label$continue$L223
                                  (i32.lt_s
                                   (local.get $3)
                                   (local.get $0)
                                  )
                                 )
                                 (local.set $0
                                  (i32.const 0)
                                 )
                                 (br $label$break$L1)
                                )
                               )
                               (i32.div_u
                                (local.get $1)
                                (i32.const 10)
                               )
                              )
                              (i32.const 0)
                             )
                            )
                            (i32.const 0)
                           )
                          )
                          (i32.const 0)
                         )
                        )
                        (i32.const 0)
                       )
                      )
                      (i32.const 0)
                     )
                    )
                    (i32.const 0)
                   )
                  )
                  (i32.const 0)
                 )
                )
                (i32.const 0)
               )
              )
              (i32.const 0)
             )
            )
            (i32.const 0)
           )
          )
          (i32.const 0)
         )
        )
        (i32.const 0)
       )
      )
      (i32.const 0)
     )
    )
   )
  )
  ;;@ base.c:306:0
  (local.get $0)
 )
 (func $_CheckLine (; 318 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (if
   ;;@ base.c:317:0
   (local.get $3)
   (block
    ;;@ base.c:318:0
    (i32.store
     (i32.const 32992)
     (i32.const 0)
    )
    (i32.store
     (i32.const 32996)
     (i32.const 0)
    )
    (i32.store
     (i32.const 33000)
     (i32.const 0)
    )
    (local.set $0
     (i32.const 0)
    )
   )
   (block $label$break$L1
    ;;@ base.c:323:0
    (local.set $3
     (i32.load
      (i32.const 33000)
     )
    )
    (local.set $1
     (i32.load16_s
      (i32.add
       (i32.load
        (i32.add
         (i32.load
          (i32.add
           (i32.load
            (i32.const 32980)
           )
           (i32.shl
            (local.get $2)
            (i32.const 2)
           )
          )
         )
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
        )
       )
       (i32.shl
        (local.get $0)
        (i32.const 1)
       )
      )
     )
    )
    (if
     (local.get $3)
     (block
      ;;@ base.c:324:0
      (local.set $0
       (i32.load
        (i32.const 32992)
       )
      )
      (if
       (i32.eq
        (local.get $0)
        (local.get $1)
       )
       (block
        ;;@ base.c:325:0
        (i32.store
         (i32.const 33000)
         (i32.const 0)
        )
        ;;@ base.c:326:0
        (local.set $0
         (i32.load
          (i32.const 32996)
         )
        )
        (local.set $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.store
         (i32.const 32996)
         (local.get $0)
        )
        (local.set $0
         (i32.const 0)
        )
       )
       ;;@ base.c:330:0
       (local.set $0
        (i32.mul
         (local.get $3)
         (i32.const 10)
        )
       )
      )
      (br $label$break$L1)
     )
    )
    (block $switch
     (block $switch-default
      (block $switch-case1
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case0 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case1 $switch-default
          (local.get $1)
         )
        )
        (local.set $0
         (local.get $1)
        )
        (br $switch)
       )
       ;;@ base.c:339:0
       (local.set $0
        (i32.load
         (i32.const 32992)
        )
       )
       (local.set $0
        (if (result i32)
         (i32.eq
          (local.get $0)
          (i32.const 79)
         )
         (block (result i32)
          ;;@ base.c:340:0
          (local.set $0
           (i32.load
            (i32.const 32996)
           )
          )
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (i32.const 1)
        )
       )
       (br $switch)
      )
      ;;@ base.c:345:0
      (local.set $0
       (i32.load
        (i32.const 32992)
       )
      )
      (local.set $0
       (if (result i32)
        (i32.eq
         (local.get $0)
         (i32.const 88)
        )
        (block (result i32)
         ;;@ base.c:346:0
         (local.set $0
          (i32.load
           (i32.const 32996)
          )
         )
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.const 1)
       )
      )
      (br $switch)
     )
     (local.set $0
      (i32.const -1)
     )
     (br $label$break$L1)
    )
    (i32.store
     (i32.const 32996)
     (local.get $0)
    )
    ;;@ base.c:356:0
    (local.set $2
     (i32.load
      (i32.const 14200)
     )
    )
    (if
     (i32.eq
      (local.get $0)
      (local.get $2)
     )
     (block
      ;;@ base.c:357:0
      (local.set $0
       (i32.load
        (i32.const 32992)
       )
      )
      (i32.store
       (i32.const 33000)
       (local.get $0)
      )
     )
     (local.set $0
      (i32.const 0)
     )
    )
    ;;@ base.c:358:0
    (i32.store
     (i32.const 32992)
     (local.get $1)
    )
   )
  )
  ;;@ base.c:361:0
  (local.get $0)
 )
 (func $_UpdateInfoBox (; 319 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (param $2 f32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 f32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f64)
  (local $14 f64)
  (local $15 f64)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 80)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 80)
   )
  )
  (local.set $9
   (i32.add
    (local.get $7)
    (i32.const 72)
   )
  )
  (local.set $5
   (i32.add
    (local.get $7)
    (i32.const 32)
   )
  )
  (local.set $8
   (local.get $7)
  )
  ;;@ visualscript.c:67:0
  (local.set $4
   (call $_clock)
  )
  ;;@ visualscript.c:68:0
  (local.set $3
   (i32.load
    (i32.const 14204)
   )
  )
  (local.set $4
   (i32.sub
    (local.get $4)
    (local.get $3)
   )
  )
  (local.set $10
   (f32.convert_i32_s
    (local.get $4)
   )
  )
  (local.set $10
   (f32.div
    (local.get $10)
    (f32.const 1e6)
   )
  )
  (local.set $4
   (i32.trunc_f32_s
    (local.get $10)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    ;;@ visualscript.c:74:0
    (br_if $__rjti$0
     (i32.eq
      (local.get $3)
      (i32.const -1)
     )
    )
    (local.set $6
     (i32.load
      (i32.const 33008)
     )
    )
    (local.set $3
     (i32.load
      (i32.const 14208)
     )
    )
    (br_if $__rjti$0
     (i32.ne
      (local.get $3)
      (local.get $6)
     )
    )
    ;;@ visualscript.c:79:0
    (local.set $6
     (i32.eqz
      (local.get $6)
     )
    )
    (local.set $3
     (i32.load
      (i32.const 14212)
     )
    )
    (local.set $3
     (i32.gt_s
      (local.get $3)
      (local.get $4)
     )
    )
    (if
     (i32.eqz
      (i32.or
       (local.get $3)
       (local.get $6)
      )
     )
     (block
      ;;@ visualscript.c:80:0
      (call $_UpdateNotiBox
       (i32.const 14517)
      )
      ;;@ visualscript.c:81:0
      (local.set $3
       (i32.load
        (i32.const 14208)
       )
      )
      (local.set $3
       (i32.eq
        (local.get $3)
        (i32.const 79)
       )
      )
      (local.set $3
       (select
        (i32.const 88)
        (i32.const 79)
        (local.get $3)
       )
      )
      (i32.store
       (i32.const 14208)
       (local.get $3)
      )
     )
    )
    (br $__rjto$0)
   )
   ;;@ visualscript.c:75:0
   (local.set $4
    (call $_clock)
   )
   (i32.store
    (i32.const 14204)
    (local.get $4)
   )
   ;;@ visualscript.c:76:0
   (local.set $4
    (i32.load
     (i32.const 14212)
    )
   )
   ;;@ visualscript.c:77:0
   (local.set $3
    (i32.load
     (i32.const 14208)
    )
   )
   (i32.store
    (i32.const 33008)
    (local.get $3)
   )
  )
  ;;@ visualscript.c:103:0
  (local.set $11
   (i32.load
    (i32.const 14196)
   )
  )
  (local.set $12
   (i32.load
    (i32.const 14200)
   )
  )
  ;;@ visualscript.c:104:0
  (local.set $6
   (i32.load
    (i32.const 33012)
   )
  )
  (local.set $3
   (i32.load
    (i32.const 33016)
   )
  )
  ;;@ visualscript.c:105:0
  (local.set $13
   (f64.promote_f32
    (local.get $0)
   )
  )
  (local.set $14
   (f64.promote_f32
    (local.get $1)
   )
  )
  (local.set $15
   (f64.promote_f32
    (local.get $2)
   )
  )
  ;;@ visualscript.c:84:0
  (i32.store
   (local.get $5)
   (local.get $11)
  )
  (i32.store offset=4
   (local.get $5)
   (local.get $12)
  )
  (i32.store offset=8
   (local.get $5)
   (local.get $6)
  )
  (i32.store offset=12
   (local.get $5)
   (local.get $3)
  )
  (f64.store offset=16
   (local.get $5)
   (local.get $13)
  )
  (f64.store offset=24
   (local.get $5)
   (local.get $14)
  )
  (f64.store offset=32
   (local.get $5)
   (local.get $15)
  )
  (call $_sprintf
   (i32.const 26064)
   (i32.const 14528)
   (local.get $5)
  )
  ;;@ visualscript.c:108:0
  (local.set $3
   (i32.load
    (i32.const 14208)
   )
  )
  (local.set $4
   (if (result i32)
    (local.get $3)
    (block (result i32)
     ;;@ visualscript.c:109:0
     (local.set $6
      (i32.ne
       (local.get $3)
       (i32.const 79)
      )
     )
     (local.set $3
      (i32.load
       (i32.const 14212)
      )
     )
     (local.set $4
      (i32.sub
       (local.get $3)
       (local.get $4)
      )
     )
     (i32.store
      (local.get $9)
      (local.get $6)
     )
     (i32.store offset=4
      (local.get $9)
      (local.get $4)
     )
     (call $_sprintf
      (local.get $8)
      (i32.const 14711)
      (local.get $9)
     )
     (call $_strcat
      (i32.const 26064)
      (local.get $8)
     )
     ;;@ visualscript.c:113:0
     (local.set $3
      (i32.load
       (i32.const 14208)
      )
     )
     (local.set $4
      (i32.eq
       (local.get $3)
       (i32.const 79)
      )
     )
     (local.set $8
      (select
       (i32.const -16777165)
       (i32.const -205)
       (local.get $4)
      )
     )
     (local.set $4
      (i32.eq
       (local.get $3)
       (i32.const 88)
      )
     )
     (select
      (i32.const 65331)
      (local.get $8)
      (local.get $4)
     )
    )
    (i32.const -205)
   )
  )
  (i32.store
   (i32.const 33004)
   (local.get $4)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_UpdateNotiBox (; 320 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  ;;@ visualscript.c:135:0
  (if
   ;;@ visualscript.c:120:0
   (local.get $0)
   (block
    ;;@ visualscript.c:122:0
    (local.set $1
     (i32.load
      (i32.const 33020)
     )
    )
    (local.set $1
     (i32.rem_s
      (local.get $1)
      (i32.const 6)
     )
    )
    (local.set $1
     (i32.add
      (i32.mul
       (local.get $1)
       (i32.const 28)
      )
      (i32.const 27424)
     )
    )
    (call $_strcpy
     (local.get $1)
     (local.get $0)
    )
    ;;@ visualscript.c:124:0
    (i32.store8
     (i32.const 26576)
     (i32.const 0)
    )
    ;;@ visualscript.c:125:0
    (local.set $0
     (i32.load
      (i32.const 33020)
     )
    )
    (if
     (i32.lt_s
      (local.get $0)
      (i32.const 6)
     )
     (if
      ;;@ visualscript.c:126:0
      (i32.ge_s
       (local.get $0)
       (i32.const 0)
      )
      (block
       (local.set $0
        (i32.const 0)
       )
       (local.set $0
        (loop $while-in (result i32)
         ;;@ visualscript.c:127:0
         (local.set $1
          (i32.add
           (i32.mul
            (local.get $0)
            (i32.const 28)
           )
           (i32.const 27424)
          )
         )
         (call $_strcat
          (i32.const 26576)
          (local.get $1)
         )
         ;;@ visualscript.c:126:0
         (local.set $1
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (local.set $2
          (i32.load
           (i32.const 33020)
          )
         )
         (if (result i32)
          (i32.lt_s
           (local.get $0)
           (local.get $2)
          )
          (block
           (local.set $0
            (local.get $1)
           )
           (br $while-in)
          )
          (local.get $2)
         )
        )
       )
      )
     )
     (block
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in1
       ;;@ visualscript.c:131:0
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (local.get $1)
        )
       )
       (local.set $0
        (i32.rem_s
         (local.get $0)
         (i32.const 6)
        )
       )
       (local.set $0
        (i32.add
         (i32.mul
          (local.get $0)
          (i32.const 28)
         )
         (i32.const 27424)
        )
       )
       (call $_strcat
        (i32.const 26576)
        (local.get $0)
       )
       ;;@ visualscript.c:130:0
       (local.set $0
        (i32.load
         (i32.const 33020)
        )
       )
       (br_if $while-in1
        (i32.ne
         (local.get $1)
         (i32.const 6)
        )
       )
      )
     )
    )
    ;;@ visualscript.c:134:0
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 1)
     )
    )
    (i32.store
     (i32.const 33020)
     (local.get $0)
    )
   )
  )
 )
 (func $_UpdateMenuBox (; 321 ;) (; has Stack IR ;) (param $0 i32)
  (if
   ;;@ visualscript.c:167:0
   (i32.eqz
    (i32.load8_s
     (i32.const 26752)
    )
   )
   (drop
    (call $_memcpy
     (i32.const 26752)
     (i32.const 14736)
     (i32.const 253)
    )
   )
  )
  (if
   ;;@ visualscript.c:169:0
   (i32.lt_u
    (local.get $0)
    (i32.const 10)
   )
   (block $label$break$L4
    (block $__rjto$0
     ;;@ visualscript.c:295:0
     (br_if $label$break$L4
      (block $__rjti$0 (result i32)
       (block $switch-case12
        (block $switch-case11
         (block $switch-case10
          (block $switch-case9
           (block $switch-case8
            (block $switch-case7
             (block $switch-case6
              ;;@ visualscript.c:172:0
              (br_table $switch-case6 $switch-case7 $switch-case8 $switch-case9 $__rjto$0 $__rjto$0 $__rjto$0 $switch-case10 $switch-case11 $switch-case12 $__rjto$0
               (i32.load
                (i32.const 33024)
               )
              )
             )
             ;;@ visualscript.c:173:0
             (i32.store
              (i32.const 33024)
              (local.get $0)
             )
             (block $switch-case5
              (block $switch-case4
               (block $switch-case3
                (block $switch-case2
                 (block $switch-case1
                  (block $switch-case
                   (br_table $switch-case1 $switch-case2 $switch-case3 $label$break$L4 $label$break$L4 $label$break$L4 $switch-case4 $switch-case5 $switch-case $label$break$L4
                    (i32.sub
                     (local.get $0)
                     (i32.const 1)
                    )
                   )
                  )
                  (i64.store align=1
                   (i32.const 26752)
                   (i64.load align=1
                    (i32.const 15311)
                   )
                  )
                  ;;@ visualscript.c:248:0
                  (i32.store8
                   (i32.const 26760)
                   (i32.load8_s
                    (i32.const 15319)
                   )
                  )
                  (br $label$break$L4)
                 )
                 (i64.store align=1
                  (i32.const 26752)
                  (i64.load align=1
                   (i32.const 14989)
                  )
                 )
                 (i64.store align=1
                  (i32.const 26760)
                  (i64.load align=1
                   (i32.const 14997)
                  )
                 )
                 (i64.store align=1
                  (i32.const 26768)
                  (i64.load align=1
                   (i32.const 15005)
                  )
                 )
                 (i64.store align=1
                  (i32.const 26776)
                  (i64.load align=1
                   (i32.const 15013)
                  )
                 )
                 (i64.store align=1
                  (i32.const 26784)
                  (i64.load align=1
                   (i32.const 15021)
                  )
                 )
                 ;;@ visualscript.c:177:0
                 (i32.store8
                  (i32.const 26792)
                  (i32.load8_s
                   (i32.const 15029)
                  )
                 )
                 (br $label$break$L4)
                )
                (i64.store align=1
                 (i32.const 26752)
                 (i64.load align=1
                  (i32.const 15030)
                 )
                )
                (i64.store align=1
                 (i32.const 26760)
                 (i64.load align=1
                  (i32.const 15038)
                 )
                )
                (i64.store align=1
                 (i32.const 26768)
                 (i64.load align=1
                  (i32.const 15046)
                 )
                )
                (i64.store align=1
                 (i32.const 26776)
                 (i64.load align=1
                  (i32.const 15054)
                 )
                )
                (i64.store align=1
                 (i32.const 26784)
                 (i64.load align=1
                  (i32.const 15062)
                 )
                )
                (i64.store align=1
                 (i32.const 26792)
                 (i64.load align=1
                  (i32.const 15070)
                 )
                )
                (i64.store align=1
                 (i32.const 26800)
                 (i64.load align=1
                  (i32.const 15078)
                 )
                )
                (i64.store align=1
                 (i32.const 26808)
                 (i64.load align=1
                  (i32.const 15086)
                 )
                )
                (i64.store align=1
                 (i32.const 26816)
                 (i64.load align=1
                  (i32.const 15094)
                 )
                )
                (i64.store align=1
                 (i32.const 26824)
                 (i64.load align=1
                  (i32.const 15102)
                 )
                )
                (i32.store align=1
                 (i32.const 26832)
                 (i32.load align=1
                  (i32.const 15110)
                 )
                )
                ;;@ visualscript.c:184:0
                (i32.store16 align=1
                 (i32.const 26836)
                 (i32.load16_s align=1
                  (i32.const 15114)
                 )
                )
                (br $label$break$L4)
               )
               (i64.store align=1
                (i32.const 26752)
                (i64.load align=1
                 (i32.const 15116)
                )
               )
               (i64.store align=1
                (i32.const 26760)
                (i64.load align=1
                 (i32.const 15124)
                )
               )
               (i64.store align=1
                (i32.const 26768)
                (i64.load align=1
                 (i32.const 15132)
                )
               )
               (i64.store align=1
                (i32.const 26776)
                (i64.load align=1
                 (i32.const 15140)
                )
               )
               (i64.store align=1
                (i32.const 26784)
                (i64.load align=1
                 (i32.const 15148)
                )
               )
               (i32.store align=1
                (i32.const 26792)
                (i32.load align=1
                 (i32.const 15156)
                )
               )
               ;;@ visualscript.c:192:0
               (i32.store8
                (i32.const 26796)
                (i32.load8_s
                 (i32.const 15160)
                )
               )
               (br $label$break$L4)
              )
              (i64.store align=1
               (i32.const 26752)
               (i64.load align=1
                (i32.const 15161)
               )
              )
              (i64.store align=1
               (i32.const 26760)
               (i64.load align=1
                (i32.const 15169)
               )
              )
              (i64.store align=1
               (i32.const 26768)
               (i64.load align=1
                (i32.const 15177)
               )
              )
              (i64.store align=1
               (i32.const 26776)
               (i64.load align=1
                (i32.const 15185)
               )
              )
              (i64.store align=1
               (i32.const 26784)
               (i64.load align=1
                (i32.const 15193)
               )
              )
              (i64.store align=1
               (i32.const 26792)
               (i64.load align=1
                (i32.const 15201)
               )
              )
              (i64.store align=1
               (i32.const 26800)
               (i64.load align=1
                (i32.const 15209)
               )
              )
              (i64.store align=1
               (i32.const 26808)
               (i64.load align=1
                (i32.const 15217)
               )
              )
              (i32.store align=1
               (i32.const 26816)
               (i32.load align=1
                (i32.const 15225)
               )
              )
              ;;@ visualscript.c:231:0
              (i32.store16 align=1
               (i32.const 26820)
               (i32.load16_s align=1
                (i32.const 15229)
               )
              )
              (br $label$break$L4)
             )
             (i64.store align=1
              (i32.const 26752)
              (i64.load align=1
               (i32.const 15231)
              )
             )
             (i64.store align=1
              (i32.const 26760)
              (i64.load align=1
               (i32.const 15239)
              )
             )
             (i64.store align=1
              (i32.const 26768)
              (i64.load align=1
               (i32.const 15247)
              )
             )
             (i64.store align=1
              (i32.const 26776)
              (i64.load align=1
               (i32.const 15255)
              )
             )
             (i64.store align=1
              (i32.const 26784)
              (i64.load align=1
               (i32.const 15263)
              )
             )
             (i64.store align=1
              (i32.const 26792)
              (i64.load align=1
               (i32.const 15271)
              )
             )
             (i64.store align=1
              (i32.const 26800)
              (i64.load align=1
               (i32.const 15279)
              )
             )
             (i64.store align=1
              (i32.const 26808)
              (i64.load align=1
               (i32.const 15287)
              )
             )
             (i64.store align=1
              (i32.const 26816)
              (i64.load align=1
               (i32.const 15295)
              )
             )
             ;;@ visualscript.c:240:0
             (i64.store align=1
              (i32.const 26824)
              (i64.load align=1
               (i32.const 15303)
              )
             )
             (br $label$break$L4)
            )
            ;;@ visualscript.c:256:0
            (call $_ResetGrid
             (local.get $0)
            )
            (br $__rjto$0)
           )
           ;;@ visualscript.c:260:0
           (br $__rjti$0
            (call $_ChangeGameRules
             (local.get $0)
            )
           )
          )
          ;;@ visualscript.c:264:0
          (if
           (local.get $0)
           (block
            ;;@ visualscript.c:416:0
            (i32.store
             (i32.const 14212)
             (i32.mul
              (local.get $0)
              (i32.const 10)
             )
            )
            ;;@ visualscript.c:417:0
            (call $_UpdateNotiBox
             (i32.const 15596)
            )
           )
           ;;@ visualscript.c:412:0
           (call $_UpdateNotiBox
            (i32.const 15570)
           )
          )
          (br $__rjto$0)
         )
         ;;@ visualscript.c:284:0
         (call $_ChangePiecesizeMult
          (local.get $0)
         )
         (br $__rjto$0)
        )
        ;;@ visualscript.c:288:0
        (call $_SwapPlayers
         (local.get $0)
        )
        (br $__rjto$0)
       )
       ;;@ visualscript.c:292:0
       (call $_InputCoord
        (local.get $0)
       )
      )
     )
    )
    ;;@ visualscript.c:296:0
    (i32.store
     (i32.const 33024)
     (i32.const 0)
    )
    ;;@ visualscript.c:297:0
    (drop
     (call $_memcpy
      (i32.const 26752)
      (i32.const 14736)
      (i32.const 253)
     )
    )
   )
  )
 )
 (func $_ResetGrid (; 322 ;) (; has Stack IR ;) (param $0 i32)
  ;;@ visualscript.c:387:0
  (if
   ;;@ visualscript.c:374:0
   (i32.eq
    (local.get $0)
    (i32.const 1)
   )
   (block
    ;;@ visualscript.c:376:0
    (local.set $0
     (call $_InitGrid)
    )
    (if
     (i32.eq
      (local.get $0)
      (i32.const -1)
     )
     ;;@ visualscript.c:377:0
     (call $_UpdateNotiBox
      (i32.const 15773)
     )
     (block
      ;;@ visualscript.c:385:0
      (i32.store
       (i32.const 14208)
       (i32.const 79)
      )
      ;;@ visualscript.c:386:0
      (call $_UpdateNotiBox
       (i32.const 15795)
      )
     )
    )
   )
  )
 )
 (func $_ChangeGameRules (; 323 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  ;;@ visualscript.c:393:0
  (local.set $1
   (i32.load
    (i32.const 33036)
   )
  )
  (local.set $0
   (if (result i32)
    (local.get $1)
    (block (result i32)
     ;;@ visualscript.c:400:0
     (i32.store
      (i32.const 33044)
      (local.get $0)
     )
     ;;@ visualscript.c:401:0
     (call $_UpdateNotiBox
      (i32.const 15632)
     )
     ;;@ visualscript.c:402:0
     (i32.store
      (i32.const 33036)
      (i32.const 0)
     )
     ;;@ visualscript.c:404:0
     (local.set $0
      (i32.load
       (i32.const 33040)
      )
     )
     (call $_ChangeLines
      (local.get $0)
     )
     ;;@ visualscript.c:405:0
     (local.set $0
      (i32.load
       (i32.const 33044)
      )
     )
     (call $_ChangeWinCond
      (local.get $0)
     )
     ;;@ visualscript.c:406:0
     (call $_ResetGrid
      (i32.const 1)
     )
     (i32.const 0)
    )
    (block (result i32)
     ;;@ visualscript.c:394:0
     (i32.store
      (i32.const 33040)
      (local.get $0)
     )
     ;;@ visualscript.c:395:0
     (call $_UpdateNotiBox
      (i32.const 15616)
     )
     ;;@ visualscript.c:396:0
     (i32.store
      (i32.const 33036)
      (i32.const 1)
     )
     (i32.const 1)
    )
   )
  )
  ;;@ visualscript.c:408:0
  (local.get $0)
 )
 (func $_ChangePiecesizeMult (; 324 ;) (; has Stack IR ;) (param $0 i32)
  ;;@ visualscript.c:495:0
  (block $__rjto$1
   (block $__rjti$1
    (f32.store
     (i32.const 14160)
     (block $__rjti$0 (result f32)
      (block $switch-case2
       (block $switch-case1
        (block $switch-case0
         (br_table $__rjto$1 $switch-case0 $switch-case1 $switch-case2 $__rjti$1
          (local.get $0)
         )
        )
        (br $__rjti$0
         (f32.const 0.75)
        )
       )
       (br $__rjti$0
        (f32.const 1)
       )
      )
      (f32.const 1.25)
     )
    )
   )
   ;;@ visualscript.c:493:0
   (call $_UpdateNotiBox
    (i32.const 15549)
   )
  )
 )
 (func $_SwapPlayers (; 325 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  ;;@ visualscript.c:513:0
  (if
   ;;@ visualscript.c:498:0
   (i32.eq
    (local.get $0)
    (i32.const 1)
   )
   (block $do-once
    ;;@ visualscript.c:500:0
    (local.set $0
     (i32.load
      (i32.const 32984)
     )
    )
    (if
     (i32.ne
      (local.get $0)
      (i32.const 5)
     )
     (block
      ;;@ visualscript.c:501:0
      (call $_UpdateNotiBox
       (i32.const 15504)
      )
      (br $do-once)
     )
    )
    ;;@ visualscript.c:505:0
    (local.set $2
     (i32.load
      (i32.const 14196)
     )
    )
    (if
     (i32.gt_s
      (local.get $2)
      (i32.const 0)
     )
     (block
      (local.set $6
       (i32.load
        (i32.const 32980)
       )
      )
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in
       (local.set $7
        (i32.load
         (i32.add
          (i32.shl
           (local.get $0)
           (i32.const 2)
          )
          (local.get $6)
         )
        )
       )
       (local.set $3
        (i32.const 0)
       )
       (loop $while-in1
        (local.set $8
         (i32.load
          (i32.add
           (i32.shl
            (local.get $3)
            (i32.const 2)
           )
           (local.get $7)
          )
         )
        )
        (local.set $4
         (i32.const 0)
        )
        (loop $while-in3
         ;;@ visualscript.c:508:0
         (local.set $5
          (i32.add
           (i32.shl
            (local.get $4)
            (i32.const 1)
           )
           (local.get $8)
          )
         )
         (local.set $1
          (i32.load16_s
           (local.get $5)
          )
         )
         (if
          (local.get $1)
          (block
           ;;@ visualscript.c:509:0
           (local.set $1
            (i32.eq
             (local.get $1)
             (i32.const 79)
            )
           )
           (local.set $1
            (select
             (i32.const 88)
             (i32.const 79)
             (local.get $1)
            )
           )
           (i32.store16
            (local.get $5)
            (local.get $1)
           )
          )
         )
         ;;@ visualscript.c:507:0
         (local.set $4
          (i32.add
           (local.get $4)
           (i32.const 1)
          )
         )
         (br_if $while-in3
          (i32.ne
           (local.get $2)
           (local.get $4)
          )
         )
        )
        ;;@ visualscript.c:506:0
        (local.set $3
         (i32.add
          (local.get $3)
          (i32.const 1)
         )
        )
        (br_if $while-in1
         (i32.ne
          (local.get $2)
          (local.get $3)
         )
        )
       )
       ;;@ visualscript.c:505:0
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (br_if $while-in
        (i32.lt_s
         (local.get $0)
         (local.get $2)
        )
       )
      )
     )
    )
    ;;@ visualscript.c:511:0
    (call $_UpdateNotiBox
     (i32.const 15531)
    )
    ;;@ visualscript.c:512:0
    (local.set $0
     (i32.load
      (i32.const 14208)
     )
    )
    (local.set $0
     (i32.eq
      (local.get $0)
      (i32.const 79)
     )
    )
    (local.set $0
     (select
      (i32.const 88)
      (i32.const 79)
      (local.get $0)
     )
    )
    (i32.store
     (i32.const 14208)
     (local.get $0)
    )
   )
  )
 )
 (func $_InputCoord (; 326 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 48)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 32)
   )
  )
  (local.set $5
   (local.get $3)
  )
  ;;@ visualscript.c:521:0
  (local.set $2
   (i32.gt_s
    (local.get $0)
    (i32.const -1)
   )
  )
  (local.set $1
   (i32.load
    (i32.const 14196)
   )
  )
  (local.set $1
   (i32.gt_s
    (local.get $1)
    (local.get $0)
   )
  )
  (local.set $0
   (block $__rjto$0 (result i32)
    (block $__rjti$0
     (br $__rjto$0
      (if (result i32)
       (i32.and
        (local.get $1)
        (local.get $2)
       )
       (block (result i32)
        ;;@ visualscript.c:527:0
        (local.set $1
         (i32.load
          (i32.const 33028)
         )
        )
        (local.set $1
         (i32.mul
          (local.get $1)
          (i32.const 10)
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (local.get $1)
         )
        )
        (i32.store
         (i32.const 33028)
         (local.get $1)
        )
        ;;@ visualscript.c:528:0
        (local.set $2
         (i32.load
          (i32.const 33032)
         )
        )
        (local.set $1
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.store
         (i32.const 33032)
         (local.get $1)
        )
        ;;@ visualscript.c:529:0
        (local.set $2
         (i32.eqz
          (local.get $2)
         )
        )
        (local.set $1
         (i32.eq
          (local.get $1)
          (i32.const 2)
         )
        )
        (local.set $1
         (select
          (i32.const 121)
          (i32.const 122)
          (local.get $1)
         )
        )
        (local.set $1
         (select
          (i32.const 120)
          (local.get $1)
          (local.get $2)
         )
        )
        (i32.store
         (local.get $4)
         (local.get $1)
        )
        (i32.store offset=4
         (local.get $4)
         (local.get $0)
        )
        (call $_sprintf
         (local.get $5)
         (i32.const 15341)
         (local.get $4)
        )
        ;;@ visualscript.c:530:0
        (call $_UpdateNotiBox
         (local.get $5)
        )
        ;;@ visualscript.c:532:0
        (local.set $0
         (i32.load
          (i32.const 33032)
         )
        )
        (if (result i32)
         (i32.gt_s
          (local.get $0)
          (i32.const 2)
         )
         (block
          ;;@ visualscript.c:533:0
          (local.set $0
           (i32.load
            (i32.const 33028)
           )
          )
          (call $_PieceClicked
           (local.get $0)
          )
          (br $__rjti$0)
         )
         (i32.const 1)
        )
       )
       (block
        ;;@ visualscript.c:522:0
        (call $_UpdateNotiBox
         (i32.const 15320)
        )
        (br $__rjti$0)
       )
      )
     )
    )
    (i32.store
     (i32.const 33032)
     (i32.const 0)
    )
    (i32.store
     (i32.const 33028)
     (i32.const 0)
    )
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  ;;@ visualscript.c:539:0
  (local.get $0)
 )
 (func $_PieceClicked (; 327 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 80)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 80)
   )
  )
  (local.set $7
   (i32.sub
    (local.get $4)
    (i32.const -64)
   )
  )
  (local.set $5
   (i32.add
    (local.get $4)
    (i32.const 48)
   )
  )
  (local.set $3
   (i32.add
    (local.get $4)
    (i32.const 32)
   )
  )
  (local.set $1
   (local.get $4)
  )
  ;;@ visualscript.c:318:0
  (local.set $2
   (i32.load
    (i32.const 14208)
   )
  )
  (if
   (local.get $2)
   (block $label$break$L1
    (block $switch-default11
     (block $switch-case10
      (block $switch-case9
       (block $switch-case8
        ;;@ visualscript.c:322:0
        (br_table $switch-case10 $switch-case9 $switch-case8 $switch-default11
         (i32.sub
          (call $_InputPiece
           (local.get $2)
           (local.get $0)
          )
          (i32.const -2)
         )
        )
       )
       ;;@ visualscript.c:346:0
       (local.set $2
        (i32.load
         (i32.const 14208)
        )
       )
       (local.set $3
        (i32.ne
         (local.get $2)
         (i32.const 79)
        )
       )
       (local.set $2
        (i32.sub
         (local.get $0)
         (i32.mul
          (local.tee $6
           (i32.div_s
            (local.get $0)
            (i32.const 100)
           )
          )
          (i32.const 100)
         )
        )
       )
       (local.set $2
        (i32.div_s
         (local.get $2)
         (i32.const 10)
        )
       )
       (local.set $0
        (i32.rem_s
         (local.get $0)
         (i32.const 10)
        )
       )
       (i32.store
        (local.get $5)
        (local.get $3)
       )
       (i32.store offset=4
        (local.get $5)
        (local.get $6)
       )
       (i32.store offset=8
        (local.get $5)
        (local.get $2)
       )
       (i32.store offset=12
        (local.get $5)
        (local.get $0)
       )
       (call $_sprintf
        (local.get $1)
        (i32.const 15429)
        (local.get $5)
       )
       ;;@ visualscript.c:347:0
       (call $_UpdateNotiBox
        (local.get $1)
       )
       (block $switch0
        (block $switch-case3
         (block $switch-case2
          (block $switch-case1
           ;;@ visualscript.c:349:0
           (br_table $switch-case3 $switch-case2 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch-case1 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch0 $switch-case1 $switch0
            (i32.sub
             (call $_CheckStatus)
             (i32.const -2)
            )
           )
          )
          ;;@ visualscript.c:352:0
          (local.set $0
           (i32.load
            (i32.const 14208)
           )
          )
          (local.set $0
           (i32.ne
            (local.get $0)
            (i32.const 79)
           )
          )
          (i32.store
           (local.get $7)
           (local.get $0)
          )
          (call $_sprintf
           (local.get $1)
           (i32.const 15451)
           (local.get $7)
          )
          ;;@ visualscript.c:353:0
          (call $_UpdateNotiBox
           (local.get $1)
          )
          ;;@ visualscript.c:355:0
          (local.set $0
           (i32.load
            (i32.const 14208)
           )
          )
          (local.set $0
           (i32.ne
            (local.get $0)
            (i32.const 79)
           )
          )
          (local.set $1
           (i32.add
            (i32.shl
             (local.get $0)
             (i32.const 2)
            )
            (i32.const 33012)
           )
          )
          (local.set $0
           (i32.load
            (local.get $1)
           )
          )
          (local.set $0
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
          (i32.store
           (local.get $1)
           (local.get $0)
          )
          ;;@ visualscript.c:356:0
          (i32.store
           (i32.const 14208)
           (i32.const 0)
          )
          (br $label$break$L1)
         )
         (i64.store align=1
          (local.get $1)
          (i64.load align=1
           (i32.const 15465)
          )
         )
         (i64.store offset=8 align=1
          (local.get $1)
          (i64.load align=1
           (i32.const 15473)
          )
         )
         ;;@ visualscript.c:360:0
         (i64.store offset=16 align=1
          (local.get $1)
          (i64.load align=1
           (i32.const 15481)
          )
         )
         ;;@ visualscript.c:361:0
         (call $_UpdateNotiBox
          (local.get $1)
         )
         (br $switch0)
        )
        (i64.store align=1
         (local.get $1)
         (i64.load align=1
          (i32.const 15489)
         )
        )
        (i32.store offset=8 align=1
         (local.get $1)
         (i32.load align=1
          (i32.const 15497)
         )
        )
        (i32.store16 offset=12 align=1
         (local.get $1)
         (i32.load16_s align=1
          (i32.const 15501)
         )
        )
        ;;@ visualscript.c:364:0
        (i32.store8 offset=14
         (local.get $1)
         (i32.load8_s
          (i32.const 15503)
         )
        )
        ;;@ visualscript.c:365:0
        (call $_UpdateNotiBox
         (local.get $1)
        )
        ;;@ visualscript.c:366:0
        (i32.store
         (i32.const 14208)
         (i32.const 0)
        )
        (br $label$break$L1)
       )
       (local.set $0
        (block $switch4 (result i32)
         (block $switch-default7
          (block $switch-case6
           (if
            ;;@ visualscript.c:370:0
            (local.tee $0
             (i32.load
              (i32.const 14208)
             )
            )
            (if
             (i32.eq
              (local.get $0)
              (i32.const 79)
             )
             (br $switch-case6)
             (br $switch-default7)
            )
           )
           (br $label$break$L1)
          )
          (br $switch4
           (i32.const 88)
          )
         )
         (i32.const 79)
        )
       )
       (i32.store
        (i32.const 14208)
        (local.get $0)
       )
       (br $label$break$L1)
      )
      (i64.store align=1
       (local.get $1)
       (i64.load align=1
        (i32.const 15356)
       )
      )
      (i64.store offset=8 align=1
       (local.get $1)
       (i64.load align=1
        (i32.const 15364)
       )
      )
      (i32.store offset=16 align=1
       (local.get $1)
       (i32.load align=1
        (i32.const 15372)
       )
      )
      (i32.store16 offset=20 align=1
       (local.get $1)
       (i32.load16_s align=1
        (i32.const 15376)
       )
      )
      ;;@ visualscript.c:327:0
      (i32.store8 offset=22
       (local.get $1)
       (i32.load8_s
        (i32.const 15378)
       )
      )
      ;;@ visualscript.c:328:0
      (call $_UpdateNotiBox
       (local.get $1)
      )
      (br $label$break$L1)
     )
     ;;@ visualscript.c:332:0
     (local.set $6
      (i32.div_s
       (local.get $0)
       (i32.const 100)
      )
     )
     (local.set $2
      (i32.rem_s
       (local.get $0)
       (i32.const 100)
      )
     )
     (local.set $2
      (i32.div_s
       (local.get $2)
       (i32.const 10)
      )
     )
     (local.set $0
      (i32.rem_s
       (local.get $0)
       (i32.const 10)
      )
     )
     (i32.store
      (local.get $3)
      (local.get $6)
     )
     (i32.store offset=4
      (local.get $3)
      (local.get $2)
     )
     (i32.store offset=8
      (local.get $3)
      (local.get $0)
     )
     (call $_sprintf
      (local.get $1)
      (i32.const 15379)
      (local.get $3)
     )
     ;;@ visualscript.c:333:0
     (call $_UpdateNotiBox
      (local.get $1)
     )
     (br $label$break$L1)
    )
    (i64.store align=1
     (local.get $1)
     (i64.load align=1
      (i32.const 15408)
     )
    )
    (i64.store offset=8 align=1
     (local.get $1)
     (i64.load align=1
      (i32.const 15416)
     )
    )
    (i32.store offset=16 align=1
     (local.get $1)
     (i32.load align=1
      (i32.const 15424)
     )
    )
    ;;@ visualscript.c:337:0
    (i32.store8 offset=20
     (local.get $1)
     (i32.load8_s
      (i32.const 15428)
     )
    )
    ;;@ visualscript.c:338:0
    (call $_UpdateNotiBox
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_ChangeLines (; 328 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  ;;@ visualscript.c:542:0
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const -2)
   )
  )
  (if
   (i32.gt_u
    (local.get $1)
    (i32.const 7)
   )
   ;;@ visualscript.c:543:0
   (call $_UpdateNotiBox
    (i32.const 15703)
   )
   (block
    ;;@ visualscript.c:547:0
    (i32.store
     (i32.const 14196)
     (local.get $0)
    )
    ;;@ visualscript.c:548:0
    (call $_UpdateNotiBox
     (i32.const 15725)
    )
    ;;@ visualscript.c:549:0
    (local.set $1
     (i32.load
      (i32.const 14200)
     )
    )
    (local.set $0
     (i32.load
      (i32.const 14196)
     )
    )
    (if
     (i32.gt_s
      (local.get $1)
      (local.get $0)
     )
     (block
      ;;@ visualscript.c:550:0
      (i32.store
       (i32.const 14200)
       (local.get $0)
      )
      ;;@ visualscript.c:551:0
      (call $_UpdateNotiBox
       (i32.const 15747)
      )
     )
    )
   )
  )
 )
 (func $_ChangeWinCond (; 329 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  ;;@ visualscript.c:558:0
  (local.set $2
   (i32.lt_s
    (local.get $0)
    (i32.const 2)
   )
  )
  (local.set $1
   (i32.load
    (i32.const 14196)
   )
  )
  (local.set $1
   (i32.lt_s
    (local.get $1)
    (local.get $0)
   )
  )
  (if
   (i32.or
    (local.get $1)
    (local.get $2)
   )
   ;;@ visualscript.c:559:0
   (call $_UpdateNotiBox
    (i32.const 15652)
   )
   (block
    ;;@ visualscript.c:563:0
    (i32.store
     (i32.const 14200)
     (local.get $0)
    )
    ;;@ visualscript.c:564:0
    (call $_UpdateNotiBox
     (i32.const 15675)
    )
   )
  )
 )
 (func $_mal_device_process_pcm_frames__webaudio (; 330 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 4096)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 4096)
   )
  )
  (local.set $3
   (i32.eqz
    (local.get $1)
   )
  )
  (if
   (i32.eqz
    (i32.load offset=4
     (local.get $0)
    )
   )
   (block
    (if
     (local.get $3)
     (call $___assert_fail
      (i32.const 15841)
      (i32.const 15856)
      (i32.const 4706)
      (i32.const 15875)
     )
    )
    (if
     (i32.eqz
      (local.get $2)
     )
     (call $___assert_fail
      (i32.const 15911)
      (i32.const 15856)
      (i32.const 4707)
      (i32.const 15875)
     )
    )
    (drop
     (call $_memset
      (i32.add
       (local.get $2)
       (i32.mul
        (local.tee $2
         (i32.mul
          (i32.wrap_i64
           (call $_mal_dsp_read
            (i32.add
             (local.get $0)
             (i32.const 768)
            )
            (i64.extend_i32_u
             (local.get $1)
            )
            (local.get $2)
            (i32.load offset=772
             (local.get $0)
            )
           )
          )
          (local.tee $3
           (i32.load offset=728
            (local.get $0)
           )
          )
         )
        )
        (local.tee $0
         (call $_mal_get_bytes_per_sample
          (i32.load offset=724
           (local.get $0)
          )
         )
        )
       )
      )
      (i32.const 0)
      (i32.mul
       (local.get $0)
       (i32.sub
        (i32.mul
         (local.get $1)
         (local.get $3)
        )
        (local.get $2)
       )
      )
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (if
   (local.get $3)
   (call $___assert_fail
    (i32.const 15841)
    (i32.const 15856)
    (i32.const 4723)
    (i32.const 15934)
   )
  )
  (if
   (i32.eqz
    (local.get $2)
   )
   (call $___assert_fail
    (i32.const 15911)
    (i32.const 15856)
    (i32.const 4724)
    (i32.const 15934)
   )
  )
  (if
   (i32.eqz
    (local.tee $6
     (i32.load offset=68
      (local.get $0)
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (local.set $3
   (local.get $4)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 47296)
   )
   (local.get $1)
  )
  (i32.store
   (i32.add
    (local.get $0)
    (i32.const 47300)
   )
   (local.get $2)
  )
  (local.set $5
   (i32.div_u
    (i32.const 4096)
    (i32.mul
     (i32.load offset=12
      (local.get $0)
     )
     (call $_mal_get_bytes_per_sample
      (i32.load offset=8
       (local.get $0)
      )
     )
    )
   )
  )
  (if
   (local.tee $1
    (i32.wrap_i64
     (call $_mal_dsp_read
      (local.tee $2
       (i32.add
        (local.get $0)
        (i32.const 768)
       )
      )
      (local.tee $7
       (i64.extend_i32_u
        (local.get $5)
       )
      )
      (local.get $3)
      (i32.load offset=772
       (local.get $0)
      )
     )
    )
   )
   (loop $while-in
    (block $label$break$L20
     (call_indirect (type $FUNCSIG$viii)
      (local.get $0)
      (local.get $1)
      (local.get $3)
      (i32.add
       (i32.and
        (local.get $6)
        (i32.const 63)
       )
       (i32.const 203)
      )
     )
     (br_if $label$break$L20
      (i32.gt_u
       (local.get $5)
       (local.get $1)
      )
     )
     (br_if $while-in
      (local.tee $1
       (i32.wrap_i64
        (call $_mal_dsp_read
         (local.get $2)
         (local.get $7)
         (local.get $3)
         (i32.load offset=772
          (local.get $0)
         )
        )
       )
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_mal_dsp_read (; 331 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (param $2 i32) (param $3 i32) (result i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i64)
  (local $7 i32)
  (local $8 i64)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $2)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $5)
    )
    (return
     (i64.const 0)
    )
   )
  )
  (local.set $4
   (local.get $5)
  )
  (if
   (i32.eqz
    (i32.and
     (local.tee $7
      (i32.load8_s
       (i32.add
        (local.get $0)
        (i32.const 46464)
       )
      )
     )
     (i32.const 64)
    )
   )
   (block
    (if
     (i32.eqz
      (i32.and
       (local.get $7)
       (i32.const 4)
      )
     )
     (call $___assert_fail
      (i32.const 15968)
      (i32.const 15856)
      (i32.const 27827)
      (i32.const 16010)
     )
    )
    (i32.store
     (local.get $4)
     (local.get $0)
    )
    (i32.store offset=4
     (local.get $4)
     (local.get $3)
    )
    (local.set $1
     (call $_mal_format_converter_read
      (i32.sub
       (local.get $0)
       (i32.const -64)
      )
      (local.get $1)
      (local.get $2)
      (local.get $4)
     )
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return
     (local.get $1)
    )
   )
  )
  (if
   (i64.lt_u
    (local.get $1)
    (i64.const 4294967296)
   )
   (block
    (drop
     (i32.load
      (local.get $0)
     )
    )
    (local.set $1
     (i64.extend_i32_u
      (call_indirect (type $FUNCSIG$iiiii)
       (local.get $0)
       (i32.wrap_i64
        (local.get $1)
       )
       (local.get $2)
       (local.get $3)
       (i32.const 58)
      )
     )
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return
     (local.get $1)
    )
   )
  )
  (loop $while-in
   (block $__rjti$0
    (drop
     (i32.load
      (local.get $0)
     )
    )
    (br_if $__rjti$0
     (i32.eqz
      (local.tee $4
       (call_indirect (type $FUNCSIG$iiiii)
        (local.get $0)
        (i32.wrap_i64
         (select
          (local.tee $8
           (i64.sub
            (local.get $1)
            (local.get $6)
           )
          )
          (i64.const 4294967295)
          (i64.lt_u
           (local.get $8)
           (i64.const 4294967295)
          )
         )
        )
        (local.get $2)
        (local.get $3)
        (i32.const 58)
       )
      )
     )
    )
    (local.set $2
     (i32.add
      (local.get $2)
      (i32.mul
       (i32.mul
        (local.get $4)
        (i32.load offset=124
         (local.get $0)
        )
       )
       (call $_mal_get_bytes_per_sample
        (i32.load offset=68
         (local.get $0)
        )
       )
      )
     )
    )
    (br_if $while-in
     (i64.lt_u
      (local.tee $6
       (i64.add
        (local.get $6)
        (i64.extend_i32_u
         (local.get $4)
        )
       )
      )
      (local.get $1)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $6)
 )
 (func $_mal_get_bytes_per_sample (; 332 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.load
   (i32.add
    (i32.shl
     (local.get $0)
     (i32.const 2)
    )
    (i32.const 1024)
   )
  )
 )
 (func $_mal_format_converter_read (; 333 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (param $2 i32) (param $3 i32) (result i64)
  (local $4 i32)
  (local $5 i64)
  (local $6 i64)
  (local $7 i64)
  (local $8 i32)
  (local $9 i64)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 65808)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 65808)
   )
  )
  (if
   (i32.or
    (i32.eqz
     (local.get $0)
    )
    (i32.eqz
     (local.get $2)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $10)
    )
    (return
     (i64.const 0)
    )
   )
  )
  (local.set $8
   (i32.add
    (local.get $4)
    (i32.const 32768)
   )
  )
  (local.set $11
   (i32.add
    (local.get $4)
    (i32.const 65664)
   )
  )
  (local.set $15
   (i32.add
    (local.get $4)
    (i32.const 65796)
   )
  )
  (local.set $17
   (local.get $4)
  )
  (local.set $12
   (i32.add
    (local.get $4)
    (i32.const 65536)
   )
  )
  (local.set $16
   (i32.add
    (local.get $4)
    (i32.const 65792)
   )
  )
  (local.set $13
   (call $_mal_get_bytes_per_sample
    (local.tee $18
     (i32.load
      (local.get $0)
     )
    )
   )
  )
  (local.set $14
   (i32.mul
    (call $_mal_get_bytes_per_sample
     (local.tee $19
      (i32.load offset=4
       (local.get $0)
      )
     )
    )
    (local.tee $4
     (i32.load offset=8
      (local.get $0)
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.load offset=28
     (local.get $0)
    )
   )
   (block
    (call $_mal_split_buffer
     (local.get $8)
     (local.get $4)
     (local.get $11)
     (local.get $15)
    )
    (local.set $1
     (if (result i64)
      (i64.eqz
       (local.get $1)
      )
      (i64.const 0)
      (block $label$break$L6 (result i64)
       (local.set $9
        (i64.extend_i32_u
         (i32.div_u
          (i32.load
           (local.get $15)
          )
          (local.get $13)
         )
        )
       )
       (loop $while-in
        (block $while-out
         (local.set $6
          (select
           (local.get $9)
           (local.tee $6
            (i64.sub
             (local.get $1)
             (local.get $5)
            )
           )
           (i64.gt_u
            (local.get $6)
            (local.get $9)
           )
          )
         )
         (if
          (i32.eq
           (i32.load
            (local.get $0)
           )
           (i32.load offset=4
            (local.get $0)
           )
          )
          (block
           (drop
            (i32.load offset=32
             (local.get $0)
            )
           )
           (drop
            (br_if $label$break$L6
             (local.get $5)
             (i32.eqz
              (local.tee $4
               (call_indirect (type $FUNCSIG$iiiii)
                (local.get $0)
                (i32.wrap_i64
                 (local.get $6)
                )
                (local.get $11)
                (local.get $3)
                (i32.const 58)
               )
              )
             )
            )
           )
          )
          (block
           (call $_mal_split_buffer
            (local.get $17)
            (i32.load offset=8
             (local.get $0)
            )
            (local.get $12)
            (local.get $16)
           )
           (drop
            (i32.load offset=32
             (local.get $0)
            )
           )
           (br_if $while-out
            (i32.eqz
             (local.tee $8
              (call_indirect (type $FUNCSIG$iiiii)
               (local.get $0)
               (i32.wrap_i64
                (local.tee $6
                 (select
                  (local.tee $7
                   (i64.extend_i32_u
                    (i32.div_u
                     (i32.load
                      (local.get $16)
                     )
                     (local.get $13)
                    )
                   )
                  )
                  (local.get $6)
                  (i64.gt_u
                   (local.get $6)
                   (local.get $7)
                  )
                 )
                )
               )
               (local.get $12)
               (local.get $3)
               (i32.const 58)
              )
             )
            )
           )
           (if
            (i32.load offset=8
             (local.get $0)
            )
            (block
             (local.set $7
              (i64.extend_i32_u
               (local.get $8)
              )
             )
             (local.set $4
              (i32.const 0)
             )
             (loop $while-in1
              (drop
               (i32.load offset=44
                (local.get $0)
               )
              )
              (call_indirect (type $FUNCSIG$viiji)
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $4)
                  (i32.const 2)
                 )
                 (local.get $11)
                )
               )
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $4)
                  (i32.const 2)
                 )
                 (local.get $12)
                )
               )
               (local.get $7)
               (i32.load offset=20
                (local.get $0)
               )
               (i32.const 321)
              )
              (br_if $while-in1
               (i32.lt_u
                (local.tee $4
                 (i32.add
                  (local.get $4)
                  (i32.const 1)
                 )
                )
                (i32.load offset=8
                 (local.get $0)
                )
               )
              )
             )
            )
           )
           (local.set $4
            (local.get $8)
           )
          )
         )
         (drop
          (i32.load offset=48
           (local.get $0)
          )
         )
         (call_indirect (type $FUNCSIG$viiji)
          (local.get $2)
          (local.get $11)
          (local.tee $7
           (i64.extend_i32_u
            (local.get $4)
           )
          )
          (i32.load offset=8
           (local.get $0)
          )
          (i32.const 321)
         )
         (local.set $5
          (i64.add
           (local.get $5)
           (local.get $7)
          )
         )
         (drop
          (br_if $label$break$L6
           (local.get $5)
           (i64.gt_u
            (local.get $6)
            (local.get $7)
           )
          )
         )
         (local.set $2
          (i32.add
           (local.get $2)
           (i32.mul
            (local.get $4)
            (local.get $14)
           )
          )
         )
         (br_if $while-in
          (i64.lt_u
           (local.get $5)
           (local.get $1)
          )
         )
         (br $label$break$L6
          (local.get $5)
         )
        )
       )
       (local.get $5)
      )
     )
    )
    (global.set $STACKTOP
     (local.get $10)
    )
    (return
     (local.get $1)
    )
   )
  )
  (if
   (i32.ne
    (local.get $18)
    (local.get $19)
   )
   (block
    (if
     (i32.eqz
      (i64.eqz
       (local.get $1)
      )
     )
     (block $label$break$L27
      (local.set $6
       (i64.extend_i32_u
        (i32.div_u
         (i32.div_u
          (i32.const 32768)
          (local.get $13)
         )
         (local.get $4)
        )
       )
      )
      (loop $while-in4
       (drop
        (i32.load offset=28
         (local.get $0)
        )
       )
       (br_if $label$break$L27
        (i32.eqz
         (local.tee $4
          (call_indirect (type $FUNCSIG$iiiii)
           (local.get $0)
           (i32.wrap_i64
            (local.tee $9
             (select
              (local.get $6)
              (local.tee $9
               (i64.sub
                (local.get $1)
                (local.get $5)
               )
              )
              (i64.gt_u
               (local.get $9)
               (local.get $6)
              )
             )
            )
           )
           (local.get $8)
           (local.get $3)
           (i32.const 58)
          )
         )
        )
       )
       (drop
        (i32.load offset=44
         (local.get $0)
        )
       )
       (call_indirect (type $FUNCSIG$viiji)
        (local.get $2)
        (local.get $8)
        (i64.extend_i32_u
         (i32.mul
          (local.get $4)
          (i32.load offset=8
           (local.get $0)
          )
         )
        )
        (i32.load offset=20
         (local.get $0)
        )
        (i32.const 321)
       )
       (local.set $5
        (i64.add
         (local.get $5)
         (local.tee $7
          (i64.extend_i32_u
           (local.get $4)
          )
         )
        )
       )
       (br_if $label$break$L27
        (i64.gt_u
         (local.get $9)
         (local.get $7)
        )
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.mul
          (local.get $4)
          (local.get $14)
         )
        )
       )
       (br_if $while-in4
        (i64.lt_u
         (local.get $5)
         (local.get $1)
        )
       )
      )
     )
    )
    (global.set $STACKTOP
     (local.get $10)
    )
    (return
     (local.get $5)
    )
   )
  )
  (if
   (i64.eqz
    (local.get $1)
   )
   (block
    (global.set $STACKTOP
     (local.get $10)
    )
    (return
     (i64.const 0)
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in6
     (block $while-out5
      (drop
       (i32.load offset=28
        (local.get $0)
       )
      )
      (local.set $8
       (i32.eqz
        (local.tee $4
         (call_indirect (type $FUNCSIG$iiiii)
          (local.get $0)
          (i32.wrap_i64
           (local.tee $9
            (select
             (local.tee $5
              (i64.sub
               (local.get $1)
               (local.get $6)
              )
             )
             (i64.const 4294967295)
             (i64.lt_u
              (local.get $5)
              (i64.const 4294967295)
             )
            )
           )
          )
          (local.get $2)
          (local.get $3)
          (i32.const 58)
         )
        )
       )
      )
      (local.set $5
       (i64.add
        (local.get $6)
        (local.tee $7
         (i64.extend_i32_u
          (local.get $4)
         )
        )
       )
      )
      (br_if $while-out5
       (i32.or
        (local.get $8)
        (i64.gt_u
         (local.get $9)
         (local.get $7)
        )
       )
      )
      (local.set $2
       (i32.add
        (local.get $2)
        (i32.mul
         (local.get $4)
         (local.get $14)
        )
       )
      )
      (br_if $__rjti$0
       (i64.ge_u
        (local.get $5)
        (local.get $1)
       )
      )
      (local.set $6
       (local.get $5)
      )
      (br $while-in6)
     )
    )
    (br $__rjto$0)
   )
   (global.set $STACKTOP
    (local.get $10)
   )
   (return
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $10)
  )
  (select
   (local.get $6)
   (local.get $5)
   (local.get $8)
  )
 )
 (func $_mal_split_buffer (; 334 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (local.tee $5
    (i32.ne
     (local.get $3)
     (i32.const 0)
    )
   )
   (i32.store
    (local.get $3)
    (i32.const 0)
   )
  )
  (if
   (i32.or
    (i32.eqz
     (local.get $1)
    )
    (i32.eqz
     (local.get $0)
    )
   )
   (return)
  )
  (local.set $4
   (if (result i32)
    (i32.gt_u
     (local.tee $0
      (i32.sub
       (local.tee $6
        (i32.and
         (i32.add
          (local.get $0)
          (i32.const 63)
         )
         (i32.const -64)
        )
       )
       (local.get $0)
      )
     )
     (i32.const 32768)
    )
    (i32.const 0)
    (i32.and
     (i32.div_u
      (i32.sub
       (i32.const 32768)
       (local.get $0)
      )
      (local.get $1)
     )
     (i32.const -64)
    )
   )
  )
  (if
   (local.get $2)
   (block
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in
     (i32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.add
       (local.get $6)
       (i32.mul
        (local.get $0)
        (local.get $4)
       )
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.get $1)
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.get $5)
   )
   (return)
  )
  (i32.store
   (local.get $3)
   (local.get $4)
  )
 )
 (func $_Vector2Distance (; 335 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result f32)
  (local $2 f32)
  (f32.sqrt
   (f32.add
    (f32.mul
     (local.tee $2
      (f32.sub
       (f32.load
        (local.get $0)
       )
       (f32.load
        (local.get $1)
       )
      )
     )
     (local.get $2)
    )
    (f32.mul
     (local.tee $2
      (f32.sub
       (f32.load offset=4
        (local.get $0)
       )
       (f32.load offset=4
        (local.get $1)
       )
      )
     )
     (local.get $2)
    )
   )
  )
 )
 (func $_Vector2Angle (; 336 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result f32)
  (local $2 f32)
  (select
   (f32.add
    (local.tee $2
     (f32.mul
      (call $_atan2f
       (f32.sub
        (f32.load offset=4
         (local.get $1)
        )
        (f32.load offset=4
         (local.get $0)
        )
       )
       (f32.sub
        (f32.load
         (local.get $1)
        )
        (f32.load
         (local.get $0)
        )
       )
      )
      (f32.const 57.2957763671875)
     )
    )
    (f32.const 360)
   )
   (local.get $2)
   (f32.lt
    (local.get $2)
    (f32.const 0)
   )
  )
 )
 (func $_Vector3Subtract (; 337 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 f32)
  (local $4 f32)
  (local.set $3
   (f32.sub
    (f32.load offset=4
     (local.get $1)
    )
    (f32.load offset=4
     (local.get $2)
    )
   )
  )
  (local.set $4
   (f32.sub
    (f32.load offset=8
     (local.get $1)
    )
    (f32.load offset=8
     (local.get $2)
    )
   )
  )
  (f32.store
   (local.get $0)
   (f32.sub
    (f32.load
     (local.get $1)
    )
    (f32.load
     (local.get $2)
    )
   )
  )
  (f32.store offset=4
   (local.get $0)
   (local.get $3)
  )
  (f32.store offset=8
   (local.get $0)
   (local.get $4)
  )
 )
 (func $_Vector3CrossProduct (; 338 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 f32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (local.set $3
   (f32.load
    (local.get $2)
   )
  )
  (local.set $4
   (f32.load
    (local.get $1)
   )
  )
  (f32.store
   (local.get $0)
   (f32.sub
    (f32.mul
     (local.tee $5
      (f32.load offset=4
       (local.get $1)
      )
     )
     (local.tee $6
      (f32.load offset=8
       (local.get $2)
      )
     )
    )
    (f32.mul
     (local.tee $7
      (f32.load offset=8
       (local.get $1)
      )
     )
     (local.tee $8
      (f32.load offset=4
       (local.get $2)
      )
     )
    )
   )
  )
  (f32.store offset=4
   (local.get $0)
   (f32.sub
    (f32.mul
     (local.get $7)
     (local.get $3)
    )
    (f32.mul
     (local.get $6)
     (local.get $4)
    )
   )
  )
  (f32.store offset=8
   (local.get $0)
   (f32.sub
    (f32.mul
     (local.get $8)
     (local.get $4)
    )
    (f32.mul
     (local.get $5)
     (local.get $3)
    )
   )
  )
 )
 (func $_Vector3Length (; 339 ;) (; has Stack IR ;) (param $0 i32) (result f32)
  (local $1 f32)
  (f32.sqrt
   (f32.add
    (f32.add
     (f32.mul
      (local.tee $1
       (f32.load
        (local.get $0)
       )
      )
      (local.get $1)
     )
     (f32.mul
      (local.tee $1
       (f32.load offset=4
        (local.get $0)
       )
      )
      (local.get $1)
     )
    )
    (f32.mul
     (local.tee $1
      (f32.load offset=8
       (local.get $0)
      )
     )
     (local.get $1)
    )
   )
  )
 )
 (func $_Vector3Normalize (; 340 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 f32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 f32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $2
   (f32.load
    (local.get $1)
   )
  )
  (local.set $5
   (f32.load offset=4
    (local.get $1)
   )
  )
  (local.set $6
   (f32.load offset=8
    (local.get $1)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.get $1)
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.load offset=8
    (local.get $1)
   )
  )
  (f32.store
   (local.get $0)
   (f32.mul
    (local.get $2)
    (local.tee $2
     (select
      (f32.const 1)
      (f32.div
       (f32.const 1)
       (local.tee $2
        (call $_Vector3Length
         (local.get $3)
        )
       )
      )
      (f32.eq
       (local.get $2)
       (f32.const 0)
      )
     )
    )
   )
  )
  (f32.store offset=4
   (local.get $0)
   (f32.mul
    (local.get $5)
    (local.get $2)
   )
  )
  (f32.store offset=8
   (local.get $0)
   (f32.mul
    (local.get $6)
    (local.get $2)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_Vector3Transform (; 341 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 f32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local.set $6
   (f32.add
    (f32.load offset=28
     (local.get $2)
    )
    (f32.add
     (f32.add
      (f32.mul
       (local.tee $3
        (f32.load
         (local.get $1)
        )
       )
       (f32.load offset=16
        (local.get $2)
       )
      )
      (f32.mul
       (local.tee $4
        (f32.load offset=4
         (local.get $1)
        )
       )
       (f32.load offset=20
        (local.get $2)
       )
      )
     )
     (f32.mul
      (local.tee $5
       (f32.load offset=8
        (local.get $1)
       )
      )
      (f32.load offset=24
       (local.get $2)
      )
     )
    )
   )
  )
  (local.set $7
   (f32.add
    (f32.load offset=44
     (local.get $2)
    )
    (f32.add
     (f32.add
      (f32.mul
       (local.get $3)
       (f32.load offset=32
        (local.get $2)
       )
      )
      (f32.mul
       (local.get $4)
       (f32.load offset=36
        (local.get $2)
       )
      )
     )
     (f32.mul
      (local.get $5)
      (f32.load offset=40
       (local.get $2)
      )
     )
    )
   )
  )
  (f32.store
   (local.get $0)
   (f32.add
    (f32.load offset=12
     (local.get $2)
    )
    (f32.add
     (f32.add
      (f32.mul
       (local.get $3)
       (f32.load
        (local.get $2)
       )
      )
      (f32.mul
       (local.get $4)
       (f32.load offset=4
        (local.get $2)
       )
      )
     )
     (f32.mul
      (local.get $5)
      (f32.load offset=8
       (local.get $2)
      )
     )
    )
   )
  )
  (f32.store offset=4
   (local.get $0)
   (local.get $6)
  )
  (f32.store offset=8
   (local.get $0)
   (local.get $7)
  )
 )
 (func $_MatrixInvert (; 342 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 f32)
  (local $3 f32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 f32)
  (local $18 f32)
  (local $19 f32)
  (local $20 f32)
  (local $21 f32)
  (local $22 f32)
  (local $23 f32)
  (local $24 f32)
  (local $25 f32)
  (local $26 f32)
  (local $27 f32)
  (local $28 f32)
  (local $29 f32)
  (local $30 f32)
  (local $31 f32)
  (local.set $6
   (f32.sub
    (f32.mul
     (local.tee $3
      (f32.load
       (local.get $1)
      )
     )
     (local.tee $4
      (f32.load offset=20
       (local.get $1)
      )
     )
    )
    (f32.mul
     (local.tee $5
      (f32.load offset=16
       (local.get $1)
      )
     )
     (local.tee $22
      (f32.load offset=4
       (local.get $1)
      )
     )
    )
   )
  )
  (local.set $9
   (f32.sub
    (f32.mul
     (local.get $3)
     (local.tee $7
      (f32.load offset=36
       (local.get $1)
      )
     )
    )
    (f32.mul
     (local.tee $8
      (f32.load offset=32
       (local.get $1)
      )
     )
     (local.get $22)
    )
   )
  )
  (local.set $12
   (f32.sub
    (f32.mul
     (local.get $3)
     (local.tee $10
      (f32.load offset=52
       (local.get $1)
      )
     )
    )
    (f32.mul
     (local.tee $11
      (f32.load offset=48
       (local.get $1)
      )
     )
     (local.get $22)
    )
   )
  )
  (local.set $16
   (f32.sub
    (f32.mul
     (local.tee $13
      (f32.load offset=8
       (local.get $1)
      )
     )
     (local.tee $14
      (f32.load offset=28
       (local.get $1)
      )
     )
    )
    (f32.mul
     (local.tee $15
      (f32.load offset=24
       (local.get $1)
      )
     )
     (local.tee $23
      (f32.load offset=12
       (local.get $1)
      )
     )
    )
   )
  )
  (local.set $19
   (f32.sub
    (f32.mul
     (local.get $13)
     (local.tee $17
      (f32.load offset=44
       (local.get $1)
      )
     )
    )
    (f32.mul
     (local.tee $18
      (f32.load offset=40
       (local.get $1)
      )
     )
     (local.get $23)
    )
   )
  )
  (local.set $2
   (f32.div
    (f32.const 1)
    (f32.add
     (f32.mul
      (local.tee $24
       (f32.sub
        (f32.mul
         (local.get $8)
         (local.get $10)
        )
        (f32.mul
         (local.get $11)
         (local.get $7)
        )
       )
      )
      (local.get $16)
     )
     (f32.sub
      (f32.add
       (f32.mul
        (local.tee $25
         (f32.sub
          (f32.mul
           (local.get $5)
           (local.get $7)
          )
          (f32.mul
           (local.get $8)
           (local.get $4)
          )
         )
        )
        (local.tee $26
         (f32.sub
          (f32.mul
           (local.get $13)
           (local.tee $20
            (f32.load offset=60
             (local.get $1)
            )
           )
          )
          (f32.mul
           (local.tee $21
            (f32.load offset=56
             (local.get $1)
            )
           )
           (local.get $23)
          )
         )
        )
       )
       (f32.add
        (f32.mul
         (local.get $12)
         (local.tee $27
          (f32.sub
           (f32.mul
            (local.get $15)
            (local.get $17)
           )
           (f32.mul
            (local.get $18)
            (local.get $14)
           )
          )
         )
        )
        (f32.sub
         (f32.mul
          (local.get $6)
          (local.tee $28
           (f32.sub
            (f32.mul
             (local.get $18)
             (local.get $20)
            )
            (f32.mul
             (local.get $21)
             (local.get $17)
            )
           )
          )
         )
         (f32.mul
          (local.get $9)
          (local.tee $29
           (f32.sub
            (f32.mul
             (local.get $15)
             (local.get $20)
            )
            (f32.mul
             (local.get $21)
             (local.get $14)
            )
           )
          )
         )
        )
       )
      )
      (f32.mul
       (local.tee $30
        (f32.sub
         (f32.mul
          (local.get $5)
          (local.get $10)
         )
         (f32.mul
          (local.get $11)
          (local.get $4)
         )
        )
       )
       (local.get $19)
      )
     )
    )
   )
  )
  (f32.store
   (local.get $0)
   (f32.mul
    (f32.add
     (f32.mul
      (local.get $10)
      (local.get $27)
     )
     (f32.sub
      (f32.mul
       (local.get $4)
       (local.get $28)
      )
      (f32.mul
       (local.get $7)
       (local.get $29)
      )
     )
    )
    (local.get $2)
   )
  )
  (f32.store offset=4
   (local.get $0)
   (f32.mul
    (f32.sub
     (f32.add
      (f32.mul
       (local.get $28)
       (local.tee $31
        (f32.neg
         (local.get $22)
        )
       )
      )
      (f32.mul
       (local.get $7)
       (local.get $26)
      )
     )
     (f32.mul
      (local.get $10)
      (local.get $19)
     )
    )
    (local.get $2)
   )
  )
  (f32.store offset=8
   (local.get $0)
   (f32.mul
    (f32.add
     (f32.mul
      (local.get $10)
      (local.get $16)
     )
     (f32.sub
      (f32.mul
       (local.get $22)
       (local.get $29)
      )
      (f32.mul
       (local.get $4)
       (local.get $26)
      )
     )
    )
    (local.get $2)
   )
  )
  (f32.store offset=12
   (local.get $0)
   (f32.mul
    (f32.sub
     (f32.add
      (f32.mul
       (local.get $27)
       (local.get $31)
      )
      (f32.mul
       (local.get $4)
       (local.get $19)
      )
     )
     (f32.mul
      (local.get $7)
      (local.get $16)
     )
    )
    (local.get $2)
   )
  )
  (f32.store offset=16
   (local.get $0)
   (f32.mul
    (f32.sub
     (f32.sub
      (f32.mul
       (local.get $8)
       (local.get $29)
      )
      (f32.mul
       (local.get $5)
       (local.get $28)
      )
     )
     (f32.mul
      (local.get $11)
      (local.get $27)
     )
    )
    (local.get $2)
   )
  )
  (f32.store offset=20
   (local.get $0)
   (f32.mul
    (f32.add
     (f32.mul
      (local.get $11)
      (local.get $19)
     )
     (f32.sub
      (f32.mul
       (local.get $3)
       (local.get $28)
      )
      (f32.mul
       (local.get $8)
       (local.get $26)
      )
     )
    )
    (local.get $2)
   )
  )
  (f32.store offset=24
   (local.get $0)
   (f32.mul
    (f32.sub
     (f32.sub
      (f32.mul
       (local.get $5)
       (local.get $26)
      )
      (f32.mul
       (local.get $3)
       (local.get $29)
      )
     )
     (f32.mul
      (local.get $11)
      (local.get $16)
     )
    )
    (local.get $2)
   )
  )
  (f32.store offset=28
   (local.get $0)
   (f32.mul
    (f32.add
     (f32.mul
      (local.get $8)
      (local.get $16)
     )
     (f32.sub
      (f32.mul
       (local.get $3)
       (local.get $27)
      )
      (f32.mul
       (local.get $5)
       (local.get $19)
      )
     )
    )
    (local.get $2)
   )
  )
  (f32.store offset=32
   (local.get $0)
   (f32.mul
    (f32.add
     (f32.sub
      (f32.mul
       (local.get $24)
       (local.get $14)
      )
      (f32.mul
       (local.get $30)
       (local.get $17)
      )
     )
     (f32.mul
      (local.get $25)
      (local.get $20)
     )
    )
    (local.get $2)
   )
  )
  (f32.store offset=36
   (local.get $0)
   (f32.mul
    (f32.sub
     (f32.add
      (f32.mul
       (local.get $24)
       (local.tee $3
        (f32.neg
         (local.get $23)
        )
       )
      )
      (f32.mul
       (local.get $12)
       (local.get $17)
      )
     )
     (f32.mul
      (local.get $9)
      (local.get $20)
     )
    )
    (local.get $2)
   )
  )
  (f32.store offset=40
   (local.get $0)
   (f32.mul
    (f32.add
     (f32.sub
      (f32.mul
       (local.get $30)
       (local.get $23)
      )
      (f32.mul
       (local.get $12)
       (local.get $14)
      )
     )
     (f32.mul
      (local.get $6)
      (local.get $20)
     )
    )
    (local.get $2)
   )
  )
  (f32.store offset=44
   (local.get $0)
   (f32.mul
    (f32.sub
     (f32.add
      (f32.mul
       (local.get $25)
       (local.get $3)
      )
      (f32.mul
       (local.get $9)
       (local.get $14)
      )
     )
     (f32.mul
      (local.get $6)
      (local.get $17)
     )
    )
    (local.get $2)
   )
  )
  (f32.store offset=48
   (local.get $0)
   (f32.mul
    (f32.sub
     (f32.sub
      (f32.mul
       (local.get $30)
       (local.get $18)
      )
      (f32.mul
       (local.get $15)
       (local.get $24)
      )
     )
     (f32.mul
      (local.get $25)
      (local.get $21)
     )
    )
    (local.get $2)
   )
  )
  (f32.store offset=52
   (local.get $0)
   (f32.mul
    (f32.add
     (f32.sub
      (f32.mul
       (local.get $13)
       (local.get $24)
      )
      (f32.mul
       (local.get $12)
       (local.get $18)
      )
     )
     (f32.mul
      (local.get $9)
      (local.get $21)
     )
    )
    (local.get $2)
   )
  )
  (f32.store offset=56
   (local.get $0)
   (f32.mul
    (f32.sub
     (f32.sub
      (f32.mul
       (local.get $15)
       (local.get $12)
      )
      (f32.mul
       (local.get $13)
       (local.get $30)
      )
     )
     (f32.mul
      (local.get $6)
      (local.get $21)
     )
    )
    (local.get $2)
   )
  )
  (f32.store offset=60
   (local.get $0)
   (f32.mul
    (f32.add
     (f32.sub
      (f32.mul
       (local.get $13)
       (local.get $25)
      )
      (f32.mul
       (local.get $9)
       (local.get $15)
      )
     )
     (f32.mul
      (local.get $6)
      (local.get $18)
     )
    )
    (local.get $2)
   )
  )
 )
 (func $_MatrixIdentity (; 343 ;) (; has Stack IR ;) (param $0 i32)
  (f32.store
   (local.get $0)
   (f32.const 1)
  )
  (i64.store offset=4 align=4
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=12 align=4
   (local.get $0)
   (i64.const 0)
  )
  (f32.store offset=20
   (local.get $0)
   (f32.const 1)
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.const 0)
  )
  (f32.store offset=40
   (local.get $0)
   (f32.const 1)
  )
  (i64.store offset=44 align=4
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=52 align=4
   (local.get $0)
   (i64.const 0)
  )
  (f32.store offset=60
   (local.get $0)
   (f32.const 1)
  )
 )
 (func $_MatrixTranslate (; 344 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32)
  (f32.store
   (local.get $0)
   (f32.const 1)
  )
  (f32.store offset=4
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=8
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=12
   (local.get $0)
   (local.get $1)
  )
  (f32.store offset=16
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=20
   (local.get $0)
   (f32.const 1)
  )
  (f32.store offset=24
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=28
   (local.get $0)
   (local.get $2)
  )
  (f32.store offset=32
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=36
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=40
   (local.get $0)
   (f32.const 1)
  )
  (f32.store offset=44
   (local.get $0)
   (local.get $3)
  )
  (f32.store offset=48
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=52
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=56
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=60
   (local.get $0)
   (f32.const 1)
  )
 )
 (func $_MatrixRotate (; 345 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 f32)
  (local $3 f32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f32)
  (local.set $1
   (i32.and
    (f32.ne
     (local.tee $4
      (f32.sqrt
       (f32.add
        (f32.add
         (f32.mul
          (local.tee $2
           (f32.load
            (local.get $1)
           )
          )
          (local.get $2)
         )
         (f32.mul
          (local.tee $3
           (f32.load offset=4
            (local.get $1)
           )
          )
          (local.get $3)
         )
        )
        (f32.mul
         (local.tee $5
          (f32.load offset=8
           (local.get $1)
          )
         )
         (local.get $5)
        )
       )
      )
     )
     (f32.const 1)
    )
    (f32.ne
     (local.get $4)
     (f32.const 0)
    )
   )
  )
  (local.set $2
   (select
    (f32.mul
     (local.get $2)
     (local.tee $4
      (f32.div
       (f32.const 1)
       (local.get $4)
      )
     )
    )
    (local.get $2)
    (local.get $1)
   )
  )
  (local.set $3
   (select
    (f32.mul
     (local.get $3)
     (local.get $4)
    )
    (local.get $3)
    (local.get $1)
   )
  )
  (local.set $5
   (select
    (f32.mul
     (local.get $5)
     (local.get $4)
    )
    (local.get $5)
    (local.get $1)
   )
  )
  (local.set $6
   (call $_sinf
    (f32.const 0)
   )
  )
  (local.set $8
   (f32.mul
    (local.tee $4
     (f32.sub
      (f32.const 1)
      (local.tee $7
       (call $_cosf
        (f32.const 0)
       )
      )
     )
    )
    (f32.mul
     (local.get $3)
     (local.get $2)
    )
   )
  )
  (f32.store
   (local.get $0)
   (f32.add
    (local.get $7)
    (f32.mul
     (local.get $4)
     (f32.mul
      (local.get $2)
      (local.get $2)
     )
    )
   )
  )
  (f32.store offset=4
   (local.get $0)
   (f32.sub
    (local.get $8)
    (local.tee $9
     (f32.mul
      (local.get $6)
      (local.get $5)
     )
    )
   )
  )
  (f32.store offset=8
   (local.get $0)
   (f32.add
    (local.tee $10
     (f32.mul
      (local.get $6)
      (local.get $3)
     )
    )
    (local.tee $11
     (f32.mul
      (local.get $4)
      (f32.mul
       (local.get $5)
       (local.get $2)
      )
     )
    )
   )
  )
  (f32.store offset=12
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=16
   (local.get $0)
   (f32.add
    (local.get $9)
    (local.get $8)
   )
  )
  (f32.store offset=20
   (local.get $0)
   (f32.add
    (local.get $7)
    (f32.mul
     (local.get $4)
     (f32.mul
      (local.get $3)
      (local.get $3)
     )
    )
   )
  )
  (f32.store offset=24
   (local.get $0)
   (f32.sub
    (local.tee $3
     (f32.mul
      (local.get $4)
      (f32.mul
       (local.get $5)
       (local.get $3)
      )
     )
    )
    (local.tee $2
     (f32.mul
      (local.get $6)
      (local.get $2)
     )
    )
   )
  )
  (f32.store offset=28
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=32
   (local.get $0)
   (f32.sub
    (local.get $11)
    (local.get $10)
   )
  )
  (f32.store offset=36
   (local.get $0)
   (f32.add
    (local.get $2)
    (local.get $3)
   )
  )
  (f32.store offset=40
   (local.get $0)
   (f32.add
    (local.get $7)
    (f32.mul
     (local.get $4)
     (f32.mul
      (local.get $5)
      (local.get $5)
     )
    )
   )
  )
  (i64.store offset=44 align=4
   (local.get $0)
   (i64.const 0)
  )
  (i64.store offset=52 align=4
   (local.get $0)
   (i64.const 0)
  )
  (f32.store offset=60
   (local.get $0)
   (f32.const 1)
  )
 )
 (func $_MatrixMultiply (; 346 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 f32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 f32)
  (local $18 f32)
  (local $19 f32)
  (local $20 f32)
  (local $21 f32)
  (local $22 f32)
  (local $23 f32)
  (local $24 f32)
  (local $25 f32)
  (local $26 f32)
  (local $27 f32)
  (local $28 f32)
  (local $29 f32)
  (local $30 f32)
  (local $31 f32)
  (local $32 f32)
  (local $33 f32)
  (local $34 f32)
  (local.set $3
   (f32.load offset=16
    (local.get $2)
   )
  )
  (local.set $4
   (f32.load offset=20
    (local.get $2)
   )
  )
  (local.set $5
   (f32.load offset=24
    (local.get $2)
   )
  )
  (local.set $6
   (f32.load offset=28
    (local.get $2)
   )
  )
  (local.set $7
   (f32.load offset=32
    (local.get $2)
   )
  )
  (local.set $8
   (f32.load offset=36
    (local.get $2)
   )
  )
  (local.set $9
   (f32.load offset=40
    (local.get $2)
   )
  )
  (local.set $10
   (f32.load offset=44
    (local.get $2)
   )
  )
  (local.set $11
   (f32.load offset=48
    (local.get $2)
   )
  )
  (local.set $12
   (f32.load offset=52
    (local.get $2)
   )
  )
  (local.set $13
   (f32.load offset=56
    (local.get $2)
   )
  )
  (local.set $14
   (f32.load offset=60
    (local.get $2)
   )
  )
  (local.set $15
   (f32.load offset=4
    (local.get $1)
   )
  )
  (local.set $16
   (f32.load offset=20
    (local.get $1)
   )
  )
  (local.set $17
   (f32.load offset=36
    (local.get $1)
   )
  )
  (local.set $18
   (f32.load offset=52
    (local.get $1)
   )
  )
  (local.set $19
   (f32.load offset=8
    (local.get $1)
   )
  )
  (local.set $20
   (f32.load offset=24
    (local.get $1)
   )
  )
  (local.set $21
   (f32.load offset=40
    (local.get $1)
   )
  )
  (local.set $22
   (f32.load offset=56
    (local.get $1)
   )
  )
  (local.set $23
   (f32.load offset=12
    (local.get $1)
   )
  )
  (local.set $24
   (f32.load offset=28
    (local.get $1)
   )
  )
  (local.set $25
   (f32.load offset=44
    (local.get $1)
   )
  )
  (local.set $26
   (f32.load offset=60
    (local.get $1)
   )
  )
  (f32.store
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.tee $27
        (f32.load
         (local.get $1)
        )
       )
       (local.tee $28
        (f32.load
         (local.get $2)
        )
       )
      )
      (f32.mul
       (local.tee $29
        (f32.load offset=16
         (local.get $1)
        )
       )
       (local.tee $30
        (f32.load offset=4
         (local.get $2)
        )
       )
      )
     )
     (f32.mul
      (local.tee $31
       (f32.load offset=32
        (local.get $1)
       )
      )
      (local.tee $32
       (f32.load offset=8
        (local.get $2)
       )
      )
     )
    )
    (f32.mul
     (local.tee $33
      (f32.load offset=48
       (local.get $1)
      )
     )
     (local.tee $34
      (f32.load offset=12
       (local.get $2)
      )
     )
    )
   )
  )
  (f32.store offset=4
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $28)
       (local.get $15)
      )
      (f32.mul
       (local.get $30)
       (local.get $16)
      )
     )
     (f32.mul
      (local.get $32)
      (local.get $17)
     )
    )
    (f32.mul
     (local.get $34)
     (local.get $18)
    )
   )
  )
  (f32.store offset=8
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $28)
       (local.get $19)
      )
      (f32.mul
       (local.get $30)
       (local.get $20)
      )
     )
     (f32.mul
      (local.get $32)
      (local.get $21)
     )
    )
    (f32.mul
     (local.get $34)
     (local.get $22)
    )
   )
  )
  (f32.store offset=12
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $28)
       (local.get $23)
      )
      (f32.mul
       (local.get $30)
       (local.get $24)
      )
     )
     (f32.mul
      (local.get $32)
      (local.get $25)
     )
    )
    (f32.mul
     (local.get $34)
     (local.get $26)
    )
   )
  )
  (f32.store offset=16
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $27)
       (local.get $3)
      )
      (f32.mul
       (local.get $29)
       (local.get $4)
      )
     )
     (f32.mul
      (local.get $31)
      (local.get $5)
     )
    )
    (f32.mul
     (local.get $33)
     (local.get $6)
    )
   )
  )
  (f32.store offset=20
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $3)
       (local.get $15)
      )
      (f32.mul
       (local.get $4)
       (local.get $16)
      )
     )
     (f32.mul
      (local.get $5)
      (local.get $17)
     )
    )
    (f32.mul
     (local.get $6)
     (local.get $18)
    )
   )
  )
  (f32.store offset=24
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $3)
       (local.get $19)
      )
      (f32.mul
       (local.get $4)
       (local.get $20)
      )
     )
     (f32.mul
      (local.get $5)
      (local.get $21)
     )
    )
    (f32.mul
     (local.get $6)
     (local.get $22)
    )
   )
  )
  (f32.store offset=28
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $3)
       (local.get $23)
      )
      (f32.mul
       (local.get $4)
       (local.get $24)
      )
     )
     (f32.mul
      (local.get $5)
      (local.get $25)
     )
    )
    (f32.mul
     (local.get $6)
     (local.get $26)
    )
   )
  )
  (f32.store offset=32
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $27)
       (local.get $7)
      )
      (f32.mul
       (local.get $29)
       (local.get $8)
      )
     )
     (f32.mul
      (local.get $31)
      (local.get $9)
     )
    )
    (f32.mul
     (local.get $33)
     (local.get $10)
    )
   )
  )
  (f32.store offset=36
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $7)
       (local.get $15)
      )
      (f32.mul
       (local.get $8)
       (local.get $16)
      )
     )
     (f32.mul
      (local.get $9)
      (local.get $17)
     )
    )
    (f32.mul
     (local.get $10)
     (local.get $18)
    )
   )
  )
  (f32.store offset=40
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $7)
       (local.get $19)
      )
      (f32.mul
       (local.get $8)
       (local.get $20)
      )
     )
     (f32.mul
      (local.get $9)
      (local.get $21)
     )
    )
    (f32.mul
     (local.get $10)
     (local.get $22)
    )
   )
  )
  (f32.store offset=44
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $7)
       (local.get $23)
      )
      (f32.mul
       (local.get $8)
       (local.get $24)
      )
     )
     (f32.mul
      (local.get $9)
      (local.get $25)
     )
    )
    (f32.mul
     (local.get $10)
     (local.get $26)
    )
   )
  )
  (f32.store offset=48
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $27)
       (local.get $11)
      )
      (f32.mul
       (local.get $29)
       (local.get $12)
      )
     )
     (f32.mul
      (local.get $31)
      (local.get $13)
     )
    )
    (f32.mul
     (local.get $33)
     (local.get $14)
    )
   )
  )
  (f32.store offset=52
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $11)
       (local.get $15)
      )
      (f32.mul
       (local.get $12)
       (local.get $16)
      )
     )
     (f32.mul
      (local.get $13)
      (local.get $17)
     )
    )
    (f32.mul
     (local.get $14)
     (local.get $18)
    )
   )
  )
  (f32.store offset=56
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $11)
       (local.get $19)
      )
      (f32.mul
       (local.get $12)
       (local.get $20)
      )
     )
     (f32.mul
      (local.get $13)
      (local.get $21)
     )
    )
    (f32.mul
     (local.get $14)
     (local.get $22)
    )
   )
  )
  (f32.store offset=60
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $11)
       (local.get $23)
      )
      (f32.mul
       (local.get $12)
       (local.get $24)
      )
     )
     (f32.mul
      (local.get $13)
      (local.get $25)
     )
    )
    (f32.mul
     (local.get $14)
     (local.get $26)
    )
   )
  )
 )
 (func $_MatrixFrustum (; 347 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64)
  (local $5 f32)
  (f32.store
   (local.get $0)
   (f32.div
    (f32.const 0.019999999552965164)
    (local.tee $5
     (f32.demote_f64
      (f64.sub
       (local.get $2)
       (local.get $1)
      )
     )
    )
   )
  )
  (f32.store offset=4
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=8
   (local.get $0)
   (f32.div
    (f32.add
     (f32.demote_f64
      (local.get $1)
     )
     (f32.demote_f64
      (local.get $2)
     )
    )
    (local.get $5)
   )
  )
  (f32.store offset=12
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=16
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=20
   (local.get $0)
   (f32.div
    (f32.const 0.019999999552965164)
    (local.tee $5
     (f32.demote_f64
      (f64.sub
       (local.get $4)
       (local.get $3)
      )
     )
    )
   )
  )
  (f32.store offset=24
   (local.get $0)
   (f32.div
    (f32.add
     (f32.demote_f64
      (local.get $3)
     )
     (f32.demote_f64
      (local.get $4)
     )
    )
    (local.get $5)
   )
  )
  (f32.store offset=28
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=32
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=36
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=40
   (local.get $0)
   (f32.const -1.0000200271606445)
  )
  (f32.store offset=44
   (local.get $0)
   (f32.const -0.02000020071864128)
  )
  (f32.store offset=48
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=52
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=56
   (local.get $0)
   (f32.const -1)
  )
  (f32.store offset=60
   (local.get $0)
   (f32.const 0)
  )
 )
 (func $_MatrixPerspective (; 348 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 f64)
  (call $_MatrixFrustum
   (local.get $0)
   (f64.neg
    (local.tee $2
     (f64.mul
      (local.tee $1
       (f64.mul
        (call $_tan
         (f64.mul
          (local.get $1)
          (f64.const 0.5)
         )
        )
        (f64.const 0.01)
       )
      )
      (local.get $2)
     )
    )
   )
   (local.get $2)
   (f64.neg
    (local.get $1)
   )
   (local.get $1)
  )
 )
 (func $_MatrixOrtho (; 349 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64) (param $6 f64)
  (local $7 f32)
  (f32.store
   (local.get $0)
   (f32.div
    (f32.const 2)
    (local.tee $7
     (f32.demote_f64
      (f64.sub
       (local.get $2)
       (local.get $1)
      )
     )
    )
   )
  )
  (f32.store offset=4
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=8
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=12
   (local.get $0)
   (f32.div
    (f32.neg
     (f32.add
      (f32.demote_f64
       (local.get $1)
      )
      (f32.demote_f64
       (local.get $2)
      )
     )
    )
    (local.get $7)
   )
  )
  (f32.store offset=16
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=20
   (local.get $0)
   (f32.div
    (f32.const 2)
    (local.tee $7
     (f32.demote_f64
      (f64.sub
       (local.get $4)
       (local.get $3)
      )
     )
    )
   )
  )
  (f32.store offset=24
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=28
   (local.get $0)
   (f32.div
    (f32.neg
     (f32.add
      (f32.demote_f64
       (local.get $3)
      )
      (f32.demote_f64
       (local.get $4)
      )
     )
    )
    (local.get $7)
   )
  )
  (f32.store offset=32
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=36
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=40
   (local.get $0)
   (f32.div
    (f32.const -2)
    (local.tee $7
     (f32.demote_f64
      (f64.sub
       (local.get $6)
       (local.get $5)
      )
     )
    )
   )
  )
  (f32.store offset=44
   (local.get $0)
   (f32.div
    (f32.neg
     (f32.add
      (f32.demote_f64
       (local.get $5)
      )
      (f32.demote_f64
       (local.get $6)
      )
     )
    )
    (local.get $7)
   )
  )
  (f32.store offset=48
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=52
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=56
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=60
   (local.get $0)
   (f32.const 1)
  )
 )
 (func $_MatrixLookAt (; 350 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $12
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 288)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 288)
   )
  )
  (local.set $9
   (i32.add
    (local.get $4)
    (i32.const 192)
   )
  )
  (local.set $7
   (i32.add
    (local.get $4)
    (i32.const 12)
   )
  )
  (local.set $10
   (i32.add
    (local.get $4)
    (i32.const 180)
   )
  )
  (local.set $11
   (i32.add
    (local.get $4)
    (i32.const 168)
   )
  )
  (local.set $6
   (i32.add
    (local.get $4)
    (i32.const 104)
   )
  )
  (i64.store align=4
   (local.tee $8
    (i32.add
     (local.get $4)
     (i32.const 204)
    )
   )
   (i64.load align=4
    (local.get $1)
   )
  )
  (i32.store offset=8
   (local.get $8)
   (i32.load offset=8
    (local.get $1)
   )
  )
  (i64.store align=4
   (local.tee $5
    (i32.add
     (local.get $4)
     (i32.const 216)
    )
   )
   (i64.load align=4
    (local.get $2)
   )
  )
  (i32.store offset=8
   (local.get $5)
   (i32.load offset=8
    (local.get $2)
   )
  )
  (call $_Vector3Subtract
   (local.tee $2
    (i32.add
     (local.get $4)
     (i32.const 24)
    )
   )
   (local.get $8)
   (local.get $5)
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $2)
   )
  )
  (i32.store offset=8
   (local.get $5)
   (i32.load offset=8
    (local.get $2)
   )
  )
  (call $_Vector3Normalize
   (local.get $9)
   (local.get $5)
  )
  (i64.store align=4
   (local.get $2)
   (i64.load align=4
    (local.get $9)
   )
  )
  (i32.store offset=8
   (local.get $2)
   (i32.load offset=8
    (local.get $9)
   )
  )
  (i64.store align=4
   (local.get $8)
   (i64.load align=4
    (local.get $3)
   )
  )
  (i32.store offset=8
   (local.get $8)
   (i32.load offset=8
    (local.get $3)
   )
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $9)
   )
  )
  (i32.store offset=8
   (local.get $5)
   (i32.load offset=8
    (local.get $9)
   )
  )
  (call $_Vector3CrossProduct
   (local.get $7)
   (local.get $8)
   (local.get $5)
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $7)
   )
  )
  (i32.store offset=8
   (local.get $5)
   (i32.load offset=8
    (local.get $7)
   )
  )
  (call $_Vector3Normalize
   (local.get $10)
   (local.get $5)
  )
  (i64.store align=4
   (local.get $7)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $7)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i64.store align=4
   (local.get $8)
   (i64.load align=4
    (local.get $2)
   )
  )
  (i32.store offset=8
   (local.get $8)
   (i32.load offset=8
    (local.get $2)
   )
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $5)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (call $_Vector3CrossProduct
   (local.get $4)
   (local.get $8)
   (local.get $5)
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $4)
   )
  )
  (i32.store offset=8
   (local.get $5)
   (i32.load offset=8
    (local.get $4)
   )
  )
  (call $_Vector3Normalize
   (local.get $11)
   (local.get $5)
  )
  (i64.store align=4
   (local.get $4)
   (i64.load align=4
    (local.get $11)
   )
  )
  (i32.store offset=8
   (local.get $4)
   (i32.load offset=8
    (local.get $11)
   )
  )
  (i32.store offset=40
   (local.get $4)
   (i32.load
    (local.get $7)
   )
  )
  (i32.store offset=56
   (local.get $4)
   (i32.load offset=4
    (local.get $7)
   )
  )
  (i32.store offset=72
   (local.get $4)
   (i32.load offset=8
    (local.get $7)
   )
  )
  (f32.store offset=88
   (local.get $4)
   (f32.const 0)
  )
  (i32.store offset=44
   (local.get $4)
   (i32.load
    (local.get $4)
   )
  )
  (i32.store offset=60
   (local.get $4)
   (i32.load offset=4
    (local.get $4)
   )
  )
  (i32.store offset=76
   (local.get $4)
   (i32.load offset=8
    (local.get $4)
   )
  )
  (f32.store offset=92
   (local.get $4)
   (f32.const 0)
  )
  (i32.store offset=48
   (local.get $4)
   (i32.load
    (local.get $2)
   )
  )
  (i32.store offset=64
   (local.get $4)
   (i32.load offset=4
    (local.get $2)
   )
  )
  (i32.store offset=80
   (local.get $4)
   (i32.load offset=8
    (local.get $2)
   )
  )
  (f32.store offset=96
   (local.get $4)
   (f32.const 0)
  )
  (i32.store offset=52
   (local.get $4)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store offset=68
   (local.get $4)
   (i32.load offset=4
    (local.get $1)
   )
  )
  (i32.store offset=84
   (local.get $4)
   (i32.load offset=8
    (local.get $1)
   )
  )
  (f32.store offset=100
   (local.get $4)
   (f32.const 1)
  )
  (i64.store align=4
   (local.get $5)
   (i64.load offset=40 align=4
    (local.get $4)
   )
  )
  (i64.store offset=8 align=4
   (local.get $5)
   (i64.load offset=48 align=4
    (local.get $4)
   )
  )
  (i64.store offset=16 align=4
   (local.get $5)
   (i64.load offset=56 align=4
    (local.get $4)
   )
  )
  (i64.store offset=24 align=4
   (local.get $5)
   (i64.load offset=64 align=4
    (local.get $4)
   )
  )
  (i64.store offset=32 align=4
   (local.get $5)
   (i64.load offset=72 align=4
    (local.get $4)
   )
  )
  (i64.store offset=40 align=4
   (local.get $5)
   (i64.load offset=80 align=4
    (local.get $4)
   )
  )
  (i64.store offset=48 align=4
   (local.get $5)
   (i64.load offset=88 align=4
    (local.get $4)
   )
  )
  (i64.store offset=56 align=4
   (local.get $5)
   (i64.load offset=96 align=4
    (local.get $4)
   )
  )
  (call $_MatrixInvert
   (local.get $6)
   (local.get $5)
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (local.get $6)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load offset=8 align=4
    (local.get $6)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load offset=16 align=4
    (local.get $6)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load offset=24 align=4
    (local.get $6)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load offset=32 align=4
    (local.get $6)
   )
  )
  (i64.store offset=40 align=4
   (local.get $0)
   (i64.load offset=40 align=4
    (local.get $6)
   )
  )
  (i64.store offset=48 align=4
   (local.get $0)
   (i64.load offset=48 align=4
    (local.get $6)
   )
  )
  (i64.store offset=56 align=4
   (local.get $0)
   (i64.load offset=56 align=4
    (local.get $6)
   )
  )
  (global.set $STACKTOP
   (local.get $12)
  )
 )
 (func $_MatrixToFloatV (; 351 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local.set $2
   (i32.load offset=16
    (local.get $1)
   )
  )
  (local.set $3
   (i32.load offset=32
    (local.get $1)
   )
  )
  (local.set $4
   (i32.load offset=48
    (local.get $1)
   )
  )
  (local.set $5
   (i32.load offset=4
    (local.get $1)
   )
  )
  (local.set $6
   (i32.load offset=20
    (local.get $1)
   )
  )
  (local.set $7
   (i32.load offset=36
    (local.get $1)
   )
  )
  (local.set $8
   (i32.load offset=52
    (local.get $1)
   )
  )
  (local.set $9
   (i32.load offset=8
    (local.get $1)
   )
  )
  (local.set $10
   (i32.load offset=24
    (local.get $1)
   )
  )
  (local.set $11
   (i32.load offset=40
    (local.get $1)
   )
  )
  (local.set $12
   (i32.load offset=56
    (local.get $1)
   )
  )
  (local.set $13
   (i32.load offset=12
    (local.get $1)
   )
  )
  (local.set $14
   (i32.load offset=28
    (local.get $1)
   )
  )
  (local.set $15
   (i32.load offset=44
    (local.get $1)
   )
  )
  (local.set $16
   (i32.load offset=60
    (local.get $1)
   )
  )
  (i32.store
   (local.get $0)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store offset=4
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=8
   (local.get $0)
   (local.get $3)
  )
  (i32.store offset=12
   (local.get $0)
   (local.get $4)
  )
  (i32.store offset=16
   (local.get $0)
   (local.get $5)
  )
  (i32.store offset=20
   (local.get $0)
   (local.get $6)
  )
  (i32.store offset=24
   (local.get $0)
   (local.get $7)
  )
  (i32.store offset=28
   (local.get $0)
   (local.get $8)
  )
  (i32.store offset=32
   (local.get $0)
   (local.get $9)
  )
  (i32.store offset=36
   (local.get $0)
   (local.get $10)
  )
  (i32.store offset=40
   (local.get $0)
   (local.get $11)
  )
  (i32.store offset=44
   (local.get $0)
   (local.get $12)
  )
  (i32.store offset=48
   (local.get $0)
   (local.get $13)
  )
  (i32.store offset=52
   (local.get $0)
   (local.get $14)
  )
  (i32.store offset=56
   (local.get $0)
   (local.get $15)
  )
  (i32.store offset=60
   (local.get $0)
   (local.get $16)
  )
 )
 (func $_QuaternionTransform (; 352 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 f32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local.set $7
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.tee $3
        (f32.load
         (local.get $1)
        )
       )
       (f32.load offset=16
        (local.get $2)
       )
      )
      (f32.mul
       (local.tee $4
        (f32.load offset=4
         (local.get $1)
        )
       )
       (f32.load offset=20
        (local.get $2)
       )
      )
     )
     (f32.mul
      (local.tee $5
       (f32.load offset=8
        (local.get $1)
       )
      )
      (f32.load offset=24
       (local.get $2)
      )
     )
    )
    (f32.mul
     (local.tee $6
      (f32.load offset=12
       (local.get $1)
      )
     )
     (f32.load offset=28
      (local.get $2)
     )
    )
   )
  )
  (local.set $8
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $3)
       (f32.load offset=32
        (local.get $2)
       )
      )
      (f32.mul
       (local.get $4)
       (f32.load offset=36
        (local.get $2)
       )
      )
     )
     (f32.mul
      (local.get $5)
      (f32.load offset=40
       (local.get $2)
      )
     )
    )
    (f32.mul
     (local.get $6)
     (f32.load offset=44
      (local.get $2)
     )
    )
   )
  )
  (local.set $9
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (local.get $3)
       (f32.load offset=48
        (local.get $2)
       )
      )
      (f32.mul
       (local.get $4)
       (f32.load offset=52
        (local.get $2)
       )
      )
     )
     (f32.mul
      (local.get $5)
      (f32.load offset=56
       (local.get $2)
      )
     )
    )
    (f32.mul
     (local.get $6)
     (f32.load offset=60
      (local.get $2)
     )
    )
   )
  )
  (f32.store
   (local.get $0)
   (f32.add
    (f32.add
     (f32.add
      (f32.mul
       (f32.load
        (local.get $2)
       )
       (local.get $3)
      )
      (f32.mul
       (f32.load offset=4
        (local.get $2)
       )
       (local.get $4)
      )
     )
     (f32.mul
      (f32.load offset=8
       (local.get $2)
      )
      (local.get $5)
     )
    )
    (f32.mul
     (f32.load offset=12
      (local.get $2)
     )
     (local.get $6)
    )
   )
  )
  (f32.store offset=4
   (local.get $0)
   (local.get $7)
  )
  (f32.store offset=8
   (local.get $0)
   (local.get $8)
  )
  (f32.store offset=12
   (local.get $0)
   (local.get $9)
  )
 )
 (func $_rlMatrixMode (; 353 ;) (; has Stack IR ;) (param $0 i32)
  (block $__rjto$0
   (i32.store
    (i32.const 33180)
    (block $__rjti$0 (result i32)
     (block $switch-case0
      (block $switch-case
       (br_table $switch-case0 $switch-case $__rjto$0
        (i32.sub
         (local.get $0)
         (i32.const 5888)
        )
       )
      )
      (br $__rjti$0
       (i32.const 33116)
      )
     )
     (i32.const 33052)
    )
   )
  )
  (i32.store
   (i32.const 14216)
   (local.get $0)
  )
 )
 (func $_rlPushMatrix (; 354 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.gt_s
    (i32.load
     (i32.const 33184)
    )
    (i32.const 31)
   )
   (call $_TraceLog
    (i32.const 5)
    (i32.const 16023)
    (local.get $0)
   )
  )
  (if
   (i32.eq
    (i32.load
     (i32.const 14216)
    )
    (i32.const 5888)
   )
   (block
    (i32.store8
     (i32.const 34836)
     (i32.const 1)
    )
    (i32.store
     (i32.const 33180)
     (i32.const 33188)
    )
   )
  )
  (i64.store align=4
   (local.tee $0
    (i32.add
     (i32.shl
      (local.tee $3
       (i32.load
        (i32.const 33184)
       )
      )
      (i32.const 6)
     )
     (i32.const 27600)
    )
   )
   (i64.load align=4
    (local.tee $1
     (i32.load
      (i32.const 33180)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load offset=8 align=4
    (local.get $1)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load offset=16 align=4
    (local.get $1)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load offset=24 align=4
    (local.get $1)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load offset=32 align=4
    (local.get $1)
   )
  )
  (i64.store offset=40 align=4
   (local.get $0)
   (i64.load offset=40 align=4
    (local.get $1)
   )
  )
  (i64.store offset=48 align=4
   (local.get $0)
   (i64.load offset=48 align=4
    (local.get $1)
   )
  )
  (i64.store offset=56 align=4
   (local.get $0)
   (i64.load offset=56 align=4
    (local.get $1)
   )
  )
  (i32.store
   (i32.const 33184)
   (i32.add
    (local.get $3)
    (i32.const 1)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_TraceLog (; 355 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 144)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 144)
   )
  )
  (if
   (i32.gt_s
    (i32.const 3)
    (local.get $0)
   )
   (block
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $3)
     (i32.const 128)
    )
   )
   (local.get $2)
  )
  (i64.store
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=8
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=16
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=24
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=32
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=40
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=48
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=56
   (local.get $3)
   (i64.const 0)
  )
  (i64.store
   (i32.sub
    (local.get $3)
    (i32.const -64)
   )
   (i64.const 0)
  )
  (i64.store offset=72
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=80
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=88
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=96
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=104
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=112
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=120
   (local.get $3)
   (i64.const 0)
  )
  (block $switch
   (block $switch-case4
    (block $switch-case3
     (block $switch-case2
      (block $switch-case1
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-case0 $switch-case1 $switch-case2 $switch-case3 $switch-case4 $switch
          (i32.sub
           (local.get $0)
           (i32.const 1)
          )
         )
        )
        (i64.store
         (local.get $3)
         (i64.const 9071268410249812)
        )
        (br $switch)
       )
       (i64.store
        (local.get $3)
        (i64.const 9071277302236484)
       )
       (br $switch)
      )
      (i32.store align=1
       (local.get $3)
       (i32.load align=1
        (i32.const 16045)
       )
      )
      (i32.store16 offset=4 align=1
       (local.get $3)
       (i32.load16_s align=1
        (i32.const 16049)
       )
      )
      (i32.store8 offset=6
       (local.get $3)
       (i32.load8_s
        (i32.const 16051)
       )
      )
      (br $switch)
     )
     (i32.store align=1
      (local.get $3)
      (i32.load align=1
       (i32.const 16052)
      )
     )
     (i32.store16 offset=4 align=1
      (local.get $3)
      (i32.load16_s align=1
       (i32.const 16056)
      )
     )
     (i32.store8 offset=6
      (local.get $3)
      (i32.load8_s
       (i32.const 16058)
      )
     )
     (br $switch)
    )
    (i64.store
     (local.get $3)
     (i64.const 9071324447265349)
    )
    (br $switch)
   )
   (i64.store
    (local.get $3)
    (i64.const 9071298442707270)
   )
  )
  (call $_strcat
   (local.get $3)
   (local.get $1)
  )
  (i32.store16 align=1
   (i32.add
    (call $_strlen
     (local.get $3)
    )
    (local.get $3)
   )
   (i32.const 10)
  )
  (call $_vfprintf
   (i32.load
    (i32.const 14232)
   )
   (local.get $3)
   (local.get $5)
  )
  (if
   (i32.le_s
    (i32.const 5)
    (local.get $0)
   )
   (call $_exit
    (i32.const 1)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_rlPopMatrix (; 356 ;) (; has Stack IR ;)
  (local $0 i32)
  (if
   (i32.gt_s
    (local.tee $0
     (i32.load
      (i32.const 33184)
     )
    )
    (i32.const 0)
   )
   (block
    (drop
     (call $_memmove
      (i32.load
       (i32.const 33180)
      )
      (i32.add
       (i32.shl
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const -1)
         )
        )
        (i32.const 6)
       )
       (i32.const 27600)
      )
      (i32.const 64)
     )
    )
    (i32.store
     (i32.const 33184)
     (local.get $0)
    )
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.eqz
      (i32.load
       (i32.const 33184)
      )
     )
     (i32.eq
      (i32.load
       (i32.const 14216)
      )
      (i32.const 5888)
     )
    )
   )
   (return)
  )
  (i32.store
   (i32.const 33180)
   (i32.const 33052)
  )
  (i32.store8
   (i32.const 34836)
   (i32.const 0)
  )
 )
 (func $_rlLoadIdentity (; 357 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 64)
   )
  )
  (local.set $1
   (i32.load
    (i32.const 33180)
   )
  )
  (call $_MatrixIdentity
   (local.get $0)
  )
  (i64.store align=4
   (local.get $1)
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $1)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store offset=16 align=4
   (local.get $1)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store offset=24 align=4
   (local.get $1)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store offset=32 align=4
   (local.get $1)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store offset=40 align=4
   (local.get $1)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store offset=48 align=4
   (local.get $1)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (i64.store offset=56 align=4
   (local.get $1)
   (i64.load offset=56 align=4
    (local.get $0)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_rlTranslatef (; 358 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (param $2 f32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 256)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 256)
   )
  )
  (local.set $5
   (i32.add
    (local.get $4)
    (i32.const 192)
   )
  )
  (local.set $6
   (i32.add
    (local.get $4)
    (i32.const 128)
   )
  )
  (call $_MatrixTranslate
   (local.tee $7
    (i32.sub
     (local.get $4)
     (i32.const -64)
    )
   )
   (local.get $0)
   (local.get $1)
   (local.get $2)
  )
  (local.set $3
   (i32.load
    (i32.const 33180)
   )
  )
  (i64.store align=4
   (local.get $6)
   (i64.load align=4
    (local.get $7)
   )
  )
  (i64.store offset=8 align=4
   (local.get $6)
   (i64.load offset=8 align=4
    (local.get $7)
   )
  )
  (i64.store offset=16 align=4
   (local.get $6)
   (i64.load offset=16 align=4
    (local.get $7)
   )
  )
  (i64.store offset=24 align=4
   (local.get $6)
   (i64.load offset=24 align=4
    (local.get $7)
   )
  )
  (i64.store offset=32 align=4
   (local.get $6)
   (i64.load offset=32 align=4
    (local.get $7)
   )
  )
  (i64.store offset=40 align=4
   (local.get $6)
   (i64.load offset=40 align=4
    (local.get $7)
   )
  )
  (i64.store offset=48 align=4
   (local.get $6)
   (i64.load offset=48 align=4
    (local.get $7)
   )
  )
  (i64.store offset=56 align=4
   (local.get $6)
   (i64.load offset=56 align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $5)
   (i64.load offset=8 align=4
    (local.get $3)
   )
  )
  (i64.store offset=16 align=4
   (local.get $5)
   (i64.load offset=16 align=4
    (local.get $3)
   )
  )
  (i64.store offset=24 align=4
   (local.get $5)
   (i64.load offset=24 align=4
    (local.get $3)
   )
  )
  (i64.store offset=32 align=4
   (local.get $5)
   (i64.load offset=32 align=4
    (local.get $3)
   )
  )
  (i64.store offset=40 align=4
   (local.get $5)
   (i64.load offset=40 align=4
    (local.get $3)
   )
  )
  (i64.store offset=48 align=4
   (local.get $5)
   (i64.load offset=48 align=4
    (local.get $3)
   )
  )
  (i64.store offset=56 align=4
   (local.get $5)
   (i64.load offset=56 align=4
    (local.get $3)
   )
  )
  (call $_MatrixMultiply
   (local.get $4)
   (local.get $6)
   (local.get $5)
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.get $4)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $4)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $4)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $4)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $4)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $4)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $4)
   )
  )
  (i64.store offset=56 align=4
   (local.get $3)
   (i64.load offset=56 align=4
    (local.get $4)
   )
  )
  (global.set $STACKTOP
   (local.get $8)
  )
 )
 (func $_rlRotatef (; 359 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 288)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 288)
   )
  )
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 224)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 160)
   )
  )
  (local.set $5
   (i32.add
    (local.get $0)
    (i32.const 144)
   )
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.const 16)
   )
  )
  (call $_MatrixIdentity
   (local.tee $4
    (i32.add
     (local.get $0)
     (i32.const 80)
    )
   )
  )
  (f32.store
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=4
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=8
   (local.get $0)
   (f32.const 1)
  )
  (i64.store align=4
   (local.get $1)
   (i64.load align=4
    (local.get $0)
   )
  )
  (i32.store offset=8
   (local.get $1)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (call $_Vector3Normalize
   (local.get $5)
   (local.get $1)
  )
  (i64.store align=4
   (local.get $1)
   (i64.load align=4
    (local.get $5)
   )
  )
  (i32.store offset=8
   (local.get $1)
   (i32.load offset=8
    (local.get $5)
   )
  )
  (call $_MatrixRotate
   (local.get $4)
   (local.get $1)
  )
  (local.set $0
   (i32.load
    (i32.const 33180)
   )
  )
  (i64.store align=4
   (local.get $2)
   (i64.load align=4
    (local.get $4)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load offset=8 align=4
    (local.get $4)
   )
  )
  (i64.store offset=16 align=4
   (local.get $2)
   (i64.load offset=16 align=4
    (local.get $4)
   )
  )
  (i64.store offset=24 align=4
   (local.get $2)
   (i64.load offset=24 align=4
    (local.get $4)
   )
  )
  (i64.store offset=32 align=4
   (local.get $2)
   (i64.load offset=32 align=4
    (local.get $4)
   )
  )
  (i64.store offset=40 align=4
   (local.get $2)
   (i64.load offset=40 align=4
    (local.get $4)
   )
  )
  (i64.store offset=48 align=4
   (local.get $2)
   (i64.load offset=48 align=4
    (local.get $4)
   )
  )
  (i64.store offset=56 align=4
   (local.get $2)
   (i64.load offset=56 align=4
    (local.get $4)
   )
  )
  (i64.store align=4
   (local.get $1)
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $1)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store offset=16 align=4
   (local.get $1)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store offset=24 align=4
   (local.get $1)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store offset=32 align=4
   (local.get $1)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store offset=40 align=4
   (local.get $1)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store offset=48 align=4
   (local.get $1)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (i64.store offset=56 align=4
   (local.get $1)
   (i64.load offset=56 align=4
    (local.get $0)
   )
  )
  (call $_MatrixMultiply
   (local.get $3)
   (local.get $2)
   (local.get $1)
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load offset=8 align=4
    (local.get $3)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load offset=16 align=4
    (local.get $3)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load offset=24 align=4
    (local.get $3)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load offset=32 align=4
    (local.get $3)
   )
  )
  (i64.store offset=40 align=4
   (local.get $0)
   (i64.load offset=40 align=4
    (local.get $3)
   )
  )
  (i64.store offset=48 align=4
   (local.get $0)
   (i64.load offset=48 align=4
    (local.get $3)
   )
  )
  (i64.store offset=56 align=4
   (local.get $0)
   (i64.load offset=56 align=4
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $_rlMultMatrixf (; 360 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 256)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 256)
   )
  )
  (i32.store
   (local.tee $1
    (i32.sub
     (local.get $3)
     (i32.const -64)
    )
   )
   (i32.load
    (local.get $0)
   )
  )
  (i32.store offset=4
   (local.get $1)
   (i32.load offset=16
    (local.get $0)
   )
  )
  (i32.store offset=8
   (local.get $1)
   (i32.load offset=32
    (local.get $0)
   )
  )
  (i32.store offset=12
   (local.get $1)
   (i32.load offset=48
    (local.get $0)
   )
  )
  (i32.store offset=16
   (local.get $1)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (i32.store offset=20
   (local.get $1)
   (i32.load offset=20
    (local.get $0)
   )
  )
  (i32.store offset=24
   (local.get $1)
   (i32.load offset=36
    (local.get $0)
   )
  )
  (i32.store offset=28
   (local.get $1)
   (i32.load offset=52
    (local.get $0)
   )
  )
  (i32.store offset=32
   (local.get $1)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (i32.store offset=36
   (local.get $1)
   (i32.load offset=24
    (local.get $0)
   )
  )
  (i32.store offset=40
   (local.get $1)
   (i32.load offset=40
    (local.get $0)
   )
  )
  (i32.store offset=44
   (local.get $1)
   (i32.load offset=56
    (local.get $0)
   )
  )
  (i32.store offset=48
   (local.get $1)
   (i32.load offset=12
    (local.get $0)
   )
  )
  (i32.store offset=52
   (local.get $1)
   (i32.load offset=28
    (local.get $0)
   )
  )
  (i32.store offset=56
   (local.get $1)
   (i32.load offset=44
    (local.get $0)
   )
  )
  (i32.store offset=60
   (local.get $1)
   (i32.load offset=60
    (local.get $0)
   )
  )
  (i64.store align=4
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 128)
    )
   )
   (i64.load align=4
    (local.tee $2
     (i32.load
      (i32.const 33180)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i64.store offset=16 align=4
   (local.get $4)
   (i64.load offset=16 align=4
    (local.get $2)
   )
  )
  (i64.store offset=24 align=4
   (local.get $4)
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i64.store offset=32 align=4
   (local.get $4)
   (i64.load offset=32 align=4
    (local.get $2)
   )
  )
  (i64.store offset=40 align=4
   (local.get $4)
   (i64.load offset=40 align=4
    (local.get $2)
   )
  )
  (i64.store offset=48 align=4
   (local.get $4)
   (i64.load offset=48 align=4
    (local.get $2)
   )
  )
  (i64.store offset=56 align=4
   (local.get $4)
   (i64.load offset=56 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (local.tee $0
    (i32.add
     (local.get $3)
     (i32.const 192)
    )
   )
   (i64.load align=4
    (local.get $1)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load offset=8 align=4
    (local.get $1)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load offset=16 align=4
    (local.get $1)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load offset=24 align=4
    (local.get $1)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load offset=32 align=4
    (local.get $1)
   )
  )
  (i64.store offset=40 align=4
   (local.get $0)
   (i64.load offset=40 align=4
    (local.get $1)
   )
  )
  (i64.store offset=48 align=4
   (local.get $0)
   (i64.load offset=48 align=4
    (local.get $1)
   )
  )
  (i64.store offset=56 align=4
   (local.get $0)
   (i64.load offset=56 align=4
    (local.get $1)
   )
  )
  (call $_MatrixMultiply
   (local.get $3)
   (local.get $4)
   (local.get $0)
  )
  (i64.store align=4
   (local.get $2)
   (i64.load align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load offset=8 align=4
    (local.get $3)
   )
  )
  (i64.store offset=16 align=4
   (local.get $2)
   (i64.load offset=16 align=4
    (local.get $3)
   )
  )
  (i64.store offset=24 align=4
   (local.get $2)
   (i64.load offset=24 align=4
    (local.get $3)
   )
  )
  (i64.store offset=32 align=4
   (local.get $2)
   (i64.load offset=32 align=4
    (local.get $3)
   )
  )
  (i64.store offset=40 align=4
   (local.get $2)
   (i64.load offset=40 align=4
    (local.get $3)
   )
  )
  (i64.store offset=48 align=4
   (local.get $2)
   (i64.load offset=48 align=4
    (local.get $3)
   )
  )
  (i64.store offset=56 align=4
   (local.get $2)
   (i64.load offset=56 align=4
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_rlFrustum (; 361 ;) (; has Stack IR ;) (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 256)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 256)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 192)
   )
  )
  (local.set $7
   (i32.add
    (local.get $5)
    (i32.const 128)
   )
  )
  (call $_MatrixFrustum
   (local.tee $8
    (i32.sub
     (local.get $5)
     (i32.const -64)
    )
   )
   (local.get $0)
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
  (i64.store align=4
   (local.get $7)
   (i64.load align=4
    (local.tee $4
     (i32.load
      (i32.const 33180)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $7)
   (i64.load offset=8 align=4
    (local.get $4)
   )
  )
  (i64.store offset=16 align=4
   (local.get $7)
   (i64.load offset=16 align=4
    (local.get $4)
   )
  )
  (i64.store offset=24 align=4
   (local.get $7)
   (i64.load offset=24 align=4
    (local.get $4)
   )
  )
  (i64.store offset=32 align=4
   (local.get $7)
   (i64.load offset=32 align=4
    (local.get $4)
   )
  )
  (i64.store offset=40 align=4
   (local.get $7)
   (i64.load offset=40 align=4
    (local.get $4)
   )
  )
  (i64.store offset=48 align=4
   (local.get $7)
   (i64.load offset=48 align=4
    (local.get $4)
   )
  )
  (i64.store offset=56 align=4
   (local.get $7)
   (i64.load offset=56 align=4
    (local.get $4)
   )
  )
  (i64.store align=4
   (local.get $6)
   (i64.load align=4
    (local.get $8)
   )
  )
  (i64.store offset=8 align=4
   (local.get $6)
   (i64.load offset=8 align=4
    (local.get $8)
   )
  )
  (i64.store offset=16 align=4
   (local.get $6)
   (i64.load offset=16 align=4
    (local.get $8)
   )
  )
  (i64.store offset=24 align=4
   (local.get $6)
   (i64.load offset=24 align=4
    (local.get $8)
   )
  )
  (i64.store offset=32 align=4
   (local.get $6)
   (i64.load offset=32 align=4
    (local.get $8)
   )
  )
  (i64.store offset=40 align=4
   (local.get $6)
   (i64.load offset=40 align=4
    (local.get $8)
   )
  )
  (i64.store offset=48 align=4
   (local.get $6)
   (i64.load offset=48 align=4
    (local.get $8)
   )
  )
  (i64.store offset=56 align=4
   (local.get $6)
   (i64.load offset=56 align=4
    (local.get $8)
   )
  )
  (call $_MatrixMultiply
   (local.get $5)
   (local.get $7)
   (local.get $6)
  )
  (i64.store align=4
   (local.get $4)
   (i64.load align=4
    (local.get $5)
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $5)
   )
  )
  (i64.store offset=16 align=4
   (local.get $4)
   (i64.load offset=16 align=4
    (local.get $5)
   )
  )
  (i64.store offset=24 align=4
   (local.get $4)
   (i64.load offset=24 align=4
    (local.get $5)
   )
  )
  (i64.store offset=32 align=4
   (local.get $4)
   (i64.load offset=32 align=4
    (local.get $5)
   )
  )
  (i64.store offset=40 align=4
   (local.get $4)
   (i64.load offset=40 align=4
    (local.get $5)
   )
  )
  (i64.store offset=48 align=4
   (local.get $4)
   (i64.load offset=48 align=4
    (local.get $5)
   )
  )
  (i64.store offset=56 align=4
   (local.get $4)
   (i64.load offset=56 align=4
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $9)
  )
 )
 (func $_rlOrtho (; 362 ;) (; has Stack IR ;) (param $0 f64) (param $1 f64) (param $2 f64) (param $3 f64) (param $4 f64) (param $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 256)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 256)
   )
  )
  (local.set $8
   (i32.add
    (local.get $7)
    (i32.const 192)
   )
  )
  (local.set $9
   (i32.add
    (local.get $7)
    (i32.const 128)
   )
  )
  (call $_MatrixOrtho
   (local.tee $10
    (i32.sub
     (local.get $7)
     (i32.const -64)
    )
   )
   (local.get $0)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
  )
  (i64.store align=4
   (local.get $9)
   (i64.load align=4
    (local.tee $6
     (i32.load
      (i32.const 33180)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $9)
   (i64.load offset=8 align=4
    (local.get $6)
   )
  )
  (i64.store offset=16 align=4
   (local.get $9)
   (i64.load offset=16 align=4
    (local.get $6)
   )
  )
  (i64.store offset=24 align=4
   (local.get $9)
   (i64.load offset=24 align=4
    (local.get $6)
   )
  )
  (i64.store offset=32 align=4
   (local.get $9)
   (i64.load offset=32 align=4
    (local.get $6)
   )
  )
  (i64.store offset=40 align=4
   (local.get $9)
   (i64.load offset=40 align=4
    (local.get $6)
   )
  )
  (i64.store offset=48 align=4
   (local.get $9)
   (i64.load offset=48 align=4
    (local.get $6)
   )
  )
  (i64.store offset=56 align=4
   (local.get $9)
   (i64.load offset=56 align=4
    (local.get $6)
   )
  )
  (i64.store align=4
   (local.get $8)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i64.store offset=8 align=4
   (local.get $8)
   (i64.load offset=8 align=4
    (local.get $10)
   )
  )
  (i64.store offset=16 align=4
   (local.get $8)
   (i64.load offset=16 align=4
    (local.get $10)
   )
  )
  (i64.store offset=24 align=4
   (local.get $8)
   (i64.load offset=24 align=4
    (local.get $10)
   )
  )
  (i64.store offset=32 align=4
   (local.get $8)
   (i64.load offset=32 align=4
    (local.get $10)
   )
  )
  (i64.store offset=40 align=4
   (local.get $8)
   (i64.load offset=40 align=4
    (local.get $10)
   )
  )
  (i64.store offset=48 align=4
   (local.get $8)
   (i64.load offset=48 align=4
    (local.get $10)
   )
  )
  (i64.store offset=56 align=4
   (local.get $8)
   (i64.load offset=56 align=4
    (local.get $10)
   )
  )
  (call $_MatrixMultiply
   (local.get $7)
   (local.get $9)
   (local.get $8)
  )
  (i64.store align=4
   (local.get $6)
   (i64.load align=4
    (local.get $7)
   )
  )
  (i64.store offset=8 align=4
   (local.get $6)
   (i64.load offset=8 align=4
    (local.get $7)
   )
  )
  (i64.store offset=16 align=4
   (local.get $6)
   (i64.load offset=16 align=4
    (local.get $7)
   )
  )
  (i64.store offset=24 align=4
   (local.get $6)
   (i64.load offset=24 align=4
    (local.get $7)
   )
  )
  (i64.store offset=32 align=4
   (local.get $6)
   (i64.load offset=32 align=4
    (local.get $7)
   )
  )
  (i64.store offset=40 align=4
   (local.get $6)
   (i64.load offset=40 align=4
    (local.get $7)
   )
  )
  (i64.store offset=48 align=4
   (local.get $6)
   (i64.load offset=48 align=4
    (local.get $7)
   )
  )
  (i64.store offset=56 align=4
   (local.get $6)
   (i64.load offset=56 align=4
    (local.get $7)
   )
  )
  (global.set $STACKTOP
   (local.get $11)
  )
 )
 (func $_rlViewport (; 363 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (call $_glViewport
   (local.get $0)
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
 )
 (func $_rlBegin (; 364 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.eq
    (local.get $0)
    (i32.load
     (i32.add
      (local.tee $2
       (i32.load
        (i32.const 33252)
       )
      )
      (i32.mul
       (local.tee $3
        (i32.add
         (local.tee $1
          (i32.load
           (i32.const 33256)
          )
         )
         (i32.const -1)
        )
       )
       (i32.const 12)
      )
     )
    )
   )
   (return)
  )
  (local.set $1
   (i32.add
    (local.get $1)
    (i32.const 1)
   )
  )
  (if
   (i32.gt_s
    (i32.load offset=4
     (i32.add
      (i32.mul
       (local.get $3)
       (i32.const 12)
      )
      (local.get $2)
     )
    )
    (i32.const 0)
   )
   (i32.store
    (i32.const 33256)
    (local.get $1)
   )
   (local.set $1
    (i32.load
     (i32.const 33256)
    )
   )
  )
  (if
   (i32.gt_s
    (local.get $1)
    (i32.const 255)
   )
   (call $_rlglDraw)
  )
  (i32.store
   (i32.add
    (local.tee $1
     (i32.load
      (i32.const 33252)
     )
    )
    (i32.mul
     (local.tee $2
      (i32.add
       (i32.load
        (i32.const 33256)
       )
       (i32.const -1)
      )
     )
     (i32.const 12)
    )
   )
   (local.get $0)
  )
  (i32.store offset=4
   (i32.add
    (i32.mul
     (local.get $2)
     (i32.const 12)
    )
    (local.get $1)
   )
   (i32.const 0)
  )
  (i32.store offset=8
   (i32.add
    (i32.mul
     (local.get $2)
     (i32.const 12)
    )
    (local.get $1)
   )
   (i32.load
    (i32.const 33260)
   )
  )
 )
 (func $_rlglDraw (; 365 ;) (; has Stack IR ;)
  (call $_UpdateBuffersDefault)
  (call $_DrawBuffersDefault)
 )
 (func $_UpdateBuffersDefault (; 366 ;) (; has Stack IR ;)
  (local $0 i32)
  (if
   (i32.le_s
    (i32.load
     (i32.const 29648)
    )
    (i32.const 0)
   )
   (return)
  )
  (if
   (i32.load8_s
    (i32.const 34837)
   )
   (block
    (local.set $0
     (i32.load
      (i32.const 33396)
     )
    )
    (call_indirect (type $FUNCSIG$vi)
     (i32.load
      (i32.const 29676)
     )
     (i32.add
      (i32.and
       (local.get $0)
       (i32.const 31)
      )
      (i32.const 85)
     )
    )
   )
  )
  (call $_glBindBuffer
   (i32.const 34962)
   (i32.load
    (i32.const 29680)
   )
  )
  (call $_glBufferSubData
   (i32.const 34962)
   (i32.const 0)
   (i32.mul
    (i32.load
     (i32.const 29648)
    )
    (i32.const 12)
   )
   (i32.load
    (i32.const 29660)
   )
  )
  (call $_glBindBuffer
   (i32.const 34962)
   (i32.load
    (i32.const 29684)
   )
  )
  (call $_glBufferSubData
   (i32.const 34962)
   (i32.const 0)
   (i32.shl
    (i32.load
     (i32.const 29648)
    )
    (i32.const 3)
   )
   (i32.load
    (i32.const 29664)
   )
  )
  (call $_glBindBuffer
   (i32.const 34962)
   (i32.load
    (i32.const 29688)
   )
  )
  (call $_glBufferSubData
   (i32.const 34962)
   (i32.const 0)
   (i32.shl
    (i32.load
     (i32.const 29648)
    )
    (i32.const 2)
   )
   (i32.load
    (i32.const 29668)
   )
  )
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 34837)
    )
   )
   (return)
  )
  (local.set $0
   (i32.load
    (i32.const 33396)
   )
  )
  (call_indirect (type $FUNCSIG$vi)
   (i32.const 0)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 31)
    )
    (i32.const 85)
   )
  )
 )
 (func $_DrawBuffersDefault (; 367 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 384)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 384)
   )
  )
  (local.set $1
   (i32.add
    (local.get $0)
    (i32.const 320)
   )
  )
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.const 256)
   )
  )
  (local.set $5
   (local.get $0)
  )
  (local.set $8
   (i32.add
    (local.get $0)
    (i32.const 192)
   )
  )
  (i64.store offset=128 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 33116)
   )
  )
  (i64.store offset=136 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 33124)
   )
  )
  (i64.store offset=144 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 33132)
   )
  )
  (i64.store offset=152 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 33140)
   )
  )
  (i64.store offset=160 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 33148)
   )
  )
  (i64.store offset=168 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 33156)
   )
  )
  (i64.store offset=176 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 33164)
   )
  )
  (i64.store offset=184 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 33172)
   )
  )
  (i64.store align=4
   (local.tee $2
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
   (i64.load align=4
    (i32.const 33052)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load align=4
    (i32.const 33060)
   )
  )
  (i64.store offset=16 align=4
   (local.get $2)
   (i64.load align=4
    (i32.const 33068)
   )
  )
  (i64.store offset=24 align=4
   (local.get $2)
   (i64.load align=4
    (i32.const 33076)
   )
  )
  (i64.store offset=32 align=4
   (local.get $2)
   (i64.load align=4
    (i32.const 33084)
   )
  )
  (i64.store offset=40 align=4
   (local.get $2)
   (i64.load align=4
    (i32.const 33092)
   )
  )
  (i64.store offset=48 align=4
   (local.get $2)
   (i64.load align=4
    (i32.const 33100)
   )
  )
  (i64.store offset=56 align=4
   (local.get $2)
   (i64.load align=4
    (i32.const 33108)
   )
  )
  (local.set $12
   (i32.const 1)
  )
  (loop $while-in
   (if
    (local.get $11)
    (block
     (i64.store align=4
      (local.get $4)
      (i64.load offset=128 align=4
       (local.get $0)
      )
     )
     (i64.store offset=8 align=4
      (local.get $4)
      (i64.load offset=136 align=4
       (local.get $0)
      )
     )
     (i64.store offset=16 align=4
      (local.get $4)
      (i64.load offset=144 align=4
       (local.get $0)
      )
     )
     (i64.store offset=24 align=4
      (local.get $4)
      (i64.load offset=152 align=4
       (local.get $0)
      )
     )
     (i64.store offset=32 align=4
      (local.get $4)
      (i64.load offset=160 align=4
       (local.get $0)
      )
     )
     (i64.store offset=40 align=4
      (local.get $4)
      (i64.load offset=168 align=4
       (local.get $0)
      )
     )
     (i64.store offset=48 align=4
      (local.get $4)
      (i64.load offset=176 align=4
       (local.get $0)
      )
     )
     (i64.store offset=56 align=4
      (local.get $4)
      (i64.load offset=184 align=4
       (local.get $0)
      )
     )
     (i64.store align=4
      (local.get $1)
      (i64.load align=4
       (local.get $2)
      )
     )
     (i64.store offset=8 align=4
      (local.get $1)
      (i64.load offset=8 align=4
       (local.get $2)
      )
     )
     (i64.store offset=16 align=4
      (local.get $1)
      (i64.load offset=16 align=4
       (local.get $2)
      )
     )
     (i64.store offset=24 align=4
      (local.get $1)
      (i64.load offset=24 align=4
       (local.get $2)
      )
     )
     (i64.store offset=32 align=4
      (local.get $1)
      (i64.load offset=32 align=4
       (local.get $2)
      )
     )
     (i64.store offset=40 align=4
      (local.get $1)
      (i64.load offset=40 align=4
       (local.get $2)
      )
     )
     (i64.store offset=48 align=4
      (local.get $1)
      (i64.load offset=48 align=4
       (local.get $2)
      )
     )
     (i64.store offset=56 align=4
      (local.get $1)
      (i64.load offset=56 align=4
       (local.get $2)
      )
     )
     (call $_SetStereoView
      (local.get $7)
      (local.get $4)
      (local.get $1)
     )
    )
   )
   (if
    (i32.gt_s
     (i32.load
      (i32.const 29648)
     )
     (i32.const 0)
    )
    (block
     (call $_glUseProgram
      (i32.load
       (i32.const 33264)
      )
     )
     (i64.store align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 33052)
      )
     )
     (i64.store offset=8 align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 33060)
      )
     )
     (i64.store offset=16 align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 33068)
      )
     )
     (i64.store offset=24 align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 33076)
      )
     )
     (i64.store offset=32 align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 33084)
      )
     )
     (i64.store offset=40 align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 33092)
      )
     )
     (i64.store offset=48 align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 33100)
      )
     )
     (i64.store offset=56 align=4
      (local.get $4)
      (i64.load align=4
       (i32.const 33108)
      )
     )
     (i64.store align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 33116)
      )
     )
     (i64.store offset=8 align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 33124)
      )
     )
     (i64.store offset=16 align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 33132)
      )
     )
     (i64.store offset=24 align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 33140)
      )
     )
     (i64.store offset=32 align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 33148)
      )
     )
     (i64.store offset=40 align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 33156)
      )
     )
     (i64.store offset=48 align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 33164)
      )
     )
     (i64.store offset=56 align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 33172)
      )
     )
     (call $_MatrixMultiply
      (local.get $5)
      (local.get $4)
      (local.get $1)
     )
     (local.set $3
      (i32.load
       (i32.const 33292)
      )
     )
     (i64.store align=4
      (local.get $1)
      (i64.load align=4
       (local.get $5)
      )
     )
     (i64.store offset=8 align=4
      (local.get $1)
      (i64.load offset=8 align=4
       (local.get $5)
      )
     )
     (i64.store offset=16 align=4
      (local.get $1)
      (i64.load offset=16 align=4
       (local.get $5)
      )
     )
     (i64.store offset=24 align=4
      (local.get $1)
      (i64.load offset=24 align=4
       (local.get $5)
      )
     )
     (i64.store offset=32 align=4
      (local.get $1)
      (i64.load offset=32 align=4
       (local.get $5)
      )
     )
     (i64.store offset=40 align=4
      (local.get $1)
      (i64.load offset=40 align=4
       (local.get $5)
      )
     )
     (i64.store offset=48 align=4
      (local.get $1)
      (i64.load offset=48 align=4
       (local.get $5)
      )
     )
     (i64.store offset=56 align=4
      (local.get $1)
      (i64.load offset=56 align=4
       (local.get $5)
      )
     )
     (call $_MatrixToFloatV
      (local.get $8)
      (local.get $1)
     )
     (call $_glUniformMatrix4fv
      (local.get $3)
      (i32.const 1)
      (i32.const 0)
      (local.get $8)
     )
     (call $_glUniform4f
      (i32.load
       (i32.const 33312)
      )
      (f64.const 1)
      (f64.const 1)
      (f64.const 1)
      (f64.const 1)
     )
     (call $_glUniform1i
      (i32.load
       (i32.const 33324)
      )
      (i32.const 0)
     )
     (if
      (i32.load8_s
       (i32.const 34837)
      )
      (block
       (local.set $3
        (i32.load
         (i32.const 33396)
        )
       )
       (call_indirect (type $FUNCSIG$vi)
        (i32.load
         (i32.const 29676)
        )
        (i32.add
         (i32.and
          (local.get $3)
          (i32.const 31)
         )
         (i32.const 85)
        )
       )
      )
      (block
       (call $_glBindBuffer
        (i32.const 34962)
        (i32.load
         (i32.const 29680)
        )
       )
       (call $_glVertexAttribPointer
        (i32.load
         (i32.const 33268)
        )
        (i32.const 3)
        (i32.const 5126)
        (i32.const 0)
        (i32.const 0)
        (i32.const 0)
       )
       (call $_glEnableVertexAttribArray
        (i32.load
         (i32.const 33268)
        )
       )
       (call $_glBindBuffer
        (i32.const 34962)
        (i32.load
         (i32.const 29684)
        )
       )
       (call $_glVertexAttribPointer
        (i32.load
         (i32.const 33272)
        )
        (i32.const 2)
        (i32.const 5126)
        (i32.const 0)
        (i32.const 0)
        (i32.const 0)
       )
       (call $_glEnableVertexAttribArray
        (i32.load
         (i32.const 33272)
        )
       )
       (call $_glBindBuffer
        (i32.const 34962)
        (i32.load
         (i32.const 29688)
        )
       )
       (call $_glVertexAttribPointer
        (i32.load
         (i32.const 33288)
        )
        (i32.const 4)
        (i32.const 5121)
        (i32.const 1)
        (i32.const 0)
        (i32.const 0)
       )
       (call $_glEnableVertexAttribArray
        (i32.load
         (i32.const 33288)
        )
       )
       (call $_glBindBuffer
        (i32.const 34963)
        (i32.load
         (i32.const 29692)
        )
       )
      )
     )
     (call $_glActiveTexture
      (i32.const 33984)
     )
     (if
      (i32.gt_s
       (i32.load
        (i32.const 33256)
       )
       (i32.const 0)
      )
      (block
       (local.set $3
        (i32.const 0)
       )
       (local.set $6
        (i32.const 0)
       )
       (loop $while-in1
        (call $_glBindTexture
         (i32.const 3553)
         (i32.load offset=8
          (i32.add
           (i32.load
            (i32.const 33252)
           )
           (i32.mul
            (local.get $3)
            (i32.const 12)
           )
          )
         )
        )
        (block $switch
         (block $switch-default
          (block $switch-case2
           (br_table $switch-case2 $switch-default $switch-default $switch-case2 $switch-default
            (i32.sub
             (local.tee $13
              (i32.load
               (i32.add
                (local.tee $9
                 (i32.load
                  (i32.const 33252)
                 )
                )
                (i32.mul
                 (local.get $3)
                 (i32.const 12)
                )
               )
              )
             )
             (i32.const 1)
            )
           )
          )
          (call $_glDrawArrays
           (local.get $13)
           (local.get $6)
           (i32.load offset=4
            (i32.add
             (i32.mul
              (local.get $3)
              (i32.const 12)
             )
             (local.get $9)
            )
           )
          )
          (br $switch)
         )
         (call $_glDrawElements
          (i32.const 4)
          (i32.mul
           (i32.div_s
            (i32.load offset=4
             (i32.add
              (i32.mul
               (local.get $3)
               (i32.const 12)
              )
              (local.get $9)
             )
            )
            (i32.const 4)
           )
           (i32.const 6)
          )
          (i32.const 5123)
          (i32.mul
           (i32.and
            (i32.shr_u
             (local.get $6)
             (i32.const 1)
            )
            (i32.const 1073741823)
           )
           (i32.const 6)
          )
         )
        )
        (local.set $6
         (i32.add
          (local.get $6)
          (i32.load offset=4
           (i32.add
            (i32.load
             (i32.const 33252)
            )
            (i32.mul
             (local.get $3)
             (i32.const 12)
            )
           )
          )
         )
        )
        (br_if $while-in1
         (i32.lt_s
          (local.tee $3
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (i32.load
           (i32.const 33256)
          )
         )
        )
       )
      )
     )
     (if
      (i32.eqz
       (i32.load8_s
        (i32.const 34837)
       )
      )
      (block
       (call $_glBindBuffer
        (i32.const 34962)
        (i32.const 0)
       )
       (call $_glBindBuffer
        (i32.const 34963)
        (i32.const 0)
       )
      )
     )
     (call $_glBindTexture
      (i32.const 3553)
      (i32.const 0)
     )
    )
   )
   (if
    (i32.load8_s
     (i32.const 34837)
    )
    (block
     (local.set $3
      (i32.load
       (i32.const 33396)
      )
     )
     (call_indirect (type $FUNCSIG$vi)
      (i32.const 0)
      (i32.add
       (i32.and
        (local.get $3)
        (i32.const 31)
       )
       (i32.const 85)
      )
     )
    )
   )
   (call $_glUseProgram
    (i32.const 0)
   )
   (br_if $while-in
    (i32.lt_u
     (local.tee $7
      (i32.add
       (local.get $7)
       (i32.const 1)
      )
     )
     (local.get $12)
    )
   )
  )
  (i32.store
   (i32.const 29648)
   (i32.const 0)
  )
  (i32.store
   (i32.const 29652)
   (i32.const 0)
  )
  (i32.store
   (i32.const 29656)
   (i32.const 0)
  )
  (f32.store
   (i32.const 14220)
   (f32.const -1)
  )
  (i64.store align=4
   (i32.const 33116)
   (i64.load offset=128 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33124)
   (i64.load offset=136 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33132)
   (i64.load offset=144 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33140)
   (i64.load offset=152 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33148)
   (i64.load offset=160 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33156)
   (i64.load offset=168 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33164)
   (i64.load offset=176 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33172)
   (i64.load offset=184 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33052)
   (i64.load align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 33060)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 33068)
   (i64.load offset=16 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 33076)
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 33084)
   (i64.load offset=32 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 33092)
   (i64.load offset=40 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 33100)
   (i64.load offset=48 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 33108)
   (i64.load offset=56 align=4
    (local.get $2)
   )
  )
  (local.set $6
   (i32.load
    (i32.const 33252)
   )
  )
  (local.set $3
   (i32.const 0)
  )
  (loop $while-in4
   (i32.store
    (i32.add
     (i32.mul
      (local.get $3)
      (i32.const 12)
     )
     (local.get $6)
    )
    (i32.const 7)
   )
   (i32.store offset=4
    (i32.add
     (i32.mul
      (local.get $3)
      (i32.const 12)
     )
     (local.get $6)
    )
    (i32.const 0)
   )
   (i32.store offset=8
    (i32.add
     (i32.mul
      (local.get $3)
      (i32.const 12)
     )
     (local.get $6)
    )
    (i32.load
     (i32.const 33260)
    )
   )
   (br_if $while-in4
    (i32.ne
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (i32.const 256)
    )
   )
  )
  (i32.store
   (i32.const 33256)
   (i32.const 1)
  )
  (global.set $STACKTOP
   (local.get $10)
  )
 )
 (func $_SetStereoView (; 368 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 256)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 256)
   )
  )
  (local.set $3
   (i32.add
    (local.get $5)
    (i32.const 192)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 128)
   )
  )
  (i64.store align=4
   (local.tee $4
    (i32.sub
     (local.get $5)
     (i32.const -64)
    )
   )
   (i64.load align=4
    (local.get $1)
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $1)
   )
  )
  (i64.store offset=16 align=4
   (local.get $4)
   (i64.load offset=16 align=4
    (local.get $1)
   )
  )
  (i64.store offset=24 align=4
   (local.get $4)
   (i64.load offset=24 align=4
    (local.get $1)
   )
  )
  (i64.store offset=32 align=4
   (local.get $4)
   (i64.load offset=32 align=4
    (local.get $1)
   )
  )
  (i64.store offset=40 align=4
   (local.get $4)
   (i64.load offset=40 align=4
    (local.get $1)
   )
  )
  (i64.store offset=48 align=4
   (local.get $4)
   (i64.load offset=48 align=4
    (local.get $1)
   )
  )
  (i64.store offset=56 align=4
   (local.get $4)
   (i64.load offset=56 align=4
    (local.get $1)
   )
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $2)
   )
  )
  (i64.store offset=8 align=4
   (local.get $5)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i64.store offset=16 align=4
   (local.get $5)
   (i64.load offset=16 align=4
    (local.get $2)
   )
  )
  (i64.store offset=24 align=4
   (local.get $5)
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i64.store offset=32 align=4
   (local.get $5)
   (i64.load offset=32 align=4
    (local.get $2)
   )
  )
  (i64.store offset=40 align=4
   (local.get $5)
   (i64.load offset=40 align=4
    (local.get $2)
   )
  )
  (i64.store offset=48 align=4
   (local.get $5)
   (i64.load offset=48 align=4
    (local.get $2)
   )
  )
  (i64.store offset=56 align=4
   (local.get $5)
   (i64.load offset=56 align=4
    (local.get $2)
   )
  )
  (call $_rlViewport
   (i32.div_s
    (i32.mul
     (local.get $0)
     (local.tee $1
      (i32.load
       (i32.const 33400)
      )
     )
    )
    (i32.const 2)
   )
   (i32.const 0)
   (i32.div_s
    (local.get $1)
    (i32.const 2)
   )
   (i32.load
    (i32.const 33404)
   )
  )
  (i64.store align=4
   (local.get $6)
   (i64.load align=4
    (local.get $2)
   )
  )
  (i64.store offset=8 align=4
   (local.get $6)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i64.store offset=16 align=4
   (local.get $6)
   (i64.load offset=16 align=4
    (local.get $2)
   )
  )
  (i64.store offset=24 align=4
   (local.get $6)
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i64.store offset=32 align=4
   (local.get $6)
   (i64.load offset=32 align=4
    (local.get $2)
   )
  )
  (i64.store offset=40 align=4
   (local.get $6)
   (i64.load offset=40 align=4
    (local.get $2)
   )
  )
  (i64.store offset=48 align=4
   (local.get $6)
   (i64.load offset=48 align=4
    (local.get $2)
   )
  )
  (i64.store offset=56 align=4
   (local.get $6)
   (i64.load offset=56 align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.tee $1
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 6)
      )
      (i32.const 33712)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $1)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $1)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $1)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $1)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $1)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $1)
   )
  )
  (i64.store offset=56 align=4
   (local.get $3)
   (i64.load offset=56 align=4
    (local.get $1)
   )
  )
  (call $_MatrixMultiply
   (local.get $5)
   (local.get $6)
   (local.get $3)
  )
  (i64.store align=4
   (local.get $4)
   (i64.load align=4
    (local.tee $0
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 6)
      )
      (i32.const 33584)
     )
    )
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store offset=16 align=4
   (local.get $4)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store offset=24 align=4
   (local.get $4)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store offset=32 align=4
   (local.get $4)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store offset=40 align=4
   (local.get $4)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store offset=48 align=4
   (local.get $4)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (i64.store offset=56 align=4
   (local.get $4)
   (i64.load offset=56 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.get $5)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $5)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $5)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $5)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $5)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $5)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $5)
   )
  )
  (i64.store offset=56 align=4
   (local.get $3)
   (i64.load offset=56 align=4
    (local.get $5)
   )
  )
  (call $_SetMatrixModelview
   (local.get $3)
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.get $4)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $4)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $4)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $4)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $4)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $4)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $4)
   )
  )
  (i64.store offset=56 align=4
   (local.get $3)
   (i64.load offset=56 align=4
    (local.get $4)
   )
  )
  (call $_SetMatrixProjection
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_SetMatrixModelview (; 369 ;) (; has Stack IR ;) (param $0 i32)
  (i64.store align=4
   (i32.const 33052)
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33060)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33068)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33076)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33084)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33092)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33100)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33108)
   (i64.load offset=56 align=4
    (local.get $0)
   )
  )
 )
 (func $_SetMatrixProjection (; 370 ;) (; has Stack IR ;) (param $0 i32)
  (i64.store align=4
   (i32.const 33116)
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33124)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33132)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33140)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33148)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33156)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33164)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 33172)
   (i64.load offset=56 align=4
    (local.get $0)
   )
  )
 )
 (func $_rlEnd (; 371 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.gt_s
    (local.tee $1
     (select
      (local.tee $1
       (i32.rem_s
        (local.tee $0
         (i32.load offset=4
          (i32.add
           (i32.load
            (i32.const 33252)
           )
           (i32.mul
            (i32.add
             (i32.load
              (i32.const 33256)
             )
             (i32.const -1)
            )
            (i32.const 12)
           )
          )
         )
        )
        (i32.const 4)
       )
      )
      (i32.sub
       (i32.const 4)
       (local.get $1)
      )
      (i32.gt_s
       (local.get $0)
       (i32.const 3)
      )
     )
    )
    (i32.const 0)
   )
   (block
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in
     (call $_rlVertex3f
      (f32.const -1)
      (f32.const -1)
      (f32.const -1)
     )
     (br_if $while-in
      (i32.ne
       (local.get $1)
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
      )
     )
    )
   )
  )
  (if
   (i32.ne
    (local.tee $0
     (i32.load
      (i32.const 29648)
     )
    )
    (local.tee $1
     (i32.load
      (i32.const 29656)
     )
    )
   )
   (if
    (i32.gt_s
     (local.tee $1
      (i32.sub
       (local.get $0)
       (local.get $1)
      )
     )
     (i32.const 0)
    )
    (block
     (local.set $0
      (i32.const 0)
     )
     (loop $while-in1
      (i32.store8
       (i32.add
        (local.tee $2
         (i32.load
          (i32.const 29668)
         )
        )
        (local.tee $3
         (i32.shl
          (i32.load
           (i32.const 29656)
          )
          (i32.const 2)
         )
        )
       )
       (i32.load8_s
        (i32.add
         (local.get $2)
         (i32.add
          (local.get $3)
          (i32.const -4)
         )
        )
       )
      )
      (i32.store8
       (i32.add
        (local.tee $2
         (i32.load
          (i32.const 29668)
         )
        )
        (i32.or
         (local.tee $3
          (i32.shl
           (i32.load
            (i32.const 29656)
           )
           (i32.const 2)
          )
         )
         (i32.const 1)
        )
       )
       (i32.load8_s
        (i32.add
         (local.get $2)
         (i32.add
          (local.get $3)
          (i32.const -3)
         )
        )
       )
      )
      (i32.store8
       (i32.add
        (local.tee $2
         (i32.load
          (i32.const 29668)
         )
        )
        (i32.or
         (local.tee $3
          (i32.shl
           (i32.load
            (i32.const 29656)
           )
           (i32.const 2)
          )
         )
         (i32.const 2)
        )
       )
       (i32.load8_s
        (i32.add
         (local.get $2)
         (i32.add
          (local.get $3)
          (i32.const -2)
         )
        )
       )
      )
      (i32.store8
       (i32.add
        (local.tee $2
         (i32.load
          (i32.const 29668)
         )
        )
        (i32.or
         (local.tee $3
          (i32.shl
           (i32.load
            (i32.const 29656)
           )
           (i32.const 2)
          )
         )
         (i32.const 3)
        )
       )
       (i32.load8_s
        (i32.add
         (local.get $2)
         (i32.add
          (local.get $3)
          (i32.const -1)
         )
        )
       )
      )
      (i32.store
       (i32.const 29656)
       (i32.add
        (i32.load
         (i32.const 29656)
        )
        (i32.const 1)
       )
      )
      (br_if $while-in1
       (i32.ne
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (local.get $1)
       )
      )
     )
    )
   )
  )
  (if
   (i32.ne
    (local.tee $0
     (i32.load
      (i32.const 29648)
     )
    )
    (local.tee $1
     (i32.load
      (i32.const 29652)
     )
    )
   )
   (block
    (if
     (i32.gt_s
      (local.tee $1
       (i32.sub
        (local.get $0)
        (local.get $1)
       )
      )
      (i32.const 0)
     )
     (block
      (local.set $0
       (i32.const 0)
      )
      (loop $while-in3
       (f32.store
        (i32.add
         (i32.load
          (i32.const 29664)
         )
         (i32.shl
          (i32.load
           (i32.const 29652)
          )
          (i32.const 3)
         )
        )
        (f32.const 0)
       )
       (f32.store
        (i32.add
         (i32.load
          (i32.const 29664)
         )
         (i32.shl
          (i32.or
           (i32.shl
            (i32.load
             (i32.const 29652)
            )
            (i32.const 1)
           )
           (i32.const 1)
          )
          (i32.const 2)
         )
        )
        (f32.const 0)
       )
       (i32.store
        (i32.const 29652)
        (i32.add
         (i32.load
          (i32.const 29652)
         )
         (i32.const 1)
        )
       )
       (br_if $while-in3
        (i32.ne
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (local.get $1)
        )
       )
      )
     )
    )
    (local.set $0
     (i32.load
      (i32.const 29648)
     )
    )
   )
  )
  (f32.store
   (i32.const 14220)
   (f32.add
    (f32.load
     (i32.const 14220)
    )
    (f32.const 4.999999873689376e-05)
   )
  )
  (if
   (i32.le_s
    (local.get $0)
    (i32.const 8187)
   )
   (return)
  )
  (call $_rlPopMatrix)
  (call $_rlglDraw)
 )
 (func $_rlVertex3f (; 372 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (param $2 f32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 112)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 112)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 40)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 28)
   )
  )
  (local.set $5
   (i32.add
    (local.get $3)
    (i32.const 4)
   )
  )
  (f32.store offset=16
   (local.get $3)
   (local.get $0)
  )
  (f32.store offset=20
   (local.get $3)
   (local.get $1)
  )
  (f32.store offset=24
   (local.get $3)
   (local.get $2)
  )
  (if
   (i32.load8_s
    (i32.const 34836)
   )
   (block
    (i64.store align=4
     (local.get $6)
     (i64.load offset=16 align=4
      (local.get $3)
     )
    )
    (i32.store offset=8
     (local.get $6)
     (i32.load offset=24
      (local.get $3)
     )
    )
    (i64.store align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 33188)
     )
    )
    (i64.store offset=8 align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 33196)
     )
    )
    (i64.store offset=16 align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 33204)
     )
    )
    (i64.store offset=24 align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 33212)
     )
    )
    (i64.store offset=32 align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 33220)
     )
    )
    (i64.store offset=40 align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 33228)
     )
    )
    (i64.store offset=48 align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 33236)
     )
    )
    (i64.store offset=56 align=4
     (local.get $4)
     (i64.load align=4
      (i32.const 33244)
     )
    )
    (call $_Vector3Transform
     (local.get $5)
     (local.get $6)
     (local.get $4)
    )
    (i64.store offset=16 align=4
     (local.get $3)
     (i64.load align=4
      (local.get $5)
     )
    )
    (i32.store offset=24
     (local.get $3)
     (i32.load offset=8
      (local.get $5)
     )
    )
   )
  )
  (local.set $5
   (local.get $3)
  )
  (if
   (i32.lt_s
    (local.tee $6
     (i32.load
      (i32.const 29648)
     )
    )
    (i32.const 8192)
   )
   (block
    (i32.store
     (i32.add
      (i32.load
       (i32.const 29660)
      )
      (i32.shl
       (i32.mul
        (local.get $6)
        (i32.const 3)
       )
       (i32.const 2)
      )
     )
     (i32.load offset=16
      (local.get $3)
     )
    )
    (i32.store
     (i32.add
      (i32.load
       (i32.const 29660)
      )
      (i32.shl
       (i32.add
        (i32.mul
         (i32.load
          (i32.const 29648)
         )
         (i32.const 3)
        )
        (i32.const 1)
       )
       (i32.const 2)
      )
     )
     (i32.load offset=20
      (local.get $3)
     )
    )
    (i32.store
     (i32.add
      (i32.load
       (i32.const 29660)
      )
      (i32.shl
       (i32.add
        (i32.mul
         (i32.load
          (i32.const 29648)
         )
         (i32.const 3)
        )
        (i32.const 2)
       )
       (i32.const 2)
      )
     )
     (i32.load offset=24
      (local.get $3)
     )
    )
    (i32.store
     (i32.const 29648)
     (i32.add
      (i32.load
       (i32.const 29648)
      )
      (i32.const 1)
     )
    )
    (i32.store offset=4
     (local.tee $5
      (i32.add
       (i32.load
        (i32.const 33252)
       )
       (i32.mul
        (i32.add
         (i32.load
          (i32.const 33256)
         )
         (i32.const -1)
        )
        (i32.const 12)
       )
      )
     )
     (i32.add
      (i32.load offset=4
       (local.get $5)
      )
      (i32.const 1)
     )
    )
   )
   (call $_TraceLog
    (i32.const 5)
    (i32.const 16059)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_rlVertex2f (; 373 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32)
  (call $_rlVertex3f
   (local.get $0)
   (local.get $1)
   (f32.load
    (i32.const 14220)
   )
  )
 )
 (func $_rlTexCoord2f (; 374 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32)
  (f32.store
   (i32.add
    (i32.load
     (i32.const 29664)
    )
    (i32.shl
     (i32.load
      (i32.const 29652)
     )
     (i32.const 3)
    )
   )
   (local.get $0)
  )
  (f32.store
   (i32.add
    (i32.load
     (i32.const 29664)
    )
    (i32.shl
     (i32.or
      (i32.shl
       (i32.load
        (i32.const 29652)
       )
       (i32.const 1)
      )
      (i32.const 1)
     )
     (i32.const 2)
    )
   )
   (local.get $1)
  )
  (i32.store
   (i32.const 29652)
   (i32.add
    (i32.load
     (i32.const 29652)
    )
    (i32.const 1)
   )
  )
 )
 (func $_rlColor4ub (; 375 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (i32.store8
   (i32.add
    (i32.load
     (i32.const 29668)
    )
    (i32.shl
     (i32.load
      (i32.const 29656)
     )
     (i32.const 2)
    )
   )
   (local.get $0)
  )
  (i32.store8
   (i32.add
    (i32.load
     (i32.const 29668)
    )
    (i32.or
     (i32.shl
      (i32.load
       (i32.const 29656)
      )
      (i32.const 2)
     )
     (i32.const 1)
    )
   )
   (local.get $1)
  )
  (i32.store8
   (i32.add
    (i32.load
     (i32.const 29668)
    )
    (i32.or
     (i32.shl
      (i32.load
       (i32.const 29656)
      )
      (i32.const 2)
     )
     (i32.const 2)
    )
   )
   (local.get $2)
  )
  (i32.store8
   (i32.add
    (i32.load
     (i32.const 29668)
    )
    (i32.or
     (i32.shl
      (i32.load
       (i32.const 29656)
      )
      (i32.const 2)
     )
     (i32.const 3)
    )
   )
   (local.get $3)
  )
  (i32.store
   (i32.const 29656)
   (i32.add
    (i32.load
     (i32.const 29656)
    )
    (i32.const 1)
   )
  )
 )
 (func $_rlEnableTexture (; 376 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.eq
    (local.get $0)
    (i32.load offset=8
     (i32.add
      (local.tee $2
       (i32.load
        (i32.const 33252)
       )
      )
      (i32.mul
       (local.tee $3
        (i32.add
         (local.tee $1
          (i32.load
           (i32.const 33256)
          )
         )
         (i32.const -1)
        )
       )
       (i32.const 12)
      )
     )
    )
   )
   (return)
  )
  (local.set $1
   (i32.add
    (local.get $1)
    (i32.const 1)
   )
  )
  (if
   (i32.gt_s
    (i32.load offset=4
     (i32.add
      (i32.mul
       (local.get $3)
       (i32.const 12)
      )
      (local.get $2)
     )
    )
    (i32.const 0)
   )
   (i32.store
    (i32.const 33256)
    (local.get $1)
   )
   (local.set $1
    (i32.load
     (i32.const 33256)
    )
   )
  )
  (if
   (i32.gt_s
    (local.get $1)
    (i32.const 255)
   )
   (call $_rlglDraw)
  )
  (i32.store offset=8
   (i32.add
    (local.tee $1
     (i32.load
      (i32.const 33252)
     )
    )
    (i32.mul
     (local.tee $2
      (i32.add
       (i32.load
        (i32.const 33256)
       )
       (i32.const -1)
      )
     )
     (i32.const 12)
    )
   )
   (local.get $0)
  )
  (i32.store offset=4
   (i32.add
    (i32.mul
     (local.get $2)
     (i32.const 12)
    )
    (local.get $1)
   )
   (i32.const 0)
  )
 )
 (func $_rlDisableTexture (; 377 ;) (; has Stack IR ;)
  (if
   (i32.le_s
    (i32.load
     (i32.const 29648)
    )
    (i32.const 8191)
   )
   (return)
  )
  (call $_rlglDraw)
 )
 (func $_rlDeleteTextures (; 378 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $0)
  )
  (if
   (local.get $0)
   (call $_glDeleteTextures
    (i32.const 1)
    (local.get $1)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_rlClearColor (; 379 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (call $_glClearColor
   (f64.promote_f32
    (f32.div
     (f32.convert_i32_s
      (i32.and
       (local.get $0)
       (i32.const 255)
      )
     )
     (f32.const 255)
    )
   )
   (f64.promote_f32
    (f32.div
     (f32.convert_i32_s
      (i32.and
       (local.get $1)
       (i32.const 255)
      )
     )
     (f32.const 255)
    )
   )
   (f64.promote_f32
    (f32.div
     (f32.convert_i32_s
      (i32.and
       (local.get $2)
       (i32.const 255)
      )
     )
     (f32.const 255)
    )
   )
   (f64.promote_f32
    (f32.div
     (f32.convert_i32_s
      (i32.and
       (local.get $3)
       (i32.const 255)
      )
     )
     (f32.const 255)
    )
   )
  )
 )
 (func $_rlglInit (; 380 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local.set $14
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 2592)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 2592)
   )
  )
  (local.set $15
   (i32.add
    (local.get $2)
    (i32.const 2192)
   )
  )
  (local.set $16
   (i32.add
    (local.get $2)
    (i32.const 2184)
   )
  )
  (local.set $12
   (i32.add
    (local.get $2)
    (i32.const 2176)
   )
  )
  (local.set $17
   (i32.add
    (local.get $2)
    (i32.const 2168)
   )
  )
  (local.set $18
   (i32.add
    (local.get $2)
    (i32.const 2160)
   )
  )
  (local.set $13
   (i32.add
    (local.get $2)
    (i32.const 2152)
   )
  )
  (local.set $19
   (i32.add
    (local.get $2)
    (i32.const 2144)
   )
  )
  (local.set $20
   (i32.add
    (local.get $2)
    (i32.const 2136)
   )
  )
  (local.set $21
   (i32.add
    (local.get $2)
    (i32.const 2128)
   )
  )
  (local.set $22
   (i32.add
    (local.get $2)
    (i32.const 2120)
   )
  )
  (local.set $23
   (i32.add
    (local.get $2)
    (i32.const 2112)
   )
  )
  (local.set $24
   (i32.add
    (local.get $2)
    (i32.const 2104)
   )
  )
  (local.set $25
   (i32.add
    (local.get $2)
    (i32.const 2096)
   )
  )
  (local.set $26
   (i32.add
    (local.get $2)
    (i32.const 2088)
   )
  )
  (local.set $27
   (i32.add
    (local.get $2)
    (i32.const 2080)
   )
  )
  (local.set $10
   (i32.add
    (local.get $2)
    (i32.const 2072)
   )
  )
  (local.set $4
   (local.get $2)
  )
  (local.set $3
   (i32.add
    (local.get $2)
    (i32.const 2064)
   )
  )
  (local.set $9
   (i32.add
    (local.get $2)
    (i32.const 2056)
   )
  )
  (local.set $11
   (i32.add
    (local.get $2)
    (i32.const 2456)
   )
  )
  (local.set $5
   (i32.add
    (local.get $2)
    (i32.const 2392)
   )
  )
  (local.set $6
   (i32.add
    (local.get $2)
    (i32.const 2328)
   )
  )
  (local.set $7
   (i32.add
    (local.get $2)
    (i32.const 2264)
   )
  )
  (local.set $8
   (i32.add
    (local.get $2)
    (i32.const 2200)
   )
  )
  (i32.store
   (local.tee $28
    (i32.add
     (local.get $2)
     (i32.const 2048)
    )
   )
   (call $_glGetString
    (i32.const 7936)
   )
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 16087)
   (local.get $28)
  )
  (i32.store
   (local.get $9)
   (call $_glGetString
    (i32.const 7937)
   )
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 16105)
   (local.get $9)
  )
  (i32.store
   (local.get $3)
   (call $_glGetString
    (i32.const 7938)
   )
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 16123)
   (local.get $3)
  )
  (i32.store
   (local.get $2)
   (call $_glGetString
    (i32.const 35724)
   )
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 16141)
   (local.get $2)
  )
  (call $_strcpy
   (local.tee $3
    (call $_malloc
     (i32.add
      (call $_strlen
       (local.tee $9
        (call $_glGetString
         (i32.const 7939)
        )
       )
      )
      (i32.const 1)
     )
    )
   )
   (local.get $9)
  )
  (i32.store
   (local.get $2)
   (local.tee $2
    (call $_strtok
     (local.get $3)
    )
   )
  )
  (if
   (local.get $2)
   (block
    (local.set $2
     (i32.const 0)
    )
    (loop $while-in
     (i32.store
      (i32.add
       (i32.shl
        (local.tee $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.const 2)
       )
       (local.get $4)
      )
      (local.tee $9
       (call $_strtok
        (i32.const 0)
       )
      )
     )
     (br_if $while-in
      (local.get $9)
     )
    )
   )
   (local.set $2
    (i32.const 0)
   )
  )
  (call $_free
   (local.get $3)
  )
  (i32.store
   (local.get $10)
   (local.tee $9
    (i32.add
     (local.get $2)
     (i32.const -1)
    )
   )
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 16161)
   (local.get $10)
  )
  (if
   (i32.gt_s
    (local.get $2)
    (i32.const 1)
   )
   (block
    (local.set $2
     (i32.const 0)
    )
    (loop $while-in1
     (if
      (i32.eqz
       (call $_strcmp
        (local.tee $3
         (i32.load
          (i32.add
           (i32.shl
            (local.get $2)
            (i32.const 2)
           )
           (local.get $4)
          )
         )
        )
        (i32.const 16196)
       )
      )
      (block
       (i32.store8
        (i32.const 34837)
        (i32.const 1)
       )
       (i32.store
        (i32.const 33880)
        (call $_eglGetProcAddress
         (i32.const 25921)
        )
       )
       (i32.store
        (i32.const 33396)
        (call $_eglGetProcAddress
         (i32.const 25876)
        )
       )
       (i32.store
        (i32.const 33876)
        (call $_eglGetProcAddress
         (i32.const 25897)
        )
       )
      )
     )
     (if
      (i32.eqz
       (call $_strcmp
        (local.get $3)
        (i32.const 16223)
       )
      )
      (i32.store8
       (i32.const 34839)
       (i32.const 1)
      )
     )
     (if
      (i32.eqz
       (call $_strcmp
        (local.get $3)
        (i32.const 16243)
       )
      )
      (i32.store8
       (i32.const 34840)
       (i32.const 1)
      )
     )
     (block $__rjto$0
      (block $__rjti$0
       (br_if $__rjti$0
        (i32.eqz
         (call $_strcmp
          (local.get $3)
          (i32.const 16264)
         )
        )
       )
       (br_if $__rjti$0
        (i32.eqz
         (call $_strcmp
          (local.get $3)
          (i32.const 16296)
         )
        )
       )
       (br_if $__rjti$0
        (i32.eqz
         (call $_strcmp
          (local.get $3)
          (i32.const 16329)
         )
        )
       )
       (br $__rjto$0)
      )
      (i32.store8
       (i32.const 34841)
       (i32.const 1)
      )
     )
     (block $__rjto$1
      (block $__rjti$1
       (br_if $__rjti$1
        (i32.eqz
         (call $_strcmp
          (local.get $3)
          (i32.const 16369)
         )
        )
       )
       (br_if $__rjti$1
        (i32.eqz
         (call $_strcmp
          (local.get $3)
          (i32.const 16405)
         )
        )
       )
       (br $__rjto$1)
      )
      (i32.store8
       (i32.const 34842)
       (i32.const 1)
      )
     )
     (if
      (i32.eqz
       (call $_strcmp
        (local.get $3)
        (i32.const 16438)
       )
      )
      (i32.store8
       (i32.const 34843)
       (i32.const 1)
      )
     )
     (if
      (i32.eqz
       (call $_strcmp
        (local.get $3)
        (i32.const 16463)
       )
      )
      (i32.store8
       (i32.const 34844)
       (i32.const 1)
      )
     )
     (if
      (i32.eqz
       (call $_strcmp
        (local.get $3)
        (i32.const 16496)
       )
      )
      (i32.store8
       (i32.const 34845)
       (i32.const 1)
      )
     )
     (if
      (i32.eqz
       (call $_strcmp
        (local.get $3)
        (i32.const 16532)
       )
      )
      (block
       (i32.store8
        (i32.const 34846)
        (i32.const 1)
       )
       (call $_glGetFloatv
        (i32.const 34047)
        (i32.const 33872)
       )
      )
     )
     (if
      (i32.eqz
       (call $_strcmp
        (local.get $3)
        (i32.const 16566)
       )
      )
      (i32.store8
       (i32.const 34838)
       (i32.const 1)
      )
     )
     (if
      (i32.eqz
       (call $_strcmp
        (local.get $3)
        (i32.const 16594)
       )
      )
      (i32.store8
       (i32.const 34847)
       (i32.const 1)
      )
     )
     (br_if $while-in1
      (i32.ne
       (local.tee $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (local.get $9)
      )
     )
    )
   )
  )
  (if
   (i32.load8_s
    (i32.const 34837)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 16614)
    (local.get $27)
   )
   (call $_TraceLog
    (i32.const 4)
    (i32.const 16689)
    (local.get $26)
   )
  )
  (if
   (i32.load8_s
    (i32.const 34839)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 16750)
    (local.get $25)
   )
   (call $_TraceLog
    (i32.const 4)
    (i32.const 16825)
    (local.get $24)
   )
  )
  (if
   (i32.load8_s
    (i32.const 34841)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 16917)
    (local.get $23)
   )
  )
  (if
   (i32.load8_s
    (i32.const 34842)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 16963)
    (local.get $22)
   )
  )
  (if
   (i32.load8_s
    (i32.const 34843)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 17010)
    (local.get $21)
   )
  )
  (if
   (i32.load8_s
    (i32.const 34844)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 17061)
    (local.get $20)
   )
  )
  (if
   (i32.load8_s
    (i32.const 34845)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 17108)
    (local.get $19)
   )
  )
  (if
   (i32.load8_s
    (i32.const 34846)
   )
   (block
    (f64.store
     (local.get $13)
     (f64.promote_f32
      (f32.load
       (i32.const 33872)
      )
     )
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 17155)
     (local.get $13)
    )
   )
  )
  (if
   (i32.load8_s
    (i32.const 34838)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 17221)
    (local.get $18)
   )
  )
  (if
   (i32.load8_s
    (i32.const 34847)
   )
   (call $_TraceLog
    (i32.const 3)
    (i32.const 17274)
    (local.get $17)
   )
  )
  (i32.store
   (local.get $10)
   (i32.const -1)
  )
  (i32.store
   (i32.const 33260)
   (local.tee $2
    (call $_rlLoadTexture
     (local.get $10)
     (i32.const 1)
     (i32.const 1)
     (i32.const 7)
     (i32.const 1)
    )
   )
  )
  (if
   (local.get $2)
   (block
    (i32.store
     (local.get $12)
     (local.get $2)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 17309)
     (local.get $12)
    )
   )
   (call $_TraceLog
    (i32.const 4)
    (i32.const 17360)
    (local.get $16)
   )
  )
  (call $_LoadShaderDefault
   (local.get $11)
  )
  (drop
   (call $_memcpy
    (i32.const 33884)
    (local.get $11)
    (i32.const 132)
   )
  )
  (drop
   (call $_memcpy
    (i32.const 33264)
    (local.get $11)
    (i32.const 132)
   )
  )
  (call $_LoadBuffersDefault)
  (call $_MatrixIdentity
   (local.get $5)
  )
  (i64.store align=4
   (i32.const 33188)
   (i64.load align=4
    (local.get $5)
   )
  )
  (i64.store align=4
   (i32.const 33196)
   (i64.load offset=8 align=4
    (local.get $5)
   )
  )
  (i64.store align=4
   (i32.const 33204)
   (i64.load offset=16 align=4
    (local.get $5)
   )
  )
  (i64.store align=4
   (i32.const 33212)
   (i64.load offset=24 align=4
    (local.get $5)
   )
  )
  (i64.store align=4
   (i32.const 33220)
   (i64.load offset=32 align=4
    (local.get $5)
   )
  )
  (i64.store align=4
   (i32.const 33228)
   (i64.load offset=40 align=4
    (local.get $5)
   )
  )
  (i64.store align=4
   (i32.const 33236)
   (i64.load offset=48 align=4
    (local.get $5)
   )
  )
  (i64.store align=4
   (i32.const 33244)
   (i64.load offset=56 align=4
    (local.get $5)
   )
  )
  (i32.store
   (i32.const 33252)
   (local.tee $4
    (call $_malloc
     (i32.const 3072)
    )
   )
  )
  (local.set $3
   (i32.load
    (i32.const 33260)
   )
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in3
   (i32.store
    (i32.add
     (i32.mul
      (local.get $2)
      (i32.const 12)
     )
     (local.get $4)
    )
    (i32.const 7)
   )
   (i32.store offset=4
    (i32.add
     (i32.mul
      (local.get $2)
      (i32.const 12)
     )
     (local.get $4)
    )
    (i32.const 0)
   )
   (i32.store offset=8
    (i32.add
     (i32.mul
      (local.get $2)
      (i32.const 12)
     )
     (local.get $4)
    )
    (local.get $3)
   )
   (br_if $while-in3
    (i32.ne
     (local.tee $2
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (i32.const 256)
    )
   )
  )
  (i32.store
   (i32.const 33256)
   (i32.const 1)
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in5
   (local.set $4
    (i32.add
     (i32.shl
      (local.get $2)
      (i32.const 6)
     )
     (i32.const 27600)
    )
   )
   (call $_MatrixIdentity
    (local.get $6)
   )
   (i64.store align=4
    (local.get $4)
    (i64.load align=4
     (local.get $6)
    )
   )
   (i64.store offset=8 align=4
    (local.get $4)
    (i64.load offset=8 align=4
     (local.get $6)
    )
   )
   (i64.store offset=16 align=4
    (local.get $4)
    (i64.load offset=16 align=4
     (local.get $6)
    )
   )
   (i64.store offset=24 align=4
    (local.get $4)
    (i64.load offset=24 align=4
     (local.get $6)
    )
   )
   (i64.store offset=32 align=4
    (local.get $4)
    (i64.load offset=32 align=4
     (local.get $6)
    )
   )
   (i64.store offset=40 align=4
    (local.get $4)
    (i64.load offset=40 align=4
     (local.get $6)
    )
   )
   (i64.store offset=48 align=4
    (local.get $4)
    (i64.load offset=48 align=4
     (local.get $6)
    )
   )
   (i64.store offset=56 align=4
    (local.get $4)
    (i64.load offset=56 align=4
     (local.get $6)
    )
   )
   (br_if $while-in5
    (i32.ne
     (local.tee $2
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (i32.const 32)
    )
   )
  )
  (call $_MatrixIdentity
   (local.get $7)
  )
  (i64.store align=4
   (i32.const 33116)
   (i64.load align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (i32.const 33124)
   (i64.load offset=8 align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (i32.const 33132)
   (i64.load offset=16 align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (i32.const 33140)
   (i64.load offset=24 align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (i32.const 33148)
   (i64.load offset=32 align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (i32.const 33156)
   (i64.load offset=40 align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (i32.const 33164)
   (i64.load offset=48 align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (i32.const 33172)
   (i64.load offset=56 align=4
    (local.get $7)
   )
  )
  (call $_MatrixIdentity
   (local.get $8)
  )
  (i64.store align=4
   (i32.const 33052)
   (i64.load align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (i32.const 33060)
   (i64.load offset=8 align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (i32.const 33068)
   (i64.load offset=16 align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (i32.const 33076)
   (i64.load offset=24 align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (i32.const 33084)
   (i64.load offset=32 align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (i32.const 33092)
   (i64.load offset=40 align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (i32.const 33100)
   (i64.load offset=48 align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (i32.const 33108)
   (i64.load offset=56 align=4
    (local.get $8)
   )
  )
  (i32.store
   (i32.const 33180)
   (i32.const 33052)
  )
  (call $_glDepthFunc
   (i32.const 515)
  )
  (call $_glDisable
   (i32.const 2929)
  )
  (call $_glBlendFunc
   (i32.const 770)
   (i32.const 771)
  )
  (call $_glEnable
   (i32.const 3042)
  )
  (call $_glCullFace
   (i32.const 1029)
  )
  (call $_glFrontFace
   (i32.const 2305)
  )
  (call $_glEnable
   (i32.const 2884)
  )
  (call $_glClearColor
   (f64.const 0)
   (f64.const 0)
   (f64.const 0)
   (f64.const 1)
  )
  (call $_glClearDepthf
   (f64.const 1)
  )
  (call $_glClear
   (i32.const 16640)
  )
  (i32.store
   (i32.const 33400)
   (local.get $0)
  )
  (i32.store
   (i32.const 33404)
   (local.get $1)
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 17399)
   (local.get $15)
  )
  (global.set $STACKTOP
   (local.get $14)
  )
 )
 (func $_rlLoadTexture (; 381 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 112)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 112)
   )
  )
  (local.set $18
   (i32.add
    (local.get $5)
    (i32.const 88)
   )
  )
  (local.set $12
   (i32.add
    (local.get $5)
    (i32.const 72)
   )
  )
  (local.set $11
   (i32.add
    (local.get $5)
    (i32.const 48)
   )
  )
  (local.set $14
   (i32.add
    (local.get $5)
    (i32.const 40)
   )
  )
  (local.set $9
   (i32.add
    (local.get $5)
    (i32.const 32)
   )
  )
  (local.set $10
   (i32.add
    (local.get $5)
    (i32.const 24)
   )
  )
  (local.set $13
   (i32.add
    (local.get $5)
    (i32.const 16)
   )
  )
  (local.set $15
   (i32.add
    (local.get $5)
    (i32.const 8)
   )
  )
  (local.set $7
   (local.get $5)
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 100)
   )
  )
  (local.set $16
   (i32.add
    (local.get $5)
    (i32.const 96)
   )
  )
  (local.set $17
   (i32.add
    (local.get $5)
    (i32.const 92)
   )
  )
  (call $_glBindTexture
   (i32.const 3553)
   (i32.const 0)
  )
  (i32.store
   (local.get $6)
   (i32.const 0)
  )
  (block $folding-inner0
   (if
    (i32.and
     (i32.eqz
      (i32.load8_s
       (i32.const 34841)
      )
     )
     (i32.lt_u
      (i32.add
       (local.get $3)
       (i32.const -11)
      )
      (i32.const 4)
     )
    )
    (block
     (call $_TraceLog
      (i32.const 4)
      (i32.const 17924)
      (local.get $7)
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.and
     (i32.eqz
      (i32.load8_s
       (i32.const 34842)
      )
     )
     (i32.eq
      (local.get $3)
      (i32.const 15)
     )
    )
    (block
     (call $_TraceLog
      (i32.const 4)
      (i32.const 17968)
      (local.get $15)
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.and
     (i32.eqz
      (i32.load8_s
       (i32.const 34843)
      )
     )
     (i32.eq
      (local.tee $5
       (i32.or
        (local.get $3)
        (i32.const 1)
       )
      )
      (i32.const 17)
     )
    )
    (block
     (call $_TraceLog
      (i32.const 4)
      (i32.const 18013)
      (local.get $13)
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.and
     (i32.eqz
      (i32.load8_s
       (i32.const 34844)
      )
     )
     (i32.eq
      (local.get $5)
      (i32.const 19)
     )
    )
    (block
     (call $_TraceLog
      (i32.const 4)
      (i32.const 18058)
      (local.get $10)
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.and
     (i32.eqz
      (i32.load8_s
       (i32.const 34845)
      )
     )
     (i32.eq
      (local.get $5)
      (i32.const 21)
     )
    )
    (block
     (call $_TraceLog
      (i32.const 4)
      (i32.const 18103)
      (local.get $9)
     )
     (br $folding-inner0)
    )
   )
   (call $_glPixelStorei
    (i32.const 3317)
    (i32.const 1)
   )
   (call $_glGenTextures
    (i32.const 1)
    (local.get $6)
   )
   (call $_glBindTexture
    (i32.const 3553)
    (i32.load
     (local.get $6)
    )
   )
   (i32.store
    (local.get $14)
    (local.get $0)
   )
   (call $_TraceLog
    (i32.const 2)
    (i32.const 18148)
    (local.get $14)
   )
   (if
    (i32.gt_s
     (local.get $4)
     (i32.const 0)
    )
    (block
     (local.set $19
      (i32.lt_s
       (local.get $3)
       (i32.const 11)
      )
     )
     (local.set $9
      (i32.const 0)
     )
     (local.set $10
      (i32.const 0)
     )
     (local.set $5
      (local.get $2)
     )
     (local.set $7
      (local.get $1)
     )
     (loop $while-in
      (local.set $13
       (call $_GetPixelDataSize
        (local.get $7)
        (local.get $5)
        (local.get $3)
       )
      )
      (call $_rlGetGlTextureFormats
       (local.get $3)
       (local.get $14)
       (local.get $16)
       (local.get $17)
      )
      (i32.store
       (local.get $11)
       (local.get $9)
      )
      (i32.store offset=4
       (local.get $11)
       (local.get $7)
      )
      (i32.store offset=8
       (local.get $11)
       (local.get $5)
      )
      (i32.store offset=12
       (local.get $11)
       (local.get $13)
      )
      (i32.store offset=16
       (local.get $11)
       (local.get $10)
      )
      (call $_TraceLog
       (i32.const 2)
       (i32.const 18192)
       (local.get $11)
      )
      (if
       (i32.ne
        (local.tee $15
         (i32.load
          (local.get $14)
         )
        )
        (i32.const -1)
       )
       (if
        (local.get $19)
        (call $_glTexImage2D
         (i32.const 3553)
         (local.get $9)
         (local.get $15)
         (local.get $7)
         (local.get $5)
         (i32.const 0)
         (i32.load
          (local.get $16)
         )
         (i32.load
          (local.get $17)
         )
         (i32.add
          (local.get $0)
          (local.get $10)
         )
        )
        (call $_glCompressedTexImage2D
         (i32.const 3553)
         (local.get $9)
         (local.get $15)
         (local.get $7)
         (local.get $5)
         (i32.const 0)
         (local.get $13)
         (i32.add
          (local.get $0)
          (local.get $10)
         )
        )
       )
      )
      (local.set $10
       (i32.add
        (local.get $10)
        (local.get $13)
       )
      )
      (local.set $7
       (select
        (i32.const 1)
        (i32.div_s
         (local.get $7)
         (i32.const 2)
        )
        (i32.lt_s
         (local.get $7)
         (i32.const 2)
        )
       )
      )
      (local.set $5
       (select
        (i32.const 1)
        (i32.div_s
         (local.get $5)
         (i32.const 2)
        )
        (i32.lt_s
         (local.get $5)
         (i32.const 2)
        )
       )
      )
      (br_if $while-in
       (i32.ne
        (local.tee $9
         (i32.add
          (local.get $9)
          (i32.const 1)
         )
        )
        (local.get $4)
       )
      )
     )
    )
   )
   (if
    (i32.load8_s
     (i32.const 34839)
    )
    (block
     (call $_glTexParameteri
      (i32.const 3553)
      (i32.const 10242)
      (i32.const 10497)
     )
     (call $_glTexParameteri
      (i32.const 3553)
      (i32.const 10243)
      (i32.const 10497)
     )
    )
    (block
     (call $_glTexParameteri
      (i32.const 3553)
      (i32.const 10242)
      (i32.const 33071)
     )
     (call $_glTexParameteri
      (i32.const 3553)
      (i32.const 10243)
      (i32.const 33071)
     )
    )
   )
   (call $_glTexParameteri
    (i32.const 3553)
    (i32.const 10240)
    (i32.const 9728)
   )
   (call $_glTexParameteri
    (i32.const 3553)
    (i32.const 10241)
    (i32.const 9728)
   )
   (call $_glBindTexture
    (i32.const 3553)
    (i32.const 0)
   )
   (if
    (local.tee $0
     (i32.load
      (local.get $6)
     )
    )
    (block
     (i32.store
      (local.get $12)
      (local.get $0)
     )
     (i32.store offset=4
      (local.get $12)
      (local.get $1)
     )
     (i32.store offset=8
      (local.get $12)
      (local.get $2)
     )
     (i32.store offset=12
      (local.get $12)
      (local.get $4)
     )
     (call $_TraceLog
      (i32.const 3)
      (i32.const 18245)
      (local.get $12)
     )
    )
    (call $_TraceLog
     (i32.const 4)
     (i32.const 18307)
     (local.get $18)
    )
   )
   (local.set $0
    (i32.load
     (local.get $6)
    )
   )
   (global.set $STACKTOP
    (local.get $8)
   )
   (return
    (local.get $0)
   )
  )
  (local.set $0
   (i32.load
    (local.get $6)
   )
  )
  (global.set $STACKTOP
   (local.get $8)
  )
  (local.get $0)
 )
 (func $_LoadShaderDefault (; 382 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 1088)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 1088)
   )
  )
  (local.set $5
   (i32.add
    (local.get $3)
    (i32.const 944)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 936)
   )
  )
  (i64.store align=4
   (local.tee $1
    (i32.add
     (local.tee $2
      (i32.add
       (local.get $3)
       (i32.const 948)
      )
     )
     (i32.const 4)
    )
   )
   (i64.const -1)
  )
  (i64.store offset=8 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=16 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=24 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=32 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=40 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=48 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=56 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store align=4
   (i32.sub
    (local.get $1)
    (i32.const -64)
   )
   (i64.const -1)
  )
  (i64.store offset=72 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=80 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=88 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=96 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=104 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=112 align=4
   (local.get $1)
   (i64.const -1)
  )
  (i64.store offset=120 align=4
   (local.get $1)
   (i64.const -1)
  )
  (drop
   (call $_memcpy
    (local.tee $1
     (i32.add
      (local.get $3)
      (i32.const 448)
     )
    )
    (i32.const 1056)
    (i32.const 483)
   )
  )
  (drop
   (call $_memcpy
    (local.get $3)
    (i32.const 1552)
    (i32.const 441)
   )
  )
  (i32.store
   (i32.const 34016)
   (call $_CompileShader
    (local.get $1)
    (i32.const 35633)
   )
  )
  (i32.store
   (i32.const 34020)
   (local.tee $1
    (call $_CompileShader
     (local.get $3)
     (i32.const 35632)
    )
   )
  )
  (i32.store
   (local.get $2)
   (local.tee $1
    (call $_LoadShaderProgram
     (i32.load
      (i32.const 34016)
     )
     (local.get $1)
    )
   )
  )
  (if
   (local.get $1)
   (block
    (i32.store
     (local.get $6)
     (local.get $1)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 17539)
     (local.get $6)
    )
    (i32.store offset=4
     (local.get $2)
     (call $_glGetAttribLocation
      (local.get $1)
      (i32.const 17587)
     )
    )
    (i32.store offset=8
     (local.get $2)
     (call $_glGetAttribLocation
      (local.get $1)
      (i32.const 17602)
     )
    )
    (i32.store offset=24
     (local.get $2)
     (call $_glGetAttribLocation
      (local.get $1)
      (i32.const 17617)
     )
    )
    (i32.store offset=28
     (local.get $2)
     (call $_glGetUniformLocation
      (local.get $1)
      (i32.const 17629)
     )
    )
    (i32.store offset=48
     (local.get $2)
     (call $_glGetUniformLocation
      (local.get $1)
      (i32.const 17633)
     )
    )
    (i32.store offset=60
     (local.get $2)
     (call $_glGetUniformLocation
      (local.get $1)
      (i32.const 17644)
     )
    )
   )
   (block
    (i32.store
     (local.get $5)
     (local.get $1)
    )
    (call $_TraceLog
     (i32.const 4)
     (i32.const 17653)
     (local.get $5)
    )
   )
  )
  (drop
   (call $_memcpy
    (local.get $0)
    (local.get $2)
    (i32.const 132)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_LoadBuffersDefault (; 383 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.get $4)
    (i32.const 8)
   )
  )
  (i32.store
   (i32.const 29660)
   (call $_malloc
    (i32.const 98304)
   )
  )
  (i32.store
   (i32.const 29664)
   (call $_malloc
    (i32.const 65536)
   )
  )
  (i32.store
   (i32.const 29668)
   (call $_malloc
    (i32.const 32768)
   )
  )
  (i32.store
   (i32.const 29672)
   (call $_malloc
    (i32.const 24576)
   )
  )
  (loop $while-in
   (f32.store
    (i32.add
     (i32.load
      (i32.const 29660)
     )
     (i32.shl
      (local.get $0)
      (i32.const 2)
     )
    )
    (f32.const 0)
   )
   (br_if $while-in
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 24576)
    )
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in1
   (f32.store
    (i32.add
     (i32.load
      (i32.const 29664)
     )
     (i32.shl
      (local.get $0)
      (i32.const 2)
     )
    )
    (f32.const 0)
   )
   (br_if $while-in1
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 16384)
    )
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in3
   (i32.store8
    (i32.add
     (local.get $0)
     (i32.load
      (i32.const 29668)
     )
    )
    (i32.const 0)
   )
   (br_if $while-in3
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 32768)
    )
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in5
   (i32.store16
    (i32.add
     (i32.load
      (i32.const 29672)
     )
     (i32.shl
      (local.get $1)
      (i32.const 1)
     )
    )
    (local.tee $6
     (i32.and
      (local.tee $2
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
      )
      (i32.const 65535)
     )
    )
   )
   (i32.store16
    (i32.add
     (i32.load
      (i32.const 29672)
     )
     (i32.shl
      (i32.or
       (local.get $1)
       (i32.const 1)
      )
      (i32.const 1)
     )
    )
    (i32.or
     (local.get $2)
     (i32.const 1)
    )
   )
   (i32.store16
    (i32.add
     (i32.load
      (i32.const 29672)
     )
     (i32.shl
      (i32.add
       (local.get $1)
       (i32.const 2)
      )
      (i32.const 1)
     )
    )
    (local.tee $7
     (i32.and
      (i32.or
       (local.get $2)
       (i32.const 2)
      )
      (i32.const 65535)
     )
    )
   )
   (i32.store16
    (i32.add
     (i32.load
      (i32.const 29672)
     )
     (i32.shl
      (i32.add
       (local.get $1)
       (i32.const 3)
      )
      (i32.const 1)
     )
    )
    (local.get $6)
   )
   (i32.store16
    (i32.add
     (i32.load
      (i32.const 29672)
     )
     (i32.shl
      (i32.add
       (local.get $1)
       (i32.const 4)
      )
      (i32.const 1)
     )
    )
    (local.get $7)
   )
   (i32.store16
    (i32.add
     (i32.load
      (i32.const 29672)
     )
     (i32.shl
      (i32.add
       (local.get $1)
       (i32.const 5)
      )
      (i32.const 1)
     )
    )
    (i32.or
     (local.get $2)
     (i32.const 3)
    )
   )
   (local.set $1
    (i32.add
     (local.get $1)
     (i32.const 6)
    )
   )
   (br_if $while-in5
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 2048)
    )
   )
  )
  (i32.store
   (i32.const 29648)
   (i32.const 0)
  )
  (i32.store
   (i32.const 29652)
   (i32.const 0)
  )
  (i32.store
   (i32.const 29656)
   (i32.const 0)
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 17446)
   (local.get $4)
  )
  (if
   (i32.load8_s
    (i32.const 34837)
   )
   (block
    (local.set $0
     (i32.load
      (i32.const 33880)
     )
    )
    (call_indirect (type $FUNCSIG$vii)
     (i32.const 1)
     (i32.const 29676)
     (i32.add
      (i32.and
       (local.get $0)
       (i32.const 63)
      )
      (i32.const 137)
     )
    )
    (local.set $0
     (i32.load
      (i32.const 33396)
     )
    )
    (call_indirect (type $FUNCSIG$vi)
     (i32.load
      (i32.const 29676)
     )
     (i32.add
      (i32.and
       (local.get $0)
       (i32.const 31)
      )
      (i32.const 85)
     )
    )
   )
  )
  (call $_glGenBuffers
   (i32.const 1)
   (i32.const 29680)
  )
  (call $_glBindBuffer
   (i32.const 34962)
   (i32.load
    (i32.const 29680)
   )
  )
  (call $_glBufferData
   (i32.const 34962)
   (i32.const 98304)
   (i32.load
    (i32.const 29660)
   )
   (i32.const 35048)
  )
  (call $_glEnableVertexAttribArray
   (i32.load
    (i32.const 33268)
   )
  )
  (call $_glVertexAttribPointer
   (i32.load
    (i32.const 33268)
   )
   (i32.const 3)
   (i32.const 5126)
   (i32.const 0)
   (i32.const 0)
   (i32.const 0)
  )
  (call $_glGenBuffers
   (i32.const 1)
   (i32.const 29684)
  )
  (call $_glBindBuffer
   (i32.const 34962)
   (i32.load
    (i32.const 29684)
   )
  )
  (call $_glBufferData
   (i32.const 34962)
   (i32.const 65536)
   (i32.load
    (i32.const 29664)
   )
   (i32.const 35048)
  )
  (call $_glEnableVertexAttribArray
   (i32.load
    (i32.const 33272)
   )
  )
  (call $_glVertexAttribPointer
   (i32.load
    (i32.const 33272)
   )
   (i32.const 2)
   (i32.const 5126)
   (i32.const 0)
   (i32.const 0)
   (i32.const 0)
  )
  (call $_glGenBuffers
   (i32.const 1)
   (i32.const 29688)
  )
  (call $_glBindBuffer
   (i32.const 34962)
   (i32.load
    (i32.const 29688)
   )
  )
  (call $_glBufferData
   (i32.const 34962)
   (i32.const 32768)
   (i32.load
    (i32.const 29668)
   )
   (i32.const 35048)
  )
  (call $_glEnableVertexAttribArray
   (i32.load
    (i32.const 33288)
   )
  )
  (call $_glVertexAttribPointer
   (i32.load
    (i32.const 33288)
   )
   (i32.const 4)
   (i32.const 5121)
   (i32.const 1)
   (i32.const 0)
   (i32.const 0)
  )
  (call $_glGenBuffers
   (i32.const 1)
   (i32.const 29692)
  )
  (call $_glBindBuffer
   (i32.const 34963)
   (i32.load
    (i32.const 29692)
   )
  )
  (call $_glBufferData
   (i32.const 34963)
   (i32.const 24576)
   (i32.load
    (i32.const 29672)
   )
   (i32.const 35044)
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 17494)
   (local.get $5)
  )
  (if
   (i32.eqz
    (i32.load8_s
     (i32.const 34837)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (local.set $0
   (i32.load
    (i32.const 33396)
   )
  )
  (call_indirect (type $FUNCSIG$vi)
   (i32.const 0)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 31)
    )
    (i32.const 85)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_CompileShader (; 384 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (local.set $7
   (i32.add
    (local.get $2)
    (i32.const 16)
   )
  )
  (local.set $8
   (i32.add
    (local.get $2)
    (i32.const 8)
   )
  )
  (local.set $5
   (i32.add
    (local.get $2)
    (i32.const 24)
   )
  )
  (local.set $9
   (i32.add
    (local.get $2)
    (i32.const 20)
   )
  )
  (i32.store
   (local.tee $4
    (i32.add
     (local.get $2)
     (i32.const 28)
    )
   )
   (local.get $0)
  )
  (call $_glShaderSource
   (local.tee $3
    (call $_glCreateShader
     (local.get $1)
    )
   )
   (i32.const 1)
   (local.get $4)
   (i32.const 0)
  )
  (i32.store
   (local.get $5)
   (i32.const 0)
  )
  (call $_glCompileShader
   (local.get $3)
  )
  (call $_glGetShaderiv
   (local.get $3)
   (i32.const 35713)
   (local.get $5)
  )
  (if
   (i32.eq
    (i32.load
     (local.get $5)
    )
    (i32.const 1)
   )
   (block
    (i32.store
     (local.get $7)
     (local.get $3)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 17882)
     (local.get $7)
    )
   )
   (block
    (i32.store
     (local.get $2)
     (local.get $3)
    )
    (call $_TraceLog
     (i32.const 4)
     (i32.const 17841)
     (local.get $2)
    )
    (i32.store
     (local.get $2)
     (i32.const 0)
    )
    (call $_glGetShaderiv
     (local.get $3)
     (i32.const 35716)
     (local.get $2)
    )
    (local.set $0
     (i32.load
      (local.get $2)
     )
    )
    (local.set $1
     (call $_llvm_stacksave)
    )
    (local.set $4
     (global.get $STACKTOP)
    )
    (global.set $STACKTOP
     (i32.add
      (global.get $STACKTOP)
      (i32.and
       (i32.add
        (local.get $0)
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (if
     (i32.ge_s
      (global.get $STACKTOP)
      (global.get $STACK_MAX)
     )
     (call $abortStackOverflow
      (i32.and
       (i32.add
        (local.get $0)
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (call $_glGetShaderInfoLog
     (local.get $3)
     (i32.load
      (local.get $2)
     )
     (local.get $9)
     (local.get $4)
    )
    (i32.store
     (local.get $8)
     (local.get $4)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 17790)
     (local.get $8)
    )
    (call $_llvm_stackrestore
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $3)
 )
 (func $_LoadShaderProgram (; 385 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (local.set $4
   (i32.add
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
  )
  (local.set $8
   (i32.add
    (local.get $3)
    (i32.const 20)
   )
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $3)
     (i32.const 24)
    )
   )
   (i32.const 0)
  )
  (call $_glAttachShader
   (local.tee $2
    (call $_glCreateProgram)
   )
   (local.get $0)
  )
  (call $_glAttachShader
   (local.get $2)
   (local.get $1)
  )
  (call $_glBindAttribLocation
   (local.get $2)
   (i32.const 0)
   (i32.const 17587)
  )
  (call $_glBindAttribLocation
   (local.get $2)
   (i32.const 1)
   (i32.const 17602)
  )
  (call $_glBindAttribLocation
   (local.get $2)
   (i32.const 2)
   (i32.const 17701)
  )
  (call $_glBindAttribLocation
   (local.get $2)
   (i32.const 3)
   (i32.const 17617)
  )
  (call $_glBindAttribLocation
   (local.get $2)
   (i32.const 4)
   (i32.const 17714)
  )
  (call $_glBindAttribLocation
   (local.get $2)
   (i32.const 5)
   (i32.const 17728)
  )
  (call $_glLinkProgram
   (local.get $2)
  )
  (call $_glGetProgramiv
   (local.get $2)
   (i32.const 35714)
   (local.get $7)
  )
  (if (result i32)
   (i32.load
    (local.get $7)
   )
   (block (result i32)
    (i32.store
     (local.get $4)
     (local.get $2)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 17793)
     (local.get $4)
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (local.get $2)
   )
   (block (result i32)
    (i32.store
     (local.get $3)
     (local.get $2)
    )
    (call $_TraceLog
     (i32.const 4)
     (i32.const 17744)
     (local.get $3)
    )
    (i32.store
     (local.get $3)
     (i32.const 0)
    )
    (call $_glGetProgramiv
     (local.get $2)
     (i32.const 35716)
     (local.get $3)
    )
    (local.set $0
     (i32.load
      (local.get $3)
     )
    )
    (local.set $4
     (call $_llvm_stacksave)
    )
    (local.set $1
     (global.get $STACKTOP)
    )
    (global.set $STACKTOP
     (i32.add
      (global.get $STACKTOP)
      (i32.and
       (i32.add
        (local.get $0)
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (if
     (i32.ge_s
      (global.get $STACKTOP)
      (global.get $STACK_MAX)
     )
     (call $abortStackOverflow
      (i32.and
       (i32.add
        (local.get $0)
        (i32.const 15)
       )
       (i32.const -16)
      )
     )
    )
    (call $_glGetProgramInfoLog
     (local.get $2)
     (i32.load
      (local.get $3)
     )
     (local.get $8)
     (local.get $1)
    )
    (i32.store
     (local.get $6)
     (local.get $1)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 17790)
     (local.get $6)
    )
    (call $_glDeleteProgram
     (local.get $2)
    )
    (call $_llvm_stackrestore
     (local.get $4)
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (i32.const 0)
   )
  )
 )
 (func $_GetPixelDataSize (; 386 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (i32.div_s
   (i32.mul
    (block $do-once (result i32)
     (block $switch-default
      (block $switch-case19
       (block $switch-case18
        (block $switch-case14
         (block $switch-case8
          (block $switch-case7
           (block $switch-case6
            (block $switch-case5
             (block $switch-case4
              (block $switch-case3
               (block $switch-case
                (br_table $switch-case $switch-case3 $switch-case3 $switch-case5 $switch-case3 $switch-case3 $switch-case4 $switch-case6 $switch-case7 $switch-case8 $switch-case14 $switch-case14 $switch-case18 $switch-case18 $switch-case14 $switch-case14 $switch-case18 $switch-case14 $switch-case14 $switch-case18 $switch-case19 $switch-default
                 (i32.sub
                  (local.get $2)
                  (i32.const 1)
                 )
                )
               )
               (br $do-once
                (i32.const 8)
               )
              )
              (br $do-once
               (i32.const 16)
              )
             )
             (br $do-once
              (i32.const 32)
             )
            )
            (br $do-once
             (i32.const 24)
            )
           )
           (br $do-once
            (i32.const 32)
           )
          )
          (br $do-once
           (i32.const 96)
          )
         )
         (br $do-once
          (i32.const 128)
         )
        )
        (br $do-once
         (i32.const 4)
        )
       )
       (br $do-once
        (i32.const 8)
       )
      )
      (br $do-once
       (i32.const 2)
      )
     )
     (i32.const 0)
    )
    (i32.mul
     (local.get $0)
     (local.get $1)
    )
   )
   (i32.const 8)
  )
 )
 (func $_rlGetGlTextureFormats (; 387 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (i32.const -1)
  )
  (i32.store
   (local.get $2)
   (i32.const -1)
  )
  (i32.store
   (local.get $3)
   (i32.const -1)
  )
  (block $do-once
   (block $switch-default
    (block $switch-case19
     (block $switch-case18
      (block $switch-case17
       (block $switch-case16
        (block $switch-case15
         (block $switch-case14
          (block $switch-case13
           (block $switch-case12
            (block $switch-case11
             (block $switch-case10
              (block $switch-case9
               (block $switch-case8
                (block $switch-case7
                 (block $switch-case6
                  (block $switch-case5
                   (block $switch-case4
                    (block $switch-case3
                     (block $switch-case2
                      (block $switch-case1
                       (block $switch-case0
                        (block $switch-case
                         (br_table $switch-case $switch-case0 $switch-case1 $switch-case2 $switch-case3 $switch-case4 $switch-case5 $switch-case6 $switch-case7 $switch-case8 $switch-case9 $switch-case10 $switch-case11 $switch-case12 $switch-case13 $switch-case14 $switch-case15 $switch-case16 $switch-case17 $switch-case18 $switch-case19 $switch-default
                          (i32.sub
                           (local.get $0)
                           (i32.const 1)
                          )
                         )
                        )
                        (i32.store
                         (local.get $1)
                         (i32.const 6409)
                        )
                        (i32.store
                         (local.get $2)
                         (i32.const 6409)
                        )
                        (i32.store
                         (local.get $3)
                         (i32.const 5121)
                        )
                        (br $do-once)
                       )
                       (i32.store
                        (local.get $1)
                        (i32.const 6410)
                       )
                       (i32.store
                        (local.get $2)
                        (i32.const 6410)
                       )
                       (i32.store
                        (local.get $3)
                        (i32.const 5121)
                       )
                       (br $do-once)
                      )
                      (i32.store
                       (local.get $1)
                       (i32.const 6407)
                      )
                      (i32.store
                       (local.get $2)
                       (i32.const 6407)
                      )
                      (i32.store
                       (local.get $3)
                       (i32.const 33635)
                      )
                      (br $do-once)
                     )
                     (i32.store
                      (local.get $1)
                      (i32.const 6407)
                     )
                     (i32.store
                      (local.get $2)
                      (i32.const 6407)
                     )
                     (i32.store
                      (local.get $3)
                      (i32.const 5121)
                     )
                     (br $do-once)
                    )
                    (i32.store
                     (local.get $1)
                     (i32.const 6408)
                    )
                    (i32.store
                     (local.get $2)
                     (i32.const 6408)
                    )
                    (i32.store
                     (local.get $3)
                     (i32.const 32820)
                    )
                    (br $do-once)
                   )
                   (i32.store
                    (local.get $1)
                    (i32.const 6408)
                   )
                   (i32.store
                    (local.get $2)
                    (i32.const 6408)
                   )
                   (i32.store
                    (local.get $3)
                    (i32.const 32819)
                   )
                   (br $do-once)
                  )
                  (i32.store
                   (local.get $1)
                   (i32.const 6408)
                  )
                  (i32.store
                   (local.get $2)
                   (i32.const 6408)
                  )
                  (i32.store
                   (local.get $3)
                   (i32.const 5121)
                  )
                  (br $do-once)
                 )
                 (if
                  (i32.load8_s
                   (i32.const 34840)
                  )
                  (i32.store
                   (local.get $1)
                   (i32.const 6409)
                  )
                 )
                 (i32.store
                  (local.get $2)
                  (i32.const 6409)
                 )
                 (i32.store
                  (local.get $3)
                  (i32.const 5126)
                 )
                 (br $do-once)
                )
                (if
                 (i32.load8_s
                  (i32.const 34840)
                 )
                 (i32.store
                  (local.get $1)
                  (i32.const 6407)
                 )
                )
                (i32.store
                 (local.get $2)
                 (i32.const 6407)
                )
                (i32.store
                 (local.get $3)
                 (i32.const 5126)
                )
                (br $do-once)
               )
               (if
                (i32.load8_s
                 (i32.const 34840)
                )
                (i32.store
                 (local.get $1)
                 (i32.const 6408)
                )
               )
               (i32.store
                (local.get $2)
                (i32.const 6408)
               )
               (i32.store
                (local.get $3)
                (i32.const 5126)
               )
               (br $do-once)
              )
              (if
               (i32.load8_s
                (i32.const 34841)
               )
               (i32.store
                (local.get $1)
                (i32.const 33776)
               )
              )
              (br $do-once)
             )
             (if
              (i32.load8_s
               (i32.const 34841)
              )
              (i32.store
               (local.get $1)
               (i32.const 33777)
              )
             )
             (br $do-once)
            )
            (if
             (i32.load8_s
              (i32.const 34841)
             )
             (i32.store
              (local.get $1)
              (i32.const 33778)
             )
            )
            (br $do-once)
           )
           (if
            (i32.load8_s
             (i32.const 34841)
            )
            (i32.store
             (local.get $1)
             (i32.const 33779)
            )
           )
           (br $do-once)
          )
          (if
           (i32.load8_s
            (i32.const 34842)
           )
           (i32.store
            (local.get $1)
            (i32.const 36196)
           )
          )
          (br $do-once)
         )
         (if
          (i32.load8_s
           (i32.const 34843)
          )
          (i32.store
           (local.get $1)
           (i32.const 37492)
          )
         )
         (br $do-once)
        )
        (if
         (i32.load8_s
          (i32.const 34843)
         )
         (i32.store
          (local.get $1)
          (i32.const 37496)
         )
        )
        (br $do-once)
       )
       (if
        (i32.load8_s
         (i32.const 34844)
        )
        (i32.store
         (local.get $1)
         (i32.const 35840)
        )
       )
       (br $do-once)
      )
      (if
       (i32.load8_s
        (i32.const 34844)
       )
       (i32.store
        (local.get $1)
        (i32.const 35842)
       )
      )
      (br $do-once)
     )
     (if
      (i32.load8_s
       (i32.const 34845)
      )
      (i32.store
       (local.get $1)
       (i32.const 37808)
      )
     )
     (br $do-once)
    )
    (if
     (i32.load8_s
      (i32.const 34845)
     )
     (i32.store
      (local.get $1)
      (i32.const 37815)
     )
    )
    (br $do-once)
   )
   (call $_TraceLog
    (i32.const 4)
    (i32.const 18336)
    (local.get $5)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_rlglClose (; 388 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (call $_UnloadShaderDefault)
  (call $_UnloadBuffersDefault)
  (call $_glDeleteTextures
   (i32.const 1)
   (i32.const 33260)
  )
  (i32.store
   (local.get $0)
   (i32.load
    (i32.const 33260)
   )
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 18365)
   (local.get $0)
  )
  (call $_free
   (i32.load
    (i32.const 33252)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $_UnloadShaderDefault (; 389 ;) (; has Stack IR ;)
  (call $_glUseProgram
   (i32.const 0)
  )
  (call $_glDetachShader
   (i32.load
    (i32.const 33884)
   )
   (i32.load
    (i32.const 34016)
   )
  )
  (call $_glDetachShader
   (i32.load
    (i32.const 33884)
   )
   (i32.load
    (i32.const 34020)
   )
  )
  (call $_glDeleteShader
   (i32.load
    (i32.const 34016)
   )
  )
  (call $_glDeleteShader
   (i32.load
    (i32.const 34020)
   )
  )
  (call $_glDeleteProgram
   (i32.load
    (i32.const 33884)
   )
  )
 )
 (func $_UnloadBuffersDefault (; 390 ;) (; has Stack IR ;)
  (local $0 i32)
  (if
   (i32.load8_s
    (i32.const 34837)
   )
   (block
    (local.set $0
     (i32.load
      (i32.const 33396)
     )
    )
    (call_indirect (type $FUNCSIG$vi)
     (i32.const 0)
     (i32.add
      (i32.and
       (local.get $0)
       (i32.const 31)
      )
      (i32.const 85)
     )
    )
   )
  )
  (call $_glDisableVertexAttribArray
   (i32.const 0)
  )
  (call $_glDisableVertexAttribArray
   (i32.const 1)
  )
  (call $_glDisableVertexAttribArray
   (i32.const 2)
  )
  (call $_glDisableVertexAttribArray
   (i32.const 3)
  )
  (call $_glBindBuffer
   (i32.const 34962)
   (i32.const 0)
  )
  (call $_glBindBuffer
   (i32.const 34963)
   (i32.const 0)
  )
  (call $_glDeleteBuffers
   (i32.const 1)
   (i32.const 29680)
  )
  (call $_glDeleteBuffers
   (i32.const 1)
   (i32.const 29684)
  )
  (call $_glDeleteBuffers
   (i32.const 1)
   (i32.const 29688)
  )
  (call $_glDeleteBuffers
   (i32.const 1)
   (i32.const 29692)
  )
  (if
   (i32.load8_s
    (i32.const 34837)
   )
   (block
    (local.set $0
     (i32.load
      (i32.const 33876)
     )
    )
    (call_indirect (type $FUNCSIG$vii)
     (i32.const 1)
     (i32.const 29676)
     (i32.add
      (i32.and
       (local.get $0)
       (i32.const 63)
      )
      (i32.const 137)
     )
    )
   )
  )
  (call $_free
   (i32.load
    (i32.const 29660)
   )
  )
  (call $_free
   (i32.load
    (i32.const 29664)
   )
  )
  (call $_free
   (i32.load
    (i32.const 29668)
   )
  )
  (call $_free
   (i32.load
    (i32.const 29672)
   )
  )
 )
 (func $_rlCheckBufferLimit (; 391 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.gt_s
   (i32.add
    (local.get $0)
    (i32.load
     (i32.const 29648)
    )
   )
   (i32.const 8191)
  )
 )
 (func $_rlUnproject (; 392 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 f32)
  (local $11 f32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 288)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 288)
   )
  )
  (local.set $6
   (i32.add
    (local.get $4)
    (i32.const 96)
   )
  )
  (local.set $7
   (i32.add
    (local.get $4)
    (i32.const 80)
   )
  )
  (i64.store align=4
   (local.tee $5
    (i32.add
     (local.get $4)
     (i32.const 160)
    )
   )
   (i64.load align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $5)
   (i64.load offset=8 align=4
    (local.get $3)
   )
  )
  (i64.store offset=16 align=4
   (local.get $5)
   (i64.load offset=16 align=4
    (local.get $3)
   )
  )
  (i64.store offset=24 align=4
   (local.get $5)
   (i64.load offset=24 align=4
    (local.get $3)
   )
  )
  (i64.store offset=32 align=4
   (local.get $5)
   (i64.load offset=32 align=4
    (local.get $3)
   )
  )
  (i64.store offset=40 align=4
   (local.get $5)
   (i64.load offset=40 align=4
    (local.get $3)
   )
  )
  (i64.store offset=48 align=4
   (local.get $5)
   (i64.load offset=48 align=4
    (local.get $3)
   )
  )
  (i64.store offset=56 align=4
   (local.get $5)
   (i64.load offset=56 align=4
    (local.get $3)
   )
  )
  (i64.store align=4
   (local.tee $3
    (i32.add
     (local.get $4)
     (i32.const 224)
    )
   )
   (i64.load align=4
    (local.get $2)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $2)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $2)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $2)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $2)
   )
  )
  (i64.store offset=56 align=4
   (local.get $3)
   (i64.load offset=56 align=4
    (local.get $2)
   )
  )
  (call $_MatrixMultiply
   (local.tee $2
    (i32.add
     (local.get $4)
     (i32.const 16)
    )
   )
   (local.get $5)
   (local.get $3)
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.get $2)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $2)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $2)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $2)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $2)
   )
  )
  (i64.store offset=56 align=4
   (local.get $3)
   (i64.load offset=56 align=4
    (local.get $2)
   )
  )
  (call $_MatrixInvert
   (local.get $6)
   (local.get $3)
  )
  (i32.store
   (local.get $4)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store offset=4
   (local.get $4)
   (i32.load offset=4
    (local.get $1)
   )
  )
  (i32.store offset=8
   (local.get $4)
   (i32.load offset=8
    (local.get $1)
   )
  )
  (f32.store offset=12
   (local.get $4)
   (f32.const 1)
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $4)
   )
  )
  (i64.store offset=8 align=4
   (local.get $5)
   (i64.load offset=8 align=4
    (local.get $4)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.get $6)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $6)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $6)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $6)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $6)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $6)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $6)
   )
  )
  (i64.store offset=56 align=4
   (local.get $3)
   (i64.load offset=56 align=4
    (local.get $6)
   )
  )
  (call $_QuaternionTransform
   (local.get $7)
   (local.get $5)
   (local.get $3)
  )
  (i64.store align=4
   (local.get $4)
   (i64.load align=4
    (local.get $7)
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $7)
   )
  )
  (local.set $10
   (f32.div
    (f32.load offset=4
     (local.get $4)
    )
    (local.tee $8
     (f32.load offset=12
      (local.get $4)
     )
    )
   )
  )
  (local.set $11
   (f32.div
    (f32.load offset=8
     (local.get $4)
    )
    (local.get $8)
   )
  )
  (f32.store
   (local.get $0)
   (f32.div
    (f32.load
     (local.get $4)
    )
    (local.get $8)
   )
  )
  (f32.store offset=4
   (local.get $0)
   (local.get $10)
  )
  (f32.store offset=8
   (local.get $0)
   (local.get $11)
  )
  (global.set $STACKTOP
   (local.get $9)
  )
 )
 (func $_rlReadScreenPixels (; 393 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (call $_glReadPixels
   (i32.const 0)
   (i32.const 0)
   (local.get $0)
   (local.get $1)
   (i32.const 6408)
   (i32.const 5121)
   (local.tee $3
    (call $_calloc
     (local.tee $2
      (i32.mul
       (local.get $1)
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
      )
     )
     (i32.const 1)
    )
   )
  )
  (local.set $2
   (call $_malloc
    (local.get $2)
   )
  )
  (if
   (i32.le_s
    (local.get $1)
    (i32.const 0)
   )
   (block
    (call $_free
     (local.get $3)
    )
    (return
     (local.get $2)
    )
   )
  )
  (local.set $4
   (i32.shl
    (local.get $0)
    (i32.const 2)
   )
  )
  (local.set $5
   (i32.gt_s
    (local.get $0)
    (i32.const 0)
   )
  )
  (local.set $6
   (i32.shl
    (local.get $0)
    (i32.const 2)
   )
  )
  (local.set $7
   (i32.shl
    (local.get $0)
    (i32.const 2)
   )
  )
  (local.set $0
   (local.tee $8
    (i32.add
     (local.get $1)
     (i32.const -1)
    )
   )
  )
  (loop $while-in
   (if
    (local.get $5)
    (block
     (local.set $9
      (i32.mul
       (local.get $0)
       (local.get $6)
      )
     )
     (local.set $10
      (i32.mul
       (local.get $7)
       (i32.sub
        (local.get $8)
        (local.get $0)
       )
      )
     )
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in1
      (i32.store8
       (i32.add
        (i32.add
         (local.get $1)
         (local.get $10)
        )
        (local.get $2)
       )
       (select
        (i32.load8_s
         (i32.add
          (i32.add
           (local.get $1)
           (local.get $9)
          )
          (local.get $3)
         )
        )
        (i32.const -1)
        (i32.and
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.const 3)
        )
       )
      )
      (br_if $while-in1
       (i32.lt_s
        (local.get $1)
        (local.get $4)
       )
      )
     )
    )
   )
   (local.set $1
    (i32.add
     (local.get $0)
     (i32.const -1)
    )
   )
   (if
    (i32.gt_s
     (local.get $0)
     (i32.const 0)
    )
    (block
     (local.set $0
      (local.get $1)
     )
     (br $while-in)
    )
   )
  )
  (call $_free
   (local.get $3)
  )
  (local.get $2)
 )
 (func $_ProcessGestureEvent (; 394 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $2
   (i32.add
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store
   (i32.const 34028)
   (local.tee $8
    (i32.load offset=4
     (local.get $0)
    )
   )
  )
  (local.set $6
   (i32.eq
    (local.tee $5
     (i32.load
      (local.get $0)
     )
    )
    (i32.const 1)
   )
  )
  (block $folding-inner0
   (if
    (i32.ge_s
     (local.get $8)
     (i32.const 2)
    )
    (block
     (if
      (local.get $6)
      (block
       (i64.store
        (i32.const 32792)
        (i64.load offset=24 align=4
         (local.get $0)
        )
       )
       (i64.store
        (i32.const 32824)
        (i64.load offset=32 align=4
         (local.get $0)
        )
       )
       (i32.store
        (i32.const 34024)
        (i32.const 4)
       )
       (br $folding-inner0)
      )
     )
     (block $switch-default
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case0 $switch-default $switch-case $switch-default
         (local.get $5)
        )
       )
       (i64.store align=4
        (local.get $1)
        (i64.load align=4
         (i32.const 32816)
        )
       )
       (i64.store align=4
        (local.get $2)
        (i64.load align=4
         (i32.const 32832)
        )
       )
       (local.set $3
        (call $_Vector2Distance
         (local.get $1)
         (local.get $2)
        )
       )
       (i64.store
        (i32.const 32792)
        (i64.load
         (i32.const 32816)
        )
       )
       (i64.store
        (i32.const 32824)
        (i64.load
         (i32.const 32832)
        )
       )
       (i64.store
        (i32.const 32816)
        (i64.load offset=24 align=4
         (local.get $0)
        )
       )
       (i64.store
        (i32.const 32832)
        (i64.load offset=32 align=4
         (local.get $0)
        )
       )
       (i64.store align=4
        (local.get $1)
        (i64.load align=4
         (i32.const 32792)
        )
       )
       (i64.store align=4
        (local.get $2)
        (i64.load align=4
         (i32.const 32816)
        )
       )
       (i32.store
        (i32.const 34024)
        (block $__rjto$0 (result i32)
         (block $__rjti$0
          (br_if $__rjti$0
           (f32.ge
            (call $_Vector2Distance
             (local.get $1)
             (local.get $2)
            )
            (f32.const 0.004999999888241291)
           )
          )
          (i64.store align=4
           (local.get $1)
           (i64.load align=4
            (i32.const 32824)
           )
          )
          (i64.store align=4
           (local.get $2)
           (i64.load align=4
            (i32.const 32832)
           )
          )
          (br_if $__rjti$0
           (f32.ge
            (call $_Vector2Distance
             (local.get $1)
             (local.get $2)
            )
            (f32.const 0.004999999888241291)
           )
          )
          (br $__rjto$0
           (i32.const 4)
          )
         )
         (i64.store align=4
          (local.get $1)
          (i64.load align=4
           (i32.const 32816)
          )
         )
         (i64.store align=4
          (local.get $2)
          (i64.load align=4
           (i32.const 32832)
          )
         )
         (select
          (i32.const 256)
          (i32.const 512)
          (f32.lt
           (f32.sub
            (call $_Vector2Distance
             (local.get $1)
             (local.get $2)
            )
            (local.get $3)
           )
           (f32.const 0)
          )
         )
        )
       )
       (i64.store align=4
        (local.get $1)
        (i64.load align=4
         (i32.const 32816)
        )
       )
       (i64.store align=4
        (local.get $2)
        (i64.load align=4
         (i32.const 32832)
        )
       )
       (br $folding-inner0)
      )
      (i32.store
       (i32.const 34028)
       (i32.const 0)
      )
      (i32.store
       (i32.const 34024)
       (i32.const 0)
      )
      (br $folding-inner0)
     )
     (br $folding-inner0)
    )
   )
   (if
    (local.get $6)
    (block
     (i32.store
      (i32.const 34032)
      (i32.add
       (local.tee $5
        (i32.load
         (i32.const 34032)
        )
       )
       (i32.const 1)
      )
     )
     (block $__rjto$1
      (block $__rjti$1
       (br_if $__rjti$1
        (i32.eqz
         (i32.and
          (i32.eqz
           (i32.load
            (i32.const 34024)
           )
          )
          (i32.gt_s
           (local.get $5)
           (i32.const 0)
          )
         )
        )
       )
       (i64.store align=4
        (local.get $1)
        (i64.load align=4
         (i32.const 32792)
        )
       )
       (i64.store align=4
        (local.get $2)
        (i64.load offset=24 align=4
         (local.get $0)
        )
       )
       (br_if $__rjti$1
        (i32.eqz
         (f32.lt
          (call $_Vector2Distance
           (local.get $1)
           (local.get $2)
          )
          (f32.const 0.029999999329447746)
         )
        )
       )
       (i32.store
        (i32.const 34024)
        (i32.const 2)
       )
       (i32.store
        (i32.const 34032)
        (i32.const 0)
       )
       (br $__rjto$1)
      )
      (i32.store
       (i32.const 34032)
       (i32.const 1)
      )
      (i32.store
       (i32.const 34024)
       (i32.const 1)
      )
     )
     (i64.store
      (i32.const 32792)
      (local.tee $7
       (i64.load offset=24 align=4
        (local.get $0)
       )
      )
     )
     (i64.store
      (i32.const 32800)
      (local.get $7)
     )
     (i64.store
      (i32.const 32808)
      (local.get $7)
     )
     (i32.store
      (i32.const 14224)
      (i32.load offset=8
       (local.get $0)
      )
     )
     (br $folding-inner0)
    )
   )
   (block $switch-default4
    (block $switch-case3
     (block $switch-case2
      (br_table $switch-case2 $switch-default4 $switch-case3 $switch-default4
       (local.get $5)
      )
     )
     (if
      (i32.eq
       (i32.load
        (i32.const 34024)
       )
       (i32.const 8)
      )
      (i64.store
       (i32.const 32808)
       (i64.load offset=24 align=4
        (local.get $0)
       )
      )
     )
     (i64.store align=4
      (local.get $1)
      (i64.load align=4
       (i32.const 32792)
      )
     )
     (i64.store align=4
      (local.get $2)
      (i64.load align=4
       (i32.const 32808)
      )
     )
     (local.set $3
      (f32.div
       (call $_Vector2Distance
        (local.get $1)
        (local.get $2)
       )
       (f32.const 0)
      )
     )
     (i32.store8
      (i32.const 34848)
      (i32.const 0)
     )
     (i32.store
      (i32.const 34024)
      (if (result i32)
       (f32.gt
        (local.get $3)
        (f32.const 5.000000237487257e-04)
       )
       (if (result i32)
        (i32.eq
         (i32.load
          (i32.const 14224)
         )
         (i32.load offset=8
          (local.get $0)
         )
        )
        (block (result i32)
         (i64.store align=4
          (local.get $1)
          (i64.load align=4
           (i32.const 32792)
          )
         )
         (i64.store align=4
          (local.get $2)
          (i64.load align=4
           (i32.const 32808)
          )
         )
         (if (result i32)
          (i32.or
           (f32.lt
            (local.tee $3
             (f32.sub
              (f32.const 360)
              (call $_Vector2Angle
               (local.get $1)
               (local.get $2)
              )
             )
            )
            (f32.const 30)
           )
           (f32.gt
            (local.get $3)
            (f32.const 330)
           )
          )
          (i32.const 16)
          (select
           (i32.const 64)
           (select
            (i32.const 32)
            (select
             (i32.const 128)
             (i32.const 0)
             (i32.and
              (f32.lt
               (local.get $3)
               (f32.const 300)
              )
              (f32.gt
               (local.get $3)
               (f32.const 210)
              )
             )
            )
            (i32.and
             (f32.lt
              (local.get $3)
              (f32.const 210)
             )
             (f32.gt
              (local.get $3)
              (f32.const 120)
             )
            )
           )
           (i32.and
            (f32.lt
             (local.get $3)
             (f32.const 120)
            )
            (f32.gt
             (local.get $3)
             (f32.const 30)
            )
           )
          )
         )
        )
        (i32.const 0)
       )
       (i32.const 0)
      )
     )
     (f32.store
      (i32.const 32800)
      (f32.const 0)
     )
     (f32.store
      (i32.const 32804)
      (f32.const 0)
     )
     (i32.store
      (i32.const 34028)
      (i32.const 0)
     )
     (br $folding-inner0)
    )
    (local.set $5
     (i32.load
      (i32.const 34024)
     )
    )
    (if
     (i32.eqz
      (i32.load8_s
       (i32.const 34848)
      )
     )
     (i32.store8
      (i32.const 34848)
      (i32.const 1)
     )
    )
    (i64.store
     (i32.const 32816)
     (i64.load offset=24 align=4
      (local.get $0)
     )
    )
    (if
     (i32.eq
      (local.get $5)
      (i32.const 4)
     )
     (block
      (i64.store align=4
       (local.get $1)
       (i64.load align=4
        (i32.const 32792)
       )
      )
      (i64.store align=4
       (local.get $2)
       (i64.load align=4
        (i32.const 32816)
       )
      )
      (if
       (f32.ge
        (call $_Vector2Distance
         (local.get $1)
         (local.get $2)
        )
        (f32.const 0.014999999664723873)
       )
       (i32.store
        (i32.const 34024)
        (i32.const 8)
       )
      )
     )
    )
    (br $folding-inner0)
   )
   (global.set $STACKTOP
    (local.get $4)
   )
   (return)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_UpdateGestures (; 395 ;) (; has Stack IR ;)
  (local $0 i32)
  (if
   (i32.and
    (i32.lt_s
     (i32.load
      (i32.const 34028)
     )
     (i32.const 2)
    )
    (i32.lt_u
     (i32.add
      (i32.load
       (i32.const 34024)
      )
      (i32.const -1)
     )
     (i32.const 2)
    )
   )
   (i32.store
    (i32.const 34024)
    (i32.const 4)
   )
  )
  (block $switch
   (block $switch-default
    (br_table $switch $switch $switch-default $switch $switch-default $switch-default $switch-default $switch $switch-default
     (i32.or
      (i32.shr_u
       (local.tee $0
        (i32.add
         (i32.load
          (i32.const 34024)
         )
         (i32.const -16)
        )
       )
       (i32.const 4)
      )
      (i32.shl
       (local.get $0)
       (i32.const 28)
      )
     )
    )
   )
   (return)
  )
  (i32.store
   (i32.const 34024)
   (i32.const 0)
  )
 )
 (func $_SetCameraMode (; 396 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 f32)
  (local $2 f32)
  (local $3 f32)
  (local $4 f32)
  (local $5 f32)
  (f32.store
   (i32.const 34036)
   (f32.sqrt
    (f32.add
     (local.tee $1
      (f32.add
       (local.tee $5
        (f32.mul
         (local.tee $3
          (f32.sub
           (f32.load offset=12
            (local.get $0)
           )
           (f32.load
            (local.get $0)
           )
          )
         )
         (local.get $3)
        )
       )
       (f32.mul
        (local.tee $4
         (f32.sub
          (f32.load offset=16
           (local.get $0)
          )
          (f32.load offset=4
           (local.get $0)
          )
         )
        )
        (local.get $4)
       )
      )
     )
     (local.tee $2
      (f32.mul
       (local.tee $2
        (f32.sub
         (f32.load offset=20
          (local.get $0)
         )
         (f32.load offset=8
          (local.get $0)
         )
        )
       )
       (local.get $2)
      )
     )
    )
   )
  )
  (local.set $1
   (f32.sqrt
    (local.get $1)
   )
  )
  (f32.store
   (i32.const 34040)
   (call $_asinf
    (f32.div
     (f32.abs
      (local.get $3)
     )
     (f32.sqrt
      (f32.add
       (local.get $5)
       (local.get $2)
      )
     )
    )
   )
  )
  (f32.store
   (i32.const 34044)
   (f32.neg
    (call $_asinf
     (f32.div
      (f32.abs
       (local.get $4)
      )
      (local.get $1)
     )
    )
   )
  )
  (i32.store
   (i32.const 14228)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (i32.store8
   (i32.const 34849)
   (i32.const 1)
  )
  (i32.store
   (i32.const 34048)
   (i32.const 0)
  )
 )
 (func $_UpdateCamera (; 397 ;) (; has Stack IR ;)
  (local $0 f32)
  (local $1 f32)
  (local $2 f32)
  (local $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 f32)
  (local $24 f32)
  (local $25 f32)
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (call $_GetMousePosition
   (local.tee $6
    (local.get $3)
   )
  )
  (local.set $5
   (call $_GetMouseWheelMove)
  )
  (local.set $14
   (i32.ne
    (call $_glfwGetMouseButton
     (i32.load
      (i32.const 34056)
     )
     (i32.const 2)
    )
    (i32.const 0)
   )
  )
  (local.set $15
   (call $_GetKeyStatus
    (i32.const 342)
   )
  )
  (local.set $16
   (call $_GetKeyStatus
    (i32.const 341)
   )
  )
  (i32.store8 offset=8
   (local.get $3)
   (i32.and
    (local.tee $17
     (call $_GetKeyStatus
      (i32.const 87)
     )
    )
    (i32.const 1)
   )
  )
  (i32.store8 offset=9
   (local.get $3)
   (i32.and
    (local.tee $18
     (call $_GetKeyStatus
      (i32.const 83)
     )
    )
    (i32.const 1)
   )
  )
  (i32.store8 offset=10
   (local.get $3)
   (i32.and
    (local.tee $19
     (call $_GetKeyStatus
      (i32.const 68)
     )
    )
    (i32.const 1)
   )
  )
  (i32.store8 offset=11
   (local.get $3)
   (i32.and
    (local.tee $20
     (call $_GetKeyStatus
      (i32.const 65)
     )
    )
    (i32.const 1)
   )
  )
  (i32.store8 offset=12
   (local.get $3)
   (i32.and
    (local.tee $21
     (call $_GetKeyStatus
      (i32.const 69)
     )
    )
    (i32.const 1)
   )
  )
  (i32.store8 offset=13
   (local.get $3)
   (i32.and
    (local.tee $22
     (call $_GetKeyStatus
      (i32.const 81)
     )
    )
    (i32.const 1)
   )
  )
  (if
   (i32.eqz
    (local.tee $12
     (i32.load
      (i32.const 34048)
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $11)
    )
    (return)
   )
  )
  (local.set $9
   (f32.sub
    (f32.load
     (local.get $6)
    )
    (f32.load
     (i32.const 32840)
    )
   )
  )
  (local.set $7
   (f32.sub
    (f32.load offset=4
     (local.get $6)
    )
    (f32.load
     (i32.const 32844)
    )
   )
  )
  (i64.store
   (i32.const 32840)
   (i64.load
    (local.get $6)
   )
  )
  (local.set $0
   (block $__rjto$2 (result f32)
    (block $__rjti$2
     (block $switch-default
      (block $switch-case3
       (block $switch-case1
        (block $switch-case
         (br_table $switch-case $switch-case1 $switch-case3 $switch-case3 $switch-default
          (i32.sub
           (local.get $12)
           (i32.const 1)
          )
         )
        )
        (if
         (i32.and
          (local.tee $3
           (i32.lt_s
            (local.get $5)
            (i32.const 0)
           )
          )
          (f32.lt
           (local.tee $0
            (f32.load
             (i32.const 34036)
            )
           )
           (f32.const 120)
          )
         )
         (block
          (f32.store
           (i32.const 34036)
           (local.tee $0
            (f32.sub
             (local.get $0)
             (f32.mul
              (f32.convert_i32_s
               (local.get $5)
              )
              (f32.const 1.5)
             )
            )
           )
          )
          (if
           (f32.gt
            (local.get $0)
            (f32.const 120)
           )
           (f32.store
            (i32.const 34036)
            (f32.const 120)
           )
          )
         )
         (block $do-once
          (if
           (i32.and
            (local.get $3)
            (i32.and
             (local.tee $6
              (f32.gt
               (local.tee $4
                (f32.load
                 (i32.const 32884)
                )
               )
               (local.tee $1
                (f32.load
                 (i32.const 32896)
                )
               )
              )
             )
             (local.tee $12
              (f32.eq
               (local.get $0)
               (f32.const 120)
              )
             )
            )
           )
           (block
            (f32.store
             (i32.const 32892)
             (f32.add
              (local.tee $2
               (f32.load
                (i32.const 32892)
               )
              )
              (f32.div
               (f32.mul
                (f32.mul
                 (f32.sub
                  (local.get $2)
                  (f32.load
                   (i32.const 32880)
                  )
                 )
                 (local.tee $2
                  (f32.convert_i32_s
                   (local.get $5)
                  )
                 )
                )
                (f32.const 1.5)
               )
               (local.get $0)
              )
             )
            )
            (f32.store
             (i32.const 32896)
             (f32.add
              (local.get $1)
              (f32.div
               (f32.mul
                (f32.mul
                 (f32.sub
                  (local.get $1)
                  (local.get $4)
                 )
                 (local.get $2)
                )
                (f32.const 1.5)
               )
               (local.get $0)
              )
             )
            )
            (f32.store
             (i32.const 32900)
             (f32.add
              (local.tee $1
               (f32.load
                (i32.const 32900)
               )
              )
              (f32.div
               (f32.mul
                (f32.mul
                 (f32.sub
                  (local.get $1)
                  (f32.load
                   (i32.const 32888)
                  )
                 )
                 (local.get $2)
                )
                (f32.const 1.5)
               )
               (local.get $0)
              )
             )
            )
            (br $do-once)
           )
          )
          (if
           (i32.eqz
            (i32.or
             (i32.eqz
              (f32.ge
               (local.get $1)
               (f32.const 0)
              )
             )
             (i32.xor
              (local.get $6)
              (i32.const 1)
             )
            )
           )
           (block
            (f32.store
             (i32.const 32892)
             (f32.add
              (local.tee $2
               (f32.load
                (i32.const 32892)
               )
              )
              (f32.div
               (f32.mul
                (f32.mul
                 (f32.sub
                  (local.get $2)
                  (f32.load
                   (i32.const 32880)
                  )
                 )
                 (local.tee $2
                  (f32.convert_i32_s
                   (local.get $5)
                  )
                 )
                )
                (f32.const 1.5)
               )
               (local.get $0)
              )
             )
            )
            (f32.store
             (i32.const 32896)
             (f32.add
              (local.get $1)
              (f32.div
               (f32.mul
                (f32.mul
                 (f32.sub
                  (local.get $1)
                  (local.get $4)
                 )
                 (local.get $2)
                )
                (f32.const 1.5)
               )
               (local.get $0)
              )
             )
            )
            (f32.store
             (i32.const 32900)
             (f32.add
              (local.tee $1
               (f32.load
                (i32.const 32900)
               )
              )
              (f32.div
               (f32.mul
                (f32.mul
                 (f32.sub
                  (local.get $1)
                  (f32.load
                   (i32.const 32888)
                  )
                 )
                 (local.get $2)
                )
                (f32.const 1.5)
               )
               (local.get $0)
              )
             )
            )
            (br $do-once)
           )
          )
          (if
           (local.get $6)
           (if
            (i32.and
             (i32.gt_s
              (local.get $5)
              (i32.const 0)
             )
             (f32.lt
              (local.get $1)
              (f32.const 0)
             )
            )
            (block
             (f32.store
              (i32.const 34036)
              (local.tee $0
               (f32.sub
                (local.get $0)
                (f32.mul
                 (f32.convert_i32_s
                  (local.get $5)
                 )
                 (f32.const 1.5)
                )
               )
              )
             )
             (br_if $do-once
              (i32.eqz
               (f32.lt
                (local.get $0)
                (f32.const 0.30000001192092896)
               )
              )
             )
             (f32.store
              (i32.const 34036)
              (f32.const 0.30000001192092896)
             )
             (br $do-once)
            )
           )
          )
          (if
           (i32.and
            (local.get $3)
            (i32.and
             (local.get $12)
             (local.tee $6
              (f32.lt
               (local.get $4)
               (local.get $1)
              )
             )
            )
           )
           (block
            (f32.store
             (i32.const 32892)
             (f32.add
              (local.tee $2
               (f32.load
                (i32.const 32892)
               )
              )
              (f32.div
               (f32.mul
                (f32.mul
                 (f32.sub
                  (local.get $2)
                  (f32.load
                   (i32.const 32880)
                  )
                 )
                 (local.tee $2
                  (f32.convert_i32_s
                   (local.get $5)
                  )
                 )
                )
                (f32.const 1.5)
               )
               (local.get $0)
              )
             )
            )
            (f32.store
             (i32.const 32896)
             (f32.add
              (local.get $1)
              (f32.div
               (f32.mul
                (f32.mul
                 (f32.sub
                  (local.get $1)
                  (local.get $4)
                 )
                 (local.get $2)
                )
                (f32.const 1.5)
               )
               (local.get $0)
              )
             )
            )
            (f32.store
             (i32.const 32900)
             (f32.add
              (local.tee $1
               (f32.load
                (i32.const 32900)
               )
              )
              (f32.div
               (f32.mul
                (f32.mul
                 (f32.sub
                  (local.get $1)
                  (f32.load
                   (i32.const 32888)
                  )
                 )
                 (local.get $2)
                )
                (f32.const 1.5)
               )
               (local.get $0)
              )
             )
            )
            (br $do-once)
           )
          )
          (if
           (i32.eqz
            (i32.or
             (i32.eqz
              (f32.le
               (local.get $1)
               (f32.const 0)
              )
             )
             (i32.xor
              (local.get $6)
              (i32.const 1)
             )
            )
           )
           (block
            (f32.store
             (i32.const 32892)
             (f32.add
              (local.tee $2
               (f32.load
                (i32.const 32892)
               )
              )
              (f32.div
               (f32.mul
                (f32.mul
                 (f32.sub
                  (local.get $2)
                  (f32.load
                   (i32.const 32880)
                  )
                 )
                 (local.tee $2
                  (f32.convert_i32_s
                   (local.get $5)
                  )
                 )
                )
                (f32.const 1.5)
               )
               (local.get $0)
              )
             )
            )
            (f32.store
             (i32.const 32896)
             (f32.add
              (local.get $1)
              (f32.div
               (f32.mul
                (f32.mul
                 (f32.sub
                  (local.get $1)
                  (local.get $4)
                 )
                 (local.get $2)
                )
                (f32.const 1.5)
               )
               (local.get $0)
              )
             )
            )
            (f32.store
             (i32.const 32900)
             (f32.add
              (local.tee $1
               (f32.load
                (i32.const 32900)
               )
              )
              (f32.div
               (f32.mul
                (f32.mul
                 (f32.sub
                  (local.get $1)
                  (f32.load
                   (i32.const 32888)
                  )
                 )
                 (local.get $2)
                )
                (f32.const 1.5)
               )
               (local.get $0)
              )
             )
            )
            (br $do-once)
           )
          )
          (if
           (local.get $6)
           (if
            (i32.and
             (i32.gt_s
              (local.get $5)
              (i32.const 0)
             )
             (f32.gt
              (local.get $1)
              (f32.const 0)
             )
            )
            (block
             (f32.store
              (i32.const 34036)
              (local.tee $0
               (f32.sub
                (local.get $0)
                (f32.mul
                 (f32.convert_i32_s
                  (local.get $5)
                 )
                 (f32.const 1.5)
                )
               )
              )
             )
             (if
              (f32.lt
               (local.get $0)
               (f32.const 0.30000001192092896)
              )
              (f32.store
               (i32.const 34036)
               (f32.const 0.30000001192092896)
              )
             )
            )
           )
          )
         )
        )
        (br_if $__rjti$2
         (i32.eqz
          (local.get $14)
         )
        )
        (if
         (i32.eqz
          (local.get $15)
         )
         (block
          (local.set $13
           (f32.mul
            (f32.mul
             (local.get $9)
             (f32.const -0.009999999776482582)
            )
            (local.tee $2
             (call $_cosf
              (local.tee $1
               (f32.load
                (i32.const 34040)
               )
              )
             )
            )
           )
          )
          (local.set $10
           (f32.mul
            (local.tee $0
             (f32.mul
              (local.get $7)
              (f32.const 0.009999999776482582)
             )
            )
            (local.tee $7
             (call $_sinf
              (local.get $1)
             )
            )
           )
          )
          (local.set $1
           (call $_sinf
            (local.tee $8
             (f32.load
              (i32.const 34044)
             )
            )
           )
          )
          (f32.store
           (i32.const 32892)
           (f32.add
            (f32.load
             (i32.const 32892)
            )
            (f32.mul
             (local.tee $4
              (f32.div
               (f32.load
                (i32.const 34036)
               )
               (f32.const 5.099999904632568)
              )
             )
             (f32.add
              (local.get $13)
              (f32.mul
               (local.get $10)
               (local.get $1)
              )
             )
            )
           )
          )
          (f32.store
           (i32.const 32896)
           (f32.add
            (f32.mul
             (f32.mul
              (local.get $0)
              (call $_cosf
               (local.get $8)
              )
             )
             (local.get $4)
            )
            (f32.load
             (i32.const 32896)
            )
           )
          )
          (f32.store
           (i32.const 32900)
           (f32.add
            (f32.mul
             (local.get $4)
             (f32.add
              (f32.mul
               (f32.mul
                (local.get $9)
                (f32.const 0.009999999776482582)
               )
               (local.get $7)
              )
              (f32.mul
               (f32.mul
                (local.get $0)
                (local.get $2)
               )
               (local.get $1)
              )
             )
            )
            (f32.load
             (i32.const 32900)
            )
           )
          )
          (br $__rjti$2)
         )
        )
        (if
         (local.get $16)
         (block
          (f32.store
           (i32.const 34036)
           (f32.add
            (f32.mul
             (local.get $7)
             (f32.const 0.05000000074505806)
            )
            (f32.load
             (i32.const 34036)
            )
           )
          )
          (br $__rjti$2)
         )
        )
        (f32.store
         (i32.const 34040)
         (f32.sub
          (f32.load
           (i32.const 34040)
          )
          (f32.mul
           (local.get $9)
           (f32.const 0.009999999776482582)
          )
         )
        )
        (f32.store
         (i32.const 34044)
         (local.tee $0
          (f32.sub
           (f32.load
            (i32.const 34044)
           )
           (f32.mul
            (local.get $7)
            (f32.const 0.009999999776482582)
           )
          )
         )
        )
        (if
         (f32.gt
          (local.get $0)
          (f32.const 1.483529806137085)
         )
         (block
          (f32.store
           (i32.const 34044)
           (f32.const 1.483529806137085)
          )
          (br $__rjto$2
           (f32.const 1.483529806137085)
          )
         )
        )
        (br $__rjto$2
         (if (result f32)
          (f32.lt
           (local.get $0)
           (f32.const -1.483529806137085)
          )
          (block (result f32)
           (f32.store
            (i32.const 34044)
            (f32.const -1.483529806137085)
           )
           (f32.const -1.483529806137085)
          )
          (local.get $0)
         )
        )
       )
       (f32.store
        (i32.const 34040)
        (f32.add
         (f32.load
          (i32.const 34040)
         )
         (f32.const 0.009999999776482582)
        )
       )
       (f32.store
        (i32.const 34036)
        (local.tee $0
         (f32.sub
          (f32.load
           (i32.const 34036)
          )
          (f32.mul
           (f32.convert_i32_s
            (local.get $5)
           )
           (f32.const 1.5)
          )
         )
        )
       )
       (br_if $__rjti$2
        (i32.eqz
         (f32.lt
          (local.get $0)
          (f32.const 1.2000000476837158)
         )
        )
       )
       (f32.store
        (i32.const 34036)
        (f32.const 1.2000000476837158)
       )
       (br $__rjti$2)
      )
      (local.set $10
       (f32.sub
        (f32.mul
         (local.tee $1
          (call $_sinf
           (local.tee $4
            (f32.load
             (i32.const 34040)
            )
           )
          )
         )
         (local.tee $2
          (f32.convert_i32_s
           (i32.and
            (local.get $18)
            (i32.const 1)
           )
          )
         )
        )
        (f32.mul
         (local.get $1)
         (local.tee $13
          (f32.convert_i32_s
           (i32.and
            (local.get $17)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
      (local.set $0
       (call $_cosf
        (local.get $4)
       )
      )
      (f32.store
       (i32.const 32880)
       (local.tee $10
        (f32.add
         (f32.load
          (i32.const 32880)
         )
         (f32.div
          (f32.add
           (f32.mul
            (local.get $0)
            (local.tee $23
             (f32.convert_i32_s
              (i32.and
               (local.get $19)
               (i32.const 1)
              )
             )
            )
           )
           (f32.sub
            (local.get $10)
            (f32.mul
             (local.get $0)
             (local.tee $24
              (f32.convert_i32_s
               (i32.and
                (local.get $20)
                (i32.const 1)
               )
              )
             )
            )
           )
          )
          (f32.const 20)
         )
        )
       )
      )
      (local.set $8
       (call $_sinf
        (local.tee $25
         (f32.load
          (i32.const 34044)
         )
        )
       )
      )
      (f32.store
       (i32.const 32884)
       (local.tee $8
        (f32.add
         (f32.load
          (i32.const 32884)
         )
         (f32.div
          (f32.sub
           (f32.add
            (f32.sub
             (f32.mul
              (local.get $8)
              (local.get $13)
             )
             (f32.mul
              (local.get $8)
              (local.get $2)
             )
            )
            (f32.convert_i32_s
             (i32.and
              (local.get $21)
              (i32.const 1)
             )
            )
           )
           (f32.convert_i32_s
            (i32.and
             (local.get $22)
             (i32.const 1)
            )
           )
          )
          (f32.const 20)
         )
        )
       )
      )
      (f32.store
       (i32.const 32888)
       (local.tee $2
        (f32.add
         (f32.load
          (i32.const 32888)
         )
         (f32.div
          (f32.sub
           (f32.add
            (f32.mul
             (local.get $1)
             (local.get $24)
            )
            (f32.sub
             (f32.mul
              (local.get $0)
              (local.get $2)
             )
             (f32.mul
              (local.get $0)
              (local.get $13)
             )
            )
           )
           (f32.mul
            (local.get $1)
            (local.get $23)
           )
          )
          (f32.const 20)
         )
        )
       )
      )
      (local.set $3
       (if (result i32)
        (i32.load8_s offset=8
         (local.get $3)
        )
        (i32.const 1)
        (if (result i32)
         (i32.load8_s offset=9
          (local.get $3)
         )
         (i32.const 1)
         (if (result i32)
          (i32.load8_s offset=10
           (local.get $3)
          )
          (i32.const 1)
          (if (result i32)
           (i32.load8_s offset=11
            (local.get $3)
           )
           (i32.const 1)
           (if (result i32)
            (i32.load8_s offset=12
             (local.get $3)
            )
            (i32.const 1)
            (i32.ne
             (i32.load8_s offset=13
              (local.get $3)
             )
             (i32.const 0)
            )
           )
          )
         )
        )
       )
      )
      (f32.store
       (i32.const 34040)
       (local.tee $1
        (f32.sub
         (local.get $4)
         (f32.mul
          (local.get $9)
          (f32.const 0.003000000026077032)
         )
        )
       )
      )
      (f32.store
       (i32.const 34044)
       (local.tee $0
        (f32.sub
         (local.get $25)
         (f32.mul
          (local.get $7)
          (f32.const 0.003000000026077032)
         )
        )
       )
      )
      (if
       (i32.eq
        (local.get $12)
        (i32.const 4)
       )
       (block
        (block $__rjto$0
         (block $__rjti$0
          (if
           (f32.gt
            (local.get $0)
            (f32.const 0.0872664600610733)
           )
           (block
            (local.set $0
             (f32.const 0.0872664600610733)
            )
            (br $__rjti$0)
           )
           (if
            (f32.lt
             (local.get $0)
             (f32.const -1.483529806137085)
            )
            (block
             (local.set $0
              (f32.const -1.483529806137085)
             )
             (br $__rjti$0)
            )
           )
          )
          (br $__rjto$0)
         )
         (f32.store
          (i32.const 34044)
          (local.get $0)
         )
        )
        (f32.store
         (i32.const 34036)
         (select
          (f32.const 1.2000000476837158)
          (local.tee $0
           (f32.sub
            (f32.load
             (i32.const 34036)
            )
            (f32.mul
             (f32.convert_i32_s
              (local.get $5)
             )
             (f32.const 1.5)
            )
           )
          )
          (f32.lt
           (local.get $0)
           (f32.const 1.2000000476837158)
          )
         )
        )
        (local.set $0
         (f32.add
          (f32.mul
           (call $_cosf
            (local.get $1)
           )
           (f32.const 0.4000000059604645)
          )
          (local.get $10)
         )
        )
        (f32.store
         (i32.const 32892)
         (f32.add
          (local.tee $4
           (f32.mul
            (local.tee $1
             (call $_sinf
              (local.get $1)
             )
            )
            (f32.const 0)
           )
          )
          (local.get $0)
         )
        )
        (f32.store
         (i32.const 32896)
         (f32.add
          (local.get $8)
          (f32.const 0)
         )
        )
        (f32.store
         (i32.const 32900)
         (f32.sub
          (f32.add
           (local.get $4)
           (local.get $2)
          )
          (f32.mul
           (local.get $1)
           (f32.const 0.4000000059604645)
          )
         )
        )
        (br $__rjti$2)
       )
      )
      (block $__rjto$1
       (block $__rjti$1
        (if
         (f32.gt
          (local.get $0)
          (f32.const 1.483529806137085)
         )
         (block
          (local.set $0
           (f32.const 1.483529806137085)
          )
          (br $__rjti$1)
         )
         (if
          (f32.lt
           (local.get $0)
           (f32.const -1.483529806137085)
          )
          (block
           (local.set $0
            (f32.const -1.483529806137085)
           )
           (br $__rjti$1)
          )
         )
        )
        (br $__rjto$1)
       )
       (f32.store
        (i32.const 34044)
        (local.get $0)
       )
      )
      (f32.store
       (i32.const 32892)
       (f32.sub
        (local.get $10)
        (f32.mul
         (call $_sinf
          (local.get $1)
         )
         (f32.const 25)
        )
       )
      )
      (f32.store
       (i32.const 32896)
       (f32.add
        (local.get $8)
        (f32.mul
         (call $_sinf
          (f32.load
           (i32.const 34044)
          )
         )
         (f32.const 25)
        )
       )
      )
      (f32.store
       (i32.const 32900)
       (f32.sub
        (local.get $2)
        (f32.mul
         (call $_cosf
          (local.get $1)
         )
         (f32.const 25)
        )
       )
      )
      (if
       (local.get $3)
       (i32.store
        (i32.const 34052)
        (i32.add
         (i32.load
          (i32.const 34052)
         )
         (i32.const 1)
        )
       )
      )
      (f32.store
       (i32.const 32884)
       (f32.sub
        (f32.load
         (i32.const 14228)
        )
        (f32.div
         (call $_sinf
          (f32.div
           (local.tee $0
            (f32.convert_i32_s
             (i32.load
              (i32.const 34052)
             )
            )
           )
           (f32.const 5)
          )
         )
         (f32.const 30)
        )
       )
      )
      (f32.store
       (i32.const 32904)
       (f32.div
        (local.tee $0
         (call $_sinf
          (f32.div
           (local.get $0)
           (f32.const 10)
          )
         )
        )
        (f32.const 200)
       )
      )
      (f32.store
       (i32.const 32912)
       (f32.div
        (f32.neg
         (local.get $0)
        )
        (f32.const 200)
       )
      )
      (global.set $STACKTOP
       (local.get $11)
      )
      (return)
     )
     (global.set $STACKTOP
      (local.get $11)
     )
     (return)
    )
    (f32.load
     (i32.const 34044)
    )
   )
  )
  (local.set $7
   (f32.mul
    (call $_sinf
     (local.tee $9
      (f32.load
       (i32.const 34040)
      )
     )
    )
    (local.tee $1
     (f32.load
      (i32.const 34036)
     )
    )
   )
  )
  (local.set $4
   (call $_cosf
    (local.get $0)
   )
  )
  (f32.store
   (i32.const 32880)
   (f32.add
    (f32.load
     (i32.const 32892)
    )
    (f32.mul
     (local.get $4)
     (local.get $7)
    )
   )
  )
  (local.set $3
   (i32.eqz
    (f32.le
     (local.get $0)
     (f32.const 0)
    )
   )
  )
  (local.set $0
   (f32.mul
    (local.tee $0
     (call $_sinf
      (local.get $0)
     )
    )
    (f32.mul
     (local.get $0)
     (local.get $1)
    )
   )
  )
  (f32.store
   (i32.const 32884)
   (f32.add
    (f32.load
     (i32.const 32896)
    )
    (select
     (f32.neg
      (local.get $0)
     )
     (local.get $0)
     (local.get $3)
    )
   )
  )
  (f32.store
   (i32.const 32888)
   (f32.add
    (f32.mul
     (local.get $4)
     (f32.mul
      (call $_cosf
       (local.get $9)
      )
      (local.get $1)
     )
    )
    (f32.load
     (i32.const 32900)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $11)
  )
 )
 (func $_GetMousePosition (; 398 ;) (; has Stack IR ;) (param $0 i32)
  (f32.store
   (local.get $0)
   (f32.add
    (f32.load
     (i32.const 34064)
    )
    (f32.const 0)
   )
  )
  (f32.store offset=4
   (local.get $0)
   (f32.add
    (f32.load
     (i32.const 34068)
    )
    (f32.const 0)
   )
  )
 )
 (func $_GetMouseWheelMove (; 399 ;) (; has Stack IR ;) (result i32)
  (i32.div_s
   (i32.load
    (i32.const 34060)
   )
   (i32.const 100)
  )
 )
 (func $_GetKeyStatus (; 400 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.ne
   (call $_glfwGetKey
    (i32.load
     (i32.const 34056)
    )
    (local.get $0)
   )
   (i32.const 0)
  )
 )
 (func $_GifBegin (; 401 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (i32.store
   (i32.const 34072)
   (local.tee $0
    (call $_fopen
     (local.get $0)
    )
   )
  )
  (if
   (i32.eqz
    (local.get $0)
   )
   (return)
  )
  (i32.store
   (i32.const 33048)
   (call $_malloc
    (i32.mul
     (local.get $2)
     (i32.shl
      (local.get $1)
      (i32.const 2)
     )
    )
   )
  )
  (drop
   (call $_fwrite
    (i32.const 18430)
    (i32.const 6)
    (i32.const 1)
    (local.get $0)
   )
  )
  (call $_fputc
   (i32.and
    (local.get $1)
    (i32.const 255)
   )
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.and
    (i32.shr_u
     (local.get $1)
     (i32.const 8)
    )
    (i32.const 255)
   )
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.and
    (local.get $2)
    (i32.const 255)
   )
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.and
    (i32.shr_u
     (local.get $2)
     (i32.const 8)
    )
    (i32.const 255)
   )
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.const 240)
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 34072)
   )
  )
  (if
   (i32.eqz
    (local.get $3)
   )
   (return)
  )
  (call $_fputc
   (i32.const 33)
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.const 255)
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.const 11)
   (i32.load
    (i32.const 34072)
   )
  )
  (drop
   (call $_fwrite
    (i32.const 18437)
    (i32.const 11)
    (i32.const 1)
    (i32.load
     (i32.const 34072)
    )
   )
  )
  (call $_fputc
   (i32.const 3)
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.const 1)
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_fputc
   (i32.const 0)
   (i32.load
    (i32.const 34072)
   )
  )
 )
 (func $_GifWriteFrame (; 402 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 1296)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 1296)
   )
  )
  (if
   (i32.eqz
    (i32.load
     (i32.const 34072)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (call $_GifMakePalette
   (local.tee $5
    (i32.load
     (i32.const 33048)
    )
   )
   (local.get $0)
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
  (call $_GifThresholdImage
   (local.get $5)
   (local.get $0)
   (i32.load
    (i32.const 33048)
   )
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
  (call $_GifWriteLzwImage
   (i32.load
    (i32.const 34072)
   )
   (i32.load
    (i32.const 33048)
   )
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_GifMakePalette (; 403 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (i32.store
   (local.get $4)
   (i32.const 8)
  )
  (drop
   (call $_memcpy
    (local.tee $3
     (call $_malloc
      (local.tee $5
       (i32.shl
        (local.tee $2
         (i32.mul
          (local.get $2)
          (local.get $3)
         )
        )
        (i32.const 2)
       )
      )
     )
    )
    (local.get $1)
    (local.get $5)
   )
  )
  (call $_GifSplitPalette
   (local.get $3)
   (if (result i32)
    (local.get $0)
    (call $_GifPickChangedPixels
     (local.get $0)
     (local.get $3)
     (local.get $2)
    )
    (local.get $2)
   )
   (i32.const 1)
   (i32.const 256)
   (i32.const 128)
   (i32.const 64)
   (i32.const 1)
   (i32.const 0)
   (local.get $4)
  )
  (call $_free
   (local.get $3)
  )
  (i32.store8
   (i32.add
    (local.get $4)
    (i32.const 1155)
   )
   (i32.const 0)
  )
  (i32.store8 offset=900
   (local.get $4)
   (i32.const 0)
  )
  (i32.store8 offset=516
   (local.get $4)
   (i32.const 0)
  )
  (i32.store8 offset=260
   (local.get $4)
   (i32.const 0)
  )
  (i32.store8 offset=4
   (local.get $4)
   (i32.const 0)
  )
 )
 (func $_GifThresholdImage (; 404 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.eqz
    (local.tee $9
     (i32.mul
      (local.get $3)
      (local.get $4)
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $7)
    )
    (return)
   )
  )
  (local.set $8
   (i32.add
    (local.get $6)
    (i32.const 4)
   )
  )
  (local.set $4
   (local.get $6)
  )
  (local.set $3
   (i32.const 0)
  )
  (loop $while-in
   (block $__rjto$0
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.eqz
       (local.tee $10
        (i32.ne
         (local.get $0)
         (i32.const 0)
        )
       )
      )
     )
     (br_if $__rjti$0
      (i32.ne
       (local.tee $11
        (i32.load8_s
         (local.get $0)
        )
       )
       (i32.load8_s
        (local.get $1)
       )
      )
     )
     (br_if $__rjti$0
      (i32.ne
       (i32.load8_s offset=1
        (local.tee $6
         (local.get $0)
        )
       )
       (i32.load8_s offset=1
        (local.get $1)
       )
      )
     )
     (br_if $__rjti$0
      (i32.ne
       (i32.load8_s offset=2
        (local.tee $12
         (local.get $0)
        )
       )
       (i32.load8_s offset=2
        (local.get $1)
       )
      )
     )
     (i32.store8
      (local.get $2)
      (local.get $11)
     )
     (i32.store8 offset=1
      (local.get $2)
      (i32.load8_s offset=1
       (local.get $6)
      )
     )
     (i32.store8 offset=2
      (local.get $2)
      (i32.load8_s offset=2
       (local.get $12)
      )
     )
     (i32.store8 offset=3
      (local.get $2)
      (i32.const 0)
     )
     (br $__rjto$0)
    )
    (i32.store
     (local.get $8)
     (i32.const 1000000)
    )
    (i32.store
     (local.get $4)
     (i32.const 1)
    )
    (call $_GifGetClosestPaletteColor
     (local.get $5)
     (i32.load8_u
      (local.get $1)
     )
     (i32.load8_u offset=1
      (local.get $1)
     )
     (i32.load8_u offset=2
      (local.get $1)
     )
     (local.get $4)
     (local.get $8)
     (i32.const 1)
    )
    (i32.store8
     (local.get $2)
     (i32.load8_s
      (i32.add
       (local.tee $6
        (i32.load
         (local.get $4)
        )
       )
       (i32.add
        (local.get $5)
        (i32.const 4)
       )
      )
     )
    )
    (i32.store8 offset=1
     (local.get $2)
     (i32.load8_s
      (i32.add
       (local.get $6)
       (i32.add
        (local.get $5)
        (i32.const 260)
       )
      )
     )
    )
    (i32.store8 offset=2
     (local.get $2)
     (i32.load8_s
      (i32.add
       (i32.load
        (local.get $4)
       )
       (i32.add
        (local.get $5)
        (i32.const 516)
       )
      )
     )
    )
    (i32.store8 offset=3
     (local.get $2)
     (i32.load
      (local.get $4)
     )
    )
   )
   (local.set $0
    (select
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
     (i32.const 0)
     (local.get $10)
    )
   )
   (local.set $2
    (i32.add
     (local.get $2)
     (i32.const 4)
    )
   )
   (local.set $1
    (i32.add
     (local.get $1)
     (i32.const 4)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $9)
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_GifWriteLzwImage (; 405 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local.set $14
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 272)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 272)
   )
  )
  (call $_fputc
   (i32.const 33)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 249)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 4)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 5)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 10)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 44)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_fputc
   (i32.and
    (local.get $2)
    (i32.const 255)
   )
   (local.get $0)
  )
  (call $_fputc
   (i32.and
    (i32.shr_u
     (local.get $2)
     (i32.const 8)
    )
    (i32.const 255)
   )
   (local.get $0)
  )
  (call $_fputc
   (i32.and
    (local.get $3)
    (i32.const 255)
   )
   (local.get $0)
  )
  (call $_fputc
   (i32.and
    (i32.shr_u
     (local.get $3)
     (i32.const 8)
    )
    (i32.const 255)
   )
   (local.get $0)
  )
  (call $_fputc
   (i32.add
    (i32.load
     (local.get $4)
    )
    (i32.const 127)
   )
   (local.get $0)
  )
  (call $_GifWritePalette
   (local.get $4)
   (local.get $0)
  )
  (local.set $8
   (i32.shl
    (i32.const 1)
    (local.tee $4
     (i32.load
      (local.get $4)
     )
    )
   )
  )
  (call $_fputc
   (local.get $4)
   (local.get $0)
  )
  (drop
   (call $_memset
    (local.tee $9
     (call $_malloc
      (i32.const 2097152)
     )
    )
    (i32.const 0)
    (i32.const 2097152)
   )
  )
  (local.set $12
   (i32.add
    (local.get $8)
    (i32.const 1)
   )
  )
  (i32.store8 offset=1
   (local.get $5)
   (i32.const 0)
  )
  (i32.store8
   (local.get $5)
   (i32.const 0)
  )
  (i32.store offset=4
   (local.get $5)
   (i32.const 0)
  )
  (call $_GifWriteCode
   (local.get $0)
   (local.get $5)
   (local.get $8)
   (local.tee $10
    (i32.add
     (local.get $4)
     (i32.const 1)
    )
   )
  )
  (if
   (local.get $3)
   (block
    (local.set $16
     (i32.eqz
      (local.get $2)
     )
    )
    (local.set $7
     (local.get $12)
    )
    (local.set $4
     (local.get $10)
    )
    (local.set $6
     (i32.const -1)
    )
    (loop $while-in
     (if
      (i32.eqz
       (local.get $16)
      )
      (block
       (local.set $17
        (i32.mul
         (local.get $2)
         (local.get $15)
        )
       )
       (local.set $13
        (i32.const 0)
       )
       (local.set $11
        (local.get $6)
       )
       (loop $while-in1
        (local.set $6
         (i32.load8_u
          (i32.add
           (local.get $1)
           (i32.or
            (i32.shl
             (i32.add
              (local.get $13)
              (local.get $17)
             )
             (i32.const 2)
            )
            (i32.const 3)
           )
          )
         )
        )
        (if
         (i32.ge_s
          (local.get $11)
          (i32.const 0)
         )
         (block $do-once
          (if
           (local.tee $19
            (i32.load16_s
             (local.tee $18
              (i32.add
               (i32.add
                (i32.shl
                 (local.get $11)
                 (i32.const 9)
                )
                (local.get $9)
               )
               (i32.shl
                (local.get $6)
                (i32.const 1)
               )
              )
             )
            )
           )
           (block
            (local.set $6
             (i32.and
              (local.get $19)
              (i32.const 65535)
             )
            )
            (br $do-once)
           )
          )
          (call $_GifWriteCode
           (local.get $0)
           (local.get $5)
           (local.get $11)
           (local.get $4)
          )
          (i32.store16
           (local.get $18)
           (local.tee $7
            (i32.add
             (local.get $7)
             (i32.const 1)
            )
           )
          )
          (local.set $4
           (i32.add
            (local.get $4)
            (i32.ge_u
             (local.get $7)
             (i32.shl
              (i32.const 1)
              (local.get $4)
             )
            )
           )
          )
          (if
           (i32.eq
            (local.get $7)
            (i32.const 4095)
           )
           (block
            (call $_GifWriteCode
             (local.get $0)
             (local.get $5)
             (local.get $8)
             (local.get $4)
            )
            (drop
             (call $_memset
              (local.get $9)
              (i32.const 0)
              (i32.const 2097152)
             )
            )
            (local.set $7
             (local.get $12)
            )
            (local.set $4
             (local.get $10)
            )
           )
          )
         )
        )
        (if
         (i32.ne
          (local.tee $13
           (i32.add
            (local.get $13)
            (i32.const 1)
           )
          )
          (local.get $2)
         )
         (block
          (local.set $11
           (local.get $6)
          )
          (br $while-in1)
         )
        )
       )
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $15
        (i32.add
         (local.get $15)
         (i32.const 1)
        )
       )
       (local.get $3)
      )
     )
    )
   )
   (block
    (local.set $6
     (i32.const -1)
    )
    (local.set $4
     (local.get $10)
    )
   )
  )
  (call $_GifWriteCode
   (local.get $0)
   (local.get $5)
   (local.get $6)
   (local.get $4)
  )
  (call $_GifWriteCode
   (local.get $0)
   (local.get $5)
   (local.get $8)
   (local.get $4)
  )
  (call $_GifWriteCode
   (local.get $0)
   (local.get $5)
   (local.get $12)
   (local.get $10)
  )
  (if
   (i32.load8_s
    (local.get $5)
   )
   (loop $while-in3
    (call $_GifWriteBit
     (local.get $5)
     (i32.const 0)
    )
    (br_if $while-in3
     (i32.load8_s
      (local.get $5)
     )
    )
   )
  )
  (if
   (i32.eqz
    (i32.load offset=4
     (local.get $5)
    )
   )
   (block
    (call $_fputc
     (i32.const 0)
     (local.get $0)
    )
    (call $_free
     (local.get $9)
    )
    (global.set $STACKTOP
     (local.get $14)
    )
    (return)
   )
  )
  (call $_GifWriteChunk
   (local.get $0)
   (local.get $5)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $0)
  )
  (call $_free
   (local.get $9)
  )
  (global.set $STACKTOP
   (local.get $14)
  )
 )
 (func $_GifWritePalette (; 406 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (call $_fputc
   (i32.const 0)
   (local.get $1)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $1)
  )
  (call $_fputc
   (i32.const 0)
   (local.get $1)
  )
  (if
   (i32.le_s
    (i32.shl
     (i32.const 1)
     (i32.load
      (local.get $0)
     )
    )
    (i32.const 1)
   )
   (return)
  )
  (local.set $2
   (i32.const 1)
  )
  (loop $while-in
   (local.set $3
    (i32.load8_u
     (i32.add
      (local.get $2)
      (i32.add
       (local.get $0)
       (i32.const 260)
      )
     )
    )
   )
   (local.set $4
    (i32.load8_u
     (i32.add
      (local.get $2)
      (i32.add
       (local.get $0)
       (i32.const 516)
      )
     )
    )
   )
   (call $_fputc
    (i32.load8_u
     (i32.add
      (local.get $2)
      (i32.add
       (local.get $0)
       (i32.const 4)
      )
     )
    )
    (local.get $1)
   )
   (call $_fputc
    (local.get $3)
    (local.get $1)
   )
   (call $_fputc
    (local.get $4)
    (local.get $1)
   )
   (br_if $while-in
    (i32.lt_s
     (local.tee $2
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (i32.shl
      (i32.const 1)
      (i32.load
       (local.get $0)
      )
     )
    )
   )
  )
 )
 (func $_GifWriteCode (; 407 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (if
   (i32.eqz
    (local.get $3)
   )
   (return)
  )
  (loop $while-in
   (call $_GifWriteBit
    (local.get $1)
    (local.get $2)
   )
   (if
    (i32.eq
     (i32.load offset=4
      (local.get $1)
     )
     (i32.const 255)
    )
    (call $_GifWriteChunk
     (local.get $0)
     (local.get $1)
    )
   )
   (local.set $2
    (i32.shr_u
     (local.get $2)
     (i32.const 1)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.get $3)
    )
   )
  )
 )
 (func $_GifWriteBit (; 408 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (i32.store8 offset=1
   (local.get $0)
   (local.tee $2
    (i32.and
     (i32.or
      (i32.load8_u offset=1
       (local.get $0)
      )
      (i32.shl
       (i32.and
        (local.get $1)
        (i32.const 1)
       )
       (i32.and
        (local.tee $1
         (i32.load8_s
          (local.get $0)
         )
        )
        (i32.const 255)
       )
      )
     )
     (i32.const 255)
    )
   )
  )
  (i32.store8
   (local.get $0)
   (local.tee $1
    (i32.shr_s
     (i32.shl
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
      (i32.const 24)
     )
     (i32.const 24)
    )
   )
  )
  (if
   (i32.le_s
    (i32.and
     (local.get $1)
     (i32.const 255)
    )
    (i32.const 7)
   )
   (return)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.add
    (local.tee $1
     (i32.load offset=4
      (local.get $0)
     )
    )
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.add
     (local.get $0)
     (i32.const 8)
    )
   )
   (local.get $2)
  )
  (i32.store8
   (local.get $0)
   (i32.const 0)
  )
  (i32.store8 offset=1
   (local.get $0)
   (i32.const 0)
  )
 )
 (func $_GifWriteChunk (; 409 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $_fputc
   (i32.load offset=4
    (local.get $1)
   )
   (local.get $0)
  )
  (drop
   (call $_fwrite
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
    (i32.const 1)
    (i32.load offset=4
     (local.get $1)
    )
    (local.get $0)
   )
  )
  (i32.store8
   (local.get $1)
   (i32.const 0)
  )
  (i32.store8 offset=1
   (local.get $1)
   (i32.const 0)
  )
  (i32.store offset=4
   (local.get $1)
   (i32.const 0)
  )
 )
 (func $_GifGetClosestPaletteColor (; 410 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.le_s
    (local.tee $8
     (i32.shl
      (i32.const 1)
      (i32.load
       (local.get $0)
      )
     )
    )
    (local.get $6)
   )
   (block
    (if
     (i32.eqz
      (local.tee $6
       (i32.sub
        (local.get $6)
        (local.get $8)
       )
      )
     )
     (block
      (global.set $STACKTOP
       (local.get $9)
      )
      (return)
     )
    )
    (if
     (i32.ge_s
      (local.tee $0
       (i32.add
        (i32.add
         (select
          (i32.sub
           (i32.const 0)
           (local.tee $1
            (i32.sub
             (local.get $1)
             (i32.load8_u
              (i32.add
               (local.get $6)
               (i32.add
                (local.get $0)
                (i32.const 4)
               )
              )
             )
            )
           )
          )
          (local.get $1)
          (i32.lt_s
           (local.get $1)
           (i32.const 0)
          )
         )
         (select
          (i32.sub
           (i32.const 0)
           (local.tee $1
            (i32.sub
             (local.get $2)
             (i32.load8_u
              (i32.add
               (local.get $6)
               (i32.add
                (local.get $0)
                (i32.const 260)
               )
              )
             )
            )
           )
          )
          (local.get $1)
          (i32.lt_s
           (local.get $1)
           (i32.const 0)
          )
         )
        )
        (select
         (i32.sub
          (i32.const 0)
          (local.tee $0
           (i32.sub
            (local.get $3)
            (i32.load8_u
             (i32.add
              (local.get $6)
              (i32.add
               (local.get $0)
               (i32.const 516)
              )
             )
            )
           )
          )
         )
         (local.get $0)
         (i32.lt_s
          (local.get $0)
          (i32.const 0)
         )
        )
       )
      )
      (i32.load
       (local.get $5)
      )
     )
     (block
      (global.set $STACKTOP
       (local.get $9)
      )
      (return)
     )
    )
    (i32.store
     (local.get $4)
     (local.get $6)
    )
    (i32.store
     (local.get $5)
     (local.get $0)
    )
    (global.set $STACKTOP
     (local.get $9)
    )
    (return)
   )
  )
  (i32.store
   (local.get $7)
   (local.get $1)
  )
  (i32.store offset=4
   (local.get $7)
   (local.get $2)
  )
  (i32.store offset=8
   (local.get $7)
   (local.get $3)
  )
  (local.set $8
   (i32.shl
    (local.get $6)
    (i32.const 1)
   )
  )
  (if
   (i32.lt_s
    (local.tee $7
     (i32.load
      (i32.add
       (i32.shl
        (i32.load8_u
         (i32.add
          (local.get $6)
          (i32.add
           (local.get $0)
           (i32.const 772)
          )
         )
        )
        (i32.const 2)
       )
       (local.get $7)
      )
     )
    )
    (local.tee $6
     (i32.load8_u
      (i32.add
       (local.get $6)
       (i32.add
        (local.get $0)
        (i32.const 1027)
       )
      )
     )
    )
   )
   (block
    (call $_GifGetClosestPaletteColor
     (local.get $0)
     (local.get $1)
     (local.get $2)
     (local.get $3)
     (local.get $4)
     (local.get $5)
     (local.get $8)
    )
    (if
     (i32.gt_s
      (i32.load
       (local.get $5)
      )
      (i32.sub
       (local.get $6)
       (local.get $7)
      )
     )
     (call $_GifGetClosestPaletteColor
      (local.get $0)
      (local.get $1)
      (local.get $2)
      (local.get $3)
      (local.get $4)
      (local.get $5)
      (i32.or
       (local.get $8)
       (i32.const 1)
      )
     )
    )
   )
   (block
    (call $_GifGetClosestPaletteColor
     (local.get $0)
     (local.get $1)
     (local.get $2)
     (local.get $3)
     (local.get $4)
     (local.get $5)
     (i32.or
      (local.get $8)
      (i32.const 1)
     )
    )
    (if
     (i32.gt_s
      (i32.load
       (local.get $5)
      )
      (i32.sub
       (local.get $7)
       (local.get $6)
      )
     )
     (call $_GifGetClosestPaletteColor
      (local.get $0)
      (local.get $1)
      (local.get $2)
      (local.get $3)
      (local.get $4)
      (local.get $5)
      (local.get $8)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $9)
  )
 )
 (func $_GifPickChangedPixels (; 411 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.le_s
    (local.get $2)
    (i32.const 0)
   )
   (return
    (i32.const 0)
   )
  )
  (local.set $4
   (local.get $0)
  )
  (local.set $3
   (local.get $1)
  )
  (loop $while-in
   (local.set $0
    (block $__rjto$0 (result i32)
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.ne
        (local.tee $0
         (i32.load8_s
          (local.get $3)
         )
        )
        (i32.load8_s
         (local.get $4)
        )
       )
      )
      (br_if $__rjti$0
       (i32.ne
        (i32.load8_s offset=1
         (local.get $3)
        )
        (i32.load8_s offset=1
         (local.get $4)
        )
       )
      )
      (br_if $__rjti$0
       (i32.ne
        (i32.load8_s offset=2
         (local.get $4)
        )
        (i32.load8_s offset=2
         (local.get $3)
        )
       )
      )
      (br $__rjto$0
       (local.get $5)
      )
     )
     (i32.store8
      (local.get $1)
      (local.get $0)
     )
     (i32.store8 offset=1
      (local.get $1)
      (i32.load8_s offset=1
       (local.get $3)
      )
     )
     (i32.store8 offset=2
      (local.get $1)
      (i32.load8_s offset=2
       (local.get $3)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 4)
      )
     )
     (i32.add
      (local.get $5)
      (i32.const 1)
     )
    )
   )
   (local.set $4
    (i32.add
     (local.get $4)
     (i32.const 4)
    )
   )
   (local.set $3
    (i32.add
     (local.get $3)
     (i32.const 4)
    )
   )
   (if
    (i32.ne
     (local.tee $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (local.get $2)
    )
    (block
     (local.set $5
      (local.get $0)
     )
     (br $while-in)
    )
   )
  )
  (local.get $0)
 )
 (func $_GifSplitPalette (; 412 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i64)
  (local $14 i64)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i64)
  (local $20 i32)
  (local $21 i64)
  (local $22 i64)
  (if
   (i32.or
    (i32.eqz
     (local.get $1)
    )
    (i32.le_s
     (local.get $3)
     (local.get $2)
    )
   )
   (return)
  )
  (local.set $18
   (local.get $6)
  )
  (local.set $9
   (local.get $0)
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in
     (if
      (i32.ne
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
       (local.get $3)
      )
      (block
       (local.set $15
        (if (result i32)
         (i32.gt_s
          (local.get $1)
          (i32.const 0)
         )
         (block (result i32)
          (local.set $15
           (i32.const 0)
          )
          (local.set $16
           (i32.const 0)
          )
          (local.set $17
           (i32.const 255)
          )
          (local.set $11
           (i32.const 0)
          )
          (local.set $12
           (i32.const 255)
          )
          (local.set $0
           (i32.const 0)
          )
          (local.set $6
           (i32.const 255)
          )
          (loop $while-in1 (result i32)
           (local.set $0
            (select
             (local.tee $10
              (i32.load8_u
               (i32.add
                (local.get $9)
                (local.tee $20
                 (i32.shl
                  (local.get $15)
                  (i32.const 2)
                 )
                )
               )
              )
             )
             (local.get $0)
             (i32.lt_s
              (local.get $0)
              (local.get $10)
             )
            )
           )
           (local.set $6
            (select
             (local.get $10)
             (local.get $6)
             (i32.gt_s
              (local.get $6)
              (local.get $10)
             )
            )
           )
           (local.set $11
            (select
             (local.tee $10
              (i32.load8_u
               (i32.add
                (local.get $9)
                (i32.or
                 (local.get $20)
                 (i32.const 1)
                )
               )
              )
             )
             (local.get $11)
             (i32.lt_s
              (local.get $11)
              (local.get $10)
             )
            )
           )
           (local.set $12
            (select
             (local.get $10)
             (local.get $12)
             (i32.gt_s
              (local.get $12)
              (local.get $10)
             )
            )
           )
           (local.set $16
            (select
             (local.tee $10
              (i32.load8_u
               (i32.add
                (local.get $9)
                (i32.or
                 (local.get $20)
                 (i32.const 2)
                )
               )
              )
             )
             (local.get $16)
             (i32.lt_s
              (local.get $16)
              (local.get $10)
             )
            )
           )
           (local.set $17
            (select
             (local.get $10)
             (local.get $17)
             (i32.gt_s
              (local.get $17)
              (local.get $10)
             )
            )
           )
           (br_if $while-in1
            (i32.ne
             (local.tee $15
              (i32.add
               (local.get $15)
               (i32.const 1)
              )
             )
             (local.get $1)
            )
           )
           (local.get $6)
          )
         )
         (block (result i32)
          (local.set $16
           (i32.const 0)
          )
          (local.set $17
           (i32.const 255)
          )
          (local.set $11
           (i32.const 0)
          )
          (local.set $12
           (i32.const 255)
          )
          (local.set $0
           (i32.const 0)
          )
          (i32.const 255)
         )
        )
       )
       (local.set $6
        (i32.sub
         (local.get $1)
         (local.tee $10
          (i32.div_s
           (i32.mul
            (local.get $1)
            (i32.sub
             (local.get $4)
             (local.get $2)
            )
           )
           (i32.sub
            (local.get $3)
            (local.get $2)
           )
          )
         )
        )
       )
       (call $_GifPartitionByMedian
        (local.get $9)
        (i32.const 0)
        (local.get $1)
        (local.tee $0
         (select
          (i32.const 0)
          (select
           (i32.const 2)
           (i32.const 1)
           (i32.gt_s
            (local.tee $1
             (i32.sub
              (local.get $16)
              (local.get $17)
             )
            )
            (local.tee $11
             (i32.sub
              (local.get $11)
              (local.get $12)
             )
            )
           )
          )
          (i32.and
           (i32.gt_s
            (local.tee $0
             (i32.sub
              (local.get $0)
              (local.get $15)
             )
            )
            (local.get $1)
           )
           (i32.gt_s
            (local.get $0)
            (local.get $11)
           )
          )
         )
        )
        (local.get $10)
       )
       (i32.store8
        (i32.add
         (local.get $18)
         (i32.add
          (local.get $8)
          (i32.const 772)
         )
        )
        (local.get $0)
       )
       (i32.store8
        (i32.add
         (local.get $18)
         (i32.add
          (local.get $8)
          (i32.const 1027)
         )
        )
        (i32.load8_s
         (i32.add
          (local.get $9)
          (i32.or
           (local.get $0)
           (local.tee $11
            (i32.shl
             (local.get $10)
             (i32.const 2)
            )
           )
          )
         )
        )
       )
       (call $_GifSplitPalette
        (local.get $9)
        (local.get $10)
        (local.get $2)
        (local.get $4)
        (i32.sub
         (local.get $4)
         (local.get $5)
        )
        (local.tee $2
         (i32.div_s
          (local.get $5)
          (i32.const 2)
         )
        )
        (local.tee $12
         (i32.shl
          (local.get $18)
          (i32.const 1)
         )
        )
        (local.get $7)
        (local.get $8)
       )
       (br_if $__rjti$0
        (i32.or
         (i32.eqz
          (local.get $6)
         )
         (i32.ge_s
          (local.get $4)
          (local.get $3)
         )
        )
       )
       (local.set $1
        (local.get $6)
       )
       (local.set $4
        (i32.add
         (local.tee $0
          (local.get $4)
         )
         (local.get $5)
        )
       )
       (local.set $5
        (local.get $2)
       )
       (local.set $18
        (i32.or
         (local.get $12)
         (i32.const 1)
        )
       )
       (local.set $9
        (i32.add
         (local.get $9)
         (local.get $11)
        )
       )
       (local.set $2
        (local.get $0)
       )
       (br $while-in)
      )
     )
    )
    (br $__rjto$0)
   )
   (return)
  )
  (block $folding-inner0
   (if
    (local.get $7)
    (block
     (if
      (i32.eq
       (local.get $2)
       (i32.const 1)
      )
      (block
       (local.set $0
        (if (result i32)
         (i32.gt_s
          (local.get $1)
          (i32.const 0)
         )
         (block (result i32)
          (local.set $0
           (i32.const 255)
          )
          (local.set $3
           (i32.const 255)
          )
          (local.set $4
           (i32.const 0)
          )
          (local.set $5
           (i32.const 255)
          )
          (loop $while-in3
           (local.set $5
            (select
             (local.get $5)
             (local.tee $7
              (i32.load8_u
               (i32.add
                (local.get $9)
                (local.tee $6
                 (i32.shl
                  (local.get $4)
                  (i32.const 2)
                 )
                )
               )
              )
             )
             (i32.lt_u
              (local.get $5)
              (local.get $7)
             )
            )
           )
           (local.set $0
            (select
             (local.get $0)
             (local.tee $7
              (i32.load8_u
               (i32.add
                (local.get $9)
                (i32.or
                 (local.get $6)
                 (i32.const 1)
                )
               )
              )
             )
             (i32.lt_u
              (local.get $0)
              (local.get $7)
             )
            )
           )
           (local.set $3
            (select
             (local.get $3)
             (local.tee $6
              (i32.load8_u
               (i32.add
                (local.get $9)
                (i32.or
                 (local.get $6)
                 (i32.const 2)
                )
               )
              )
             )
             (i32.lt_u
              (local.get $3)
              (local.get $6)
             )
            )
           )
           (br_if $while-in3
            (i32.ne
             (local.tee $4
              (i32.add
               (local.get $4)
               (i32.const 1)
              )
             )
             (local.get $1)
            )
           )
          )
          (local.set $1
           (i32.and
            (local.get $5)
            (i32.const 255)
           )
          )
          (local.set $3
           (i32.and
            (local.get $3)
            (i32.const 255)
           )
          )
          (i32.and
           (local.get $0)
           (i32.const 255)
          )
         )
         (block (result i32)
          (local.set $1
           (i32.const -1)
          )
          (local.set $3
           (i32.const -1)
          )
          (i32.const -1)
         )
        )
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.add
          (local.get $8)
          (i32.const 4)
         )
        )
        (local.get $1)
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.add
          (local.get $8)
          (i32.const 260)
         )
        )
        (local.get $0)
       )
       (br $folding-inner0)
      )
     )
     (if
      (i32.eq
       (local.get $2)
       (i32.add
        (i32.shl
         (i32.const 1)
         (i32.load
          (local.get $8)
         )
        )
        (i32.const -1)
       )
      )
      (block
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.add
          (local.get $8)
          (i32.const 4)
         )
        )
        (if (result i32)
         (i32.gt_s
          (local.get $1)
          (i32.const 0)
         )
         (block (result i32)
          (local.set $0
           (i32.const 0)
          )
          (local.set $3
           (i32.const 0)
          )
          (local.set $4
           (i32.const 0)
          )
          (local.set $5
           (i32.const 0)
          )
          (loop $while-in5
           (local.set $0
            (select
             (local.get $0)
             (local.tee $7
              (i32.load8_u
               (i32.add
                (local.get $9)
                (local.tee $6
                 (i32.shl
                  (local.get $5)
                  (i32.const 2)
                 )
                )
               )
              )
             )
             (i32.gt_u
              (local.get $0)
              (local.get $7)
             )
            )
           )
           (local.set $3
            (select
             (local.get $3)
             (local.tee $7
              (i32.load8_u
               (i32.add
                (local.get $9)
                (i32.or
                 (local.get $6)
                 (i32.const 1)
                )
               )
              )
             )
             (i32.gt_u
              (local.get $3)
              (local.get $7)
             )
            )
           )
           (local.set $4
            (select
             (local.get $4)
             (local.tee $6
              (i32.load8_u
               (i32.add
                (local.get $9)
                (i32.or
                 (local.get $6)
                 (i32.const 2)
                )
               )
              )
             )
             (i32.gt_u
              (local.get $4)
              (local.get $6)
             )
            )
           )
           (br_if $while-in5
            (i32.ne
             (local.tee $5
              (i32.add
               (local.get $5)
               (i32.const 1)
              )
             )
             (local.get $1)
            )
           )
          )
          (local.set $1
           (i32.and
            (local.get $3)
            (i32.const 255)
           )
          )
          (local.set $3
           (i32.and
            (local.get $4)
            (i32.const 255)
           )
          )
          (i32.and
           (local.get $0)
           (i32.const 255)
          )
         )
         (block (result i32)
          (local.set $1
           (i32.const 0)
          )
          (local.set $3
           (i32.const 0)
          )
          (i32.const 0)
         )
        )
       )
       (i32.store8
        (i32.add
         (local.get $2)
         (i32.add
          (local.get $8)
          (i32.const 260)
         )
        )
        (local.get $1)
       )
       (br $folding-inner0)
      )
     )
    )
   )
   (if
    (i32.gt_s
     (local.get $1)
     (i32.const 0)
    )
    (block
     (local.set $0
      (i32.const 0)
     )
     (loop $while-in7
      (local.set $19
       (i64.add
        (local.get $19)
        (i64.extend_i32_u
         (i32.load8_u
          (i32.add
           (local.get $9)
           (local.tee $3
            (i32.shl
             (local.get $0)
             (i32.const 2)
            )
           )
          )
         )
        )
       )
      )
      (local.set $13
       (i64.add
        (local.get $13)
        (i64.extend_i32_u
         (i32.load8_u
          (i32.add
           (local.get $9)
           (i32.or
            (local.get $3)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
      (local.set $14
       (i64.add
        (local.get $14)
        (i64.extend_i32_u
         (i32.load8_u
          (i32.add
           (local.get $9)
           (i32.or
            (local.get $3)
            (i32.const 2)
           )
          )
         )
        )
       )
      )
      (br_if $while-in7
       (i32.ne
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (local.get $1)
       )
      )
     )
    )
   )
   (local.set $22
    (i64.div_u
     (i64.add
      (local.get $13)
      (local.tee $13
       (i64.extend_i32_s
        (i32.div_s
         (local.get $1)
         (i32.const 2)
        )
       )
      )
     )
     (local.tee $21
      (i64.extend_i32_s
       (local.get $1)
      )
     )
    )
   )
   (local.set $14
    (i64.div_u
     (i64.add
      (local.get $13)
      (local.get $14)
     )
     (local.get $21)
    )
   )
   (i64.store8
    (i32.add
     (local.get $2)
     (i32.add
      (local.get $8)
      (i32.const 4)
     )
    )
    (i64.div_u
     (i64.add
      (local.get $13)
      (local.get $19)
     )
     (local.get $21)
    )
   )
   (i64.store8
    (i32.add
     (local.get $2)
     (i32.add
      (local.get $8)
      (i32.const 260)
     )
    )
    (local.get $22)
   )
   (i64.store8
    (i32.add
     (local.get $2)
     (i32.add
      (local.get $8)
      (i32.const 516)
     )
    )
    (local.get $14)
   )
   (return)
  )
  (i32.store8
   (i32.add
    (local.get $2)
    (i32.add
     (local.get $8)
     (i32.const 516)
    )
   )
   (local.get $3)
  )
 )
 (func $_GifPartitionByMedian (; 413 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (if
   (i32.le_s
    (local.tee $6
     (i32.add
      (local.get $2)
      (i32.const -1)
     )
    )
    (local.get $1)
   )
   (return)
  )
  (loop $while-in
   (if
    (i32.gt_s
     (local.tee $5
      (call $_GifPartition
       (local.get $0)
       (local.get $1)
       (local.get $2)
       (local.get $3)
       (i32.add
        (local.get $1)
        (i32.div_s
         (i32.sub
          (local.get $2)
          (local.get $1)
         )
         (i32.const 2)
        )
       )
      )
     )
     (local.get $4)
    )
    (call $_GifPartitionByMedian
     (local.get $0)
     (local.get $1)
     (local.get $5)
     (local.get $3)
     (local.get $4)
    )
   )
   (br_if $while-in
    (i32.and
     (i32.lt_s
      (local.get $5)
      (local.get $4)
     )
     (i32.gt_s
      (local.get $6)
      (local.tee $1
       (i32.add
        (local.get $5)
        (i32.const 1)
       )
      )
     )
    )
   )
  )
 )
 (func $_GifPartition (; 414 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $7
   (i32.load8_s
    (i32.add
     (local.get $0)
     (i32.add
      (local.get $3)
      (i32.shl
       (local.get $4)
       (i32.const 2)
      )
     )
    )
   )
  )
  (call $_GifSwapPixels
   (local.get $0)
   (local.get $4)
   (local.tee $5
    (i32.add
     (local.get $2)
     (i32.const -1)
    )
   )
  )
  (if
   (i32.le_s
    (local.get $5)
    (local.get $1)
   )
   (block
    (call $_GifSwapPixels
     (local.get $0)
     (local.get $1)
     (local.get $5)
    )
    (return
     (local.get $1)
    )
   )
  )
  (local.set $4
   (local.get $1)
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.lt_s
     (i32.and
      (local.tee $6
       (i32.load8_s
        (i32.add
         (local.get $0)
         (i32.add
          (local.get $3)
          (i32.shl
           (local.get $4)
           (i32.const 2)
          )
         )
        )
       )
      )
      (i32.const 255)
     )
     (i32.and
      (local.get $7)
      (i32.const 255)
     )
    )
    (block
     (call $_GifSwapPixels
      (local.get $0)
      (local.get $4)
      (local.get $1)
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
    )
    (if
     (i32.eq
      (local.get $6)
      (local.get $7)
     )
     (block
      (if
       (local.get $2)
       (block
        (local.set $6
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (call $_GifSwapPixels
         (local.get $0)
         (local.get $4)
         (local.get $1)
        )
        (local.set $1
         (local.get $6)
        )
       )
      )
      (local.set $2
       (i32.xor
        (local.get $2)
        (i32.const 1)
       )
      )
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $5)
     (local.tee $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
    )
   )
  )
  (call $_GifSwapPixels
   (local.get $0)
   (local.get $1)
   (local.get $5)
  )
  (local.get $1)
 )
 (func $_GifSwapPixels (; 415 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $4
   (i32.load8_s
    (local.tee $3
     (i32.add
      (local.get $0)
      (local.tee $1
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
      )
     )
    )
   )
  )
  (local.set $6
   (i32.load8_s
    (local.tee $5
     (i32.add
      (local.get $0)
      (i32.or
       (local.get $1)
       (i32.const 1)
      )
     )
    )
   )
  )
  (local.set $8
   (i32.load8_s
    (local.tee $7
     (i32.add
      (local.get $0)
      (i32.or
       (local.get $1)
       (i32.const 2)
      )
     )
    )
   )
  )
  (local.set $9
   (i32.load8_s
    (i32.add
     (local.get $0)
     (i32.or
      (local.get $1)
      (i32.const 3)
     )
    )
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (local.tee $1
     (i32.shl
      (local.get $2)
      (i32.const 2)
     )
    )
   )
  )
  (local.set $11
   (i32.load8_s
    (local.tee $10
     (i32.add
      (local.get $0)
      (i32.or
       (local.get $1)
       (i32.const 1)
      )
     )
    )
   )
  )
  (local.set $13
   (i32.load8_s
    (local.tee $12
     (i32.add
      (local.get $0)
      (i32.or
       (local.get $1)
       (i32.const 2)
      )
     )
    )
   )
  )
  (i32.store8
   (local.get $3)
   (i32.load8_s
    (local.get $2)
   )
  )
  (i32.store8
   (local.get $5)
   (local.get $11)
  )
  (i32.store8
   (local.get $7)
   (local.get $13)
  )
  (i32.store8
   (local.get $2)
   (local.get $4)
  )
  (i32.store8
   (local.get $10)
   (local.get $6)
  )
  (i32.store8
   (local.get $12)
   (local.get $8)
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (i32.or
     (local.get $1)
     (i32.const 3)
    )
   )
   (local.get $9)
  )
 )
 (func $_GifEnd (; 416 ;) (; has Stack IR ;)
  (local $0 i32)
  (if
   (i32.eqz
    (local.tee $0
     (i32.load
      (i32.const 34072)
     )
    )
   )
   (return)
  )
  (call $_fputc
   (i32.const 59)
   (local.get $0)
  )
  (call $_fclose
   (i32.load
    (i32.const 34072)
   )
  )
  (call $_free
   (i32.load
    (i32.const 33048)
   )
  )
  (i32.store
   (i32.const 34072)
   (i32.const 0)
  )
  (i32.store
   (i32.const 33048)
   (i32.const 0)
  )
 )
 (func $_InitWindow (; 417 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $1)
   (i32.const 18472)
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 18449)
   (local.get $1)
  )
  (i32.store
   (i32.const 34076)
   (i32.const 14488)
  )
  (if
   (i32.eqz
    (call $_InitGraphicsDevice)
   )
   (block
    (global.set $STACKTOP
     (local.get $0)
    )
    (return)
   )
  )
  (call $_srand
   (call $_time
    (i32.const 0)
   )
  )
  (f64.store
   (i32.const 32856)
   (call $_glfwGetTime)
  )
  (call $_LoadDefaultFont)
  (drop
   (call $_emscripten_set_fullscreenchange_callback_on_thread
    (i32.const 0)
    (i32.const 0)
    (i32.const 1)
    (i32.const 3)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_keypress_callback_on_thread
    (i32.const 18480)
    (i32.const 0)
    (i32.const 1)
    (i32.const 4)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_click_callback_on_thread
    (i32.const 18480)
    (i32.const 0)
    (i32.const 1)
    (i32.const 5)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_touchstart_callback_on_thread
    (i32.const 18480)
    (i32.const 0)
    (i32.const 1)
    (i32.const 6)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_touchend_callback_on_thread
    (i32.const 18480)
    (i32.const 0)
    (i32.const 1)
    (i32.const 6)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_touchmove_callback_on_thread
    (i32.const 18480)
    (i32.const 0)
    (i32.const 1)
    (i32.const 6)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_touchcancel_callback_on_thread
    (i32.const 18480)
    (i32.const 0)
    (i32.const 1)
    (i32.const 6)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_gamepadconnected_callback_on_thread
    (i32.const 0)
    (i32.const 1)
    (i32.const 7)
    (i32.const 2)
   )
  )
  (drop
   (call $_emscripten_set_gamepaddisconnected_callback_on_thread
    (i32.const 0)
    (i32.const 1)
    (i32.const 7)
    (i32.const 2)
   )
  )
  (f32.store
   (i32.const 34064)
   (f32.mul
    (f32.convert_i32_s
     (i32.load
      (i32.const 33400)
     )
    )
    (f32.const 0.5)
   )
  )
  (f32.store
   (i32.const 34068)
   (f32.mul
    (f32.convert_i32_s
     (i32.load
      (i32.const 33404)
     )
    )
    (f32.const 0.5)
   )
  )
  (global.set $STACKTOP
   (local.get $0)
  )
 )
 (func $_InitGraphicsDevice (; 418 ;) (; has Stack IR ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 144)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 144)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 56)
   )
  )
  (local.set $4
   (i32.add
    (local.get $0)
    (i32.const 40)
   )
  )
  (local.set $5
   (i32.add
    (local.get $0)
    (i32.const 32)
   )
  )
  (local.set $7
   (i32.add
    (local.get $0)
    (i32.const 24)
   )
  )
  (local.set $6
   (i32.add
    (local.get $0)
    (i32.const 16)
   )
  )
  (local.set $1
   (local.get $0)
  )
  (i32.store
   (i32.const 33400)
   (i32.const 1280)
  )
  (i32.store
   (i32.const 33404)
   (i32.const 720)
  )
  (call $_MatrixIdentity
   (i32.add
    (local.get $0)
    (i32.const 72)
   )
  )
  (i64.store align=4
   (i32.const 34112)
   (i64.load offset=72 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 34120)
   (i64.load offset=80 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 34128)
   (i64.load offset=88 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 34136)
   (i64.load offset=96 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 34144)
   (i64.load offset=104 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 34152)
   (i64.load offset=112 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 34160)
   (i64.load offset=120 align=4
    (local.get $0)
   )
  )
  (i64.store align=4
   (i32.const 34168)
   (i64.load offset=128 align=4
    (local.get $0)
   )
  )
  (drop
   (call $_glfwSetErrorCallback
    (i32.const 1)
   )
  )
  (if
   (i32.eqz
    (call $_glfwInit)
   )
   (block
    (call $_TraceLog
     (i32.const 4)
     (i32.const 21792)
     (local.get $1)
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (i32.store
   (i32.const 34176)
   (i32.load
    (i32.const 33400)
   )
  )
  (i32.store
   (i32.const 34180)
   (i32.load
    (i32.const 33404)
   )
  )
  (call $_glfwDefaultWindowHints)
  (call $_glfwWindowHint
   (i32.const 131076)
   (i32.const 1)
  )
  (call $_glfwWindowHint
   (i32.const 131075)
   (i32.const 0)
  )
  (call $_glfwWindowHint
   (i32.const 131077)
   (i32.const 1)
  )
  (call $_glfwWindowHint
   (i32.const 131082)
   (i32.const 0)
  )
  (call $_glfwWindowHint
   (i32.const 139266)
   (i32.const 2)
  )
  (call $_glfwWindowHint
   (i32.const 139267)
   (i32.const 0)
  )
  (call $_glfwWindowHint
   (i32.const 139265)
   (i32.const 196610)
  )
  (call $_glfwWindowHint
   (i32.const 139275)
   (i32.const 221185)
  )
  (i32.store
   (i32.const 34056)
   (local.tee $1
    (call $_glfwCreateWindow
     (i32.load
      (i32.const 33400)
     )
     (i32.load
      (i32.const 33404)
     )
     (i32.load
      (i32.const 34076)
     )
     (i32.const 0)
     (i32.const 0)
    )
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (if
     (local.get $1)
     (block
      (i32.store
       (i32.const 34184)
       (i32.load
        (i32.const 33400)
       )
      )
      (i32.store
       (i32.const 34188)
       (i32.load
        (i32.const 33404)
       )
      )
      (local.set $1
       (i32.load
        (i32.const 34056)
       )
      )
      (br $__rjti$0)
     )
    )
    (br $__rjto$0)
   )
   (if
    (local.get $1)
    (block
     (call $_TraceLog
      (i32.const 3)
      (i32.const 21889)
      (local.get $7)
     )
     (local.set $1
      (i32.load
       (i32.const 34188)
      )
     )
     (i32.store
      (local.get $5)
      (i32.load
       (i32.const 34184)
      )
     )
     (i32.store offset=4
      (local.get $5)
      (local.get $1)
     )
     (call $_TraceLog
      (i32.const 3)
      (i32.const 21929)
      (local.get $5)
     )
     (local.set $1
      (i32.load
       (i32.const 33404)
      )
     )
     (i32.store
      (local.get $4)
      (i32.load
       (i32.const 33400)
      )
     )
     (i32.store offset=4
      (local.get $4)
      (local.get $1)
     )
     (call $_TraceLog
      (i32.const 3)
      (i32.const 21950)
      (local.get $4)
     )
     (local.set $1
      (i32.load
       (i32.const 34196)
      )
     )
     (i32.store
      (local.get $2)
      (i32.load
       (i32.const 34192)
      )
     )
     (i32.store offset=4
      (local.get $2)
      (local.get $1)
     )
     (call $_TraceLog
      (i32.const 3)
      (i32.const 21971)
      (local.get $2)
     )
     (drop
      (call $_glfwSetWindowSizeCallback
       (i32.load
        (i32.const 34056)
       )
       (i32.const 1)
      )
     )
     (drop
      (call $_glfwSetCursorEnterCallback
       (i32.load
        (i32.const 34056)
       )
       (i32.const 2)
      )
     )
     (drop
      (call $_glfwSetKeyCallback
       (i32.load
        (i32.const 34056)
       )
       (i32.const 1)
      )
     )
     (drop
      (call $_glfwSetMouseButtonCallback
       (i32.load
        (i32.const 34056)
       )
       (i32.const 1)
      )
     )
     (drop
      (call $_glfwSetCursorPosCallback
       (i32.load
        (i32.const 34056)
       )
       (i32.const 1)
      )
     )
     (drop
      (call $_glfwSetCharCallback
       (i32.load
        (i32.const 34056)
       )
       (i32.const 3)
      )
     )
     (drop
      (call $_glfwSetScrollCallback
       (i32.load
        (i32.const 34056)
       )
       (i32.const 2)
      )
     )
     (drop
      (call $_glfwSetWindowIconifyCallback
       (i32.load
        (i32.const 34056)
       )
       (i32.const 4)
      )
     )
     (drop
      (call $_glfwSetDropCallback
       (i32.load
        (i32.const 34056)
       )
       (i32.const 2)
      )
     )
     (call $_glfwMakeContextCurrent
      (i32.load
       (i32.const 34056)
      )
     )
     (i32.store
      (i32.const 34184)
      (local.tee $6
       (i32.load
        (i32.const 33400)
       )
      )
     )
     (i32.store
      (i32.const 34188)
      (local.tee $1
       (i32.load
        (i32.const 33404)
       )
      )
     )
     (call $_rlglInit
      (local.get $6)
      (local.get $1)
     )
     (call $_SetupViewport)
     (call $_rlMatrixMode
      (i32.const 5889)
     )
     (call $_rlLoadIdentity)
     (call $_rlOrtho
      (f64.const 0)
      (f64.convert_i32_s
       (i32.sub
        (i32.load
         (i32.const 34184)
        )
        (i32.load
         (i32.const 34192)
        )
       )
      )
      (f64.convert_i32_s
       (i32.sub
        (i32.load
         (i32.const 34188)
        )
        (i32.load
         (i32.const 34196)
        )
       )
      )
      (f64.const 0)
      (f64.const 0)
      (f64.const 1)
     )
     (call $_rlMatrixMode
      (i32.const 5888)
     )
     (call $_rlLoadIdentity)
     (i32.store8 offset=136
      (local.get $0)
      (i32.const -11)
     )
     (i32.store8 offset=137
      (local.get $0)
      (i32.const -11)
     )
     (i32.store8 offset=138
      (local.get $0)
      (i32.const -11)
     )
     (i32.store8 offset=139
      (local.get $0)
      (i32.const -1)
     )
     (i32.store align=1
      (local.get $2)
      (i32.load offset=136 align=1
       (local.get $0)
      )
     )
     (call $_ClearBackground
      (local.get $2)
     )
     (global.set $STACKTOP
      (local.get $3)
     )
     (return
      (i32.const 1)
     )
    )
   )
  )
  (call $_glfwTerminate)
  (call $_TraceLog
   (i32.const 4)
   (i32.const 21856)
   (local.get $6)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (i32.const 0)
 )
 (func $_LoadDefaultFont (; 419 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 64)
   )
  )
  (local.set $2
   (i32.add
    (local.get $5)
    (i32.const 44)
   )
  )
  (local.set $3
   (i32.add
    (local.get $5)
    (i32.const 4)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 24)
   )
  )
  (i32.store
   (i32.const 34104)
   (i32.const 224)
  )
  (drop
   (call $_memset
    (local.tee $8
     (call $_malloc
      (i32.const 65536)
     )
    )
    (i32.const 0)
    (i32.const 65536)
   )
  )
  (loop $while-in
   (local.set $10
    (i32.load
     (i32.add
      (i32.shl
       (local.get $4)
       (i32.const 2)
      )
      (i32.const 2000)
     )
    )
   )
   (local.set $1
    (i32.const 31)
   )
   (loop $while-in1
    (if
     (i32.and
      (i32.shl
       (i32.const 1)
       (local.get $1)
      )
      (local.get $10)
     )
     (i32.store align=1
      (i32.add
       (i32.shl
        (i32.add
         (local.get $0)
         (local.get $1)
        )
        (i32.const 2)
       )
       (local.get $8)
      )
      (i32.const -1)
     )
    )
    (local.set $7
     (i32.add
      (local.get $1)
      (i32.const -1)
     )
    )
    (if
     (local.get $1)
     (block
      (local.set $1
       (local.get $7)
      )
      (br $while-in1)
     )
    )
   )
   (local.set $4
    (select
     (i32.const 0)
     (i32.add
      (local.get $4)
      (i32.const 1)
     )
     (i32.gt_s
      (local.get $4)
      (i32.const 511)
     )
    )
   )
   (br_if $while-in
    (i32.lt_u
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 32)
      )
     )
     (i32.const 16384)
    )
   )
  )
  (call $_LoadImageEx
   (local.get $3)
   (local.get $8)
   (i32.const 128)
   (i32.const 128)
  )
  (call $_ImageFormat
   (local.get $3)
   (i32.const 2)
  )
  (call $_free
   (local.get $8)
  )
  (i64.store align=4
   (local.get $2)
   (i64.load align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load offset=8 align=4
    (local.get $3)
   )
  )
  (i32.store offset=16
   (local.get $2)
   (i32.load offset=16
    (local.get $3)
   )
  )
  (call $_LoadTextureFromImage
   (local.get $6)
   (local.get $2)
  )
  (i64.store align=4
   (i32.const 34080)
   (i64.load align=4
    (local.get $6)
   )
  )
  (i64.store align=4
   (i32.const 34088)
   (i64.load offset=8 align=4
    (local.get $6)
   )
  )
  (i32.store
   (i32.const 34096)
   (i32.load offset=16
    (local.get $6)
   )
  )
  (i64.store align=4
   (local.get $2)
   (i64.load align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load offset=8 align=4
    (local.get $3)
   )
  )
  (i32.store offset=16
   (local.get $2)
   (i32.load offset=16
    (local.get $3)
   )
  )
  (call $_UnloadImage
   (local.get $2)
  )
  (i32.store
   (i32.const 34108)
   (call $_malloc
    (i32.mul
     (local.tee $1
      (i32.load
       (i32.const 34104)
      )
     )
     (i32.const 36)
    )
   )
  )
  (if
   (i32.le_s
    (local.get $1)
    (i32.const 0)
   )
   (block
    (i32.store
     (i32.const 34100)
     (i32.trunc_f32_s
      (f32.load offset=16
       (i32.load
        (i32.const 34108)
       )
      )
     )
    )
    (i32.store
     (local.get $5)
     (i32.load
      (i32.const 34080)
     )
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 18675)
     (local.get $5)
    )
    (global.set $STACKTOP
     (local.get $9)
    )
    (return)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (local.set $4
   (i32.const 1)
  )
  (local.set $1
   (i32.const 0)
  )
  (loop $while-in3
   (i32.store
    (i32.add
     (i32.load
      (i32.const 34108)
     )
     (i32.mul
      (local.get $0)
      (i32.const 36)
     )
    )
    (i32.add
     (local.get $0)
     (i32.const 32)
    )
   )
   (f32.store offset=4
    (i32.add
     (i32.load
      (i32.const 34108)
     )
     (i32.mul
      (local.get $0)
      (i32.const 36)
     )
    )
    (f32.convert_i32_s
     (local.get $4)
    )
   )
   (f32.store offset=8
    (i32.add
     (i32.load
      (i32.const 34108)
     )
     (i32.mul
      (local.get $0)
      (i32.const 36)
     )
    )
    (f32.convert_i32_s
     (i32.add
      (i32.mul
       (local.get $1)
       (i32.const 11)
      )
      (i32.const 1)
     )
    )
   )
   (f32.store offset=12
    (i32.add
     (i32.load
      (i32.const 34108)
     )
     (i32.mul
      (local.get $0)
      (i32.const 36)
     )
    )
    (f32.convert_i32_s
     (local.tee $2
      (i32.load
       (i32.add
        (i32.shl
         (local.get $0)
         (i32.const 2)
        )
        (i32.const 4048)
       )
      )
     )
    )
   )
   (f32.store offset=16
    (i32.add
     (i32.load
      (i32.const 34108)
     )
     (i32.mul
      (local.get $0)
      (i32.const 36)
     )
    )
    (f32.const 10)
   )
   (local.set $7
    (i32.add
     (local.get $1)
     (i32.const 1)
    )
   )
   (if
    (i32.ge_s
     (local.tee $4
      (i32.add
       (local.get $4)
       (i32.trunc_f32_s
        (f32.add
         (f32.load offset=12
          (i32.add
           (local.tee $3
            (i32.load
             (i32.const 34108)
            )
           )
           (i32.mul
            (local.get $0)
            (i32.const 36)
           )
          )
         )
         (f32.const 1)
        )
       )
      )
     )
     (i32.load
      (i32.const 34084)
     )
    )
    (block
     (f32.store offset=4
      (i32.add
       (i32.mul
        (local.get $0)
        (i32.const 36)
       )
       (local.get $3)
      )
      (f32.const 1)
     )
     (f32.store offset=8
      (i32.add
       (i32.load
        (i32.const 34108)
       )
       (i32.mul
        (local.get $0)
        (i32.const 36)
       )
      )
      (f32.convert_i32_s
       (i32.add
        (i32.mul
         (local.get $7)
         (i32.const 11)
        )
        (i32.const 1)
       )
      )
     )
     (local.set $4
      (i32.add
       (local.get $2)
       (i32.const 2)
      )
     )
     (local.set $1
      (local.get $7)
     )
    )
   )
   (i32.store offset=20
    (i32.add
     (i32.load
      (i32.const 34108)
     )
     (i32.mul
      (local.get $0)
      (i32.const 36)
     )
    )
    (i32.const 0)
   )
   (i32.store offset=24
    (i32.add
     (i32.load
      (i32.const 34108)
     )
     (i32.mul
      (local.get $0)
      (i32.const 36)
     )
    )
    (i32.const 0)
   )
   (i32.store offset=28
    (i32.add
     (i32.load
      (i32.const 34108)
     )
     (i32.mul
      (local.get $0)
      (i32.const 36)
     )
    )
    (i32.const 0)
   )
   (br_if $while-in3
    (i32.lt_s
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.load
      (i32.const 34104)
     )
    )
   )
  )
  (i32.store
   (i32.const 34100)
   (i32.trunc_f32_s
    (f32.load offset=16
     (i32.load
      (i32.const 34108)
     )
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.load
    (i32.const 34080)
   )
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 18675)
   (local.get $5)
  )
  (global.set $STACKTOP
   (local.get $9)
  )
 )
 (func $_EmscriptenFullscreenChangeCallback (; 420 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (local.set $2
   (i32.add
    (local.get $0)
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.load offset=264
    (local.get $1)
   )
  )
  (local.set $5
   (i32.load offset=268
    (local.get $1)
   )
  )
  (local.set $6
   (i32.load offset=272
    (local.get $1)
   )
  )
  (local.set $7
   (i32.load offset=276
    (local.get $1)
   )
  )
  (if
   (i32.load
    (local.get $1)
   )
   (block
    (i32.store
     (local.get $0)
     (local.get $4)
    )
    (i32.store offset=4
     (local.get $0)
     (local.get $5)
    )
    (i32.store offset=8
     (local.get $0)
     (local.get $6)
    )
    (i32.store offset=12
     (local.get $0)
     (local.get $7)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 18539)
     (local.get $0)
    )
   )
   (block
    (i32.store
     (local.get $2)
     (local.get $4)
    )
    (i32.store offset=4
     (local.get $2)
     (local.get $5)
    )
    (i32.store offset=8
     (local.get $2)
     (local.get $6)
    )
    (i32.store offset=12
     (local.get $2)
     (local.get $7)
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 18608)
     (local.get $2)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (i32.const 0)
 )
 (func $_EmscriptenKeyboardCallback (; 421 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i32.ne
    (local.get $0)
    (i32.const 1)
   )
   (return
    (i32.const 0)
   )
  )
  (if
   (call $_strcmp
    (i32.add
     (local.get $1)
     (i32.const 32)
    )
    (i32.const 18532)
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $_emscripten_exit_pointerlock)
  )
  (i32.const 0)
 )
 (func $_EmscriptenMouseCallback (; 422 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 272)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 272)
   )
  )
  (if
   (i32.or
    (i32.eqz
     (i32.load8_s
      (i32.const 34849)
     )
    )
    (i32.ne
     (local.get $0)
     (i32.const 4)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $2)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (drop
   (call $_emscripten_get_pointerlock_status
    (local.get $1)
   )
  )
  (if
   (i32.load
    (local.get $1)
   )
   (block
    (drop
     (call $_emscripten_exit_pointerlock)
    )
    (drop
     (call $_emscripten_get_pointerlock_status
      (local.get $1)
     )
    )
   )
   (drop
    (call $_emscripten_request_pointerlock
     (i32.const 0)
     (i32.const 1)
    )
   )
  )
  (i32.store8
   (i32.const 34849)
   (i32.const 0)
  )
  (global.set $STACKTOP
   (local.get $2)
  )
  (i32.const 0)
 )
 (func $_EmscriptenTouchCallback (; 423 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 f32)
  (local $6 i32)
  (local $7 f32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 112)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 112)
   )
  )
  (local.set $3
   (i32.add
    (local.get $2)
    (i32.const 56)
   )
  )
  (block $__rjto$0
   (i32.store
    (local.get $2)
    (block $__rjti$0 (result i32)
     (block $switch-case1
      (block $switch-case0
       (block $switch-case
        (br_table $switch-case $switch-case0 $switch-case1 $__rjto$0
         (i32.sub
          (local.get $0)
          (i32.const 22)
         )
        )
       )
       (br $__rjti$0
        (i32.const 1)
       )
      )
      (br $__rjti$0
       (i32.const 0)
      )
     )
     (i32.const 2)
    )
   )
  )
  (i32.store offset=4
   (local.get $2)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store offset=8
   (local.get $2)
   (i32.load offset=20
    (local.get $1)
   )
  )
  (i32.store offset=12
   (local.get $2)
   (i32.load offset=72
    (local.get $1)
   )
  )
  (local.set $4
   (f32.convert_i32_s
    (i32.load offset=60
     (local.get $1)
    )
   )
  )
  (f32.store offset=24
   (local.get $2)
   (f32.convert_i32_s
    (i32.load offset=56
     (local.get $1)
    )
   )
  )
  (f32.store offset=28
   (local.get $2)
   (local.get $4)
  )
  (local.set $5
   (f32.convert_i32_s
    (i32.load offset=112
     (local.get $1)
    )
   )
  )
  (f32.store offset=32
   (local.get $2)
   (f32.convert_i32_s
    (i32.load offset=108
     (local.get $1)
    )
   )
  )
  (f32.store offset=36
   (local.get $2)
   (local.get $5)
  )
  (f32.store offset=24
   (local.get $2)
   (f32.div
    (f32.load offset=24
     (local.get $2)
    )
    (local.tee $7
     (f32.convert_i32_s
      (i32.load
       (i32.const 33400)
      )
     )
    )
   )
  )
  (f32.store offset=28
   (local.get $2)
   (f32.div
    (local.get $4)
    (local.tee $4
     (f32.convert_i32_s
      (i32.load
       (i32.const 33404)
      )
     )
    )
   )
  )
  (f32.store offset=32
   (local.get $2)
   (f32.div
    (f32.load offset=32
     (local.get $2)
    )
    (local.get $7)
   )
  )
  (f32.store offset=36
   (local.get $2)
   (f32.div
    (local.get $5)
    (local.get $4)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.get $2)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $2)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $2)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $2)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $2)
   )
  )
  (call $_ProcessGestureEvent
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (i32.const 1)
 )
 (func $_EmscriptenGamepadCallback (; 424 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i32.load
    (i32.add
     (local.get $1)
     (i32.const 1296)
    )
   )
   (if
    (i32.lt_s
     (i32.load
      (i32.add
       (local.get $1)
       (i32.const 1300)
      )
     )
     (i32.const 4)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (i32.const 0)
 )
 (func $_LoadImageEx (; 425 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $6
   (call $_malloc
    (local.tee $4
     (i32.mul
      (local.get $3)
      (i32.shl
       (local.get $2)
       (i32.const 2)
      )
     )
    )
   )
  )
  (if
   (i32.gt_s
    (local.get $4)
    (i32.const 0)
   )
   (block
    (local.set $7
     (i32.shr_u
      (i32.add
       (local.get $4)
       (i32.const -1)
      )
      (i32.const 2)
     )
    )
    (local.set $4
     (i32.const 0)
    )
    (loop $while-in
     (i32.store8
      (i32.add
       (local.get $5)
       (local.get $6)
      )
      (i32.load8_s
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
        (local.get $1)
       )
      )
     )
     (i32.store8
      (i32.add
       (i32.or
        (local.get $5)
        (i32.const 1)
       )
       (local.get $6)
      )
      (i32.load8_s offset=1
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
        (local.get $1)
       )
      )
     )
     (i32.store8
      (i32.add
       (i32.or
        (local.get $5)
        (i32.const 2)
       )
       (local.get $6)
      )
      (i32.load8_s offset=2
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
        (local.get $1)
       )
      )
     )
     (i32.store8
      (i32.add
       (i32.or
        (local.get $5)
        (i32.const 3)
       )
       (local.get $6)
      )
      (i32.load8_s offset=3
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
        (local.get $1)
       )
      )
     )
     (local.set $8
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.set $5
      (i32.add
       (local.get $5)
       (i32.const 4)
      )
     )
     (if
      (i32.ne
       (local.get $4)
       (local.get $7)
      )
      (block
       (local.set $4
        (local.get $8)
       )
       (br $while-in)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $0)
   (local.get $6)
  )
  (i32.store offset=4
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=8
   (local.get $0)
   (local.get $3)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 1)
  )
  (i32.store offset=16
   (local.get $0)
   (i32.const 7)
  )
 )
 (func $_ImageFormat (; 426 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (block $folding-inner0
   (br_if $folding-inner0
    (i32.eqz
     (local.get $1)
    )
   )
   (br_if $folding-inner0
    (i32.eq
     (local.get $1)
     (local.tee $4
      (i32.load offset=16
       (local.get $0)
      )
     )
    )
   )
   (local.set $3
    (local.get $2)
   )
   (if
    (i32.eqz
     (i32.and
      (i32.lt_s
       (local.get $4)
       (i32.const 11)
      )
      (i32.lt_s
       (local.get $1)
       (i32.const 11)
      )
     )
    )
    (block
     (call $_TraceLog
      (i32.const 4)
      (i32.const 18720)
      (local.get $3)
     )
     (br $folding-inner0)
    )
   )
   (i64.store align=4
    (local.tee $2
     (i32.add
      (local.get $2)
      (i32.const 4)
     )
    )
    (i64.load align=4
     (local.get $0)
    )
   )
   (i64.store offset=8 align=4
    (local.get $2)
    (i64.load offset=8 align=4
     (local.get $0)
    )
   )
   (i32.store offset=16
    (local.get $2)
    (i32.load offset=16
     (local.get $0)
    )
   )
   (local.set $3
    (call $_GetImageDataNormalized
     (local.get $2)
    )
   )
   (call $_free
    (i32.load
     (local.get $0)
    )
   )
   (i32.store
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=16
    (local.get $0)
    (local.get $1)
   )
   (block $do-once
    (block $switch-case26
     (block $switch-case23
      (block $switch-case20
       (block $switch-case17
        (block $switch-case14
         (block $switch-case11
          (block $switch-case8
           (block $switch-case5
            (block $switch-case2
             (block $switch-case
              (br_table $switch-case $switch-case2 $switch-case5 $switch-case8 $switch-case11 $switch-case14 $switch-case17 $switch-case20 $switch-case23 $switch-case26 $do-once
               (i32.sub
                (local.get $1)
                (i32.const 1)
               )
              )
             )
             (i32.store
              (local.get $0)
              (call $_malloc
               (i32.mul
                (local.tee $1
                 (i32.load offset=4
                  (local.get $0)
                 )
                )
                (local.tee $2
                 (i32.load offset=8
                  (local.get $0)
                 )
                )
               )
              )
             )
             (if
              (i32.gt_s
               (i32.mul
                (local.get $1)
                (local.get $2)
               )
               (i32.const 0)
              )
              (block
               (local.set $1
                (i32.const 0)
               )
               (loop $while-in
                (i32.store8
                 (i32.add
                  (local.get $1)
                  (i32.load
                   (local.get $0)
                  )
                 )
                 (i32.trunc_f32_s
                  (f32.mul
                   (f32.add
                    (f32.add
                     (f32.mul
                      (f32.load
                       (i32.add
                        (i32.shl
                         (local.get $1)
                         (i32.const 4)
                        )
                        (local.get $3)
                       )
                      )
                      (f32.const 0.29899999499320984)
                     )
                     (f32.mul
                      (f32.load offset=4
                       (i32.add
                        (i32.shl
                         (local.get $1)
                         (i32.const 4)
                        )
                        (local.get $3)
                       )
                      )
                      (f32.const 0.5870000123977661)
                     )
                    )
                    (f32.mul
                     (f32.load offset=8
                      (i32.add
                       (i32.shl
                        (local.get $1)
                        (i32.const 4)
                       )
                       (local.get $3)
                      )
                     )
                     (f32.const 0.11400000005960464)
                    )
                   )
                   (f32.const 255)
                  )
                 )
                )
                (br_if $while-in
                 (i32.lt_s
                  (local.tee $1
                   (i32.add
                    (local.get $1)
                    (i32.const 1)
                   )
                  )
                  (i32.mul
                   (i32.load offset=4
                    (local.get $0)
                   )
                   (i32.load offset=8
                    (local.get $0)
                   )
                  )
                 )
                )
               )
              )
             )
             (br $do-once)
            )
            (i32.store
             (local.get $0)
             (call $_malloc
              (i32.mul
               (local.tee $1
                (i32.load offset=8
                 (local.get $0)
                )
               )
               (i32.shl
                (i32.load offset=4
                 (local.get $0)
                )
                (i32.const 1)
               )
              )
             )
            )
            (if
             (i32.gt_s
              (i32.mul
               (local.get $1)
               (i32.shl
                (i32.load offset=4
                 (local.get $0)
                )
                (i32.const 1)
               )
              )
              (i32.const 0)
             )
             (block
              (local.set $2
               (i32.const 0)
              )
              (local.set $1
               (i32.const 0)
              )
              (loop $while-in1
               (i32.store8
                (i32.add
                 (local.get $2)
                 (i32.load
                  (local.get $0)
                 )
                )
                (i32.trunc_f32_s
                 (f32.mul
                  (f32.add
                   (f32.add
                    (f32.mul
                     (f32.load
                      (i32.add
                       (i32.shl
                        (local.get $1)
                        (i32.const 4)
                       )
                       (local.get $3)
                      )
                     )
                     (f32.const 0.29899999499320984)
                    )
                    (f32.mul
                     (f32.load offset=4
                      (i32.add
                       (i32.shl
                        (local.get $1)
                        (i32.const 4)
                       )
                       (local.get $3)
                      )
                     )
                     (f32.const 0.5870000123977661)
                    )
                   )
                   (f32.mul
                    (f32.load offset=8
                     (i32.add
                      (i32.shl
                       (local.get $1)
                       (i32.const 4)
                      )
                      (local.get $3)
                     )
                    )
                    (f32.const 0.11400000005960464)
                   )
                  )
                  (f32.const 255)
                 )
                )
               )
               (i32.store8
                (i32.add
                 (i32.load
                  (local.get $0)
                 )
                 (i32.or
                  (local.get $2)
                  (i32.const 1)
                 )
                )
                (i32.trunc_f32_s
                 (f32.mul
                  (f32.load offset=12
                   (i32.add
                    (i32.shl
                     (local.get $1)
                     (i32.const 4)
                    )
                    (local.get $3)
                   )
                  )
                  (f32.const 255)
                 )
                )
               )
               (local.set $1
                (i32.add
                 (local.get $1)
                 (i32.const 1)
                )
               )
               (br_if $while-in1
                (i32.lt_s
                 (local.tee $2
                  (i32.add
                   (local.get $2)
                   (i32.const 2)
                  )
                 )
                 (i32.mul
                  (i32.load offset=8
                   (local.get $0)
                  )
                  (i32.shl
                   (i32.load offset=4
                    (local.get $0)
                   )
                   (i32.const 1)
                  )
                 )
                )
               )
              )
             )
            )
            (br $do-once)
           )
           (i32.store
            (local.get $0)
            (call $_malloc
             (i32.mul
              (local.tee $1
               (i32.load offset=8
                (local.get $0)
               )
              )
              (i32.shl
               (i32.load offset=4
                (local.get $0)
               )
               (i32.const 1)
              )
             )
            )
           )
           (if
            (i32.gt_s
             (i32.mul
              (local.get $1)
              (i32.load offset=4
               (local.get $0)
              )
             )
             (i32.const 0)
            )
            (block
             (local.set $1
              (i32.const 0)
             )
             (loop $while-in4
              (local.set $2
               (i32.and
                (i32.trunc_f32_s
                 (f32.demote_f64
                  (call $_llvm_round_f32
                   (f64.promote_f32
                    (f32.mul
                     (f32.load
                      (i32.add
                       (i32.shl
                        (local.get $1)
                        (i32.const 4)
                       )
                       (local.get $3)
                      )
                     )
                     (f32.const 31)
                    )
                   )
                  )
                 )
                )
                (i32.const 255)
               )
              )
              (local.set $4
               (i32.and
                (i32.trunc_f32_s
                 (f32.demote_f64
                  (call $_llvm_round_f32
                   (f64.promote_f32
                    (f32.mul
                     (f32.load offset=4
                      (i32.add
                       (i32.shl
                        (local.get $1)
                        (i32.const 4)
                       )
                       (local.get $3)
                      )
                     )
                     (f32.const 63)
                    )
                   )
                  )
                 )
                )
                (i32.const 255)
               )
              )
              (local.set $6
               (i32.and
                (i32.trunc_f32_s
                 (f32.demote_f64
                  (call $_llvm_round_f32
                   (f64.promote_f32
                    (f32.mul
                     (f32.load offset=8
                      (i32.add
                       (i32.shl
                        (local.get $1)
                        (i32.const 4)
                       )
                       (local.get $3)
                      )
                     )
                     (f32.const 31)
                    )
                   )
                  )
                 )
                )
                (i32.const 255)
               )
              )
              (i32.store16
               (i32.add
                (i32.load
                 (local.get $0)
                )
                (i32.shl
                 (local.get $1)
                 (i32.const 1)
                )
               )
               (i32.or
                (i32.or
                 (i32.shl
                  (local.get $2)
                  (i32.const 11)
                 )
                 (i32.shl
                  (local.get $4)
                  (i32.const 5)
                 )
                )
                (local.get $6)
               )
              )
              (br_if $while-in4
               (i32.lt_s
                (local.tee $1
                 (i32.add
                  (local.get $1)
                  (i32.const 1)
                 )
                )
                (i32.mul
                 (i32.load offset=4
                  (local.get $0)
                 )
                 (i32.load offset=8
                  (local.get $0)
                 )
                )
               )
              )
             )
            )
           )
           (br $do-once)
          )
          (i32.store
           (local.get $0)
           (call $_malloc
            (i32.mul
             (local.tee $1
              (i32.load offset=8
               (local.get $0)
              )
             )
             (i32.mul
              (i32.load offset=4
               (local.get $0)
              )
              (i32.const 3)
             )
            )
           )
          )
          (if
           (i32.gt_s
            (i32.mul
             (local.get $1)
             (i32.mul
              (i32.load offset=4
               (local.get $0)
              )
              (i32.const 3)
             )
            )
            (i32.const 0)
           )
           (block
            (local.set $1
             (i32.const 0)
            )
            (local.set $2
             (i32.const 0)
            )
            (loop $while-in7
             (i32.store8
              (i32.add
               (local.get $2)
               (i32.load
                (local.get $0)
               )
              )
              (i32.trunc_f32_s
               (f32.mul
                (f32.load
                 (i32.add
                  (i32.shl
                   (local.get $1)
                   (i32.const 4)
                  )
                  (local.get $3)
                 )
                )
                (f32.const 255)
               )
              )
             )
             (i32.store8
              (i32.add
               (i32.load
                (local.get $0)
               )
               (i32.add
                (local.get $2)
                (i32.const 1)
               )
              )
              (i32.trunc_f32_s
               (f32.mul
                (f32.load offset=4
                 (i32.add
                  (i32.shl
                   (local.get $1)
                   (i32.const 4)
                  )
                  (local.get $3)
                 )
                )
                (f32.const 255)
               )
              )
             )
             (i32.store8
              (i32.add
               (i32.load
                (local.get $0)
               )
               (i32.add
                (local.get $2)
                (i32.const 2)
               )
              )
              (i32.trunc_f32_s
               (f32.mul
                (f32.load offset=8
                 (i32.add
                  (i32.shl
                   (local.get $1)
                   (i32.const 4)
                  )
                  (local.get $3)
                 )
                )
                (f32.const 255)
               )
              )
             )
             (local.set $1
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (br_if $while-in7
              (i32.lt_s
               (local.tee $2
                (i32.add
                 (local.get $2)
                 (i32.const 3)
                )
               )
               (i32.mul
                (i32.load offset=8
                 (local.get $0)
                )
                (i32.mul
                 (i32.load offset=4
                  (local.get $0)
                 )
                 (i32.const 3)
                )
               )
              )
             )
            )
           )
          )
          (br $do-once)
         )
         (i32.store
          (local.get $0)
          (call $_malloc
           (i32.mul
            (local.tee $1
             (i32.load offset=8
              (local.get $0)
             )
            )
            (i32.shl
             (i32.load offset=4
              (local.get $0)
             )
             (i32.const 1)
            )
           )
          )
         )
         (if
          (i32.gt_s
           (i32.mul
            (local.get $1)
            (i32.load offset=4
             (local.get $0)
            )
           )
           (i32.const 0)
          )
          (block
           (local.set $1
            (i32.const 0)
           )
           (loop $while-in10
            (local.set $2
             (i32.and
              (i32.trunc_f32_s
               (f32.demote_f64
                (call $_llvm_round_f32
                 (f64.promote_f32
                  (f32.mul
                   (f32.load
                    (i32.add
                     (i32.shl
                      (local.get $1)
                      (i32.const 4)
                     )
                     (local.get $3)
                    )
                   )
                   (f32.const 31)
                  )
                 )
                )
               )
              )
              (i32.const 255)
             )
            )
            (local.set $4
             (i32.and
              (i32.trunc_f32_s
               (f32.demote_f64
                (call $_llvm_round_f32
                 (f64.promote_f32
                  (f32.mul
                   (f32.load offset=4
                    (i32.add
                     (i32.shl
                      (local.get $1)
                      (i32.const 4)
                     )
                     (local.get $3)
                    )
                   )
                   (f32.const 31)
                  )
                 )
                )
               )
              )
              (i32.const 255)
             )
            )
            (local.set $6
             (i32.and
              (i32.trunc_f32_s
               (f32.demote_f64
                (call $_llvm_round_f32
                 (f64.promote_f32
                  (f32.mul
                   (f32.load offset=8
                    (i32.add
                     (i32.shl
                      (local.get $1)
                      (i32.const 4)
                     )
                     (local.get $3)
                    )
                   )
                   (f32.const 31)
                  )
                 )
                )
               )
              )
              (i32.const 255)
             )
            )
            (i32.store16
             (i32.add
              (i32.load
               (local.get $0)
              )
              (i32.shl
               (local.get $1)
               (i32.const 1)
              )
             )
             (i32.or
              (i32.or
               (i32.or
                (i32.shl
                 (local.get $2)
                 (i32.const 11)
                )
                (f32.gt
                 (f32.load offset=12
                  (i32.add
                   (i32.shl
                    (local.get $1)
                    (i32.const 4)
                   )
                   (local.get $3)
                  )
                 )
                 (f32.const 0.19607843458652496)
                )
               )
               (i32.shl
                (local.get $4)
                (i32.const 6)
               )
              )
              (i32.shl
               (local.get $6)
               (i32.const 1)
              )
             )
            )
            (br_if $while-in10
             (i32.lt_s
              (local.tee $1
               (i32.add
                (local.get $1)
                (i32.const 1)
               )
              )
              (i32.mul
               (i32.load offset=4
                (local.get $0)
               )
               (i32.load offset=8
                (local.get $0)
               )
              )
             )
            )
           )
          )
         )
         (br $do-once)
        )
        (i32.store
         (local.get $0)
         (call $_malloc
          (i32.mul
           (local.tee $1
            (i32.load offset=8
             (local.get $0)
            )
           )
           (i32.shl
            (i32.load offset=4
             (local.get $0)
            )
            (i32.const 1)
           )
          )
         )
        )
        (if
         (i32.gt_s
          (i32.mul
           (local.get $1)
           (i32.load offset=4
            (local.get $0)
           )
          )
          (i32.const 0)
         )
         (block
          (local.set $1
           (i32.const 0)
          )
          (loop $while-in13
           (local.set $2
            (i32.and
             (i32.trunc_f32_s
              (f32.demote_f64
               (call $_llvm_round_f32
                (f64.promote_f32
                 (f32.mul
                  (f32.load
                   (i32.add
                    (i32.shl
                     (local.get $1)
                     (i32.const 4)
                    )
                    (local.get $3)
                   )
                  )
                  (f32.const 15)
                 )
                )
               )
              )
             )
             (i32.const 255)
            )
           )
           (local.set $4
            (i32.and
             (i32.trunc_f32_s
              (f32.demote_f64
               (call $_llvm_round_f32
                (f64.promote_f32
                 (f32.mul
                  (f32.load offset=4
                   (i32.add
                    (i32.shl
                     (local.get $1)
                     (i32.const 4)
                    )
                    (local.get $3)
                   )
                  )
                  (f32.const 15)
                 )
                )
               )
              )
             )
             (i32.const 255)
            )
           )
           (local.set $6
            (i32.and
             (i32.trunc_f32_s
              (f32.demote_f64
               (call $_llvm_round_f32
                (f64.promote_f32
                 (f32.mul
                  (f32.load offset=8
                   (i32.add
                    (i32.shl
                     (local.get $1)
                     (i32.const 4)
                    )
                    (local.get $3)
                   )
                  )
                  (f32.const 15)
                 )
                )
               )
              )
             )
             (i32.const 255)
            )
           )
           (local.set $7
            (i32.and
             (i32.trunc_f32_s
              (f32.demote_f64
               (call $_llvm_round_f32
                (f64.promote_f32
                 (f32.mul
                  (f32.load offset=12
                   (i32.add
                    (i32.shl
                     (local.get $1)
                     (i32.const 4)
                    )
                    (local.get $3)
                   )
                  )
                  (f32.const 15)
                 )
                )
               )
              )
             )
             (i32.const 255)
            )
           )
           (i32.store16
            (i32.add
             (i32.load
              (local.get $0)
             )
             (i32.shl
              (local.get $1)
              (i32.const 1)
             )
            )
            (i32.or
             (i32.or
              (i32.or
               (i32.shl
                (local.get $2)
                (i32.const 12)
               )
               (i32.shl
                (local.get $4)
                (i32.const 8)
               )
              )
              (i32.shl
               (local.get $6)
               (i32.const 4)
              )
             )
             (local.get $7)
            )
           )
           (br_if $while-in13
            (i32.lt_s
             (local.tee $1
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (i32.mul
              (i32.load offset=4
               (local.get $0)
              )
              (i32.load offset=8
               (local.get $0)
              )
             )
            )
           )
          )
         )
        )
        (br $do-once)
       )
       (i32.store
        (local.get $0)
        (call $_malloc
         (i32.mul
          (local.tee $1
           (i32.load offset=8
            (local.get $0)
           )
          )
          (i32.shl
           (i32.load offset=4
            (local.get $0)
           )
           (i32.const 2)
          )
         )
        )
       )
       (if
        (i32.gt_s
         (i32.mul
          (local.get $1)
          (i32.shl
           (i32.load offset=4
            (local.get $0)
           )
           (i32.const 2)
          )
         )
         (i32.const 0)
        )
        (block
         (local.set $1
          (i32.const 0)
         )
         (local.set $2
          (i32.const 0)
         )
         (loop $while-in16
          (i32.store8
           (i32.add
            (local.get $2)
            (i32.load
             (local.get $0)
            )
           )
           (i32.trunc_f32_s
            (f32.mul
             (f32.load
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $3)
              )
             )
             (f32.const 255)
            )
           )
          )
          (i32.store8
           (i32.add
            (i32.load
             (local.get $0)
            )
            (i32.or
             (local.get $2)
             (i32.const 1)
            )
           )
           (i32.trunc_f32_s
            (f32.mul
             (f32.load offset=4
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $3)
              )
             )
             (f32.const 255)
            )
           )
          )
          (i32.store8
           (i32.add
            (i32.load
             (local.get $0)
            )
            (i32.or
             (local.get $2)
             (i32.const 2)
            )
           )
           (i32.trunc_f32_s
            (f32.mul
             (f32.load offset=8
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $3)
              )
             )
             (f32.const 255)
            )
           )
          )
          (i32.store8
           (i32.add
            (i32.load
             (local.get $0)
            )
            (i32.or
             (local.get $2)
             (i32.const 3)
            )
           )
           (i32.trunc_f32_s
            (f32.mul
             (f32.load offset=12
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $3)
              )
             )
             (f32.const 255)
            )
           )
          )
          (local.set $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
          (br_if $while-in16
           (i32.lt_s
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const 4)
             )
            )
            (i32.mul
             (i32.load offset=8
              (local.get $0)
             )
             (i32.shl
              (i32.load offset=4
               (local.get $0)
              )
              (i32.const 2)
             )
            )
           )
          )
         )
        )
       )
       (br $do-once)
      )
      (i32.store
       (local.get $0)
       (call $_malloc
        (i32.mul
         (local.tee $1
          (i32.load offset=8
           (local.get $0)
          )
         )
         (i32.shl
          (i32.load offset=4
           (local.get $0)
          )
          (i32.const 2)
         )
        )
       )
      )
      (if
       (i32.gt_s
        (i32.mul
         (local.get $1)
         (i32.load offset=4
          (local.get $0)
         )
        )
        (i32.const 0)
       )
       (block
        (local.set $1
         (i32.const 0)
        )
        (loop $while-in19
         (f32.store
          (i32.add
           (i32.load
            (local.get $0)
           )
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
          )
          (f32.add
           (f32.add
            (f32.mul
             (f32.load
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $3)
              )
             )
             (f32.const 0.29899999499320984)
            )
            (f32.mul
             (f32.load offset=4
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $3)
              )
             )
             (f32.const 0.5870000123977661)
            )
           )
           (f32.mul
            (f32.load offset=8
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 4)
              )
              (local.get $3)
             )
            )
            (f32.const 0.11400000005960464)
           )
          )
         )
         (br_if $while-in19
          (i32.lt_s
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (i32.mul
            (i32.load offset=4
             (local.get $0)
            )
            (i32.load offset=8
             (local.get $0)
            )
           )
          )
         )
        )
       )
      )
      (br $do-once)
     )
     (i32.store
      (local.get $0)
      (call $_malloc
       (i32.mul
        (local.tee $1
         (i32.load offset=8
          (local.get $0)
         )
        )
        (i32.mul
         (i32.load offset=4
          (local.get $0)
         )
         (i32.const 12)
        )
       )
      )
     )
     (if
      (i32.gt_s
       (i32.mul
        (local.get $1)
        (i32.mul
         (i32.load offset=4
          (local.get $0)
         )
         (i32.const 3)
        )
       )
       (i32.const 0)
      )
      (block
       (local.set $1
        (i32.const 0)
       )
       (local.set $2
        (i32.const 0)
       )
       (loop $while-in22
        (i32.store
         (i32.add
          (i32.load
           (local.get $0)
          )
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
         )
         (i32.load
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 4)
           )
           (local.get $3)
          )
         )
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $0)
          )
          (i32.shl
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
           (i32.const 2)
          )
         )
         (i32.load offset=4
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 4)
           )
           (local.get $3)
          )
         )
        )
        (i32.store
         (i32.add
          (i32.load
           (local.get $0)
          )
          (i32.shl
           (i32.add
            (local.get $2)
            (i32.const 2)
           )
           (i32.const 2)
          )
         )
         (i32.load offset=8
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 4)
           )
           (local.get $3)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (br_if $while-in22
         (i32.lt_s
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const 3)
           )
          )
          (i32.mul
           (i32.load offset=8
            (local.get $0)
           )
           (i32.mul
            (i32.load offset=4
             (local.get $0)
            )
            (i32.const 3)
           )
          )
         )
        )
       )
      )
     )
     (br $do-once)
    )
    (i32.store
     (local.get $0)
     (call $_malloc
      (i32.mul
       (local.tee $1
        (i32.load offset=8
         (local.get $0)
        )
       )
       (i32.shl
        (i32.load offset=4
         (local.get $0)
        )
        (i32.const 4)
       )
      )
     )
    )
    (if
     (i32.gt_s
      (i32.mul
       (local.get $1)
       (i32.shl
        (i32.load offset=4
         (local.get $0)
        )
        (i32.const 2)
       )
      )
      (i32.const 0)
     )
     (block
      (local.set $1
       (i32.const 0)
      )
      (local.set $2
       (i32.const 0)
      )
      (loop $while-in25
       (i32.store
        (i32.add
         (i32.load
          (local.get $0)
         )
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
        )
        (i32.load
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 4)
          )
          (local.get $3)
         )
        )
       )
       (i32.store
        (i32.add
         (i32.load
          (local.get $0)
         )
         (i32.shl
          (i32.or
           (local.get $1)
           (i32.const 1)
          )
          (i32.const 2)
         )
        )
        (i32.load offset=4
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 4)
          )
          (local.get $3)
         )
        )
       )
       (i32.store
        (i32.add
         (i32.load
          (local.get $0)
         )
         (i32.shl
          (i32.or
           (local.get $1)
           (i32.const 2)
          )
          (i32.const 2)
         )
        )
        (i32.load offset=8
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 4)
          )
          (local.get $3)
         )
        )
       )
       (i32.store
        (i32.add
         (i32.load
          (local.get $0)
         )
         (i32.shl
          (i32.or
           (local.get $1)
           (i32.const 3)
          )
          (i32.const 2)
         )
        )
        (i32.load offset=12
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 4)
          )
          (local.get $3)
         )
        )
       )
       (local.set $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (br_if $while-in25
        (i32.lt_s
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
         )
         (i32.mul
          (i32.load offset=8
           (local.get $0)
          )
          (i32.shl
           (i32.load offset=4
            (local.get $0)
           )
           (i32.const 2)
          )
         )
        )
       )
      )
     )
    )
   )
   (call $_free
    (local.get $3)
   )
   (br_if $folding-inner0
    (i32.le_s
     (i32.load offset=12
      (local.get $0)
     )
     (i32.const 1)
    )
   )
   (i32.store offset=12
    (local.get $0)
    (i32.const 1)
   )
   (br_if $folding-inner0
    (i32.eqz
     (i32.load
      (local.get $0)
     )
    )
   )
   (call $_ImageMipmaps
    (local.get $0)
   )
   (global.set $STACKTOP
    (local.get $5)
   )
   (return)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_LoadTextureFromImage (; 427 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (i32.store
   (local.get $0)
   (call $_rlLoadTexture
    (i32.load
     (local.get $1)
    )
    (local.tee $2
     (i32.load offset=4
      (local.get $1)
     )
    )
    (local.tee $3
     (i32.load offset=8
      (local.get $1)
     )
    )
    (local.tee $4
     (i32.load offset=16
      (local.get $1)
     )
    )
    (local.tee $1
     (i32.load offset=12
      (local.get $1)
     )
    )
   )
  )
  (i32.store offset=4
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=8
   (local.get $0)
   (local.get $3)
  )
  (i32.store offset=12
   (local.get $0)
   (local.get $1)
  )
  (i32.store offset=16
   (local.get $0)
   (local.get $4)
  )
 )
 (func $_UnloadImage (; 428 ;) (; has Stack IR ;) (param $0 i32)
  (if
   (i32.eqz
    (local.tee $0
     (i32.load
      (local.get $0)
     )
    )
   )
   (return)
  )
  (call $_free
   (local.get $0)
  )
 )
 (func $_GetImageDataNormalized (; 429 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $2
   (call $_malloc
    (i32.shl
     (local.tee $7
      (i32.mul
       (i32.load offset=4
        (local.get $0)
       )
       (i32.load offset=8
        (local.get $0)
       )
      )
     )
     (i32.const 4)
    )
   )
  )
  (if
   (i32.gt_s
    (local.tee $8
     (i32.load offset=16
      (local.get $0)
     )
    )
    (i32.const 10)
   )
   (block
    (call $_TraceLog
     (i32.const 4)
     (i32.const 21679)
     (local.get $1)
    )
    (global.set $STACKTOP
     (local.get $6)
    )
    (return
     (local.get $2)
    )
   )
  )
  (if
   (i32.le_s
    (local.get $7)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $6)
    )
    (return
     (local.get $2)
    )
   )
  )
  (local.set $3
   (i32.load
    (local.get $0)
   )
  )
  (local.set $5
   (i32.load
    (local.get $0)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (local.set $1
   (i32.const 0)
  )
  (loop $while-in
   (block $__rjto$0
    (block $__rjti$0
     (block $switch-case7
      (block $switch-case6
       (block $switch-case5
        (block $switch-case4
         (block $switch-case3
          (block $switch-case2
           (block $switch-case1
            (block $switch-case0
             (block $switch-case
              (br_table $switch-case $switch-case0 $switch-case2 $switch-case5 $switch-case1 $switch-case3 $switch-case4 $switch-case6 $switch-case7 $__rjti$0 $__rjto$0
               (i32.sub
                (local.get $8)
                (i32.const 1)
               )
              )
             )
             (f32.store
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $2)
              )
              (f32.div
               (f32.convert_i32_s
                (i32.load8_u
                 (local.tee $4
                  (i32.add
                   (local.get $1)
                   (local.get $3)
                  )
                 )
                )
               )
               (f32.const 255)
              )
             )
             (f32.store offset=4
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $2)
              )
              (f32.div
               (f32.convert_i32_s
                (i32.load8_u
                 (local.get $4)
                )
               )
               (f32.const 255)
              )
             )
             (f32.store offset=8
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $2)
              )
              (f32.div
               (f32.convert_i32_s
                (i32.load8_u
                 (local.get $4)
                )
               )
               (f32.const 255)
              )
             )
             (f32.store offset=12
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 4)
               )
               (local.get $2)
              )
              (f32.const 1)
             )
             (br $__rjto$0)
            )
            (f32.store
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 4)
              )
              (local.get $2)
             )
             (f32.div
              (f32.convert_i32_s
               (i32.load8_u
                (local.tee $4
                 (i32.add
                  (local.get $0)
                  (local.get $3)
                 )
                )
               )
              )
              (f32.const 255)
             )
            )
            (f32.store offset=4
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 4)
              )
              (local.get $2)
             )
             (f32.div
              (f32.convert_i32_s
               (i32.load8_u
                (local.get $4)
               )
              )
              (f32.const 255)
             )
            )
            (f32.store offset=8
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 4)
              )
              (local.get $2)
             )
             (f32.div
              (f32.convert_i32_s
               (i32.load8_u
                (local.get $4)
               )
              )
              (f32.const 255)
             )
            )
            (f32.store offset=12
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 4)
              )
              (local.get $2)
             )
             (f32.div
              (f32.convert_i32_s
               (i32.load8_u
                (i32.add
                 (local.get $3)
                 (i32.add
                  (local.get $0)
                  (i32.const 1)
                 )
                )
               )
              )
              (f32.const 255)
             )
            )
            (local.set $0
             (i32.add
              (local.get $0)
              (i32.const 2)
             )
            )
            (br $__rjto$0)
           )
           (f32.store
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 4)
             )
             (local.get $2)
            )
            (f32.mul
             (f32.convert_i32_s
              (i32.shr_u
               (local.tee $4
                (i32.load16_u
                 (i32.add
                  (i32.shl
                   (local.get $1)
                   (i32.const 1)
                  )
                  (local.get $3)
                 )
                )
               )
               (i32.const 11)
              )
             )
             (f32.const 0.032258063554763794)
            )
           )
           (f32.store offset=4
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 4)
             )
             (local.get $2)
            )
            (f32.mul
             (f32.convert_i32_s
              (i32.and
               (i32.shr_u
                (local.get $4)
                (i32.const 6)
               )
               (i32.const 31)
              )
             )
             (f32.const 0.032258063554763794)
            )
           )
           (f32.store offset=8
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 4)
             )
             (local.get $2)
            )
            (f32.mul
             (f32.convert_i32_s
              (i32.and
               (i32.shr_u
                (local.get $4)
                (i32.const 1)
               )
               (i32.const 31)
              )
             )
             (f32.const 0.032258063554763794)
            )
           )
           (f32.store offset=12
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 4)
             )
             (local.get $2)
            )
            (select
             (f32.const 1)
             (f32.const 0)
             (i32.and
              (local.get $4)
              (i32.const 1)
             )
            )
           )
           (br $__rjto$0)
          )
          (f32.store
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 4)
            )
            (local.get $2)
           )
           (f32.mul
            (f32.convert_i32_s
             (i32.shr_u
              (local.tee $4
               (i32.load16_u
                (i32.add
                 (i32.shl
                  (local.get $1)
                  (i32.const 1)
                 )
                 (local.get $3)
                )
               )
              )
              (i32.const 11)
             )
            )
            (f32.const 0.032258063554763794)
           )
          )
          (f32.store offset=4
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 4)
            )
            (local.get $2)
           )
           (f32.mul
            (f32.convert_i32_s
             (i32.and
              (i32.shr_u
               (local.get $4)
               (i32.const 5)
              )
              (i32.const 63)
             )
            )
            (f32.const 0.01587301678955555)
           )
          )
          (f32.store offset=8
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 4)
            )
            (local.get $2)
           )
           (f32.mul
            (f32.convert_i32_s
             (i32.and
              (local.get $4)
              (i32.const 31)
             )
            )
            (f32.const 0.032258063554763794)
           )
          )
          (f32.store offset=12
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 4)
            )
            (local.get $2)
           )
           (f32.const 1)
          )
          (br $__rjto$0)
         )
         (f32.store
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 4)
           )
           (local.get $2)
          )
          (f32.mul
           (f32.convert_i32_s
            (i32.shr_u
             (local.tee $4
              (i32.load16_u
               (i32.add
                (i32.shl
                 (local.get $1)
                 (i32.const 1)
                )
                (local.get $3)
               )
              )
             )
             (i32.const 12)
            )
           )
           (f32.const 0.06666667014360428)
          )
         )
         (f32.store offset=4
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 4)
           )
           (local.get $2)
          )
          (f32.mul
           (f32.convert_i32_s
            (i32.and
             (i32.shr_u
              (local.get $4)
              (i32.const 8)
             )
             (i32.const 15)
            )
           )
           (f32.const 0.06666667014360428)
          )
         )
         (f32.store offset=8
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 4)
           )
           (local.get $2)
          )
          (f32.mul
           (f32.convert_i32_s
            (i32.and
             (i32.shr_u
              (local.get $4)
              (i32.const 4)
             )
             (i32.const 15)
            )
           )
           (f32.const 0.06666667014360428)
          )
         )
         (f32.store offset=12
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 4)
           )
           (local.get $2)
          )
          (f32.mul
           (f32.convert_i32_s
            (i32.and
             (local.get $4)
             (i32.const 15)
            )
           )
           (f32.const 0.06666667014360428)
          )
         )
         (br $__rjto$0)
        )
        (f32.store
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 4)
          )
          (local.get $2)
         )
         (f32.div
          (f32.convert_i32_s
           (i32.load8_u
            (i32.add
             (local.get $0)
             (local.get $3)
            )
           )
          )
          (f32.const 255)
         )
        )
        (f32.store offset=4
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 4)
          )
          (local.get $2)
         )
         (f32.div
          (f32.convert_i32_s
           (i32.load8_u
            (i32.add
             (i32.add
              (local.get $0)
              (i32.const 1)
             )
             (local.get $3)
            )
           )
          )
          (f32.const 255)
         )
        )
        (f32.store offset=8
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 4)
          )
          (local.get $2)
         )
         (f32.div
          (f32.convert_i32_s
           (i32.load8_u
            (i32.add
             (i32.add
              (local.get $0)
              (i32.const 2)
             )
             (local.get $3)
            )
           )
          )
          (f32.const 255)
         )
        )
        (f32.store offset=12
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 4)
          )
          (local.get $2)
         )
         (f32.div
          (f32.convert_i32_s
           (i32.load8_u
            (i32.add
             (local.get $3)
             (i32.add
              (local.get $0)
              (i32.const 3)
             )
            )
           )
          )
          (f32.const 255)
         )
        )
        (local.set $0
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
        )
        (br $__rjto$0)
       )
       (f32.store
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 4)
         )
         (local.get $2)
        )
        (f32.div
         (f32.convert_i32_s
          (i32.load8_u
           (i32.add
            (local.get $0)
            (local.get $3)
           )
          )
         )
         (f32.const 255)
        )
       )
       (f32.store offset=4
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 4)
         )
         (local.get $2)
        )
        (f32.div
         (f32.convert_i32_s
          (i32.load8_u
           (i32.add
            (local.get $3)
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
          )
         )
         (f32.const 255)
        )
       )
       (f32.store offset=8
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 4)
         )
         (local.get $2)
        )
        (f32.div
         (f32.convert_i32_s
          (i32.load8_u
           (i32.add
            (local.get $3)
            (i32.add
             (local.get $0)
             (i32.const 2)
            )
           )
          )
         )
         (f32.const 255)
        )
       )
       (f32.store offset=12
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 4)
         )
         (local.get $2)
        )
        (f32.const 1)
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 3)
        )
       )
       (br $__rjto$0)
      )
      (i32.store
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 4)
        )
        (local.get $2)
       )
       (i32.load
        (i32.add
         (i32.shl
          (local.get $0)
          (i32.const 2)
         )
         (local.get $3)
        )
       )
      )
      (f32.store offset=4
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 4)
        )
        (local.get $2)
       )
       (f32.const 0)
      )
      (f32.store offset=8
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 4)
        )
        (local.get $2)
       )
       (f32.const 0)
      )
      (f32.store offset=12
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 4)
        )
        (local.get $2)
       )
       (f32.const 1)
      )
      (br $__rjto$0)
     )
     (i32.store
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 4)
       )
       (local.get $2)
      )
      (i32.load
       (i32.add
        (i32.shl
         (local.get $0)
         (i32.const 2)
        )
        (local.get $3)
       )
      )
     )
     (i32.store offset=4
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 4)
       )
       (local.get $2)
      )
      (i32.load
       (i32.add
        (i32.shl
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
         (i32.const 2)
        )
        (local.get $3)
       )
      )
     )
     (i32.store offset=8
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 4)
       )
       (local.get $2)
      )
      (i32.load
       (i32.add
        (i32.shl
         (i32.add
          (local.get $0)
          (i32.const 2)
         )
         (i32.const 2)
        )
        (local.get $3)
       )
      )
     )
     (f32.store offset=12
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 4)
       )
       (local.get $2)
      )
      (f32.const 1)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 3)
      )
     )
    )
    (i32.store
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 4)
      )
      (local.get $2)
     )
     (i32.load
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $5)
      )
     )
    )
    (i32.store offset=4
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 4)
      )
      (local.get $2)
     )
     (i32.load
      (i32.add
       (i32.shl
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
        (i32.const 2)
       )
       (local.get $5)
      )
     )
    )
    (i32.store offset=8
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 4)
      )
      (local.get $2)
     )
     (i32.load
      (i32.add
       (i32.shl
        (i32.add
         (local.get $0)
         (i32.const 2)
        )
        (i32.const 2)
       )
       (local.get $5)
      )
     )
    )
    (i32.store offset=12
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 4)
      )
      (local.get $2)
     )
     (i32.load
      (i32.add
       (i32.shl
        (i32.add
         (local.get $0)
         (i32.const 3)
        )
        (i32.const 2)
       )
       (local.get $5)
      )
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $7)
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $2)
 )
 (func $_ImageMipmaps (; 430 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local.set $13
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 128)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 128)
   )
  )
  (local.set $5
   (i32.add
    (local.get $1)
    (i32.const 96)
   )
  )
  (local.set $15
   (i32.add
    (local.get $1)
    (i32.const 88)
   )
  )
  (local.set $9
   (i32.sub
    (local.get $1)
    (i32.const -64)
   )
  )
  (local.set $16
   (i32.add
    (local.get $1)
    (i32.const 56)
   )
  )
  (local.set $14
   (i32.add
    (local.get $1)
    (i32.const 48)
   )
  )
  (local.set $7
   (i32.add
    (local.get $1)
    (i32.const 24)
   )
  )
  (local.set $12
   (i32.add
    (local.get $1)
    (i32.const 16)
   )
  )
  (local.set $10
   (local.get $1)
  )
  (local.set $1
   (call $_GetPixelDataSize
    (local.tee $4
     (i32.load offset=4
      (local.get $0)
     )
    )
    (local.tee $2
     (i32.load offset=8
      (local.get $0)
     )
    )
    (i32.load offset=16
     (local.get $0)
    )
   )
  )
  (local.set $8
   (if (result i32)
    (i32.or
     (local.tee $3
      (i32.ne
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.tee $6
      (i32.ne
       (local.get $2)
       (i32.const 1)
      )
     )
    )
    (block (result i32)
     (local.set $8
      (i32.const 1)
     )
     (loop $while-in (result i32)
      (local.set $3
       (i32.gt_s
        (local.tee $4
         (select
          (i32.div_s
           (local.get $4)
           (i32.const 2)
          )
          (i32.const 1)
          (local.get $3)
         )
        )
        (i32.const 1)
       )
      )
      (local.set $6
       (i32.gt_s
        (local.tee $2
         (select
          (i32.div_s
           (local.get $2)
           (i32.const 2)
          )
          (i32.const 1)
          (local.get $6)
         )
        )
        (i32.const 1)
       )
      )
      (i32.store
       (local.get $10)
       (local.tee $4
        (select
         (local.get $4)
         (i32.const 1)
         (local.get $3)
        )
       )
      )
      (i32.store offset=4
       (local.get $10)
       (local.tee $11
        (select
         (local.get $2)
         (i32.const 1)
         (local.get $6)
        )
       )
      )
      (i32.store offset=8
       (local.get $10)
       (local.get $1)
      )
      (call $_TraceLog
       (i32.const 2)
       (i32.const 18774)
       (local.get $10)
      )
      (local.set $2
       (i32.add
        (local.get $8)
        (i32.const 1)
       )
      )
      (local.set $1
       (i32.add
        (call $_GetPixelDataSize
         (local.get $4)
         (local.get $11)
         (i32.load offset=16
          (local.get $0)
         )
        )
        (local.get $1)
       )
      )
      (if (result i32)
       (i32.or
        (local.get $3)
        (local.get $6)
       )
       (block
        (local.set $8
         (local.get $2)
        )
        (local.set $2
         (local.get $11)
        )
        (br $while-in)
       )
       (local.get $2)
      )
     )
    )
    (i32.const 1)
   )
  )
  (i32.store
   (local.get $12)
   (i32.load offset=12
    (local.get $0)
   )
  )
  (i32.store offset=4
   (local.get $12)
   (local.get $8)
  )
  (call $_TraceLog
   (i32.const 2)
   (i32.const 18819)
   (local.get $12)
  )
  (i32.store
   (local.get $7)
   (local.get $1)
  )
  (call $_TraceLog
   (i32.const 2)
   (i32.const 18864)
   (local.get $7)
  )
  (i32.store
   (local.get $5)
   (i32.load
    (local.get $0)
   )
  )
  (call $_TraceLog
   (i32.const 2)
   (i32.const 18896)
   (local.get $5)
  )
  (if
   (i32.ge_s
    (i32.load offset=12
     (local.get $0)
    )
    (local.get $8)
   )
   (block
    (call $_TraceLog
     (i32.const 4)
     (i32.const 19080)
     (local.get $15)
    )
    (global.set $STACKTOP
     (local.get $13)
    )
    (return)
   )
  )
  (if
   (local.tee $1
    (call $_realloc
     (i32.load
      (local.get $0)
     )
     (local.get $1)
    )
   )
   (block
    (i32.store
     (local.get $0)
     (local.get $1)
    )
    (i32.store
     (local.get $14)
     (local.get $1)
    )
    (call $_TraceLog
     (i32.const 2)
     (i32.const 18934)
     (local.get $14)
    )
   )
   (call $_TraceLog
    (i32.const 4)
    (i32.const 18976)
    (local.get $16)
   )
  )
  (local.set $6
   (i32.load
    (local.get $0)
   )
  )
  (local.set $3
   (i32.load offset=16
    (local.get $0)
   )
  )
  (local.set $1
   (i32.div_s
    (local.tee $11
     (i32.load offset=4
      (local.get $0)
     )
    )
    (i32.const 2)
   )
  )
  (local.set $2
   (i32.div_s
    (local.tee $10
     (i32.load offset=8
      (local.get $0)
     )
    )
    (i32.const 2)
   )
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $5)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i32.store offset=16
   (local.get $5)
   (i32.load offset=16
    (local.get $0)
   )
  )
  (call $_ImageCopy
   (local.get $7)
   (local.get $5)
  )
  (if
   (i32.gt_u
    (local.get $8)
    (i32.const 1)
   )
   (block
    (local.set $4
     (call $_GetPixelDataSize
      (local.get $1)
      (local.get $2)
      (local.get $3)
     )
    )
    (local.set $3
     (i32.add
      (call $_GetPixelDataSize
       (local.get $11)
       (local.get $10)
       (local.get $3)
      )
      (local.get $6)
     )
    )
    (local.set $6
     (i32.const 1)
    )
    (loop $while-in1
     (i32.store
      (local.get $9)
      (local.get $6)
     )
     (i32.store offset=4
      (local.get $9)
      (local.get $1)
     )
     (i32.store offset=8
      (local.get $9)
      (local.get $2)
     )
     (i32.store offset=12
      (local.get $9)
      (local.get $4)
     )
     (i32.store offset=16
      (local.get $9)
      (local.get $3)
     )
     (call $_TraceLog
      (i32.const 2)
      (i32.const 19023)
      (local.get $9)
     )
     (call $_ImageResize
      (local.get $7)
      (local.get $1)
      (local.get $2)
     )
     (drop
      (call $_memcpy
       (local.get $3)
       (i32.load
        (local.get $7)
       )
       (local.get $4)
      )
     )
     (local.set $3
      (i32.add
       (local.get $3)
       (local.get $4)
      )
     )
     (i32.store offset=12
      (local.get $0)
      (i32.add
       (i32.load offset=12
        (local.get $0)
       )
       (i32.const 1)
      )
     )
     (local.set $4
      (call $_GetPixelDataSize
       (local.tee $1
        (select
         (i32.const 1)
         (i32.div_s
          (local.get $1)
          (i32.const 2)
         )
         (i32.lt_s
          (local.get $1)
          (i32.const 2)
         )
        )
       )
       (local.tee $2
        (select
         (i32.const 1)
         (i32.div_s
          (local.get $2)
          (i32.const 2)
         )
         (i32.lt_s
          (local.get $2)
          (i32.const 2)
         )
        )
       )
       (i32.load offset=16
        (local.get $0)
       )
      )
     )
     (br_if $while-in1
      (i32.ne
       (local.tee $6
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.get $8)
      )
     )
    )
   )
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $7)
   )
  )
  (i64.store offset=8 align=4
   (local.get $5)
   (i64.load offset=8 align=4
    (local.get $7)
   )
  )
  (i32.store offset=16
   (local.get $5)
   (i32.load offset=16
    (local.get $7)
   )
  )
  (call $_UnloadImage
   (local.get $5)
  )
  (global.set $STACKTOP
   (local.get $13)
  )
 )
 (func $_ImageCopy (; 431 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $5
   (i32.load offset=4
    (local.get $1)
   )
  )
  (local.set $6
   (i32.load offset=8
    (local.get $1)
   )
  )
  (if
   (i32.gt_s
    (local.tee $2
     (i32.load offset=12
      (local.get $1)
     )
    )
    (i32.const 0)
   )
   (block
    (local.set $9
     (i32.load offset=16
      (local.get $1)
     )
    )
    (local.set $7
     (i32.load offset=12
      (local.get $1)
     )
    )
    (local.set $2
     (local.get $6)
    )
    (local.set $3
     (local.get $5)
    )
    (local.set $2
     (loop $while-in (result i32)
      (local.set $4
       (i32.add
        (call $_GetPixelDataSize
         (local.get $3)
         (local.get $2)
         (local.get $9)
        )
        (local.get $4)
       )
      )
      (local.set $3
       (select
        (i32.const 1)
        (i32.div_s
         (local.get $3)
         (i32.const 2)
        )
        (i32.lt_s
         (local.get $3)
         (i32.const 2)
        )
       )
      )
      (local.set $2
       (select
        (i32.const 1)
        (i32.div_s
         (local.get $2)
         (i32.const 2)
        )
        (i32.lt_s
         (local.get $2)
         (i32.const 2)
        )
       )
      )
      (br_if $while-in
       (i32.lt_s
        (local.tee $8
         (i32.add
          (local.get $8)
          (i32.const 1)
         )
        )
        (local.get $7)
       )
      )
      (local.get $7)
     )
    )
   )
  )
  (local.set $1
   (if (result i32)
    (local.tee $3
     (call $_malloc
      (local.get $4)
     )
    )
    (block (result i32)
     (drop
      (call $_memcpy
       (local.get $3)
       (i32.load
        (local.get $1)
       )
       (local.get $4)
      )
     )
     (i32.load offset=16
      (local.get $1)
     )
    )
    (block (result i32)
     (local.set $5
      (i32.const 0)
     )
     (local.set $6
      (i32.const 0)
     )
     (local.set $2
      (i32.const 0)
     )
     (i32.const 0)
    )
   )
  )
  (i32.store
   (local.get $0)
   (local.get $3)
  )
  (i32.store offset=4
   (local.get $0)
   (local.get $5)
  )
  (i32.store offset=8
   (local.get $0)
   (local.get $6)
  )
  (i32.store offset=12
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=16
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_ImageResize (; 432 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 48)
   )
  )
  (i64.store align=4
   (local.tee $3
    (i32.add
     (local.get $4)
     (i32.const 20)
    )
   )
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i32.store offset=16
   (local.get $3)
   (i32.load offset=16
    (local.get $0)
   )
  )
  (local.set $6
   (call $_GetImageData
    (local.get $3)
   )
  )
  (local.set $5
   (call $_malloc
    (i32.mul
     (local.get $2)
     (i32.shl
      (local.get $1)
      (i32.const 2)
     )
    )
   )
  )
  (call $_stbir__resize_arbitrary
   (local.get $6)
   (i32.load offset=4
    (local.get $0)
   )
   (i32.load offset=8
    (local.get $0)
   )
   (local.get $5)
   (local.get $1)
   (local.get $2)
  )
  (local.set $8
   (i32.load offset=16
    (local.get $0)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i32.store offset=16
   (local.get $3)
   (i32.load offset=16
    (local.get $0)
   )
  )
  (call $_UnloadImage
   (local.get $3)
  )
  (call $_LoadImageEx
   (local.get $4)
   (local.get $5)
   (local.get $1)
   (local.get $2)
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (local.get $4)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load offset=8 align=4
    (local.get $4)
   )
  )
  (i32.store offset=16
   (local.get $0)
   (i32.load offset=16
    (local.get $4)
   )
  )
  (call $_ImageFormat
   (local.get $0)
   (local.get $8)
  )
  (call $_free
   (local.get $5)
  )
  (call $_free
   (local.get $6)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_GetImageData (; 433 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $6
   (i32.add
    (local.get $1)
    (i32.const 8)
   )
  )
  (local.set $2
   (call $_malloc
    (i32.shl
     (local.tee $7
      (i32.mul
       (i32.load offset=4
        (local.get $0)
       )
       (i32.load offset=8
        (local.get $0)
       )
      )
     )
     (i32.const 2)
    )
   )
  )
  (if
   (i32.gt_s
    (local.tee $8
     (i32.load offset=16
      (local.get $0)
     )
    )
    (i32.const 10)
   )
   (block
    (call $_TraceLog
     (i32.const 4)
     (i32.const 21679)
     (local.get $1)
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return
     (local.get $2)
    )
   )
  )
  (if
   (i32.lt_u
    (i32.add
     (local.get $8)
     (i32.const -8)
    )
    (i32.const 3)
   )
   (call $_TraceLog
    (i32.const 4)
    (i32.const 21743)
    (local.get $6)
   )
  )
  (if
   (i32.le_s
    (local.get $7)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $5)
    )
    (return
     (local.get $2)
    )
   )
  )
  (local.set $4
   (i32.load
    (local.get $0)
   )
  )
  (local.set $6
   (i32.load
    (local.get $0)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (local.set $1
   (i32.const 0)
  )
  (loop $while-in
   (block $__rjto$0
    (block $__rjti$0
     (block $switch-case7
      (block $switch-case6
       (block $switch-case5
        (block $switch-case4
         (block $switch-case3
          (block $switch-case2
           (block $switch-case1
            (block $switch-case0
             (block $switch-case
              (br_table $switch-case $switch-case0 $switch-case2 $switch-case5 $switch-case1 $switch-case3 $switch-case4 $switch-case6 $switch-case7 $__rjti$0 $__rjto$0
               (i32.sub
                (local.get $8)
                (i32.const 1)
               )
              )
             )
             (i32.store8
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 2)
               )
               (local.get $2)
              )
              (i32.load8_s
               (local.tee $3
                (i32.add
                 (local.get $1)
                 (local.get $4)
                )
               )
              )
             )
             (i32.store8 offset=1
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 2)
               )
               (local.get $2)
              )
              (i32.load8_s
               (local.get $3)
              )
             )
             (i32.store8 offset=2
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 2)
               )
               (local.get $2)
              )
              (i32.load8_s
               (local.get $3)
              )
             )
             (i32.store8 offset=3
              (i32.add
               (i32.shl
                (local.get $1)
                (i32.const 2)
               )
               (local.get $2)
              )
              (i32.const -1)
             )
             (br $__rjto$0)
            )
            (i32.store8
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $2)
             )
             (i32.load8_s
              (local.tee $3
               (i32.add
                (local.get $0)
                (local.get $4)
               )
              )
             )
            )
            (i32.store8 offset=1
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $2)
             )
             (i32.load8_s
              (local.get $3)
             )
            )
            (i32.store8 offset=2
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $2)
             )
             (i32.load8_s
              (local.get $3)
             )
            )
            (i32.store8 offset=3
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $2)
             )
             (i32.load8_s
              (i32.add
               (local.get $4)
               (i32.add
                (local.get $0)
                (i32.const 1)
               )
              )
             )
            )
            (local.set $0
             (i32.add
              (local.get $0)
              (i32.const 2)
             )
            )
            (br $__rjto$0)
           )
           (i32.store8
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
             (local.get $2)
            )
            (i32.trunc_f32_s
             (f32.mul
              (f32.convert_i32_s
               (i32.shr_u
                (local.tee $3
                 (i32.load16_u
                  (i32.add
                   (i32.shl
                    (local.get $1)
                    (i32.const 1)
                   )
                   (local.get $4)
                  )
                 )
                )
                (i32.const 11)
               )
              )
              (f32.const 8)
             )
            )
           )
           (i32.store8 offset=1
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
             (local.get $2)
            )
            (i32.trunc_f32_s
             (f32.mul
              (f32.convert_i32_s
               (i32.and
                (i32.shr_u
                 (local.get $3)
                 (i32.const 6)
                )
                (i32.const 31)
               )
              )
              (f32.const 8)
             )
            )
           )
           (i32.store8 offset=2
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
             (local.get $2)
            )
            (i32.trunc_f32_s
             (f32.mul
              (f32.convert_i32_s
               (i32.and
                (i32.shr_u
                 (local.get $3)
                 (i32.const 1)
                )
                (i32.const 31)
               )
              )
              (f32.const 8)
             )
            )
           )
           (i32.store8 offset=3
            (i32.add
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
             (local.get $2)
            )
            (i32.sub
             (i32.const 0)
             (i32.and
              (local.get $3)
              (i32.const 1)
             )
            )
           )
           (br $__rjto$0)
          )
          (i32.store8
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
            (local.get $2)
           )
           (i32.trunc_f32_s
            (f32.mul
             (f32.convert_i32_s
              (i32.shr_u
               (local.tee $3
                (i32.load16_u
                 (i32.add
                  (i32.shl
                   (local.get $1)
                   (i32.const 1)
                  )
                  (local.get $4)
                 )
                )
               )
               (i32.const 11)
              )
             )
             (f32.const 8)
            )
           )
          )
          (i32.store8 offset=1
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
            (local.get $2)
           )
           (i32.trunc_f32_s
            (f32.mul
             (f32.convert_i32_s
              (i32.and
               (i32.shr_u
                (local.get $3)
                (i32.const 5)
               )
               (i32.const 63)
              )
             )
             (f32.const 4)
            )
           )
          )
          (i32.store8 offset=2
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
            (local.get $2)
           )
           (i32.trunc_f32_s
            (f32.mul
             (f32.convert_i32_s
              (i32.and
               (local.get $3)
               (i32.const 31)
              )
             )
             (f32.const 8)
            )
           )
          )
          (i32.store8 offset=3
           (i32.add
            (i32.shl
             (local.get $1)
             (i32.const 2)
            )
            (local.get $2)
           )
           (i32.const -1)
          )
          (br $__rjto$0)
         )
         (i32.store8
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
           (local.get $2)
          )
          (i32.trunc_f32_s
           (f32.mul
            (f32.convert_i32_s
             (i32.shr_u
              (local.tee $3
               (i32.load16_u
                (i32.add
                 (i32.shl
                  (local.get $1)
                  (i32.const 1)
                 )
                 (local.get $4)
                )
               )
              )
              (i32.const 12)
             )
            )
            (f32.const 17)
           )
          )
         )
         (i32.store8 offset=1
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
           (local.get $2)
          )
          (i32.trunc_f32_s
           (f32.mul
            (f32.convert_i32_s
             (i32.and
              (i32.shr_u
               (local.get $3)
               (i32.const 8)
              )
              (i32.const 15)
             )
            )
            (f32.const 17)
           )
          )
         )
         (i32.store8 offset=2
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
           (local.get $2)
          )
          (i32.trunc_f32_s
           (f32.mul
            (f32.convert_i32_s
             (i32.and
              (i32.shr_u
               (local.get $3)
               (i32.const 4)
              )
              (i32.const 15)
             )
            )
            (f32.const 17)
           )
          )
         )
         (i32.store8 offset=3
          (i32.add
           (i32.shl
            (local.get $1)
            (i32.const 2)
           )
           (local.get $2)
          )
          (i32.trunc_f32_s
           (f32.mul
            (f32.convert_i32_s
             (i32.and
              (local.get $3)
              (i32.const 15)
             )
            )
            (f32.const 17)
           )
          )
         )
         (br $__rjto$0)
        )
        (i32.store8
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $2)
         )
         (i32.load8_s
          (i32.add
           (local.get $0)
           (local.get $4)
          )
         )
        )
        (i32.store8 offset=1
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $2)
         )
         (i32.load8_s
          (i32.add
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
           (local.get $4)
          )
         )
        )
        (i32.store8 offset=2
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $2)
         )
         (i32.load8_s
          (i32.add
           (i32.add
            (local.get $0)
            (i32.const 2)
           )
           (local.get $4)
          )
         )
        )
        (i32.store8 offset=3
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (local.get $2)
         )
         (i32.load8_s
          (i32.add
           (i32.add
            (local.get $0)
            (i32.const 3)
           )
           (local.get $4)
          )
         )
        )
        (local.set $0
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
        )
        (br $__rjto$0)
       )
       (i32.store8
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $2)
        )
        (i32.load8_s
         (i32.add
          (local.get $0)
          (local.get $4)
         )
        )
       )
       (i32.store8 offset=1
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $2)
        )
        (i32.load8_s
         (i32.add
          (local.get $4)
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
        )
       )
       (i32.store8 offset=2
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $2)
        )
        (i32.load8_s
         (i32.add
          (local.get $4)
          (i32.add
           (local.get $0)
           (i32.const 2)
          )
         )
        )
       )
       (i32.store8 offset=3
        (i32.add
         (i32.shl
          (local.get $1)
          (i32.const 2)
         )
         (local.get $2)
        )
        (i32.const -1)
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 3)
        )
       )
       (br $__rjto$0)
      )
      (i32.store8
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (local.get $2)
       )
       (i32.trunc_f32_s
        (f32.mul
         (f32.load
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (f32.const 255)
        )
       )
      )
      (i32.store8 offset=1
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (local.get $2)
       )
       (i32.const 0)
      )
      (i32.store8 offset=2
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (local.get $2)
       )
       (i32.const 0)
      )
      (i32.store8 offset=3
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (local.get $2)
       )
       (i32.const -1)
      )
      (br $__rjto$0)
     )
     (i32.store8
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.trunc_f32_s
       (f32.mul
        (f32.load
         (i32.add
          (i32.shl
           (local.get $0)
           (i32.const 2)
          )
          (local.get $4)
         )
        )
        (f32.const 255)
       )
      )
     )
     (i32.store8 offset=1
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.trunc_f32_s
       (f32.mul
        (f32.load
         (i32.add
          (i32.shl
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
           (i32.const 2)
          )
          (local.get $4)
         )
        )
        (f32.const 255)
       )
      )
     )
     (i32.store8 offset=2
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.trunc_f32_s
       (f32.mul
        (f32.load
         (i32.add
          (i32.shl
           (i32.add
            (local.get $0)
            (i32.const 2)
           )
           (i32.const 2)
          )
          (local.get $4)
         )
        )
        (f32.const 255)
       )
      )
     )
     (i32.store8 offset=3
      (i32.add
       (i32.shl
        (local.get $1)
        (i32.const 2)
       )
       (local.get $2)
      )
      (i32.const -1)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 3)
      )
     )
    )
    (i32.store8
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 2)
      )
      (local.get $2)
     )
     (i32.trunc_f32_s
      (f32.mul
       (f32.load
        (local.tee $3
         (i32.add
          (i32.shl
           (local.get $0)
           (i32.const 2)
          )
          (local.get $6)
         )
        )
       )
       (f32.const 255)
      )
     )
    )
    (i32.store8 offset=1
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 2)
      )
      (local.get $2)
     )
     (i32.trunc_f32_s
      (f32.mul
       (f32.load
        (local.get $3)
       )
       (f32.const 255)
      )
     )
    )
    (i32.store8 offset=2
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 2)
      )
      (local.get $2)
     )
     (i32.trunc_f32_s
      (f32.mul
       (f32.load
        (local.get $3)
       )
       (f32.const 255)
      )
     )
    )
    (i32.store8 offset=3
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 2)
      )
      (local.get $2)
     )
     (i32.trunc_f32_s
      (f32.mul
       (f32.load
        (local.get $3)
       )
       (f32.const 255)
      )
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.get $7)
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $2)
 )
 (func $_stbir__resize_arbitrary (; 434 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 224)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 224)
   )
  )
  (call $_stbir__setup
   (local.get $6)
   (local.get $1)
   (local.get $2)
   (local.get $4)
   (local.get $5)
  )
  (call $_stbir__calculate_transform
   (local.get $6)
  )
  (call $_stbir__choose_filter
   (local.get $6)
  )
  (if
   (i32.eqz
    (local.tee $1
     (call $_malloc
      (local.tee $2
       (call $_stbir__calculate_memory
        (local.get $6)
       )
      )
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $7)
    )
    (return)
   )
  )
  (call $_stbir__resize_allocated
   (local.get $6)
   (local.get $0)
   (local.get $3)
   (local.get $1)
   (local.get $2)
  )
  (call $_free
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $7)
  )
 )
 (func $_stbir__setup (; 435 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (i32.store offset=4
   (local.get $0)
   (local.get $1)
  )
  (i32.store offset=8
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=20
   (local.get $0)
   (local.get $3)
  )
  (i32.store offset=24
   (local.get $0)
   (local.get $4)
  )
  (i32.store
   (i32.sub
    (local.get $0)
    (i32.const -64)
   )
   (i32.const 4)
  )
 )
 (func $_stbir__calculate_transform (; 436 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 f32)
  (local $2 f32)
  (f32.store offset=32
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=36
   (local.get $0)
   (f32.const 0)
  )
  (f32.store offset=40
   (local.get $0)
   (f32.const 1)
  )
  (f32.store offset=44
   (local.get $0)
   (f32.const 1)
  )
  (f32.store offset=56
   (local.get $0)
   (f32.div
    (local.tee $1
     (f32.convert_i32_s
      (i32.load offset=20
       (local.get $0)
      )
     )
    )
    (f32.convert_i32_s
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
  (f32.store offset=60
   (local.get $0)
   (f32.div
    (local.tee $2
     (f32.convert_i32_s
      (i32.load offset=24
       (local.get $0)
      )
     )
    )
    (f32.convert_i32_s
     (i32.load offset=8
      (local.get $0)
     )
    )
   )
  )
  (f32.store offset=48
   (local.get $0)
   (f32.mul
    (local.get $1)
    (f32.const 0)
   )
  )
  (f32.store offset=52
   (local.get $0)
   (f32.mul
    (local.get $2)
    (f32.const 0)
   )
  )
 )
 (func $_stbir__choose_filter (; 437 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (select
    (i32.const 4)
    (i32.const 5)
    (call $_stbir__use_upsampling
     (f32.load offset=56
      (local.get $0)
     )
    )
   )
  )
  (local.set $2
   (select
    (i32.const 4)
    (i32.const 5)
    (call $_stbir__use_upsampling
     (f32.load offset=60
      (local.get $0)
     )
    )
   )
  )
  (i32.store offset=80
   (local.get $0)
   (local.get $1)
  )
  (i32.store offset=84
   (local.get $0)
   (local.get $2)
  )
 )
 (func $_stbir__calculate_memory (; 438 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $3
   (call $_stbir__get_filter_pixel_margin
    (i32.load offset=80
     (local.get $0)
    )
    (f32.load offset=56
     (local.get $0)
    )
   )
  )
  (local.set $1
   (call $_stbir__get_filter_pixel_width
    (i32.load offset=84
     (local.get $0)
    )
    (f32.load offset=60
     (local.get $0)
    )
   )
  )
  (i32.store offset=152
   (local.get $0)
   (call $_stbir__get_contributors
    (f32.load offset=56
     (local.get $0)
    )
    (i32.load offset=80
     (local.get $0)
    )
    (i32.load offset=4
     (local.get $0)
    )
    (i32.load offset=20
     (local.get $0)
    )
   )
  )
  (i32.store offset=156
   (local.get $0)
   (call $_stbir__get_contributors
    (f32.load offset=60
     (local.get $0)
    )
    (i32.load offset=84
     (local.get $0)
    )
    (i32.load offset=8
     (local.get $0)
    )
    (i32.load offset=24
     (local.get $0)
    )
   )
  )
  (i32.store offset=164
   (local.get $0)
   (i32.add
    (local.get $1)
    (i32.const 1)
   )
  )
  (i32.store offset=188
   (local.get $0)
   (i32.shl
    (i32.load offset=152
     (local.get $0)
    )
    (i32.const 3)
   )
  )
  (i32.store offset=192
   (local.get $0)
   (i32.shl
    (i32.mul
     (i32.load offset=152
      (local.get $0)
     )
     (call $_stbir__get_coefficient_width
      (i32.load offset=80
       (local.get $0)
      )
      (f32.load offset=56
       (local.get $0)
      )
     )
    )
    (i32.const 2)
   )
  )
  (i32.store offset=196
   (local.get $0)
   (i32.shl
    (i32.load offset=156
     (local.get $0)
    )
    (i32.const 3)
   )
  )
  (i32.store offset=200
   (local.get $0)
   (local.tee $4
    (i32.shl
     (i32.mul
      (i32.load offset=156
       (local.get $0)
      )
      (call $_stbir__get_coefficient_width
       (i32.load offset=84
        (local.get $0)
       )
       (f32.load offset=60
        (local.get $0)
       )
      )
     )
     (i32.const 2)
    )
   )
  )
  (i32.store offset=204
   (local.get $0)
   (local.tee $5
    (i32.mul
     (i32.add
      (i32.load offset=4
       (local.get $0)
      )
      (i32.shl
       (local.get $3)
       (i32.const 1)
      )
     )
     (i32.shl
      (local.tee $1
       (i32.load
        (i32.sub
         (local.get $0)
         (i32.const -64)
        )
       )
      )
      (i32.const 2)
     )
    )
   )
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $0)
     (i32.const 208)
    )
   )
   (local.tee $2
    (i32.shl
     (local.tee $1
      (i32.mul
       (local.get $1)
       (i32.load offset=20
        (local.get $0)
       )
      )
     )
     (i32.const 2)
    )
   )
  )
  (i32.store offset=212
   (local.get $0)
   (local.tee $6
    (i32.mul
     (i32.load offset=164
      (local.get $0)
     )
     (i32.shl
      (local.get $1)
      (i32.const 2)
     )
    )
   )
  )
  (i32.store
   (local.tee $1
    (i32.add
     (local.get $0)
     (i32.const 216)
    )
   )
   (local.get $2)
  )
  (if
   (i32.eqz
    (local.tee $2
     (i32.load offset=80
      (local.get $0)
     )
    )
   )
   (call $___assert_fail
    (i32.const 21599)
    (i32.const 19136)
    (i32.const 2263)
    (i32.const 21628)
   )
  )
  (if
   (i32.ge_u
    (local.get $2)
    (i32.const 6)
   )
   (call $___assert_fail
    (i32.const 19211)
    (i32.const 19136)
    (i32.const 2264)
    (i32.const 21628)
   )
  )
  (if
   (i32.eqz
    (local.tee $2
     (i32.load offset=84
      (local.get $0)
     )
    )
   )
   (call $___assert_fail
    (i32.const 21652)
    (i32.const 19136)
    (i32.const 2265)
    (i32.const 21628)
   )
  )
  (if
   (i32.lt_u
    (local.get $2)
    (i32.const 6)
   )
   (block
    (i32.store
     (select
      (local.get $3)
      (local.get $1)
      (call $_stbir__use_height_upsampling
       (local.get $0)
      )
     )
     (i32.const 0)
    )
    (return
     (i32.add
      (i32.load
       (local.get $1)
      )
      (i32.add
       (i32.load
        (local.get $3)
       )
       (i32.add
        (i32.load offset=196
         (local.get $0)
        )
        (i32.add
         (i32.load offset=192
          (local.get $0)
         )
         (i32.add
          (i32.load offset=188
           (local.get $0)
          )
          (i32.add
           (local.get $6)
           (i32.add
            (local.get $4)
            (local.get $5)
           )
          )
         )
        )
       )
      )
     )
    )
   )
   (call $___assert_fail
    (i32.const 19312)
    (i32.const 19136)
    (i32.const 2266)
    (i32.const 21628)
   )
  )
  (i32.const 0)
 )
 (func $_stbir__resize_allocated (; 439 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $6
   (call $_stbir__calculate_memory
    (local.get $0)
   )
  )
  (local.set $7
   (i32.mul
    (i32.load8_u
     (i32.const 19112)
    )
    (i32.mul
     (i32.load
      (i32.sub
       (local.get $0)
       (i32.const -64)
      )
     )
     (i32.load offset=4
      (local.get $0)
     )
    )
   )
  )
  (local.set $8
   (i32.mul
    (i32.load8_u
     (i32.const 19112)
    )
    (i32.mul
     (i32.load
      (i32.sub
       (local.get $0)
       (i32.const -64)
      )
     )
     (i32.load offset=20
      (local.get $0)
     )
    )
   )
  )
  (if
   (i32.le_s
    (local.tee $5
     (i32.load
      (local.tee $9
       (i32.sub
        (local.get $0)
        (i32.const -64)
       )
      )
     )
    )
    (i32.const -1)
   )
   (call $___assert_fail
    (i32.const 19116)
    (i32.const 19136)
    (i32.const 2310)
    (i32.const 19166)
   )
  )
  (if
   (i32.ge_s
    (local.get $5)
    (i32.const 65)
   )
   (call $___assert_fail
    (i32.const 19190)
    (i32.const 19136)
    (i32.const 2311)
    (i32.const 19166)
   )
  )
  (if
   (i32.ge_u
    (i32.load offset=80
     (local.get $0)
    )
    (i32.const 6)
   )
   (call $___assert_fail
    (i32.const 19211)
    (i32.const 19136)
    (i32.const 2316)
    (i32.const 19166)
   )
  )
  (if
   (i32.ge_u
    (i32.load offset=84
     (local.get $0)
    )
    (i32.const 6)
   )
   (call $___assert_fail
    (i32.const 19312)
    (i32.const 19136)
    (i32.const 2317)
    (i32.const 19166)
   )
  )
  (if
   (i32.le_s
    (local.get $5)
    (i32.const -1)
   )
   (return)
  )
  (if
   (i32.eqz
    (local.get $3)
   )
   (call $___assert_fail
    (i32.const 19464)
    (i32.const 19136)
    (i32.const 2333)
    (i32.const 19166)
   )
  )
  (if
   (i32.gt_u
    (local.get $6)
    (local.get $4)
   )
   (call $___assert_fail
    (i32.const 19472)
    (i32.const 19136)
    (i32.const 2338)
    (i32.const 19166)
   )
  )
  (drop
   (call $_memset
    (local.get $3)
    (i32.const 0)
    (local.get $4)
   )
  )
  (i32.store
   (local.get $0)
   (local.get $1)
  )
  (i32.store offset=12
   (local.get $0)
   (local.get $7)
  )
  (i32.store offset=16
   (local.get $0)
   (local.get $2)
  )
  (i32.store offset=28
   (local.get $0)
   (local.get $8)
  )
  (i32.store offset=68
   (local.get $0)
   (i32.const -1)
  )
  (i32.store offset=72
   (local.get $0)
   (i32.const 3)
  )
  (i32.store offset=76
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=88
   (local.get $0)
   (i32.const 1)
  )
  (i32.store offset=92
   (local.get $0)
   (i32.const 1)
  )
  (i32.store offset=96
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=128
   (local.get $0)
   (call $_stbir__get_coefficient_width
    (i32.load offset=80
     (local.get $0)
    )
    (f32.load offset=56
     (local.get $0)
    )
   )
  )
  (i32.store offset=132
   (local.get $0)
   (call $_stbir__get_coefficient_width
    (i32.load offset=84
     (local.get $0)
    )
    (f32.load offset=60
     (local.get $0)
    )
   )
  )
  (i32.store offset=136
   (local.get $0)
   (call $_stbir__get_filter_pixel_width
    (i32.load offset=80
     (local.get $0)
    )
    (f32.load offset=56
     (local.get $0)
    )
   )
  )
  (i32.store offset=140
   (local.get $0)
   (call $_stbir__get_filter_pixel_width
    (i32.load offset=84
     (local.get $0)
    )
    (f32.load offset=60
     (local.get $0)
    )
   )
  )
  (i32.store offset=144
   (local.get $0)
   (call $_stbir__get_filter_pixel_margin
    (i32.load offset=80
     (local.get $0)
    )
    (f32.load offset=56
     (local.get $0)
    )
   )
  )
  (i32.store offset=148
   (local.get $0)
   (call $_stbir__get_filter_pixel_margin
    (i32.load offset=84
     (local.get $0)
    )
    (f32.load offset=60
     (local.get $0)
    )
   )
  )
  (i32.store offset=160
   (local.get $0)
   (i32.mul
    (i32.load
     (local.get $9)
    )
    (i32.shl
     (local.tee $2
      (i32.load offset=20
       (local.get $0)
      )
     )
     (i32.const 2)
    )
   )
  )
  (i32.store offset=116
   (local.get $0)
   (i32.add
    (local.tee $5
     (i32.load offset=4
      (local.get $0)
     )
    )
    (i32.shl
     (i32.load offset=144
      (local.get $0)
     )
     (i32.const 1)
    )
   )
  )
  (i32.store offset=100
   (local.get $0)
   (local.get $3)
  )
  (i32.store offset=104
   (local.get $0)
   (local.tee $1
    (i32.add
     (local.get $3)
     (i32.load offset=188
      (local.get $0)
     )
    )
   )
  )
  (i32.store offset=108
   (local.get $0)
   (local.tee $1
    (i32.add
     (local.get $1)
     (i32.load offset=192
      (local.get $0)
     )
    )
   )
  )
  (i32.store offset=112
   (local.get $0)
   (local.tee $1
    (i32.add
     (local.get $1)
     (i32.load offset=196
      (local.get $0)
     )
    )
   )
  )
  (i32.store offset=120
   (local.get $0)
   (local.tee $1
    (i32.add
     (local.get $1)
     (i32.load offset=200
      (local.get $0)
     )
    )
   )
  )
  (if
   (call $_stbir__use_height_upsampling
    (local.get $0)
   )
   (block
    (i32.store offset=124
     (local.get $0)
     (i32.const 0)
    )
    (i32.store offset=180
     (local.get $0)
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.load offset=204
        (local.get $0)
       )
      )
     )
    )
    (i32.store offset=184
     (local.get $0)
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.load offset=212
        (local.get $0)
       )
      )
     )
    )
    (if
     (i32.ne
      (i32.add
       (local.get $1)
       (i32.load offset=216
        (local.get $0)
       )
      )
      (i32.add
       (local.get $3)
       (local.get $4)
      )
     )
     (call $___assert_fail
      (i32.const 19513)
      (i32.const 19136)
      (i32.const 2382)
      (i32.const 19166)
     )
    )
   )
   (block
    (i32.store offset=124
     (local.get $0)
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.load offset=204
        (local.get $0)
       )
      )
     )
    )
    (i32.store offset=180
     (local.get $0)
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.load offset=208
        (local.get $0)
       )
      )
     )
    )
    (i32.store offset=184
     (local.get $0)
     (i32.const 0)
    )
    (if
     (i32.ne
      (i32.add
       (local.get $1)
       (i32.load offset=212
        (local.get $0)
       )
      )
      (i32.add
       (local.get $3)
       (local.get $4)
      )
     )
     (call $___assert_fail
      (i32.const 19647)
      (i32.const 19136)
      (i32.const 2390)
      (i32.const 19166)
     )
    )
   )
  )
  (i32.store offset=176
   (local.get $0)
   (i32.const -1)
  )
  (call $_stbir__calculate_filters
   (i32.load offset=100
    (local.get $0)
   )
   (i32.load offset=104
    (local.get $0)
   )
   (i32.load offset=80
    (local.get $0)
   )
   (f32.load offset=56
    (local.get $0)
   )
   (f32.load offset=48
    (local.get $0)
   )
   (local.get $5)
   (local.get $2)
  )
  (call $_stbir__calculate_filters
   (i32.load offset=108
    (local.get $0)
   )
   (i32.load offset=112
    (local.get $0)
   )
   (i32.load offset=84
    (local.get $0)
   )
   (f32.load offset=60
    (local.get $0)
   )
   (f32.load offset=52
    (local.get $0)
   )
   (i32.load offset=8
    (local.get $0)
   )
   (i32.load offset=24
    (local.get $0)
   )
  )
  (if
   (call $_stbir__use_height_upsampling
    (local.get $0)
   )
   (call $_stbir__buffer_loop_upsample
    (local.get $0)
   )
   (call $_stbir__buffer_loop_downsample
    (local.get $0)
   )
  )
 )
 (func $_stbir__get_coefficient_width (; 440 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (result i32)
  (local $2 i32)
  (local.set $2
   (i32.eqz
    (call $_stbir__use_upsampling
     (local.get $1)
    )
   )
  )
  (local.set $0
   (i32.load
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 3)
     )
     (i32.const 4948)
    )
   )
  )
  (i32.trunc_f32_s
   (f32.ceil
    (f32.mul
     (call_indirect (type $FUNCSIG$ff)
      (select
       (local.get $1)
       (f32.div
        (f32.const 1)
        (local.get $1)
       )
       (local.get $2)
      )
      (i32.and
       (local.get $0)
       (i32.const 7)
      )
     )
     (f32.const 2)
    )
   )
  )
 )
 (func $_stbir__get_filter_pixel_width (; 441 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (result i32)
  (local $2 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (call $___assert_fail
    (i32.const 21473)
    (i32.const 19136)
    (i32.const 882)
    (i32.const 21485)
   )
  )
  (if
   (i32.ge_u
    (local.get $0)
    (i32.const 6)
   )
   (call $___assert_fail
    (i32.const 21515)
    (i32.const 19136)
    (i32.const 883)
    (i32.const 21485)
   )
  )
  (local.set $2
   (i32.eqz
    (call $_stbir__use_upsampling
     (local.get $1)
    )
   )
  )
  (local.set $0
   (i32.load
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 3)
     )
     (i32.const 4948)
    )
   )
  )
  (if (result i32)
   (local.get $2)
   (i32.trunc_f32_s
    (f32.ceil
     (f32.div
      (f32.mul
       (call_indirect (type $FUNCSIG$ff)
        (local.get $1)
        (i32.and
         (local.get $0)
         (i32.const 7)
        )
       )
       (f32.const 2)
      )
      (local.get $1)
     )
    )
   )
   (i32.trunc_f32_s
    (f32.ceil
     (f32.mul
      (call_indirect (type $FUNCSIG$ff)
       (f32.div
        (f32.const 1)
        (local.get $1)
       )
       (i32.and
        (local.get $0)
        (i32.const 7)
       )
      )
      (f32.const 2)
     )
    )
   )
  )
 )
 (func $_stbir__get_filter_pixel_margin (; 442 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (result i32)
  (i32.div_s
   (call $_stbir__get_filter_pixel_width
    (local.get $0)
    (local.get $1)
   )
   (i32.const 2)
  )
 )
 (func $_stbir__use_height_upsampling (; 443 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (call $_stbir__use_upsampling
   (f32.load offset=60
    (local.get $0)
   )
  )
 )
 (func $_stbir__calculate_filters (; 444 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f32) (param $4 f32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local.set $13
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $9
   (i32.add
    (local.get $7)
    (i32.const 8)
   )
  )
  (local.set $10
   (i32.add
    (local.get $7)
    (i32.const 4)
   )
  )
  (local.set $11
   (local.get $7)
  )
  (local.set $12
   (call $_stbir__get_contributors
    (local.get $3)
    (local.get $2)
    (local.get $5)
    (local.get $6)
   )
  )
  (local.set $7
   (i32.eqz
    (call $_stbir__use_upsampling
     (local.get $3)
    )
   )
  )
  (local.set $14
   (i32.load
    (i32.add
     (i32.shl
      (local.get $2)
      (i32.const 3)
     )
     (i32.const 4948)
    )
   )
  )
  (if
   (local.get $7)
   (block
    (local.set $8
     (f32.div
      (call_indirect (type $FUNCSIG$ff)
       (local.get $3)
       (i32.and
        (local.get $14)
        (i32.const 7)
       )
      )
      (local.get $3)
     )
    )
    (if
     (i32.gt_s
      (local.get $12)
      (i32.const 0)
     )
     (block
      (local.set $7
       (i32.const 0)
      )
      (loop $while-in
       (call $_stbir__calculate_sample_range_downsample
        (i32.sub
         (local.get $7)
         (call $_stbir__get_filter_pixel_margin
          (local.get $2)
          (local.get $3)
         )
        )
        (local.get $8)
        (local.get $3)
        (local.get $4)
        (local.get $10)
        (local.get $11)
        (local.get $9)
       )
       (call $_stbir__calculate_coefficients_downsample
        (local.get $2)
        (local.get $3)
        (i32.load
         (local.get $10)
        )
        (i32.load
         (local.get $11)
        )
        (f32.load
         (local.get $9)
        )
        (call $_stbir__get_contributor
         (local.get $0)
         (local.get $7)
        )
        (call $_stbir__get_coefficient
         (local.get $1)
         (local.get $2)
         (local.get $3)
         (local.get $7)
         (i32.const 0)
        )
       )
       (br_if $while-in
        (i32.ne
         (local.tee $7
          (i32.add
           (local.get $7)
           (i32.const 1)
          )
         )
         (local.get $12)
        )
       )
      )
     )
    )
    (call $_stbir__normalize_downsample_coefficients
     (local.get $0)
     (local.get $1)
     (local.get $2)
     (local.get $3)
     (local.get $5)
     (local.get $6)
    )
   )
   (block
    (local.set $8
     (call_indirect (type $FUNCSIG$ff)
      (f32.div
       (f32.const 1)
       (local.get $3)
      )
      (i32.and
       (local.get $14)
       (i32.const 7)
      )
     )
    )
    (if
     (i32.le_s
      (local.get $12)
      (i32.const 0)
     )
     (block
      (global.set $STACKTOP
       (local.get $13)
      )
      (return)
     )
    )
    (local.set $8
     (f32.mul
      (local.get $8)
      (local.get $3)
     )
    )
    (local.set $5
     (i32.const 0)
    )
    (loop $while-in1
     (call $_stbir__calculate_sample_range_upsample
      (local.get $5)
      (local.get $8)
      (local.get $3)
      (local.get $4)
      (local.get $10)
      (local.get $11)
      (local.get $9)
     )
     (call $_stbir__calculate_coefficients_upsample
      (local.get $2)
      (local.get $3)
      (i32.load
       (local.get $10)
      )
      (i32.load
       (local.get $11)
      )
      (f32.load
       (local.get $9)
      )
      (call $_stbir__get_contributor
       (local.get $0)
       (local.get $5)
      )
      (call $_stbir__get_coefficient
       (local.get $1)
       (local.get $2)
       (local.get $3)
       (local.get $5)
       (i32.const 0)
      )
     )
     (br_if $while-in1
      (i32.ne
       (local.tee $5
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
       )
       (local.get $12)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $13)
  )
 )
 (func $_stbir__buffer_loop_upsample (; 445 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 f32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $7
   (i32.add
    (local.get $1)
    (i32.const 8)
   )
  )
  (local.set $3
   (i32.add
    (local.get $1)
    (i32.const 4)
   )
  )
  (local.set $4
   (local.get $1)
  )
  (local.set $1
   (i32.load
    (i32.add
     (i32.shl
      (i32.load offset=84
       (local.get $0)
      )
      (i32.const 3)
     )
     (i32.const 4948)
    )
   )
  )
  (local.set $10
   (f32.mul
    (local.tee $8
     (f32.load offset=60
      (local.get $0)
     )
    )
    (call_indirect (type $FUNCSIG$ff)
     (f32.div
      (f32.const 1)
      (local.get $8)
     )
     (i32.and
      (local.get $1)
      (i32.const 7)
     )
    )
   )
  )
  (if
   (i32.eqz
    (call $_stbir__use_height_upsampling
     (local.get $0)
    )
   )
   (call $___assert_fail
    (i32.const 20644)
    (i32.const 19136)
    (i32.const 2067)
    (i32.const 20685)
   )
  )
  (if
   (i32.le_s
    (i32.load offset=24
     (local.get $0)
    )
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $6)
    )
    (return)
   )
  )
  (block $__rjto$4
   (block $__rjti$4
    (loop $while-in
     (block $__rjti$3
      (f32.store
       (local.get $7)
       (f32.const 0)
      )
      (i32.store
       (local.get $3)
       (i32.const 0)
      )
      (i32.store
       (local.get $4)
       (i32.const 0)
      )
      (call $_stbir__calculate_sample_range_upsample
       (local.get $2)
       (local.get $10)
       (local.get $8)
       (f32.load offset=52
        (local.get $0)
       )
       (local.get $3)
       (local.get $4)
       (local.get $7)
      )
      (br_if $__rjti$3
       (i32.ge_s
        (i32.sub
         (local.tee $9
          (i32.load
           (local.get $4)
          )
         )
         (local.tee $5
          (i32.load
           (local.get $3)
          )
         )
        )
        (local.tee $11
         (i32.load offset=164
          (local.get $0)
         )
        )
       )
      )
      (block $__rjto$2
       (block $__rjti$2
        (br_if $__rjti$2
         (i32.le_s
          (i32.load offset=176
           (local.get $0)
          )
          (i32.const -1)
         )
        )
        (if
         (i32.gt_s
          (local.get $5)
          (local.tee $1
           (i32.load offset=168
            (local.get $0)
           )
          )
         )
         (block
          (local.set $12
           (i32.load offset=172
            (local.get $0)
           )
          )
          (block $__rjti$1
           (loop $while-in1
            (if
             (i32.ne
              (local.get $1)
              (local.get $12)
             )
             (block
              (i32.store offset=168
               (local.get $0)
               (local.tee $1
                (i32.add
                 (local.get $1)
                 (i32.const 1)
                )
               )
              )
              (i32.store offset=176
               (local.get $0)
               (local.tee $13
                (i32.rem_s
                 (i32.add
                  (i32.load offset=176
                   (local.get $0)
                  )
                  (i32.const 1)
                 )
                 (local.get $11)
                )
               )
              )
              (br_if $while-in1
               (i32.gt_s
                (local.get $5)
                (local.get $1)
               )
              )
              (br $__rjti$1)
             )
            )
           )
           (i32.store offset=176
            (local.get $0)
            (i32.const -1)
           )
           (i32.store offset=168
            (local.get $0)
            (i32.const 0)
           )
           (i32.store offset=172
            (local.get $0)
            (i32.const 0)
           )
           (br $__rjti$2)
          )
          (br_if $__rjti$2
           (i32.lt_s
            (local.get $13)
            (i32.const 0)
           )
          )
         )
        )
        (br $__rjto$2)
       )
       (call $_stbir__decode_and_resample_upsample
        (local.get $0)
        (local.get $5)
       )
      )
      (if
       (i32.gt_s
        (local.get $9)
        (local.tee $1
         (i32.load offset=172
          (local.get $0)
         )
        )
       )
       (loop $while-in3
        (call $_stbir__decode_and_resample_upsample
         (local.get $0)
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (br_if $while-in3
         (i32.gt_s
          (local.get $9)
          (local.tee $1
           (i32.load offset=172
            (local.get $0)
           )
          )
         )
        )
       )
      )
      (call $_stbir__resample_vertical_upsample
       (local.get $0)
       (local.get $2)
      )
      (br_if $while-in
       (i32.lt_s
        (local.tee $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.load offset=24
         (local.get $0)
        )
       )
      )
      (br $__rjti$4)
     )
    )
    (call $___assert_fail
     (i32.const 20713)
     (i32.const 19136)
     (i32.const 2076)
     (i32.const 20685)
    )
    (br $__rjto$4)
   )
   (global.set $STACKTOP
    (local.get $6)
   )
  )
 )
 (func $_stbir__buffer_loop_downsample (; 446 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $9
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 4)
   )
  )
  (local.set $10
   (i32.load offset=24
    (local.get $0)
   )
  )
  (local.set $1
   (i32.load
    (i32.add
     (i32.shl
      (i32.load offset=84
       (local.get $0)
      )
      (i32.const 3)
     )
     (i32.const 4948)
    )
   )
  )
  (local.set $11
   (f32.div
    (call_indirect (type $FUNCSIG$ff)
     (local.tee $7
      (f32.load offset=60
       (local.get $0)
      )
     )
     (i32.and
      (local.get $1)
      (i32.const 7)
     )
    )
    (local.get $7)
   )
  )
  (local.set $8
   (i32.add
    (local.tee $1
     (i32.load offset=148
      (local.get $0)
     )
    )
    (i32.load offset=8
     (local.get $0)
    )
   )
  )
  (if
   (call $_stbir__use_height_upsampling
    (local.get $0)
   )
   (call $___assert_fail
    (i32.const 19777)
    (i32.const 19136)
    (i32.const 2168)
    (i32.const 19819)
   )
  )
  (if
   (i32.le_s
    (local.get $8)
    (local.tee $2
     (i32.sub
      (i32.const 0)
      (local.get $1)
     )
    )
   )
   (block
    (call $_stbir__empty_ring_buffer
     (local.get $0)
     (i32.load offset=24
      (local.get $0)
     )
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (loop $while-in
     (block $__rjti$0
      (call $_stbir__calculate_sample_range_downsample
       (local.get $2)
       (local.get $11)
       (local.get $7)
       (f32.load offset=52
        (local.get $0)
       )
       (local.get $6)
       (local.get $3)
       (local.get $9)
      )
      (br_if $__rjti$0
       (i32.ge_s
        (i32.sub
         (local.tee $4
          (i32.load
           (local.get $3)
          )
         )
         (local.tee $1
          (i32.load
           (local.get $6)
          )
         )
        )
        (i32.load offset=164
         (local.get $0)
        )
       )
      )
      (if
       (i32.and
        (i32.lt_s
         (local.get $1)
         (local.get $10)
        )
        (i32.gt_s
         (local.get $4)
         (i32.const -1)
        )
       )
       (block
        (call $_stbir__empty_ring_buffer
         (local.get $0)
         (local.get $1)
        )
        (call $_stbir__decode_and_resample_downsample
         (local.get $0)
         (local.get $2)
        )
        (if
         (i32.lt_s
          (i32.load offset=176
           (local.get $0)
          )
          (i32.const 0)
         )
         (drop
          (call $_stbir__add_empty_ring_buffer_entry
           (local.get $0)
           (local.get $1)
          )
         )
        )
        (if
         (i32.gt_s
          (local.get $4)
          (local.tee $1
           (i32.load offset=172
            (local.get $0)
           )
          )
         )
         (loop $while-in1
          (drop
           (call $_stbir__add_empty_ring_buffer_entry
            (local.get $0)
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
          )
          (br_if $while-in1
           (i32.gt_s
            (local.get $4)
            (local.tee $1
             (i32.load offset=172
              (local.get $0)
             )
            )
           )
          )
         )
        )
        (call $_stbir__resample_vertical_downsample
         (local.get $0)
         (local.get $2)
        )
       )
      )
      (br_if $while-in
       (i32.lt_s
        (local.tee $2
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (local.get $8)
       )
      )
      (br $__rjti$1)
     )
    )
    (call $___assert_fail
     (i32.const 19849)
     (i32.const 19136)
     (i32.const 2177)
     (i32.const 19819)
    )
    (br $__rjto$1)
   )
   (call $_stbir__empty_ring_buffer
    (local.get $0)
    (i32.load offset=24
     (local.get $0)
    )
   )
   (global.set $STACKTOP
    (local.get $5)
   )
  )
 )
 (func $_stbir__calculate_sample_range_downsample (; 447 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 f32)
  (f32.store
   (local.get $6)
   (f32.sub
    (f32.mul
     (local.tee $7
      (f32.add
       (f32.convert_i32_s
        (local.get $0)
       )
       (f32.const 0.5)
      )
     )
     (local.get $2)
    )
    (local.get $3)
   )
  )
  (i32.store
   (local.get $4)
   (i32.trunc_f64_s
    (f64.floor
     (f64.add
      (f64.promote_f32
       (f32.sub
        (f32.mul
         (f32.sub
          (local.get $7)
          (local.get $1)
         )
         (local.get $2)
        )
        (local.get $3)
       )
      )
      (f64.const 0.5)
     )
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.trunc_f64_s
    (f64.floor
     (f64.add
      (f64.promote_f32
       (f32.sub
        (f32.mul
         (f32.add
          (local.get $7)
          (local.get $1)
         )
         (local.get $2)
        )
        (local.get $3)
       )
      )
      (f64.const -0.5)
     )
    )
   )
  )
 )
 (func $_stbir__empty_ring_buffer (; 448 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $5
   (i32.load offset=28
    (local.get $0)
   )
  )
  (local.set $6
   (i32.load
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
  )
  (local.set $7
   (i32.load offset=68
    (local.get $0)
   )
  )
  (local.set $3
   (i32.load offset=76
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load offset=96
    (local.get $0)
   )
  )
  (local.set $8
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $9
   (i32.load offset=16
    (local.get $0)
   )
  )
  (local.set $10
   (i32.load offset=180
    (local.get $0)
   )
  )
  (local.set $11
   (i32.load offset=160
    (local.get $0)
   )
  )
  (if
   (i32.le_s
    (i32.load offset=176
     (local.get $0)
    )
    (i32.const -1)
   )
   (return)
  )
  (if
   (i32.ge_s
    (local.tee $2
     (i32.load offset=168
      (local.get $0)
     )
    )
    (local.get $1)
   )
   (return)
  )
  (local.set $3
   (i32.add
    (local.get $4)
    (i32.shl
     (local.get $3)
     (i32.const 1)
    )
   )
  )
  (local.set $4
   (i32.shr_u
    (local.get $11)
    (i32.const 2)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in
     (block $while-out
      (if
       (i32.gt_s
        (local.get $2)
        (i32.const -1)
       )
       (if
        (i32.lt_s
         (local.get $2)
         (i32.load offset=24
          (local.get $0)
         )
        )
        (call $_stbir__encode_scanline
         (local.get $0)
         (local.get $8)
         (i32.add
          (local.get $9)
          (i32.mul
           (local.get $2)
           (local.get $5)
          )
         )
         (call $_stbir__get_ring_buffer_entry
          (local.get $10)
          (i32.load offset=176
           (local.get $0)
          )
          (local.get $4)
         )
         (local.get $6)
         (local.get $7)
         (local.get $3)
        )
       )
      )
      (br_if $while-out
       (i32.eq
        (local.tee $2
         (i32.load offset=168
          (local.get $0)
         )
        )
        (i32.load offset=172
         (local.get $0)
        )
       )
      )
      (i32.store offset=168
       (local.get $0)
       (local.tee $2
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
      )
      (i32.store offset=176
       (local.get $0)
       (i32.rem_s
        (i32.add
         (i32.load offset=176
          (local.get $0)
         )
         (i32.const 1)
        )
        (i32.load offset=164
         (local.get $0)
        )
       )
      )
      (br_if $while-in
       (i32.lt_s
        (local.get $2)
        (local.get $1)
       )
      )
      (br $__rjti$0)
     )
    )
    (br $__rjto$0)
   )
   (return)
  )
  (i32.store offset=176
   (local.get $0)
   (i32.const -1)
  )
  (i32.store offset=168
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=172
   (local.get $0)
   (i32.const 0)
  )
 )
 (func $_stbir__decode_and_resample_downsample (; 449 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (call $_stbir__decode_scanline
   (local.get $0)
   (local.get $1)
  )
  (drop
   (call $_memset
    (i32.load offset=124
     (local.get $0)
    )
    (i32.const 0)
    (i32.mul
     (i32.load
      (i32.sub
       (local.get $0)
       (i32.const -64)
      )
     )
     (i32.shl
      (i32.load offset=20
       (local.get $0)
      )
      (i32.const 2)
     )
    )
   )
  )
  (local.set $2
   (i32.eqz
    (call $_stbir__use_width_upsampling
     (local.get $0)
    )
   )
  )
  (local.set $1
   (i32.load offset=124
    (local.get $0)
   )
  )
  (if
   (local.get $2)
   (call $_stbir__resample_horizontal_downsample
    (local.get $0)
    (local.get $1)
   )
   (call $_stbir__resample_horizontal_upsample
    (local.get $0)
    (local.get $1)
   )
  )
 )
 (func $_stbir__add_empty_ring_buffer_entry (; 450 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (i32.store offset=172
   (local.get $0)
   (local.get $1)
  )
  (if
   (i32.lt_s
    (local.tee $2
     (i32.load offset=176
      (local.get $0)
     )
    )
    (i32.const 0)
   )
   (block
    (i32.store offset=176
     (local.get $0)
     (i32.const 0)
    )
    (i32.store offset=168
     (local.get $0)
     (local.get $1)
    )
   )
   (if
    (i32.eq
     (local.tee $1
      (i32.rem_s
       (i32.sub
        (i32.add
         (local.get $1)
         (local.get $2)
        )
        (i32.load offset=168
         (local.get $0)
        )
       )
       (i32.load offset=164
        (local.get $0)
       )
      )
     )
     (local.get $2)
    )
    (call $___assert_fail
     (i32.const 19967)
     (i32.const 19136)
     (i32.const 1429)
     (i32.const 20024)
    )
    (local.set $3
     (local.get $1)
    )
   )
  )
  (drop
   (call $_memset
    (local.tee $1
     (call $_stbir__get_ring_buffer_entry
      (i32.load offset=180
       (local.get $0)
      )
      (local.get $3)
      (i32.shr_u
       (local.tee $0
        (i32.load offset=160
         (local.get $0)
        )
       )
       (i32.const 2)
      )
     )
    )
    (i32.const 0)
    (local.get $0)
   )
  )
  (local.get $1)
 )
 (func $_stbir__resample_vertical_downsample (; 451 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local.set $7
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $11
   (i32.load offset=112
    (local.get $0)
   )
  )
  (local.set $9
   (i32.load
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
  )
  (local.set $12
   (i32.load offset=164
    (local.get $0)
   )
  )
  (local.set $5
   (i32.load offset=124
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load offset=132
    (local.get $0)
   )
  )
  (local.set $13
   (i32.load offset=180
    (local.get $0)
   )
  )
  (local.set $14
   (i32.load offset=176
    (local.get $0)
   )
  )
  (local.set $15
   (i32.load offset=168
    (local.get $0)
   )
  )
  (local.set $16
   (i32.shr_u
    (i32.load offset=160
     (local.get $0)
    )
    (i32.const 2)
   )
  )
  (local.set $1
   (i32.load
    (i32.add
     (local.tee $10
      (i32.load offset=108
       (local.get $0)
      )
     )
     (i32.shl
      (local.tee $2
       (i32.add
        (local.get $1)
        (i32.load offset=148
         (local.get $0)
        )
       )
      )
      (i32.const 3)
     )
    )
   )
  )
  (local.set $10
   (i32.load offset=4
    (i32.add
     (i32.shl
      (local.get $2)
      (i32.const 3)
     )
     (local.get $10)
    )
   )
  )
  (if
   (call $_stbir__use_height_upsampling
    (local.get $0)
   )
   (call $___assert_fail
    (i32.const 19777)
    (i32.const 19136)
    (i32.const 2002)
    (i32.const 19931)
   )
  )
  (if
   (i32.gt_s
    (local.get $1)
    (local.get $10)
   )
   (return)
  )
  (local.set $17
   (i32.sub
    (i32.mul
     (local.get $2)
     (local.get $4)
    )
    (local.get $1)
   )
  )
  (local.set $18
   (i32.gt_s
    (local.get $7)
    (i32.const 0)
   )
  )
  (local.set $19
   (i32.gt_s
    (local.get $7)
    (i32.const 0)
   )
  )
  (local.set $20
   (i32.gt_s
    (local.get $7)
    (i32.const 0)
   )
  )
  (local.set $21
   (i32.gt_s
    (local.get $7)
    (i32.const 0)
   )
  )
  (local.set $22
   (i32.gt_s
    (local.get $7)
    (i32.const 0)
   )
  )
  (local.set $23
   (i32.gt_s
    (local.get $9)
    (i32.const 0)
   )
  )
  (local.set $0
   (local.get $1)
  )
  (loop $while-in
   (local.set $6
    (f32.load
     (i32.add
      (i32.shl
       (i32.add
        (local.get $0)
        (local.get $17)
       )
       (i32.const 2)
      )
      (local.get $11)
     )
    )
   )
   (local.set $4
    (call $_stbir__get_ring_buffer_scanline
     (local.get $0)
     (local.get $13)
     (local.get $14)
     (local.get $15)
     (local.get $12)
     (local.get $16)
    )
   )
   (block $switch
    (block $switch-default
     (block $switch-case10
      (block $switch-case7
       (block $switch-case4
        (block $switch-case
         (br_table $switch-case $switch-case4 $switch-case7 $switch-case10 $switch-default
          (i32.sub
           (local.get $9)
           (i32.const 1)
          )
         )
        )
        (if
         (local.get $19)
         (block
          (local.set $1
           (i32.const 0)
          )
          (loop $while-in1
           (f32.store
            (local.tee $2
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $4)
             )
            )
            (f32.add
             (f32.load
              (local.get $2)
             )
             (f32.mul
              (local.get $6)
              (f32.load
               (i32.add
                (i32.shl
                 (local.get $1)
                 (i32.const 2)
                )
                (local.get $5)
               )
              )
             )
            )
           )
           (br_if $while-in1
            (i32.ne
             (local.tee $1
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (local.get $7)
            )
           )
          )
         )
        )
        (br $switch)
       )
       (if
        (local.get $20)
        (block
         (local.set $1
          (i32.const 0)
         )
         (loop $while-in3
          (f32.store
           (local.tee $3
            (i32.add
             (i32.shl
              (local.tee $2
               (i32.shl
                (local.get $1)
                (i32.const 1)
               )
              )
              (i32.const 2)
             )
             (local.get $4)
            )
           )
           (f32.add
            (f32.load
             (local.get $3)
            )
            (f32.mul
             (local.get $6)
             (f32.load
              (i32.add
               (i32.shl
                (local.get $2)
                (i32.const 2)
               )
               (local.get $5)
              )
             )
            )
           )
          )
          (f32.store
           (local.tee $3
            (i32.add
             (i32.shl
              (local.tee $2
               (i32.or
                (local.get $2)
                (i32.const 1)
               )
              )
              (i32.const 2)
             )
             (local.get $4)
            )
           )
           (f32.add
            (f32.load
             (local.get $3)
            )
            (f32.mul
             (local.get $6)
             (f32.load
              (i32.add
               (i32.shl
                (local.get $2)
                (i32.const 2)
               )
               (local.get $5)
              )
             )
            )
           )
          )
          (br_if $while-in3
           (i32.ne
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.get $7)
           )
          )
         )
        )
       )
       (br $switch)
      )
      (if
       (local.get $21)
       (block
        (local.set $1
         (i32.const 0)
        )
        (loop $while-in6
         (f32.store
          (local.tee $3
           (i32.add
            (i32.shl
             (local.tee $2
              (i32.mul
               (local.get $1)
               (i32.const 3)
              )
             )
             (i32.const 2)
            )
            (local.get $4)
           )
          )
          (f32.add
           (f32.load
            (local.get $3)
           )
           (f32.mul
            (local.get $6)
            (f32.load
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (local.get $5)
             )
            )
           )
          )
         )
         (f32.store
          (local.tee $8
           (i32.add
            (i32.shl
             (local.tee $3
              (i32.add
               (local.get $2)
               (i32.const 1)
              )
             )
             (i32.const 2)
            )
            (local.get $4)
           )
          )
          (f32.add
           (f32.load
            (local.get $8)
           )
           (f32.mul
            (local.get $6)
            (f32.load
             (i32.add
              (i32.shl
               (local.get $3)
               (i32.const 2)
              )
              (local.get $5)
             )
            )
           )
          )
         )
         (f32.store
          (local.tee $3
           (i32.add
            (i32.shl
             (local.tee $2
              (i32.add
               (local.get $2)
               (i32.const 2)
              )
             )
             (i32.const 2)
            )
            (local.get $4)
           )
          )
          (f32.add
           (f32.load
            (local.get $3)
           )
           (f32.mul
            (local.get $6)
            (f32.load
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (local.get $5)
             )
            )
           )
          )
         )
         (br_if $while-in6
          (i32.ne
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
           (local.get $7)
          )
         )
        )
       )
      )
      (br $switch)
     )
     (if
      (local.get $22)
      (block
       (local.set $1
        (i32.const 0)
       )
       (loop $while-in9
        (f32.store
         (local.tee $3
          (i32.add
           (i32.shl
            (local.tee $2
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
            )
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (f32.add
          (f32.load
           (local.get $3)
          )
          (f32.mul
           (local.get $6)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $2)
              (i32.const 2)
             )
             (local.get $5)
            )
           )
          )
         )
        )
        (f32.store
         (local.tee $8
          (i32.add
           (i32.shl
            (local.tee $3
             (i32.or
              (local.get $2)
              (i32.const 1)
             )
            )
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (f32.add
          (f32.load
           (local.get $8)
          )
          (f32.mul
           (local.get $6)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 2)
             )
             (local.get $5)
            )
           )
          )
         )
        )
        (f32.store
         (local.tee $8
          (i32.add
           (i32.shl
            (local.tee $3
             (i32.or
              (local.get $2)
              (i32.const 2)
             )
            )
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (f32.add
          (f32.load
           (local.get $8)
          )
          (f32.mul
           (local.get $6)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 2)
             )
             (local.get $5)
            )
           )
          )
         )
        )
        (f32.store
         (local.tee $3
          (i32.add
           (i32.shl
            (local.tee $2
             (i32.or
              (local.get $2)
              (i32.const 3)
             )
            )
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (f32.add
          (f32.load
           (local.get $3)
          )
          (f32.mul
           (local.get $6)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $2)
              (i32.const 2)
             )
             (local.get $5)
            )
           )
          )
         )
        )
        (br_if $while-in9
         (i32.ne
          (local.get $7)
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
     )
     (br $switch)
    )
    (if
     (local.get $18)
     (block
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in12
       (local.set $3
        (i32.mul
         (local.get $1)
         (local.get $9)
        )
       )
       (if
        (local.get $23)
        (block
         (local.set $2
          (i32.const 0)
         )
         (loop $while-in14
          (f32.store
           (local.tee $24
            (i32.add
             (i32.shl
              (local.tee $8
               (i32.add
                (local.get $2)
                (local.get $3)
               )
              )
              (i32.const 2)
             )
             (local.get $4)
            )
           )
           (f32.add
            (f32.load
             (local.get $24)
            )
            (f32.mul
             (local.get $6)
             (f32.load
              (i32.add
               (i32.shl
                (local.get $8)
                (i32.const 2)
               )
               (local.get $5)
              )
             )
            )
           )
          )
          (br_if $while-in14
           (i32.ne
            (local.get $9)
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
       )
       (br_if $while-in12
        (i32.ne
         (local.get $7)
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
   )
   (local.set $1
    (i32.add
     (local.get $0)
     (i32.const 1)
    )
   )
   (if
    (i32.lt_s
     (local.get $0)
     (local.get $10)
    )
    (block
     (local.set $0
      (local.get $1)
     )
     (br $while-in)
    )
   )
  )
 )
 (func $_stbir__get_ring_buffer_scanline (; 452 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (call $_stbir__get_ring_buffer_entry
   (local.get $1)
   (i32.rem_s
    (i32.sub
     (i32.add
      (local.get $0)
      (local.get $2)
     )
     (local.get $3)
    )
    (local.get $4)
   )
   (local.get $5)
  )
 )
 (func $_stbir__get_ring_buffer_entry (; 453 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (i32.add
   (i32.shl
    (i32.mul
     (local.get $1)
     (local.get $2)
    )
    (i32.const 2)
   )
   (local.get $0)
  )
 )
 (func $_stbir__decode_scanline (; 454 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 f32)
  (local $16 i32)
  (local $17 f32)
  (local.set $3
   (i32.load
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
  )
  (local.set $13
   (i32.load offset=68
    (local.get $0)
   )
  )
  (local.set $4
   (i32.load offset=76
    (local.get $0)
   )
  )
  (local.set $5
   (i32.load offset=96
    (local.get $0)
   )
  )
  (local.set $6
   (i32.load offset=4
    (local.get $0)
   )
  )
  (local.set $7
   (i32.load offset=12
    (local.get $0)
   )
  )
  (local.set $8
   (call $_stbir__get_decode_buffer
    (local.get $0)
   )
  )
  (local.set $14
   (i32.load offset=88
    (local.get $0)
   )
  )
  (local.set $10
   (call $_stbir__edge_wrap
    (local.tee $9
     (i32.load offset=92
      (local.get $0)
     )
    )
    (local.get $1)
    (i32.load offset=8
     (local.get $0)
    )
   )
  )
  (local.set $16
   (i32.load
    (local.get $0)
   )
  )
  (local.set $12
   (i32.add
    (local.get $6)
    (local.tee $11
     (i32.load offset=144
      (local.get $0)
     )
    )
   )
  )
  (local.set $2
   (i32.sub
    (i32.const 0)
    (local.get $11)
   )
  )
  (if
   (i32.eq
    (local.get $9)
    (i32.const 4)
   )
   (block $do-once
    (if
     (i32.ge_s
      (local.get $1)
      (i32.const 0)
     )
     (br_if $do-once
      (i32.gt_s
       (i32.load offset=8
        (local.get $0)
       )
       (local.get $1)
      )
     )
    )
    (if
     (i32.le_s
      (local.get $12)
      (local.get $2)
     )
     (return)
    )
    (local.set $1
     (i32.gt_s
      (local.get $3)
      (i32.const 0)
     )
    )
    (local.set $2
     (i32.shl
      (local.get $3)
      (i32.const 2)
     )
    )
    (local.set $6
     (i32.add
      (local.get $6)
      (i32.shl
       (local.get $11)
       (i32.const 1)
      )
     )
    )
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in
     (if
      (local.get $1)
      (drop
       (call $_memset
        (i32.add
         (i32.shl
          (i32.mul
           (local.get $3)
           (i32.sub
            (local.get $0)
            (local.get $11)
           )
          )
          (i32.const 2)
         )
         (local.get $8)
        )
        (i32.const 0)
        (local.get $2)
       )
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.get $6)
      )
     )
    )
    (return)
   )
  )
  (local.set $7
   (i32.add
    (i32.mul
     (local.get $7)
     (local.get $10)
    )
    (local.get $16)
   )
  )
  (block $switch
   (block $switch-default
    (block $switch-case38
     (block $switch-case33
      (block $switch-case28
       (block $switch-case23
        (block $switch-case18
         (block $switch-case13
          (block $switch-case8
           (block $switch-case
            (br_table $switch-case $switch-case8 $switch-case13 $switch-case18 $switch-case23 $switch-case28 $switch-case33 $switch-case38 $switch-default
             (i32.add
              (i32.shl
               (local.get $4)
               (i32.const 1)
              )
              (local.get $5)
             )
            )
           )
           (if
            (i32.gt_s
             (local.get $12)
             (local.get $2)
            )
            (block
             (local.set $4
              (i32.gt_s
               (local.get $3)
               (i32.const 0)
              )
             )
             (local.set $5
              (i32.add
               (local.get $6)
               (local.get $11)
              )
             )
             (loop $while-in1
              (local.set $9
               (i32.mul
                (local.get $2)
                (local.get $3)
               )
              )
              (local.set $10
               (i32.mul
                (call $_stbir__edge_wrap
                 (local.get $14)
                 (local.get $2)
                 (local.get $6)
                )
                (local.get $3)
               )
              )
              (if
               (local.get $4)
               (block
                (local.set $1
                 (i32.const 0)
                )
                (loop $while-in3
                 (f32.store
                  (i32.add
                   (i32.shl
                    (i32.add
                     (local.get $1)
                     (local.get $9)
                    )
                    (i32.const 2)
                   )
                   (local.get $8)
                  )
                  (f32.div
                   (f32.convert_i32_s
                    (i32.load8_u
                     (i32.add
                      (local.get $7)
                      (i32.add
                       (local.get $1)
                       (local.get $10)
                      )
                     )
                    )
                   )
                   (f32.const 255)
                  )
                 )
                 (br_if $while-in3
                  (i32.ne
                   (local.tee $1
                    (i32.add
                     (local.get $1)
                     (i32.const 1)
                    )
                   )
                   (local.get $3)
                  )
                 )
                )
               )
              )
              (br_if $while-in1
               (i32.ne
                (local.tee $2
                 (i32.add
                  (local.get $2)
                  (i32.const 1)
                 )
                )
                (local.get $5)
               )
              )
             )
            )
           )
           (br $switch)
          )
          (if
           (i32.gt_s
            (local.get $12)
            (local.get $2)
           )
           (block
            (local.set $9
             (i32.gt_s
              (local.get $3)
              (i32.const 0)
             )
            )
            (local.set $10
             (i32.add
              (local.get $6)
              (local.get $11)
             )
            )
            (loop $while-in5
             (local.set $4
              (i32.mul
               (local.get $2)
               (local.get $3)
              )
             )
             (local.set $5
              (i32.mul
               (call $_stbir__edge_wrap
                (local.get $14)
                (local.get $2)
                (local.get $6)
               )
               (local.get $3)
              )
             )
             (if
              (local.get $9)
              (block
               (local.set $1
                (i32.const 0)
               )
               (loop $while-in7
                (i32.store
                 (i32.add
                  (i32.shl
                   (i32.add
                    (local.get $1)
                    (local.get $4)
                   )
                   (i32.const 2)
                  )
                  (local.get $8)
                 )
                 (i32.load
                  (i32.add
                   (i32.shl
                    (i32.load8_u
                     (i32.add
                      (local.get $7)
                      (i32.add
                       (local.get $1)
                       (local.get $5)
                      )
                     )
                    )
                    (i32.const 2)
                   )
                   (i32.const 4992)
                  )
                 )
                )
                (br_if $while-in7
                 (i32.ne
                  (local.tee $1
                   (i32.add
                    (local.get $1)
                    (i32.const 1)
                   )
                  )
                  (local.get $3)
                 )
                )
               )
              )
             )
             (if
              (i32.eqz
               (i32.and
                (i32.load offset=72
                 (local.get $0)
                )
                (i32.const 2)
               )
              )
              (f32.store
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $4)
                  (local.get $13)
                 )
                 (i32.const 2)
                )
                (local.get $8)
               )
               (f32.div
                (f32.convert_i32_s
                 (i32.load8_u
                  (i32.add
                   (local.get $7)
                   (i32.add
                    (local.get $5)
                    (local.get $13)
                   )
                  )
                 )
                )
                (f32.const 255)
               )
              )
             )
             (br_if $while-in5
              (i32.ne
               (local.tee $2
                (i32.add
                 (local.get $2)
                 (i32.const 1)
                )
               )
               (local.get $10)
              )
             )
            )
           )
          )
          (br $switch)
         )
         (if
          (i32.gt_s
           (local.get $12)
           (local.get $2)
          )
          (block
           (local.set $4
            (i32.gt_s
             (local.get $3)
             (i32.const 0)
            )
           )
           (local.set $5
            (i32.add
             (local.get $6)
             (local.get $11)
            )
           )
           (loop $while-in10
            (local.set $9
             (i32.mul
              (local.get $2)
              (local.get $3)
             )
            )
            (local.set $10
             (i32.mul
              (call $_stbir__edge_wrap
               (local.get $14)
               (local.get $2)
               (local.get $6)
              )
              (local.get $3)
             )
            )
            (if
             (local.get $4)
             (block
              (local.set $1
               (i32.const 0)
              )
              (loop $while-in12
               (f32.store
                (i32.add
                 (i32.shl
                  (i32.add
                   (local.get $1)
                   (local.get $9)
                  )
                  (i32.const 2)
                 )
                 (local.get $8)
                )
                (f32.div
                 (f32.convert_i32_s
                  (i32.load16_u
                   (i32.add
                    (i32.shl
                     (i32.add
                      (local.get $1)
                      (local.get $10)
                     )
                     (i32.const 1)
                    )
                    (local.get $7)
                   )
                  )
                 )
                 (f32.const 65535)
                )
               )
               (br_if $while-in12
                (i32.ne
                 (local.tee $1
                  (i32.add
                   (local.get $1)
                   (i32.const 1)
                  )
                 )
                 (local.get $3)
                )
               )
              )
             )
            )
            (br_if $while-in10
             (i32.ne
              (local.tee $2
               (i32.add
                (local.get $2)
                (i32.const 1)
               )
              )
              (local.get $5)
             )
            )
           )
          )
         )
         (br $switch)
        )
        (if
         (i32.gt_s
          (local.get $12)
          (local.get $2)
         )
         (block
          (local.set $9
           (i32.gt_s
            (local.get $3)
            (i32.const 0)
           )
          )
          (local.set $10
           (i32.add
            (local.get $6)
            (local.get $11)
           )
          )
          (loop $while-in15
           (local.set $4
            (i32.mul
             (local.get $2)
             (local.get $3)
            )
           )
           (local.set $5
            (i32.mul
             (call $_stbir__edge_wrap
              (local.get $14)
              (local.get $2)
              (local.get $6)
             )
             (local.get $3)
            )
           )
           (if
            (local.get $9)
            (block
             (local.set $1
              (i32.const 0)
             )
             (loop $while-in17
              (f32.store
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $1)
                  (local.get $4)
                 )
                 (i32.const 2)
                )
                (local.get $8)
               )
               (call $_stbir__srgb_to_linear
                (f32.div
                 (f32.convert_i32_s
                  (i32.load16_u
                   (i32.add
                    (i32.shl
                     (i32.add
                      (local.get $1)
                      (local.get $5)
                     )
                     (i32.const 1)
                    )
                    (local.get $7)
                   )
                  )
                 )
                 (f32.const 65535)
                )
               )
              )
              (br_if $while-in17
               (i32.ne
                (local.get $3)
                (local.tee $1
                 (i32.add
                  (local.get $1)
                  (i32.const 1)
                 )
                )
               )
              )
             )
            )
           )
           (if
            (i32.eqz
             (i32.and
              (i32.load offset=72
               (local.get $0)
              )
              (i32.const 2)
             )
            )
            (f32.store
             (i32.add
              (i32.shl
               (i32.add
                (local.get $4)
                (local.get $13)
               )
               (i32.const 2)
              )
              (local.get $8)
             )
             (f32.div
              (f32.convert_i32_s
               (i32.load16_u
                (i32.add
                 (i32.shl
                  (i32.add
                   (local.get $5)
                   (local.get $13)
                  )
                  (i32.const 1)
                 )
                 (local.get $7)
                )
               )
              )
              (f32.const 65535)
             )
            )
           )
           (br_if $while-in15
            (i32.ne
             (local.tee $2
              (i32.add
               (local.get $2)
               (i32.const 1)
              )
             )
             (local.get $10)
            )
           )
          )
         )
        )
        (br $switch)
       )
       (if
        (i32.gt_s
         (local.get $12)
         (local.get $2)
        )
        (block
         (local.set $4
          (i32.gt_s
           (local.get $3)
           (i32.const 0)
          )
         )
         (local.set $5
          (i32.add
           (local.get $6)
           (local.get $11)
          )
         )
         (loop $while-in20
          (local.set $9
           (i32.mul
            (local.get $2)
            (local.get $3)
           )
          )
          (local.set $10
           (i32.mul
            (call $_stbir__edge_wrap
             (local.get $14)
             (local.get $2)
             (local.get $6)
            )
            (local.get $3)
           )
          )
          (if
           (local.get $4)
           (block
            (local.set $1
             (i32.const 0)
            )
            (loop $while-in22
             (f32.store
              (i32.add
               (i32.shl
                (i32.add
                 (local.get $1)
                 (local.get $9)
                )
                (i32.const 2)
               )
               (local.get $8)
              )
              (f32.demote_f64
               (f64.div
                (f64.convert_i32_u
                 (i32.load
                  (i32.add
                   (i32.shl
                    (i32.add
                     (local.get $1)
                     (local.get $10)
                    )
                    (i32.const 2)
                   )
                   (local.get $7)
                  )
                 )
                )
                (f64.const 4294967295)
               )
              )
             )
             (br_if $while-in22
              (i32.ne
               (local.get $3)
               (local.tee $1
                (i32.add
                 (local.get $1)
                 (i32.const 1)
                )
               )
              )
             )
            )
           )
          )
          (br_if $while-in20
           (i32.ne
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
            (local.get $5)
           )
          )
         )
        )
       )
       (br $switch)
      )
      (if
       (i32.gt_s
        (local.get $12)
        (local.get $2)
       )
       (block
        (local.set $9
         (i32.gt_s
          (local.get $3)
          (i32.const 0)
         )
        )
        (local.set $10
         (i32.add
          (local.get $6)
          (local.get $11)
         )
        )
        (loop $while-in25
         (local.set $4
          (i32.mul
           (local.get $2)
           (local.get $3)
          )
         )
         (local.set $5
          (i32.mul
           (call $_stbir__edge_wrap
            (local.get $14)
            (local.get $2)
            (local.get $6)
           )
           (local.get $3)
          )
         )
         (if
          (local.get $9)
          (block
           (local.set $1
            (i32.const 0)
           )
           (loop $while-in27
            (f32.store
             (i32.add
              (i32.shl
               (i32.add
                (local.get $1)
                (local.get $4)
               )
               (i32.const 2)
              )
              (local.get $8)
             )
             (call $_stbir__srgb_to_linear
              (f32.demote_f64
               (f64.div
                (f64.convert_i32_u
                 (i32.load
                  (i32.add
                   (i32.shl
                    (i32.add
                     (local.get $1)
                     (local.get $5)
                    )
                    (i32.const 2)
                   )
                   (local.get $7)
                  )
                 )
                )
                (f64.const 4294967295)
               )
              )
             )
            )
            (br_if $while-in27
             (i32.ne
              (local.get $3)
              (local.tee $1
               (i32.add
                (local.get $1)
                (i32.const 1)
               )
              )
             )
            )
           )
          )
         )
         (if
          (i32.eqz
           (i32.and
            (i32.load offset=72
             (local.get $0)
            )
            (i32.const 2)
           )
          )
          (f32.store
           (i32.add
            (i32.shl
             (i32.add
              (local.get $4)
              (local.get $13)
             )
             (i32.const 2)
            )
            (local.get $8)
           )
           (f32.demote_f64
            (f64.div
             (f64.convert_i32_u
              (i32.load
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $5)
                  (local.get $13)
                 )
                 (i32.const 2)
                )
                (local.get $7)
               )
              )
             )
             (f64.const 4294967295)
            )
           )
          )
         )
         (br_if $while-in25
          (i32.ne
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
           (local.get $10)
          )
         )
        )
       )
      )
      (br $switch)
     )
     (if
      (i32.gt_s
       (local.get $12)
       (local.get $2)
      )
      (block
       (local.set $4
        (i32.gt_s
         (local.get $3)
         (i32.const 0)
        )
       )
       (local.set $5
        (i32.add
         (local.get $6)
         (local.get $11)
        )
       )
       (loop $while-in30
        (local.set $9
         (i32.mul
          (local.get $2)
          (local.get $3)
         )
        )
        (local.set $10
         (i32.mul
          (call $_stbir__edge_wrap
           (local.get $14)
           (local.get $2)
           (local.get $6)
          )
          (local.get $3)
         )
        )
        (if
         (local.get $4)
         (block
          (local.set $1
           (i32.const 0)
          )
          (loop $while-in32
           (i32.store
            (i32.add
             (i32.shl
              (i32.add
               (local.get $1)
               (local.get $9)
              )
              (i32.const 2)
             )
             (local.get $8)
            )
            (i32.load
             (i32.add
              (i32.shl
               (i32.add
                (local.get $1)
                (local.get $10)
               )
               (i32.const 2)
              )
              (local.get $7)
             )
            )
           )
           (br_if $while-in32
            (i32.ne
             (local.get $3)
             (local.tee $1
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
            )
           )
          )
         )
        )
        (br_if $while-in30
         (i32.ne
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
          (local.get $5)
         )
        )
       )
      )
     )
     (br $switch)
    )
    (if
     (i32.gt_s
      (local.get $12)
      (local.get $2)
     )
     (block
      (local.set $9
       (i32.gt_s
        (local.get $3)
        (i32.const 0)
       )
      )
      (local.set $10
       (i32.add
        (local.get $6)
        (local.get $11)
       )
      )
      (loop $while-in35
       (local.set $4
        (i32.mul
         (local.get $2)
         (local.get $3)
        )
       )
       (local.set $5
        (i32.mul
         (call $_stbir__edge_wrap
          (local.get $14)
          (local.get $2)
          (local.get $6)
         )
         (local.get $3)
        )
       )
       (if
        (local.get $9)
        (block
         (local.set $1
          (i32.const 0)
         )
         (loop $while-in37
          (f32.store
           (i32.add
            (i32.shl
             (i32.add
              (local.get $1)
              (local.get $4)
             )
             (i32.const 2)
            )
            (local.get $8)
           )
           (call $_stbir__srgb_to_linear
            (f32.load
             (i32.add
              (i32.shl
               (i32.add
                (local.get $1)
                (local.get $5)
               )
               (i32.const 2)
              )
              (local.get $7)
             )
            )
           )
          )
          (br_if $while-in37
           (i32.ne
            (local.get $3)
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
       )
       (if
        (i32.eqz
         (i32.and
          (i32.load offset=72
           (local.get $0)
          )
          (i32.const 2)
         )
        )
        (i32.store
         (i32.add
          (i32.shl
           (i32.add
            (local.get $4)
            (local.get $13)
           )
           (i32.const 2)
          )
          (local.get $8)
         )
         (i32.load
          (i32.add
           (i32.shl
            (i32.add
             (local.get $5)
             (local.get $13)
            )
            (i32.const 2)
           )
           (local.get $7)
          )
         )
        )
       )
       (br_if $while-in35
        (i32.ne
         (local.tee $2
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
         (local.get $10)
        )
       )
      )
     )
    )
    (br $switch)
   )
   (call $___assert_fail
    (i32.const 20440)
    (i32.const 19136)
    (i32.const 1366)
    (i32.const 20489)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load offset=72
      (local.get $0)
     )
     (i32.const 1)
    )
   )
   (if
    (i32.gt_s
     (local.get $12)
     (local.tee $1
      (i32.sub
       (i32.const 0)
       (i32.load offset=144
        (local.get $0)
       )
      )
     )
    )
    (block
     (local.set $4
      (i32.gt_s
       (local.get $3)
       (i32.const 0)
      )
     )
     (loop $while-in40
      (local.set $15
       (f32.add
        (local.tee $17
         (f32.load
          (local.tee $2
           (i32.add
            (i32.shl
             (i32.add
              (local.tee $5
               (i32.mul
                (local.get $1)
                (local.get $3)
               )
              )
              (local.get $13)
             )
             (i32.const 2)
            )
            (local.get $8)
           )
          )
         )
        )
        (f32.const 8.271806125530277e-25)
       )
      )
      (if
       (i32.eq
        (i32.load offset=76
         (local.get $0)
        )
        (i32.const 3)
       )
       (local.set $15
        (local.get $17)
       )
       (f32.store
        (local.get $2)
        (local.get $15)
       )
      )
      (if
       (local.get $4)
       (block
        (local.set $2
         (i32.const 0)
        )
        (loop $while-in42
         (local.set $7
          (i32.add
           (i32.shl
            (i32.add
             (local.get $2)
             (local.get $5)
            )
            (i32.const 2)
           )
           (local.get $8)
          )
         )
         (if
          (i32.ne
           (local.get $2)
           (local.get $13)
          )
          (f32.store
           (local.get $7)
           (f32.mul
            (local.get $15)
            (f32.load
             (local.get $7)
            )
           )
          )
         )
         (br_if $while-in42
          (i32.ne
           (local.get $3)
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
      )
      (br_if $while-in40
       (i32.ne
        (local.get $12)
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
       )
      )
     )
    )
   )
  )
  (if
   (i32.ne
    (local.get $14)
    (i32.const 4)
   )
   (return)
  )
  (if
   (i32.gt_s
    (local.tee $1
     (i32.load offset=144
      (local.get $0)
     )
    )
    (i32.const 0)
   )
   (block
    (local.set $2
     (i32.gt_s
      (local.get $3)
      (i32.const 0)
     )
    )
    (local.set $7
     (i32.shl
      (local.get $3)
      (i32.const 2)
     )
    )
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in44
     (if
      (local.get $2)
      (drop
       (call $_memset
        (i32.add
         (i32.shl
          (i32.mul
           (i32.sub
            (local.get $0)
            (local.get $1)
           )
           (local.get $3)
          )
          (i32.const 2)
         )
         (local.get $8)
        )
        (i32.const 0)
        (local.get $7)
       )
      )
     )
     (br_if $while-in44
      (i32.ne
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.get $1)
      )
     )
    )
   )
  )
  (if
   (i32.le_s
    (local.get $11)
    (i32.const 0)
   )
   (return)
  )
  (local.set $2
   (i32.gt_s
    (local.get $3)
    (i32.const 0)
   )
  )
  (local.set $11
   (i32.shl
    (local.get $3)
    (i32.const 2)
   )
  )
  (local.set $0
   (local.get $6)
  )
  (local.set $1
   (i32.const 0)
  )
  (loop $while-in46
   (if
    (local.get $2)
    (drop
     (call $_memset
      (i32.add
       (i32.shl
        (i32.mul
         (i32.add
          (local.get $1)
          (local.get $6)
         )
         (local.get $3)
        )
        (i32.const 2)
       )
       (local.get $8)
      )
      (i32.const 0)
      (local.get $11)
     )
    )
   )
   (local.set $1
    (i32.add
     (local.get $1)
     (i32.const 1)
    )
   )
   (br_if $while-in46
    (i32.lt_s
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (local.get $12)
    )
   )
  )
 )
 (func $_stbir__use_width_upsampling (; 455 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (call $_stbir__use_upsampling
   (f32.load offset=56
    (local.get $0)
   )
  )
 )
 (func $_stbir__resample_horizontal_upsample (; 456 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local.set $15
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $12
   (i32.load
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
  )
  (local.set $8
   (call $_stbir__get_decode_buffer
    (local.get $0)
   )
  )
  (local.set $16
   (i32.load offset=100
    (local.get $0)
   )
  )
  (local.set $13
   (i32.load offset=104
    (local.get $0)
   )
  )
  (local.set $18
   (i32.load offset=128
    (local.get $0)
   )
  )
  (if
   (i32.le_s
    (local.get $15)
    (i32.const 0)
   )
   (return)
  )
  (local.set $19
   (i32.gt_s
    (local.get $12)
    (i32.const 0)
   )
  )
  (block $switch13
   (block $switch-case23
    (block $switch-case22
     (block $switch-case21
      (block $switch-case20
       (block $switch-case19
        (block $switch-case18
         (block $switch-case17
          (block $switch-case16
           (block $switch-case15
            (block $switch-case14
             (br_table $switch-case14 $switch13 $switch-case15 $switch13 $switch-case16 $switch13 $switch-case17 $switch13 $switch-case18 $switch13 $switch13 $switch13 $switch13 $switch-case19 $switch13 $switch13 $switch13 $switch13 $switch-case20 $switch13 $switch13 $switch13 $switch13 $switch-case21 $switch13 $switch13 $switch13 $switch13 $switch-case22 $switch13 $switch13 $switch13 $switch13 $switch-case23 $switch13
              (i32.sub
               (loop $label$continue$L4 (result i32)
                (block $label$break$L4 (result i32)
                 (drop
                  (br_if $label$break$L4
                   (i32.const 4)
                   (i32.lt_s
                    (local.tee $7
                     (i32.load offset=4
                      (i32.add
                       (i32.shl
                        (local.get $11)
                        (i32.const 3)
                       )
                       (local.get $16)
                      )
                     )
                    )
                    (local.tee $2
                     (i32.load
                      (i32.add
                       (i32.shl
                        (local.get $11)
                        (i32.const 3)
                       )
                       (local.get $16)
                      )
                     )
                    )
                   )
                  )
                 )
                 (drop
                  (br_if $label$break$L4
                   (i32.const 6)
                   (i32.lt_s
                    (local.get $2)
                    (local.tee $5
                     (i32.sub
                      (i32.const 0)
                      (local.tee $3
                       (i32.load offset=144
                        (local.get $0)
                       )
                      )
                     )
                    )
                   )
                  )
                 )
                 (drop
                  (br_if $label$break$L4
                   (i32.const 8)
                   (i32.lt_s
                    (local.get $7)
                    (local.get $5)
                   )
                  )
                 )
                 (drop
                  (br_if $label$break$L4
                   (i32.const 10)
                   (i32.ge_s
                    (local.get $2)
                    (local.tee $3
                     (i32.add
                      (local.get $3)
                      (i32.load offset=4
                       (local.get $0)
                      )
                     )
                    )
                   )
                  )
                 )
                 (drop
                  (br_if $label$break$L4
                   (i32.const 12)
                   (i32.ge_s
                    (local.get $7)
                    (local.get $3)
                   )
                  )
                 )
                 (local.set $4
                  (i32.mul
                   (local.get $11)
                   (local.get $12)
                  )
                 )
                 (local.set $14
                  (i32.mul
                   (local.get $11)
                   (local.get $18)
                  )
                 )
                 (block $switch
                  (block $switch-default
                   (block $switch-case8
                    (block $switch-case5
                     (block $switch-case2
                      (block $switch-case
                       (br_table $switch-case $switch-case2 $switch-case5 $switch-case8 $switch-default
                        (i32.sub
                         (local.get $12)
                         (i32.const 1)
                        )
                       )
                      )
                      (if
                       (i32.le_s
                        (local.get $2)
                        (local.get $7)
                       )
                       (block
                        (local.set $4
                         (i32.add
                          (i32.shl
                           (local.get $4)
                           (i32.const 2)
                          )
                          (local.get $1)
                         )
                        )
                        (local.set $3
                         (i32.const 0)
                        )
                        (loop $while-in
                         (drop
                          (br_if $label$break$L4
                           (i32.const 17)
                           (f32.eq
                            (local.tee $6
                             (f32.load
                              (i32.add
                               (i32.shl
                                (i32.add
                                 (local.get $3)
                                 (local.get $14)
                                )
                                (i32.const 2)
                               )
                               (local.get $13)
                              )
                             )
                            )
                            (f32.const 0)
                           )
                          )
                         )
                         (local.set $3
                          (i32.add
                           (local.get $3)
                           (i32.const 1)
                          )
                         )
                         (f32.store
                          (local.get $4)
                          (f32.add
                           (f32.load
                            (local.get $4)
                           )
                           (f32.mul
                            (local.get $6)
                            (f32.load
                             (i32.add
                              (i32.shl
                               (local.get $2)
                               (i32.const 2)
                              )
                              (local.get $8)
                             )
                            )
                           )
                          )
                         )
                         (local.set $5
                          (i32.add
                           (local.get $2)
                           (i32.const 1)
                          )
                         )
                         (if
                          (i32.lt_s
                           (local.get $2)
                           (local.get $7)
                          )
                          (block
                           (local.set $2
                            (local.get $5)
                           )
                           (br $while-in)
                          )
                         )
                        )
                       )
                      )
                      (br $switch)
                     )
                     (if
                      (i32.le_s
                       (local.get $2)
                       (local.get $7)
                      )
                      (block
                       (local.set $9
                        (i32.add
                         (i32.shl
                          (local.get $4)
                          (i32.const 2)
                         )
                         (local.get $1)
                        )
                       )
                       (local.set $4
                        (i32.add
                         (i32.shl
                          (i32.add
                           (local.get $4)
                           (i32.const 1)
                          )
                          (i32.const 2)
                         )
                         (local.get $1)
                        )
                       )
                       (local.set $3
                        (i32.const 0)
                       )
                       (loop $while-in1
                        (drop
                         (br_if $label$break$L4
                          (i32.const 22)
                          (f32.eq
                           (local.tee $6
                            (f32.load
                             (i32.add
                              (i32.shl
                               (i32.add
                                (local.get $3)
                                (local.get $14)
                               )
                               (i32.const 2)
                              )
                              (local.get $13)
                             )
                            )
                           )
                           (f32.const 0)
                          )
                         )
                        )
                        (local.set $3
                         (i32.add
                          (local.get $3)
                          (i32.const 1)
                         )
                        )
                        (f32.store
                         (local.get $9)
                         (f32.add
                          (f32.load
                           (local.get $9)
                          )
                          (f32.mul
                           (local.get $6)
                           (f32.load
                            (i32.add
                             (i32.shl
                              (local.tee $5
                               (i32.shl
                                (local.get $2)
                                (i32.const 1)
                               )
                              )
                              (i32.const 2)
                             )
                             (local.get $8)
                            )
                           )
                          )
                         )
                        )
                        (f32.store
                         (local.get $4)
                         (f32.add
                          (f32.load
                           (local.get $4)
                          )
                          (f32.mul
                           (local.get $6)
                           (f32.load
                            (i32.add
                             (i32.shl
                              (i32.or
                               (local.get $5)
                               (i32.const 1)
                              )
                              (i32.const 2)
                             )
                             (local.get $8)
                            )
                           )
                          )
                         )
                        )
                        (local.set $5
                         (i32.add
                          (local.get $2)
                          (i32.const 1)
                         )
                        )
                        (if
                         (i32.lt_s
                          (local.get $2)
                          (local.get $7)
                         )
                         (block
                          (local.set $2
                           (local.get $5)
                          )
                          (br $while-in1)
                         )
                        )
                       )
                      )
                     )
                     (br $switch)
                    )
                    (if
                     (i32.le_s
                      (local.get $2)
                      (local.get $7)
                     )
                     (block
                      (local.set $9
                       (i32.add
                        (i32.shl
                         (local.get $4)
                         (i32.const 2)
                        )
                        (local.get $1)
                       )
                      )
                      (local.set $10
                       (i32.add
                        (i32.shl
                         (i32.add
                          (local.get $4)
                          (i32.const 1)
                         )
                         (i32.const 2)
                        )
                        (local.get $1)
                       )
                      )
                      (local.set $4
                       (i32.add
                        (i32.shl
                         (i32.add
                          (local.get $4)
                          (i32.const 2)
                         )
                         (i32.const 2)
                        )
                        (local.get $1)
                       )
                      )
                      (local.set $3
                       (i32.const 0)
                      )
                      (loop $while-in4
                       (drop
                        (br_if $label$break$L4
                         (i32.const 27)
                         (f32.eq
                          (local.tee $6
                           (f32.load
                            (i32.add
                             (i32.shl
                              (i32.add
                               (local.get $3)
                               (local.get $14)
                              )
                              (i32.const 2)
                             )
                             (local.get $13)
                            )
                           )
                          )
                          (f32.const 0)
                         )
                        )
                       )
                       (local.set $3
                        (i32.add
                         (local.get $3)
                         (i32.const 1)
                        )
                       )
                       (f32.store
                        (local.get $9)
                        (f32.add
                         (f32.load
                          (local.get $9)
                         )
                         (f32.mul
                          (local.get $6)
                          (f32.load
                           (i32.add
                            (i32.shl
                             (local.tee $5
                              (i32.mul
                               (local.get $2)
                               (i32.const 3)
                              )
                             )
                             (i32.const 2)
                            )
                            (local.get $8)
                           )
                          )
                         )
                        )
                       )
                       (f32.store
                        (local.get $10)
                        (f32.add
                         (f32.load
                          (local.get $10)
                         )
                         (f32.mul
                          (local.get $6)
                          (f32.load
                           (i32.add
                            (i32.shl
                             (i32.add
                              (local.get $5)
                              (i32.const 1)
                             )
                             (i32.const 2)
                            )
                            (local.get $8)
                           )
                          )
                         )
                        )
                       )
                       (f32.store
                        (local.get $4)
                        (f32.add
                         (f32.load
                          (local.get $4)
                         )
                         (f32.mul
                          (local.get $6)
                          (f32.load
                           (i32.add
                            (i32.shl
                             (i32.add
                              (local.get $5)
                              (i32.const 2)
                             )
                             (i32.const 2)
                            )
                            (local.get $8)
                           )
                          )
                         )
                        )
                       )
                       (local.set $5
                        (i32.add
                         (local.get $2)
                         (i32.const 1)
                        )
                       )
                       (if
                        (i32.lt_s
                         (local.get $2)
                         (local.get $7)
                        )
                        (block
                         (local.set $2
                          (local.get $5)
                         )
                         (br $while-in4)
                        )
                       )
                      )
                     )
                    )
                    (br $switch)
                   )
                   (if
                    (i32.le_s
                     (local.get $2)
                     (local.get $7)
                    )
                    (block
                     (local.set $9
                      (i32.add
                       (i32.shl
                        (local.get $4)
                        (i32.const 2)
                       )
                       (local.get $1)
                      )
                     )
                     (local.set $10
                      (i32.add
                       (i32.shl
                        (i32.add
                         (local.get $4)
                         (i32.const 1)
                        )
                        (i32.const 2)
                       )
                       (local.get $1)
                      )
                     )
                     (local.set $17
                      (i32.add
                       (i32.shl
                        (i32.add
                         (local.get $4)
                         (i32.const 2)
                        )
                        (i32.const 2)
                       )
                       (local.get $1)
                      )
                     )
                     (local.set $4
                      (i32.add
                       (i32.shl
                        (i32.add
                         (local.get $4)
                         (i32.const 3)
                        )
                        (i32.const 2)
                       )
                       (local.get $1)
                      )
                     )
                     (local.set $3
                      (i32.const 0)
                     )
                     (loop $while-in7
                      (drop
                       (br_if $label$break$L4
                        (i32.const 32)
                        (f32.eq
                         (local.tee $6
                          (f32.load
                           (i32.add
                            (i32.shl
                             (i32.add
                              (local.get $3)
                              (local.get $14)
                             )
                             (i32.const 2)
                            )
                            (local.get $13)
                           )
                          )
                         )
                         (f32.const 0)
                        )
                       )
                      )
                      (local.set $3
                       (i32.add
                        (local.get $3)
                        (i32.const 1)
                       )
                      )
                      (f32.store
                       (local.get $9)
                       (f32.add
                        (f32.load
                         (local.get $9)
                        )
                        (f32.mul
                         (local.get $6)
                         (f32.load
                          (i32.add
                           (i32.shl
                            (local.tee $5
                             (i32.shl
                              (local.get $2)
                              (i32.const 2)
                             )
                            )
                            (i32.const 2)
                           )
                           (local.get $8)
                          )
                         )
                        )
                       )
                      )
                      (f32.store
                       (local.get $10)
                       (f32.add
                        (f32.load
                         (local.get $10)
                        )
                        (f32.mul
                         (local.get $6)
                         (f32.load
                          (i32.add
                           (i32.shl
                            (i32.or
                             (local.get $5)
                             (i32.const 1)
                            )
                            (i32.const 2)
                           )
                           (local.get $8)
                          )
                         )
                        )
                       )
                      )
                      (f32.store
                       (local.get $17)
                       (f32.add
                        (f32.load
                         (local.get $17)
                        )
                        (f32.mul
                         (local.get $6)
                         (f32.load
                          (i32.add
                           (i32.shl
                            (i32.or
                             (local.get $5)
                             (i32.const 2)
                            )
                            (i32.const 2)
                           )
                           (local.get $8)
                          )
                         )
                        )
                       )
                      )
                      (f32.store
                       (local.get $4)
                       (f32.add
                        (f32.load
                         (local.get $4)
                        )
                        (f32.mul
                         (local.get $6)
                         (f32.load
                          (i32.add
                           (i32.shl
                            (i32.or
                             (local.get $5)
                             (i32.const 3)
                            )
                            (i32.const 2)
                           )
                           (local.get $8)
                          )
                         )
                        )
                       )
                      )
                      (local.set $5
                       (i32.add
                        (local.get $2)
                        (i32.const 1)
                       )
                      )
                      (if
                       (i32.lt_s
                        (local.get $2)
                        (local.get $7)
                       )
                       (block
                        (local.set $2
                         (local.get $5)
                        )
                        (br $while-in7)
                       )
                      )
                     )
                    )
                   )
                   (br $switch)
                  )
                  (if
                   (i32.le_s
                    (local.get $2)
                    (local.get $7)
                   )
                   (block
                    (local.set $5
                     (i32.const 0)
                    )
                    (loop $while-in10
                     (drop
                      (br_if $label$break$L4
                       (i32.const 37)
                       (f32.eq
                        (local.tee $6
                         (f32.load
                          (i32.add
                           (i32.shl
                            (i32.add
                             (local.get $5)
                             (local.get $14)
                            )
                            (i32.const 2)
                           )
                           (local.get $13)
                          )
                         )
                        )
                        (f32.const 0)
                       )
                      )
                     )
                     (local.set $9
                      (i32.mul
                       (local.get $2)
                       (local.get $12)
                      )
                     )
                     (if
                      (local.get $19)
                      (block
                       (local.set $3
                        (i32.const 0)
                       )
                       (loop $while-in12
                        (f32.store
                         (local.tee $10
                          (i32.add
                           (i32.shl
                            (i32.add
                             (local.get $3)
                             (local.get $4)
                            )
                            (i32.const 2)
                           )
                           (local.get $1)
                          )
                         )
                         (f32.add
                          (f32.load
                           (local.get $10)
                          )
                          (f32.mul
                           (local.get $6)
                           (f32.load
                            (i32.add
                             (i32.shl
                              (i32.add
                               (local.get $3)
                               (local.get $9)
                              )
                              (i32.const 2)
                             )
                             (local.get $8)
                            )
                           )
                          )
                         )
                        )
                        (br_if $while-in12
                         (i32.ne
                          (local.get $12)
                          (local.tee $3
                           (i32.add
                            (local.get $3)
                            (i32.const 1)
                           )
                          )
                         )
                        )
                       )
                      )
                     )
                     (local.set $5
                      (i32.add
                       (local.get $5)
                       (i32.const 1)
                      )
                     )
                     (local.set $3
                      (i32.add
                       (local.get $2)
                       (i32.const 1)
                      )
                     )
                     (if
                      (i32.lt_s
                       (local.get $2)
                       (local.get $7)
                      )
                      (block
                       (local.set $2
                        (local.get $3)
                       )
                       (br $while-in10)
                      )
                     )
                    )
                   )
                  )
                 )
                 (br_if $label$continue$L4
                  (i32.lt_s
                   (local.tee $11
                    (i32.add
                     (local.get $11)
                     (i32.const 1)
                    )
                   )
                   (local.get $15)
                  )
                 )
                 (i32.const 43)
                )
               )
               (i32.const 4)
              )
             )
            )
            (call $___assert_fail
             (i32.const 20155)
             (i32.const 19136)
             (i32.const 1458)
             (i32.const 20164)
            )
            (br $switch13)
           )
           (call $___assert_fail
            (i32.const 20200)
            (i32.const 19136)
            (i32.const 1459)
            (i32.const 20164)
           )
           (br $switch13)
          )
          (call $___assert_fail
           (i32.const 20250)
           (i32.const 19136)
           (i32.const 1460)
           (i32.const 20164)
          )
          (br $switch13)
         )
         (call $___assert_fail
          (i32.const 20300)
          (i32.const 19136)
          (i32.const 1461)
          (i32.const 20164)
         )
         (br $switch13)
        )
        (call $___assert_fail
         (i32.const 20370)
         (i32.const 19136)
         (i32.const 1462)
         (i32.const 20164)
        )
        (br $switch13)
       )
       (call $___assert_fail
        (i32.const 20138)
        (i32.const 19136)
        (i32.const 1470)
        (i32.const 20164)
       )
       (br $switch13)
      )
      (call $___assert_fail
       (i32.const 20138)
       (i32.const 19136)
       (i32.const 1479)
       (i32.const 20164)
      )
      (br $switch13)
     )
     (call $___assert_fail
      (i32.const 20138)
      (i32.const 19136)
      (i32.const 1489)
      (i32.const 20164)
     )
     (br $switch13)
    )
    (call $___assert_fail
     (i32.const 20138)
     (i32.const 19136)
     (i32.const 1500)
     (i32.const 20164)
    )
    (br $switch13)
   )
   (call $___assert_fail
    (i32.const 20138)
    (i32.const 19136)
    (i32.const 1513)
    (i32.const 20164)
   )
  )
 )
 (func $_stbir__resample_horizontal_downsample (; 457 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local.set $3
   (i32.load offset=4
    (local.get $0)
   )
  )
  (local.set $5
   (i32.load
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
  )
  (local.set $6
   (call $_stbir__get_decode_buffer
    (local.get $0)
   )
  )
  (local.set $7
   (i32.load offset=100
    (local.get $0)
   )
  )
  (local.set $15
   (i32.load offset=104
    (local.get $0)
   )
  )
  (local.set $16
   (i32.load offset=128
    (local.get $0)
   )
  )
  (local.set $8
   (i32.add
    (i32.shl
     (local.tee $17
      (i32.load offset=144
       (local.get $0)
      )
     )
     (i32.const 1)
    )
    (local.get $3)
   )
  )
  (if
   (call $_stbir__use_width_upsampling
    (local.get $0)
   )
   (call $___assert_fail
    (i32.const 20059)
    (i32.const 19136)
    (i32.const 1534)
    (i32.const 20100)
   )
  )
  (block $switch
   (block $switch-default
    (block $switch-case8
     (block $switch-case5
      (block $switch-case2
       (block $switch-case
        (br_table $switch-case $switch-case2 $switch-case5 $switch-case8 $switch-default
         (i32.sub
          (local.get $5)
          (i32.const 1)
         )
        )
       )
       (if
        (i32.le_s
         (local.get $8)
         (i32.const 0)
        )
        (return)
       )
       (local.set $3
        (i32.const 0)
       )
       (if
        (i32.eq
         (local.tee $0
          (loop $label$continue$L29 (result i32)
           (block $label$break$L29 (result i32)
            (if
             (i32.le_s
              (local.tee $0
               (i32.load
                (i32.add
                 (i32.shl
                  (local.get $3)
                  (i32.const 3)
                 )
                 (local.get $7)
                )
               )
              )
              (local.tee $5
               (i32.load offset=4
                (i32.add
                 (i32.shl
                  (local.get $3)
                  (i32.const 3)
                 )
                 (local.get $7)
                )
               )
              )
             )
             (block
              (local.set $9
               (i32.sub
                (i32.mul
                 (local.get $3)
                 (local.get $16)
                )
                (local.get $0)
               )
              )
              (local.set $10
               (i32.add
                (i32.shl
                 (i32.sub
                  (local.get $3)
                  (local.get $17)
                 )
                 (i32.const 2)
                )
                (local.get $6)
               )
              )
              (loop $while-in
               (drop
                (br_if $label$break$L29
                 (i32.const 9)
                 (f32.eq
                  (local.tee $4
                   (f32.load
                    (i32.add
                     (i32.shl
                      (i32.add
                       (local.get $0)
                       (local.get $9)
                      )
                      (i32.const 2)
                     )
                     (local.get $15)
                    )
                   )
                  )
                  (f32.const 0)
                 )
                )
               )
               (f32.store
                (local.tee $2
                 (i32.add
                  (i32.shl
                   (local.get $0)
                   (i32.const 2)
                  )
                  (local.get $1)
                 )
                )
                (f32.add
                 (f32.load
                  (local.get $2)
                 )
                 (f32.mul
                  (local.get $4)
                  (f32.load
                   (local.get $10)
                  )
                 )
                )
               )
               (local.set $2
                (i32.add
                 (local.get $0)
                 (i32.const 1)
                )
               )
               (if
                (i32.lt_s
                 (local.get $0)
                 (local.get $5)
                )
                (block
                 (local.set $0
                  (local.get $2)
                 )
                 (br $while-in)
                )
               )
              )
             )
            )
            (br_if $label$continue$L29
             (i32.lt_s
              (local.tee $3
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (local.get $8)
             )
            )
            (i32.const 47)
           )
          )
         )
         (i32.const 9)
        )
        (call $___assert_fail
         (i32.const 20138)
         (i32.const 19136)
         (i32.const 1552)
         (i32.const 20100)
        )
        (if
         (i32.eq
          (local.get $0)
          (i32.const 47)
         )
         (return)
        )
       )
       (br $switch)
      )
      (if
       (i32.le_s
        (local.get $8)
        (i32.const 0)
       )
       (return)
      )
      (local.set $3
       (i32.const 0)
      )
      (if
       (i32.eq
        (local.tee $0
         (loop $label$continue$L44 (result i32)
          (block $label$break$L44 (result i32)
           (local.set $2
            (i32.shl
             (i32.sub
              (local.get $3)
              (local.get $17)
             )
             (i32.const 1)
            )
           )
           (if
            (i32.le_s
             (local.tee $0
              (i32.load
               (i32.add
                (i32.shl
                 (local.get $3)
                 (i32.const 3)
                )
                (local.get $7)
               )
              )
             )
             (local.tee $5
              (i32.load offset=4
               (i32.add
                (i32.shl
                 (local.get $3)
                 (i32.const 3)
                )
                (local.get $7)
               )
              )
             )
            )
            (block
             (local.set $9
              (i32.sub
               (i32.mul
                (local.get $3)
                (local.get $16)
               )
               (local.get $0)
              )
             )
             (local.set $10
              (i32.add
               (i32.shl
                (local.get $2)
                (i32.const 2)
               )
               (local.get $6)
              )
             )
             (local.set $11
              (i32.add
               (i32.shl
                (i32.or
                 (local.get $2)
                 (i32.const 1)
                )
                (i32.const 2)
               )
               (local.get $6)
              )
             )
             (loop $while-in1
              (drop
               (br_if $label$break$L44
                (i32.const 17)
                (f32.eq
                 (local.tee $4
                  (f32.load
                   (i32.add
                    (i32.shl
                     (i32.add
                      (local.get $0)
                      (local.get $9)
                     )
                     (i32.const 2)
                    )
                    (local.get $15)
                   )
                  )
                 )
                 (f32.const 0)
                )
               )
              )
              (f32.store
               (local.tee $12
                (i32.add
                 (i32.shl
                  (local.tee $2
                   (i32.shl
                    (local.get $0)
                    (i32.const 1)
                   )
                  )
                  (i32.const 2)
                 )
                 (local.get $1)
                )
               )
               (f32.add
                (f32.load
                 (local.get $12)
                )
                (f32.mul
                 (local.get $4)
                 (f32.load
                  (local.get $10)
                 )
                )
               )
              )
              (f32.store
               (local.tee $2
                (i32.add
                 (i32.shl
                  (i32.or
                   (local.get $2)
                   (i32.const 1)
                  )
                  (i32.const 2)
                 )
                 (local.get $1)
                )
               )
               (f32.add
                (f32.load
                 (local.get $2)
                )
                (f32.mul
                 (local.get $4)
                 (f32.load
                  (local.get $11)
                 )
                )
               )
              )
              (local.set $2
               (i32.add
                (local.get $0)
                (i32.const 1)
               )
              )
              (if
               (i32.lt_s
                (local.get $0)
                (local.get $5)
               )
               (block
                (local.set $0
                 (local.get $2)
                )
                (br $while-in1)
               )
              )
             )
            )
           )
           (br_if $label$continue$L44
            (i32.lt_s
             (local.tee $3
              (i32.add
               (local.get $3)
               (i32.const 1)
              )
             )
             (local.get $8)
            )
           )
           (i32.const 47)
          )
         )
        )
        (i32.const 17)
       )
       (call $___assert_fail
        (i32.const 20138)
        (i32.const 19136)
        (i32.const 1573)
        (i32.const 20100)
       )
       (if
        (i32.eq
         (local.get $0)
         (i32.const 47)
        )
        (return)
       )
      )
      (br $switch)
     )
     (if
      (i32.le_s
       (local.get $8)
       (i32.const 0)
      )
      (return)
     )
     (local.set $3
      (i32.const 0)
     )
     (if
      (i32.eq
       (local.tee $0
        (loop $label$continue$L59 (result i32)
         (block $label$break$L59 (result i32)
          (local.set $2
           (i32.mul
            (i32.sub
             (local.get $3)
             (local.get $17)
            )
            (i32.const 3)
           )
          )
          (if
           (i32.le_s
            (local.tee $0
             (i32.load
              (i32.add
               (i32.shl
                (local.get $3)
                (i32.const 3)
               )
               (local.get $7)
              )
             )
            )
            (local.tee $5
             (i32.load offset=4
              (i32.add
               (i32.shl
                (local.get $3)
                (i32.const 3)
               )
               (local.get $7)
              )
             )
            )
           )
           (block
            (local.set $9
             (i32.sub
              (i32.mul
               (local.get $3)
               (local.get $16)
              )
              (local.get $0)
             )
            )
            (local.set $10
             (i32.add
              (i32.shl
               (local.get $2)
               (i32.const 2)
              )
              (local.get $6)
             )
            )
            (local.set $11
             (i32.add
              (i32.shl
               (i32.add
                (local.get $2)
                (i32.const 1)
               )
               (i32.const 2)
              )
              (local.get $6)
             )
            )
            (local.set $12
             (i32.add
              (i32.shl
               (i32.add
                (local.get $2)
                (i32.const 2)
               )
               (i32.const 2)
              )
              (local.get $6)
             )
            )
            (loop $while-in4
             (drop
              (br_if $label$break$L59
               (i32.const 25)
               (f32.eq
                (local.tee $4
                 (f32.load
                  (i32.add
                   (i32.shl
                    (i32.add
                     (local.get $0)
                     (local.get $9)
                    )
                    (i32.const 2)
                   )
                   (local.get $15)
                  )
                 )
                )
                (f32.const 0)
               )
              )
             )
             (f32.store
              (local.tee $13
               (i32.add
                (i32.shl
                 (local.tee $2
                  (i32.mul
                   (local.get $0)
                   (i32.const 3)
                  )
                 )
                 (i32.const 2)
                )
                (local.get $1)
               )
              )
              (f32.add
               (f32.load
                (local.get $13)
               )
               (f32.mul
                (local.get $4)
                (f32.load
                 (local.get $10)
                )
               )
              )
             )
             (f32.store
              (local.tee $13
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $2)
                  (i32.const 1)
                 )
                 (i32.const 2)
                )
                (local.get $1)
               )
              )
              (f32.add
               (f32.load
                (local.get $13)
               )
               (f32.mul
                (local.get $4)
                (f32.load
                 (local.get $11)
                )
               )
              )
             )
             (f32.store
              (local.tee $2
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $2)
                  (i32.const 2)
                 )
                 (i32.const 2)
                )
                (local.get $1)
               )
              )
              (f32.add
               (f32.load
                (local.get $2)
               )
               (f32.mul
                (local.get $4)
                (f32.load
                 (local.get $12)
                )
               )
              )
             )
             (local.set $2
              (i32.add
               (local.get $0)
               (i32.const 1)
              )
             )
             (if
              (i32.lt_s
               (local.get $0)
               (local.get $5)
              )
              (block
               (local.set $0
                (local.get $2)
               )
               (br $while-in4)
              )
             )
            )
           )
          )
          (br_if $label$continue$L59
           (i32.lt_s
            (local.tee $3
             (i32.add
              (local.get $3)
              (i32.const 1)
             )
            )
            (local.get $8)
           )
          )
          (i32.const 47)
         )
        )
       )
       (i32.const 25)
      )
      (call $___assert_fail
       (i32.const 20138)
       (i32.const 19136)
       (i32.const 1595)
       (i32.const 20100)
      )
      (if
       (i32.eq
        (local.get $0)
        (i32.const 47)
       )
       (return)
      )
     )
     (br $switch)
    )
    (if
     (i32.le_s
      (local.get $8)
      (i32.const 0)
     )
     (return)
    )
    (local.set $3
     (i32.const 0)
    )
    (if
     (i32.eq
      (local.tee $0
       (loop $label$continue$L74 (result i32)
        (block $label$break$L74 (result i32)
         (local.set $2
          (i32.shl
           (i32.sub
            (local.get $3)
            (local.get $17)
           )
           (i32.const 2)
          )
         )
         (if
          (i32.le_s
           (local.tee $0
            (i32.load
             (i32.add
              (i32.shl
               (local.get $3)
               (i32.const 3)
              )
              (local.get $7)
             )
            )
           )
           (local.tee $5
            (i32.load offset=4
             (i32.add
              (i32.shl
               (local.get $3)
               (i32.const 3)
              )
              (local.get $7)
             )
            )
           )
          )
          (block
           (local.set $9
            (i32.sub
             (i32.mul
              (local.get $3)
              (local.get $16)
             )
             (local.get $0)
            )
           )
           (local.set $10
            (i32.add
             (i32.shl
              (local.get $2)
              (i32.const 2)
             )
             (local.get $6)
            )
           )
           (local.set $11
            (i32.add
             (i32.shl
              (i32.or
               (local.get $2)
               (i32.const 1)
              )
              (i32.const 2)
             )
             (local.get $6)
            )
           )
           (local.set $12
            (i32.add
             (i32.shl
              (i32.or
               (local.get $2)
               (i32.const 2)
              )
              (i32.const 2)
             )
             (local.get $6)
            )
           )
           (local.set $13
            (i32.add
             (i32.shl
              (i32.or
               (local.get $2)
               (i32.const 3)
              )
              (i32.const 2)
             )
             (local.get $6)
            )
           )
           (loop $while-in7
            (drop
             (br_if $label$break$L74
              (i32.const 33)
              (f32.eq
               (local.tee $4
                (f32.load
                 (i32.add
                  (i32.shl
                   (i32.add
                    (local.get $0)
                    (local.get $9)
                   )
                   (i32.const 2)
                  )
                  (local.get $15)
                 )
                )
               )
               (f32.const 0)
              )
             )
            )
            (f32.store
             (local.tee $14
              (i32.add
               (i32.shl
                (local.tee $2
                 (i32.shl
                  (local.get $0)
                  (i32.const 2)
                 )
                )
                (i32.const 2)
               )
               (local.get $1)
              )
             )
             (f32.add
              (f32.load
               (local.get $14)
              )
              (f32.mul
               (local.get $4)
               (f32.load
                (local.get $10)
               )
              )
             )
            )
            (f32.store
             (local.tee $14
              (i32.add
               (i32.shl
                (i32.or
                 (local.get $2)
                 (i32.const 1)
                )
                (i32.const 2)
               )
               (local.get $1)
              )
             )
             (f32.add
              (f32.load
               (local.get $14)
              )
              (f32.mul
               (local.get $4)
               (f32.load
                (local.get $11)
               )
              )
             )
            )
            (f32.store
             (local.tee $14
              (i32.add
               (i32.shl
                (i32.or
                 (local.get $2)
                 (i32.const 2)
                )
                (i32.const 2)
               )
               (local.get $1)
              )
             )
             (f32.add
              (f32.load
               (local.get $14)
              )
              (f32.mul
               (local.get $4)
               (f32.load
                (local.get $12)
               )
              )
             )
            )
            (f32.store
             (local.tee $2
              (i32.add
               (i32.shl
                (i32.or
                 (local.get $2)
                 (i32.const 3)
                )
                (i32.const 2)
               )
               (local.get $1)
              )
             )
             (f32.add
              (f32.load
               (local.get $2)
              )
              (f32.mul
               (local.get $4)
               (f32.load
                (local.get $13)
               )
              )
             )
            )
            (local.set $2
             (i32.add
              (local.get $0)
              (i32.const 1)
             )
            )
            (if
             (i32.lt_s
              (local.get $0)
              (local.get $5)
             )
             (block
              (local.set $0
               (local.get $2)
              )
              (br $while-in7)
             )
            )
           )
          )
         )
         (br_if $label$continue$L74
          (i32.lt_s
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
           (local.get $8)
          )
         )
         (i32.const 47)
        )
       )
      )
      (i32.const 33)
     )
     (call $___assert_fail
      (i32.const 20138)
      (i32.const 19136)
      (i32.const 1618)
      (i32.const 20100)
     )
     (if
      (i32.eq
       (local.get $0)
       (i32.const 47)
      )
      (return)
     )
    )
    (br $switch)
   )
   (if
    (i32.le_s
     (local.get $8)
     (i32.const 0)
    )
    (return)
   )
   (local.set $9
    (i32.gt_s
     (local.get $5)
     (i32.const 0)
    )
   )
   (local.set $3
    (i32.const 0)
   )
   (if
    (i32.eq
     (loop $label$continue$L9 (result i32)
      (block $label$break$L9 (result i32)
       (local.set $10
        (i32.mul
         (i32.sub
          (local.get $3)
          (local.get $17)
         )
         (local.get $5)
        )
       )
       (if
        (i32.le_s
         (local.tee $0
          (i32.load
           (i32.add
            (i32.shl
             (local.get $3)
             (i32.const 3)
            )
            (local.get $7)
           )
          )
         )
         (local.tee $11
          (i32.load offset=4
           (i32.add
            (i32.shl
             (local.get $3)
             (i32.const 3)
            )
            (local.get $7)
           )
          )
         )
        )
        (block
         (local.set $12
          (i32.sub
           (i32.mul
            (local.get $3)
            (local.get $16)
           )
           (local.get $0)
          )
         )
         (loop $while-in10
          (drop
           (br_if $label$break$L9
            (i32.const 41)
            (f32.eq
             (local.tee $4
              (f32.load
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $0)
                  (local.get $12)
                 )
                 (i32.const 2)
                )
                (local.get $15)
               )
              )
             )
             (f32.const 0)
            )
           )
          )
          (local.set $13
           (i32.mul
            (local.get $0)
            (local.get $5)
           )
          )
          (if
           (local.get $9)
           (block
            (local.set $2
             (i32.const 0)
            )
            (loop $while-in12
             (f32.store
              (local.tee $14
               (i32.add
                (i32.shl
                 (i32.add
                  (local.get $2)
                  (local.get $13)
                 )
                 (i32.const 2)
                )
                (local.get $1)
               )
              )
              (f32.add
               (f32.load
                (local.get $14)
               )
               (f32.mul
                (local.get $4)
                (f32.load
                 (i32.add
                  (i32.shl
                   (i32.add
                    (local.get $2)
                    (local.get $10)
                   )
                   (i32.const 2)
                  )
                  (local.get $6)
                 )
                )
               )
              )
             )
             (br_if $while-in12
              (i32.ne
               (local.get $5)
               (local.tee $2
                (i32.add
                 (local.get $2)
                 (i32.const 1)
                )
               )
              )
             )
            )
           )
          )
          (local.set $2
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
          (if
           (i32.lt_s
            (local.get $0)
            (local.get $11)
           )
           (block
            (local.set $0
             (local.get $2)
            )
            (br $while-in10)
           )
          )
         )
        )
       )
       (br_if $label$continue$L9
        (i32.lt_s
         (local.tee $3
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
         )
         (local.get $8)
        )
       )
       (i32.const 47)
      )
     )
     (i32.const 41)
    )
    (call $___assert_fail
     (i32.const 20138)
     (i32.const 19136)
     (i32.const 1643)
     (i32.const 20100)
    )
   )
  )
 )
 (func $_stbir__get_decode_buffer (; 458 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.add
   (i32.load offset=120
    (local.get $0)
   )
   (i32.shl
    (i32.mul
     (i32.load offset=144
      (local.get $0)
     )
     (i32.load
      (i32.sub
       (local.get $0)
       (i32.const -64)
      )
     )
    )
    (i32.const 2)
   )
  )
 )
 (func $_stbir__use_upsampling (; 459 ;) (; has Stack IR ;) (param $0 f32) (result i32)
  (f32.gt
   (local.get $0)
   (f32.const 1)
  )
 )
 (func $_stbir__edge_wrap (; 460 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i32.and
    (i32.lt_s
     (local.get $1)
     (local.get $2)
    )
    (i32.gt_s
     (local.get $1)
     (i32.const -1)
    )
   )
   (return
    (local.get $1)
   )
  )
  (call $_stbir__edge_wrap_slow
   (local.get $0)
   (local.get $1)
   (local.get $2)
  )
 )
 (func $_stbir__srgb_to_linear (; 461 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (if (result f32)
   (f32.le
    (local.get $0)
    (f32.const 0.040449999272823334)
   )
   (f32.div
    (local.get $0)
    (f32.const 12.920000076293945)
   )
   (f32.demote_f64
    (call $_pow
     (f64.promote_f32
      (f32.div
       (f32.add
        (local.get $0)
        (f32.const 0.054999999701976776)
       )
       (f32.const 1.0549999475479126)
      )
     )
     (f64.const 2.4000000953674316)
    )
   )
  )
 )
 (func $_stbir__edge_wrap_slow (; 462 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local.set $3
   (i32.sub
    (i32.const 0)
    (local.get $1)
   )
  )
  (block $switch-default
   (block $switch-case2
    (block $switch-case1
     (block $switch-case0
      (block $switch-case
       (br_table $switch-case $switch-case0 $switch-case1 $switch-case2 $switch-default
        (i32.sub
         (local.get $0)
         (i32.const 1)
        )
       )
      )
      (if
       (i32.lt_s
        (local.get $1)
        (i32.const 0)
       )
       (return
        (i32.const 0)
       )
       (return
        (select
         (local.get $1)
         (i32.add
          (local.get $2)
          (i32.const -1)
         )
         (i32.lt_s
          (local.get $1)
          (local.get $2)
         )
        )
       )
      )
     )
     (local.set $0
      (i32.lt_s
       (local.get $1)
       (local.get $2)
      )
     )
     (if
      (i32.lt_s
       (local.get $1)
       (i32.const 0)
      )
      (return
       (select
        (local.get $3)
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
        (local.get $0)
       )
      )
      (return
       (select
        (local.get $1)
        (select
         (i32.add
          (local.tee $2
           (i32.shl
            (local.get $2)
            (i32.const 1)
           )
          )
          (i32.xor
           (local.get $1)
           (i32.const -1)
          )
         )
         (i32.const 0)
         (i32.gt_s
          (local.get $2)
          (local.get $1)
         )
        )
        (local.get $0)
       )
      )
     )
    )
    (if
     (i32.gt_s
      (local.get $1)
      (i32.const -1)
     )
     (return
      (i32.rem_s
       (local.get $1)
       (local.get $2)
      )
     )
     (return
      (select
       (i32.sub
        (local.get $2)
        (local.tee $0
         (i32.rem_s
          (i32.sub
           (i32.const 0)
           (local.get $1)
          )
          (local.get $2)
         )
        )
       )
       (i32.const 0)
       (local.get $0)
      )
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (call $___assert_fail
   (i32.const 20512)
   (i32.const 19136)
   (i32.const 992)
   (i32.const 20539)
  )
  (i32.const 0)
 )
 (func $_stbir__encode_scanline (; 463 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 f32)
  (local $15 i32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 128)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 128)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (i32.load offset=72
       (local.get $0)
      )
      (i32.const 1)
     )
    )
    (i32.gt_s
     (local.get $1)
     (i32.const 0)
    )
   )
   (block
    (local.set $12
     (i32.gt_s
      (local.get $4)
      (i32.const 0)
     )
    )
    (loop $while-in
     (local.set $14
      (select
       (f32.div
        (f32.const 1)
        (local.tee $14
         (f32.load
          (i32.add
           (i32.shl
            (i32.add
             (local.get $5)
             (local.tee $13
              (i32.mul
               (local.get $4)
               (local.get $8)
              )
             )
            )
            (i32.const 2)
           )
           (local.get $3)
          )
         )
        )
       )
       (f32.const 0)
       (f32.ne
        (local.get $14)
        (f32.const 0)
       )
      )
     )
     (if
      (local.get $12)
      (block
       (local.set $7
        (i32.const 0)
       )
       (loop $while-in1
        (local.set $9
         (i32.add
          (i32.shl
           (i32.add
            (local.get $7)
            (local.get $13)
           )
           (i32.const 2)
          )
          (local.get $3)
         )
        )
        (if
         (i32.ne
          (local.get $5)
          (local.get $7)
         )
         (f32.store
          (local.get $9)
          (f32.mul
           (local.get $14)
           (f32.load
            (local.get $9)
           )
          )
         )
        )
        (br_if $while-in1
         (i32.ne
          (local.tee $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
          (local.get $4)
         )
        )
       )
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $8
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
       (local.get $1)
      )
     )
    )
   )
  )
  (local.set $8
   (if (result i32)
    (i32.gt_s
     (local.get $4)
     (i32.const 0)
    )
    (block (result i32)
     (local.set $7
      (i32.const 0)
     )
     (local.set $8
      (i32.const 0)
     )
     (loop $while-in3 (result i32)
      (block $__rjto$0
       (block $__rjti$0
        (br_if $__rjti$0
         (i32.ne
          (local.get $5)
          (local.get $8)
         )
        )
        (br_if $__rjti$0
         (i32.and
          (i32.load offset=72
           (local.get $0)
          )
          (i32.const 2)
         )
        )
        (br $__rjto$0)
       )
       (i32.store16
        (i32.add
         (i32.shl
          (local.get $7)
          (i32.const 1)
         )
         (local.get $11)
        )
        (local.get $8)
       )
       (local.set $7
        (i32.add
         (local.get $7)
         (i32.const 1)
        )
       )
      )
      (br_if $while-in3
       (i32.ne
        (local.tee $8
         (i32.add
          (local.get $8)
          (i32.const 1)
         )
        )
        (local.get $4)
       )
      )
      (local.get $7)
     )
    )
    (i32.const 0)
   )
  )
  (block $folding-inner0
   (block $switch-default
    (block $switch-case42
     (block $switch-case37
      (block $switch-case32
       (block $switch-case27
        (block $switch-case22
         (block $switch-case17
          (block $switch-case12
           (block $switch-case
            (br_table $switch-case $switch-case12 $switch-case17 $switch-case22 $switch-case27 $switch-case32 $switch-case37 $switch-case42 $switch-default
             (local.get $6)
            )
           )
           (br_if $folding-inner0
            (i32.le_s
             (local.get $1)
             (i32.const 0)
            )
           )
           (local.set $6
            (i32.gt_s
             (local.get $4)
             (i32.const 0)
            )
           )
           (local.set $0
            (i32.const 0)
           )
           (loop $while-in5
            (local.set $7
             (i32.mul
              (local.get $0)
              (local.get $4)
             )
            )
            (if
             (local.get $6)
             (block
              (local.set $5
               (i32.const 0)
              )
              (loop $while-in7
               (local.set $11
                (i32.and
                 (i32.trunc_f64_s
                  (f64.add
                   (f64.promote_f32
                    (f32.mul
                     (call $_stbir__saturate
                      (f32.load
                       (i32.add
                        (i32.shl
                         (local.tee $8
                          (i32.add
                           (local.get $5)
                           (local.get $7)
                          )
                         )
                         (i32.const 2)
                        )
                        (local.get $3)
                       )
                      )
                     )
                     (f32.const 255)
                    )
                   )
                   (f64.const 0.5)
                  )
                 )
                 (i32.const 255)
                )
               )
               (i32.store8
                (i32.add
                 (local.get $2)
                 (local.get $8)
                )
                (local.get $11)
               )
               (br_if $while-in7
                (i32.ne
                 (local.tee $5
                  (i32.add
                   (local.get $5)
                   (i32.const 1)
                  )
                 )
                 (local.get $4)
                )
               )
              )
             )
            )
            (br_if $while-in5
             (i32.ne
              (local.tee $0
               (i32.add
                (local.get $0)
                (i32.const 1)
               )
              )
              (local.get $1)
             )
            )
           )
           (br $folding-inner0)
          )
          (br_if $folding-inner0
           (i32.le_s
            (local.get $1)
            (i32.const 0)
           )
          )
          (local.set $12
           (i32.gt_s
            (local.get $8)
            (i32.const 0)
           )
          )
          (local.set $6
           (i32.const 0)
          )
          (loop $while-in9
           (local.set $9
            (i32.mul
             (local.get $4)
             (local.get $6)
            )
           )
           (if
            (local.get $12)
            (block
             (local.set $7
              (i32.const 0)
             )
             (loop $while-in11
              (local.set $15
               (call $_stbir__linear_to_srgb_uchar
                (f32.load
                 (i32.add
                  (i32.shl
                   (local.tee $13
                    (i32.add
                     (local.get $9)
                     (i32.load16_u
                      (i32.add
                       (i32.shl
                        (local.get $7)
                        (i32.const 1)
                       )
                       (local.get $11)
                      )
                     )
                    )
                   )
                   (i32.const 2)
                  )
                  (local.get $3)
                 )
                )
               )
              )
              (i32.store8
               (i32.add
                (local.get $2)
                (local.get $13)
               )
               (local.get $15)
              )
              (br_if $while-in11
               (i32.ne
                (local.tee $7
                 (i32.add
                  (local.get $7)
                  (i32.const 1)
                 )
                )
                (local.get $8)
               )
              )
             )
            )
           )
           (if
            (i32.eqz
             (i32.and
              (i32.load offset=72
               (local.get $0)
              )
              (i32.const 2)
             )
            )
            (block
             (local.set $9
              (i32.and
               (i32.trunc_f64_s
                (f64.add
                 (f64.promote_f32
                  (f32.mul
                   (call $_stbir__saturate
                    (f32.load
                     (i32.add
                      (i32.shl
                       (local.tee $7
                        (i32.add
                         (local.get $5)
                         (local.get $9)
                        )
                       )
                       (i32.const 2)
                      )
                      (local.get $3)
                     )
                    )
                   )
                   (f32.const 255)
                  )
                 )
                 (f64.const 0.5)
                )
               )
               (i32.const 255)
              )
             )
             (i32.store8
              (i32.add
               (local.get $2)
               (local.get $7)
              )
              (local.get $9)
             )
            )
           )
           (br_if $while-in9
            (i32.ne
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const 1)
              )
             )
             (local.get $1)
            )
           )
          )
          (br $folding-inner0)
         )
         (br_if $folding-inner0
          (i32.le_s
           (local.get $1)
           (i32.const 0)
          )
         )
         (local.set $6
          (i32.gt_s
           (local.get $4)
           (i32.const 0)
          )
         )
         (local.set $0
          (i32.const 0)
         )
         (loop $while-in14
          (local.set $7
           (i32.mul
            (local.get $0)
            (local.get $4)
           )
          )
          (if
           (local.get $6)
           (block
            (local.set $5
             (i32.const 0)
            )
            (loop $while-in16
             (local.set $11
              (i32.and
               (i32.trunc_f64_s
                (f64.add
                 (f64.promote_f32
                  (f32.mul
                   (call $_stbir__saturate
                    (f32.load
                     (i32.add
                      (i32.shl
                       (local.tee $8
                        (i32.add
                         (local.get $5)
                         (local.get $7)
                        )
                       )
                       (i32.const 2)
                      )
                      (local.get $3)
                     )
                    )
                   )
                   (f32.const 65535)
                  )
                 )
                 (f64.const 0.5)
                )
               )
               (i32.const 65535)
              )
             )
             (i32.store16
              (i32.add
               (i32.shl
                (local.get $8)
                (i32.const 1)
               )
               (local.get $2)
              )
              (local.get $11)
             )
             (br_if $while-in16
              (i32.ne
               (local.tee $5
                (i32.add
                 (local.get $5)
                 (i32.const 1)
                )
               )
               (local.get $4)
              )
             )
            )
           )
          )
          (br_if $while-in14
           (i32.ne
            (local.tee $0
             (i32.add
              (local.get $0)
              (i32.const 1)
             )
            )
            (local.get $1)
           )
          )
         )
         (br $folding-inner0)
        )
        (br_if $folding-inner0
         (i32.le_s
          (local.get $1)
          (i32.const 0)
         )
        )
        (local.set $12
         (i32.gt_s
          (local.get $8)
          (i32.const 0)
         )
        )
        (local.set $6
         (i32.const 0)
        )
        (loop $while-in19
         (local.set $9
          (i32.mul
           (local.get $4)
           (local.get $6)
          )
         )
         (if
          (local.get $12)
          (block
           (local.set $7
            (i32.const 0)
           )
           (loop $while-in21
            (local.set $15
             (i32.and
              (i32.trunc_f64_s
               (f64.add
                (f64.promote_f32
                 (f32.mul
                  (call $_stbir__linear_to_srgb
                   (call $_stbir__saturate
                    (f32.load
                     (i32.add
                      (i32.shl
                       (local.tee $13
                        (i32.add
                         (local.get $9)
                         (i32.load16_u
                          (i32.add
                           (i32.shl
                            (local.get $7)
                            (i32.const 1)
                           )
                           (local.get $11)
                          )
                         )
                        )
                       )
                       (i32.const 2)
                      )
                      (local.get $3)
                     )
                    )
                   )
                  )
                  (f32.const 65535)
                 )
                )
                (f64.const 0.5)
               )
              )
              (i32.const 65535)
             )
            )
            (i32.store16
             (i32.add
              (i32.shl
               (local.get $13)
               (i32.const 1)
              )
              (local.get $2)
             )
             (local.get $15)
            )
            (br_if $while-in21
             (i32.ne
              (local.tee $7
               (i32.add
                (local.get $7)
                (i32.const 1)
               )
              )
              (local.get $8)
             )
            )
           )
          )
         )
         (if
          (i32.eqz
           (i32.and
            (i32.load offset=72
             (local.get $0)
            )
            (i32.const 2)
           )
          )
          (block
           (local.set $9
            (i32.and
             (i32.trunc_f64_s
              (f64.add
               (f64.promote_f32
                (f32.mul
                 (call $_stbir__saturate
                  (f32.load
                   (i32.add
                    (i32.shl
                     (local.tee $7
                      (i32.add
                       (local.get $5)
                       (local.get $9)
                      )
                     )
                     (i32.const 2)
                    )
                    (local.get $3)
                   )
                  )
                 )
                 (f32.const 65535)
                )
               )
               (f64.const 0.5)
              )
             )
             (i32.const 65535)
            )
           )
           (i32.store16
            (i32.add
             (i32.shl
              (local.get $7)
              (i32.const 1)
             )
             (local.get $2)
            )
            (local.get $9)
           )
          )
         )
         (br_if $while-in19
          (i32.ne
           (local.tee $6
            (i32.add
             (local.get $6)
             (i32.const 1)
            )
           )
           (local.get $1)
          )
         )
        )
        (br $folding-inner0)
       )
       (br_if $folding-inner0
        (i32.le_s
         (local.get $1)
         (i32.const 0)
        )
       )
       (local.set $6
        (i32.gt_s
         (local.get $4)
         (i32.const 0)
        )
       )
       (local.set $0
        (i32.const 0)
       )
       (loop $while-in24
        (local.set $7
         (i32.mul
          (local.get $0)
          (local.get $4)
         )
        )
        (if
         (local.get $6)
         (block
          (local.set $5
           (i32.const 0)
          )
          (loop $while-in26
           (local.set $11
            (i32.trunc_f64_u
             (f64.add
              (f64.mul
               (f64.promote_f32
                (call $_stbir__saturate
                 (f32.load
                  (i32.add
                   (i32.shl
                    (local.tee $8
                     (i32.add
                      (local.get $5)
                      (local.get $7)
                     )
                    )
                    (i32.const 2)
                   )
                   (local.get $3)
                  )
                 )
                )
               )
               (f64.const 4294967295)
              )
              (f64.const 0.5)
             )
            )
           )
           (i32.store
            (i32.add
             (i32.shl
              (local.get $8)
              (i32.const 2)
             )
             (local.get $2)
            )
            (local.get $11)
           )
           (br_if $while-in26
            (i32.ne
             (local.tee $5
              (i32.add
               (local.get $5)
               (i32.const 1)
              )
             )
             (local.get $4)
            )
           )
          )
         )
        )
        (br_if $while-in24
         (i32.ne
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
          (local.get $1)
         )
        )
       )
       (br $folding-inner0)
      )
      (br_if $folding-inner0
       (i32.le_s
        (local.get $1)
        (i32.const 0)
       )
      )
      (local.set $12
       (i32.gt_s
        (local.get $8)
        (i32.const 0)
       )
      )
      (local.set $6
       (i32.const 0)
      )
      (loop $while-in29
       (local.set $9
        (i32.mul
         (local.get $4)
         (local.get $6)
        )
       )
       (if
        (local.get $12)
        (block
         (local.set $7
          (i32.const 0)
         )
         (loop $while-in31
          (local.set $15
           (i32.trunc_f64_u
            (f64.add
             (f64.mul
              (f64.promote_f32
               (call $_stbir__linear_to_srgb
                (call $_stbir__saturate
                 (f32.load
                  (i32.add
                   (i32.shl
                    (local.tee $13
                     (i32.add
                      (local.get $9)
                      (i32.load16_u
                       (i32.add
                        (i32.shl
                         (local.get $7)
                         (i32.const 1)
                        )
                        (local.get $11)
                       )
                      )
                     )
                    )
                    (i32.const 2)
                   )
                   (local.get $3)
                  )
                 )
                )
               )
              )
              (f64.const 4294967295)
             )
             (f64.const 0.5)
            )
           )
          )
          (i32.store
           (i32.add
            (i32.shl
             (local.get $13)
             (i32.const 2)
            )
            (local.get $2)
           )
           (local.get $15)
          )
          (br_if $while-in31
           (i32.ne
            (local.tee $7
             (i32.add
              (local.get $7)
              (i32.const 1)
             )
            )
            (local.get $8)
           )
          )
         )
        )
       )
       (if
        (i32.eqz
         (i32.and
          (i32.load offset=72
           (local.get $0)
          )
          (i32.const 2)
         )
        )
        (block
         (local.set $9
          (i32.trunc_f64_s
           (f64.add
            (f64.mul
             (f64.promote_f32
              (call $_stbir__saturate
               (f32.load
                (i32.add
                 (i32.shl
                  (local.tee $7
                   (i32.add
                    (local.get $5)
                    (local.get $9)
                   )
                  )
                  (i32.const 2)
                 )
                 (local.get $3)
                )
               )
              )
             )
             (f64.const 4294967295)
            )
            (f64.const 0.5)
           )
          )
         )
         (i32.store
          (i32.add
           (i32.shl
            (local.get $7)
            (i32.const 2)
           )
           (local.get $2)
          )
          (local.get $9)
         )
        )
       )
       (br_if $while-in29
        (i32.ne
         (local.tee $6
          (i32.add
           (local.get $6)
           (i32.const 1)
          )
         )
         (local.get $1)
        )
       )
      )
      (br $folding-inner0)
     )
     (br_if $folding-inner0
      (i32.le_s
       (local.get $1)
       (i32.const 0)
      )
     )
     (local.set $6
      (i32.gt_s
       (local.get $4)
       (i32.const 0)
      )
     )
     (local.set $0
      (i32.const 0)
     )
     (loop $while-in34
      (local.set $7
       (i32.mul
        (local.get $0)
        (local.get $4)
       )
      )
      (if
       (local.get $6)
       (block
        (local.set $5
         (i32.const 0)
        )
        (loop $while-in36
         (i32.store
          (i32.add
           (i32.shl
            (local.tee $8
             (i32.add
              (local.get $5)
              (local.get $7)
             )
            )
            (i32.const 2)
           )
           (local.get $2)
          )
          (i32.load
           (i32.add
            (i32.shl
             (local.get $8)
             (i32.const 2)
            )
            (local.get $3)
           )
          )
         )
         (br_if $while-in36
          (i32.ne
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (local.get $4)
          )
         )
        )
       )
      )
      (br_if $while-in34
       (i32.ne
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 1)
         )
        )
        (local.get $1)
       )
      )
     )
     (br $folding-inner0)
    )
    (br_if $folding-inner0
     (i32.le_s
      (local.get $1)
      (i32.const 0)
     )
    )
    (local.set $12
     (i32.gt_s
      (local.get $8)
      (i32.const 0)
     )
    )
    (local.set $6
     (i32.const 0)
    )
    (loop $while-in39
     (local.set $9
      (i32.mul
       (local.get $4)
       (local.get $6)
      )
     )
     (if
      (local.get $12)
      (block
       (local.set $7
        (i32.const 0)
       )
       (loop $while-in41
        (local.set $14
         (call $_stbir__linear_to_srgb
          (f32.load
           (i32.add
            (i32.shl
             (local.tee $13
              (i32.add
               (local.get $9)
               (i32.load16_u
                (i32.add
                 (i32.shl
                  (local.get $7)
                  (i32.const 1)
                 )
                 (local.get $11)
                )
               )
              )
             )
             (i32.const 2)
            )
            (local.get $3)
           )
          )
         )
        )
        (f32.store
         (i32.add
          (i32.shl
           (local.get $13)
           (i32.const 2)
          )
          (local.get $2)
         )
         (local.get $14)
        )
        (br_if $while-in41
         (i32.ne
          (local.tee $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
          (local.get $8)
         )
        )
       )
      )
     )
     (local.set $7
      (i32.add
       (local.get $5)
       (local.get $9)
      )
     )
     (if
      (i32.eqz
       (i32.and
        (i32.load offset=72
         (local.get $0)
        )
        (i32.const 2)
       )
      )
      (i32.store
       (i32.add
        (i32.shl
         (local.get $7)
         (i32.const 2)
        )
        (local.get $2)
       )
       (i32.load
        (i32.add
         (i32.shl
          (local.get $7)
          (i32.const 2)
         )
         (local.get $3)
        )
       )
      )
     )
     (br_if $while-in39
      (i32.ne
       (local.tee $6
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.get $1)
      )
     )
    )
    (br $folding-inner0)
   )
   (call $___assert_fail
    (i32.const 20440)
    (i32.const 19136)
    (i32.const 1859)
    (i32.const 20561)
   )
   (return)
  )
  (global.set $STACKTOP
   (local.get $10)
  )
 )
 (func $_stbir__saturate (; 464 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (select
   (f32.const 0)
   (select
    (f32.const 1)
    (local.get $0)
    (f32.gt
     (local.get $0)
     (f32.const 1)
    )
   )
   (f32.lt
    (local.get $0)
    (f32.const 0)
   )
  )
 )
 (func $_stbir__linear_to_srgb_uchar (; 465 ;) (; has Stack IR ;) (param $0 f32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (i32.and
   (i32.shr_u
    (i32.add
     (i32.mul
      (i32.and
       (local.tee $2
        (i32.load
         (i32.add
          (i32.shl
           (i32.shr_u
            (i32.add
             (local.tee $1
              (i32.reinterpret_f32
               (select
                (f32.const 0.9999999403953552)
                (local.tee $0
                 (select
                  (local.get $0)
                  (f32.const 0.0001220703125)
                  (f32.gt
                   (local.get $0)
                   (f32.const 0.0001220703125)
                  )
                 )
                )
                (f32.gt
                 (local.get $0)
                 (f32.const 0.9999999403953552)
                )
               )
              )
             )
             (i32.const -956301312)
            )
            (i32.const 20)
           )
           (i32.const 2)
          )
          (i32.const 6016)
         )
        )
       )
       (i32.const 65535)
      )
      (i32.and
       (i32.shr_u
        (local.get $1)
        (i32.const 12)
       )
       (i32.const 255)
      )
     )
     (i32.shl
      (i32.shr_u
       (local.get $2)
       (i32.const 16)
      )
      (i32.const 9)
     )
    )
    (i32.const 16)
   )
   (i32.const 255)
  )
 )
 (func $_stbir__linear_to_srgb (; 466 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (if (result f32)
   (f32.le
    (local.get $0)
    (f32.const 3.1308000907301903e-03)
   )
   (f32.mul
    (local.get $0)
    (f32.const 12.920000076293945)
   )
   (f32.add
    (f32.mul
     (f32.demote_f64
      (call $_pow
       (f64.promote_f32
        (local.get $0)
       )
       (f64.const 0.4166666567325592)
      )
     )
     (f32.const 1.0549999475479126)
    )
    (f32.const -0.054999999701976776)
   )
  )
 )
 (func $_stbir__support_zero (; 467 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (f32.const 0)
 )
 (func $_stbir__filter_trapezoid (; 468 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (result f32)
  (local $2 f32)
  (local $3 f32)
  (if
   (i32.eqz
    (f32.le
     (local.get $1)
     (f32.const 1)
    )
   )
   (call $___assert_fail
    (i32.const 20584)
    (i32.const 19136)
    (i32.const 760)
    (i32.const 20620)
   )
  )
  (if
   (f32.ge
    (local.tee $0
     (f32.abs
      (local.get $0)
     )
    )
    (local.tee $3
     (f32.add
      (local.tee $2
       (f32.mul
        (local.get $1)
        (f32.const 0.5)
       )
      )
      (f32.const 0.5)
     )
    )
   )
   (return
    (f32.const 0)
   )
  )
  (if
   (f32.le
    (local.get $0)
    (f32.sub
     (f32.const 0.5)
     (local.get $2)
    )
   )
   (return
    (f32.const 1)
   )
  )
  (f32.div
   (f32.sub
    (local.get $3)
    (local.get $0)
   )
   (local.get $1)
  )
 )
 (func $_stbir__support_trapezoid (; 469 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (if
   (f32.le
    (local.get $0)
    (f32.const 1)
   )
   (return
    (f32.add
     (f32.mul
      (local.get $0)
      (f32.const 0.5)
     )
     (f32.const 0.5)
    )
   )
   (call $___assert_fail
    (i32.const 20584)
    (i32.const 19136)
    (i32.const 778)
    (i32.const 20595)
   )
  )
  (f32.const 0)
 )
 (func $_stbir__filter_triangle (; 470 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (result f32)
  (select
   (f32.sub
    (f32.const 1)
    (local.tee $0
     (f32.abs
      (local.get $0)
     )
    )
   )
   (f32.const 0)
   (f32.le
    (local.get $0)
    (f32.const 1)
   )
  )
 )
 (func $_stbir__support_one (; 471 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (f32.const 1)
 )
 (func $_stbir__filter_cubic (; 472 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (result f32)
  (if
   (f32.lt
    (local.tee $1
     (f32.abs
      (local.get $0)
     )
    )
    (f32.const 1)
   )
   (return
    (f32.div
     (f32.add
      (f32.mul
       (f32.mul
        (local.get $0)
        (local.get $0)
       )
       (f32.add
        (f32.mul
         (local.get $1)
         (f32.const 3)
        )
        (f32.const -6)
       )
      )
      (f32.const 4)
     )
     (f32.const 6)
    )
   )
  )
  (if
   (i32.eqz
    (f32.lt
     (local.get $1)
     (f32.const 2)
    )
   )
   (return
    (f32.const 0)
   )
  )
  (f32.div
   (f32.add
    (f32.mul
     (local.get $1)
     (f32.add
      (f32.mul
       (local.get $1)
       (f32.sub
        (f32.const 6)
        (local.get $1)
       )
      )
      (f32.const -12)
     )
    )
    (f32.const 8)
   )
   (f32.const 6)
  )
 )
 (func $_stbir__support_two (; 473 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (f32.const 2)
 )
 (func $_stbir__filter_catmullrom (; 474 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (result f32)
  (if
   (f32.lt
    (local.tee $1
     (f32.abs
      (local.get $0)
     )
    )
    (f32.const 1)
   )
   (return
    (f32.sub
     (f32.const 1)
     (f32.mul
      (f32.mul
       (local.get $0)
       (local.get $0)
      )
      (f32.sub
       (f32.const 2.5)
       (f32.mul
        (local.get $1)
        (f32.const 1.5)
       )
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (f32.lt
     (local.get $1)
     (f32.const 2)
    )
   )
   (return
    (f32.const 0)
   )
  )
  (f32.sub
   (f32.const 2)
   (f32.mul
    (local.get $1)
    (f32.add
     (f32.mul
      (local.get $1)
      (f32.add
       (f32.mul
        (local.get $1)
        (f32.const 0.5)
       )
       (f32.const -2.5)
      )
     )
     (f32.const 4)
    )
   )
  )
 )
 (func $_stbir__filter_mitchell (; 475 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (result f32)
  (if
   (f32.lt
    (local.tee $1
     (f32.abs
      (local.get $0)
     )
    )
    (f32.const 1)
   )
   (return
    (f32.div
     (f32.add
      (f32.mul
       (f32.mul
        (local.get $0)
        (local.get $0)
       )
       (f32.add
        (f32.mul
         (local.get $1)
         (f32.const 21)
        )
        (f32.const -36)
       )
      )
      (f32.const 16)
     )
     (f32.const 18)
    )
   )
  )
  (if
   (i32.eqz
    (f32.lt
     (local.get $1)
     (f32.const 2)
    )
   )
   (return
    (f32.const 0)
   )
  )
  (f32.div
   (f32.add
    (f32.mul
     (local.get $1)
     (f32.add
      (f32.mul
       (local.get $1)
       (f32.sub
        (f32.const 36)
        (f32.mul
         (local.get $1)
         (f32.const 7)
        )
       )
      )
      (f32.const -60)
     )
    )
    (f32.const 32)
   )
   (f32.const 18)
  )
 )
 (func $_stbir__calculate_sample_range_upsample (; 476 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32) (param $4 i32) (param $5 i32) (param $6 i32)
  (local $7 f32)
  (f32.store
   (local.get $6)
   (f32.div
    (f32.add
     (local.tee $7
      (f32.add
       (f32.convert_i32_s
        (local.get $0)
       )
       (f32.const 0.5)
      )
     )
     (local.get $3)
    )
    (local.get $2)
   )
  )
  (i32.store
   (local.get $4)
   (i32.trunc_f64_s
    (f64.floor
     (f64.add
      (f64.promote_f32
       (f32.div
        (f32.add
         (f32.sub
          (local.get $7)
          (local.get $1)
         )
         (local.get $3)
        )
        (local.get $2)
       )
      )
      (f64.const 0.5)
     )
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.trunc_f64_s
    (f64.floor
     (f64.add
      (f64.promote_f32
       (f32.div
        (f32.add
         (f32.add
          (local.get $7)
          (local.get $1)
         )
         (local.get $3)
        )
        (local.get $2)
       )
      )
      (f64.const -0.5)
     )
    )
   )
  )
 )
 (func $_stbir__decode_and_resample_upsample (; 477 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (call $_stbir__decode_scanline
   (local.get $0)
   (local.get $1)
  )
  (local.set $2
   (i32.eqz
    (call $_stbir__use_width_upsampling
     (local.get $0)
    )
   )
  )
  (local.set $1
   (call $_stbir__add_empty_ring_buffer_entry
    (local.get $0)
    (local.get $1)
   )
  )
  (if
   (local.get $2)
   (call $_stbir__resample_horizontal_downsample
    (local.get $0)
    (local.get $1)
   )
   (call $_stbir__resample_horizontal_upsample
    (local.get $0)
    (local.get $1)
   )
  )
 )
 (func $_stbir__resample_vertical_upsample (; 478 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local.set $4
   (i32.load offset=20
    (local.get $0)
   )
  )
  (local.set $18
   (i32.load offset=112
    (local.get $0)
   )
  )
  (local.set $7
   (i32.load
    (i32.sub
     (local.get $0)
     (i32.const -64)
    )
   )
  )
  (local.set $11
   (i32.load offset=68
    (local.get $0)
   )
  )
  (local.set $19
   (i32.load offset=164
    (local.get $0)
   )
  )
  (local.set $12
   (i32.load offset=16
    (local.get $0)
   )
  )
  (local.set $3
   (i32.load offset=184
    (local.get $0)
   )
  )
  (local.set $13
   (i32.add
    (i32.load offset=96
     (local.get $0)
    )
    (i32.shl
     (i32.load offset=76
      (local.get $0)
     )
     (i32.const 1)
    )
   )
  )
  (local.set $20
   (i32.load offset=180
    (local.get $0)
   )
  )
  (local.set $21
   (i32.load offset=176
    (local.get $0)
   )
  )
  (local.set $22
   (i32.load offset=168
    (local.get $0)
   )
  )
  (local.set $23
   (i32.shr_u
    (i32.load offset=160
     (local.get $0)
    )
    (i32.const 2)
   )
  )
  (local.set $24
   (i32.mul
    (local.get $1)
    (i32.load offset=132
     (local.get $0)
    )
   )
  )
  (local.set $2
   (i32.load
    (i32.add
     (local.tee $10
      (i32.load offset=108
       (local.get $0)
      )
     )
     (i32.shl
      (local.get $1)
      (i32.const 3)
     )
    )
   )
  )
  (local.set $14
   (i32.load offset=4
    (i32.add
     (i32.shl
      (local.get $1)
      (i32.const 3)
     )
     (local.get $10)
    )
   )
  )
  (local.set $15
   (i32.mul
    (local.get $1)
    (i32.load offset=28
     (local.get $0)
    )
   )
  )
  (if
   (i32.eqz
    (call $_stbir__use_height_upsampling
     (local.get $0)
    )
   )
   (call $___assert_fail
    (i32.const 20644)
    (i32.const 19136)
    (i32.const 1895)
    (i32.const 20793)
   )
  )
  (drop
   (call $_memset
    (local.get $3)
    (i32.const 0)
    (i32.mul
     (i32.shl
      (local.get $4)
      (i32.const 2)
     )
     (local.get $7)
    )
   )
  )
  (block $folding-inner0
   (block $switch-default
    (block $switch-case16
     (block $switch-case11
      (block $switch-case6
       (block $switch-case
        (br_table $switch-case $switch-case6 $switch-case11 $switch-case16 $switch-default
         (i32.sub
          (local.get $7)
          (i32.const 1)
         )
        )
       )
       (br_if $folding-inner0
        (i32.gt_s
         (local.get $2)
         (local.get $14)
        )
       )
       (local.set $8
        (i32.gt_s
         (local.get $4)
         (i32.const 0)
        )
       )
       (local.set $1
        (i32.const 0)
       )
       (loop $while-in
        (local.set $10
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (local.set $5
         (call $_stbir__get_ring_buffer_scanline
          (local.get $2)
          (local.get $20)
          (local.get $21)
          (local.get $22)
          (local.get $19)
          (local.get $23)
         )
        )
        (local.set $9
         (f32.load
          (i32.add
           (i32.shl
            (i32.add
             (local.get $1)
             (local.get $24)
            )
            (i32.const 2)
           )
           (local.get $18)
          )
         )
        )
        (if
         (local.get $8)
         (block
          (local.set $1
           (i32.const 0)
          )
          (loop $while-in1
           (f32.store
            (local.tee $16
             (i32.add
              (i32.shl
               (local.get $1)
               (i32.const 2)
              )
              (local.get $3)
             )
            )
            (f32.add
             (f32.load
              (local.get $16)
             )
             (f32.mul
              (local.get $9)
              (f32.load
               (i32.add
                (i32.shl
                 (local.get $1)
                 (i32.const 2)
                )
                (local.get $5)
               )
              )
             )
            )
           )
           (br_if $while-in1
            (i32.ne
             (local.tee $1
              (i32.add
               (local.get $1)
               (i32.const 1)
              )
             )
             (local.get $4)
            )
           )
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $2)
          (i32.const 1)
         )
        )
        (if
         (i32.lt_s
          (local.get $2)
          (local.get $14)
         )
         (block
          (local.set $2
           (local.get $1)
          )
          (local.set $1
           (local.get $10)
          )
          (br $while-in)
         )
        )
       )
       (br $folding-inner0)
      )
      (br_if $folding-inner0
       (i32.gt_s
        (local.get $2)
        (local.get $14)
       )
      )
      (local.set $16
       (i32.gt_s
        (local.get $4)
        (i32.const 0)
       )
      )
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in3
       (local.set $10
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $8
        (call $_stbir__get_ring_buffer_scanline
         (local.get $2)
         (local.get $20)
         (local.get $21)
         (local.get $22)
         (local.get $19)
         (local.get $23)
        )
       )
       (local.set $9
        (f32.load
         (i32.add
          (i32.shl
           (i32.add
            (local.get $1)
            (local.get $24)
           )
           (i32.const 2)
          )
          (local.get $18)
         )
        )
       )
       (if
        (local.get $16)
        (block
         (local.set $1
          (i32.const 0)
         )
         (loop $while-in5
          (f32.store
           (local.tee $6
            (i32.add
             (i32.shl
              (local.tee $5
               (i32.shl
                (local.get $1)
                (i32.const 1)
               )
              )
              (i32.const 2)
             )
             (local.get $3)
            )
           )
           (f32.add
            (f32.load
             (local.get $6)
            )
            (f32.mul
             (local.get $9)
             (f32.load
              (i32.add
               (i32.shl
                (local.get $5)
                (i32.const 2)
               )
               (local.get $8)
              )
             )
            )
           )
          )
          (f32.store
           (local.tee $6
            (i32.add
             (i32.shl
              (local.tee $5
               (i32.or
                (local.get $5)
                (i32.const 1)
               )
              )
              (i32.const 2)
             )
             (local.get $3)
            )
           )
           (f32.add
            (f32.load
             (local.get $6)
            )
            (f32.mul
             (local.get $9)
             (f32.load
              (i32.add
               (i32.shl
                (local.get $5)
                (i32.const 2)
               )
               (local.get $8)
              )
             )
            )
           )
          )
          (br_if $while-in5
           (i32.ne
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
            (local.get $4)
           )
          )
         )
        )
       )
       (local.set $1
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (if
        (i32.lt_s
         (local.get $2)
         (local.get $14)
        )
        (block
         (local.set $2
          (local.get $1)
         )
         (local.set $1
          (local.get $10)
         )
         (br $while-in3)
        )
       )
      )
      (br $folding-inner0)
     )
     (br_if $folding-inner0
      (i32.gt_s
       (local.get $2)
       (local.get $14)
      )
     )
     (local.set $16
      (i32.gt_s
       (local.get $4)
       (i32.const 0)
      )
     )
     (local.set $1
      (i32.const 0)
     )
     (loop $while-in8
      (local.set $10
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
      (local.set $8
       (call $_stbir__get_ring_buffer_scanline
        (local.get $2)
        (local.get $20)
        (local.get $21)
        (local.get $22)
        (local.get $19)
        (local.get $23)
       )
      )
      (local.set $9
       (f32.load
        (i32.add
         (i32.shl
          (i32.add
           (local.get $1)
           (local.get $24)
          )
          (i32.const 2)
         )
         (local.get $18)
        )
       )
      )
      (if
       (local.get $16)
       (block
        (local.set $1
         (i32.const 0)
        )
        (loop $while-in10
         (f32.store
          (local.tee $6
           (i32.add
            (i32.shl
             (local.tee $5
              (i32.mul
               (local.get $1)
               (i32.const 3)
              )
             )
             (i32.const 2)
            )
            (local.get $3)
           )
          )
          (f32.add
           (f32.load
            (local.get $6)
           )
           (f32.mul
            (local.get $9)
            (f32.load
             (i32.add
              (i32.shl
               (local.get $5)
               (i32.const 2)
              )
              (local.get $8)
             )
            )
           )
          )
         )
         (f32.store
          (local.tee $17
           (i32.add
            (i32.shl
             (local.tee $6
              (i32.add
               (local.get $5)
               (i32.const 1)
              )
             )
             (i32.const 2)
            )
            (local.get $3)
           )
          )
          (f32.add
           (f32.load
            (local.get $17)
           )
           (f32.mul
            (local.get $9)
            (f32.load
             (i32.add
              (i32.shl
               (local.get $6)
               (i32.const 2)
              )
              (local.get $8)
             )
            )
           )
          )
         )
         (f32.store
          (local.tee $6
           (i32.add
            (i32.shl
             (local.tee $5
              (i32.add
               (local.get $5)
               (i32.const 2)
              )
             )
             (i32.const 2)
            )
            (local.get $3)
           )
          )
          (f32.add
           (f32.load
            (local.get $6)
           )
           (f32.mul
            (local.get $9)
            (f32.load
             (i32.add
              (i32.shl
               (local.get $5)
               (i32.const 2)
              )
              (local.get $8)
             )
            )
           )
          )
         )
         (br_if $while-in10
          (i32.ne
           (local.get $4)
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
      )
      (local.set $1
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
      )
      (if
       (i32.lt_s
        (local.get $2)
        (local.get $14)
       )
       (block
        (local.set $2
         (local.get $1)
        )
        (local.set $1
         (local.get $10)
        )
        (br $while-in8)
       )
      )
     )
     (br $folding-inner0)
    )
    (br_if $folding-inner0
     (i32.gt_s
      (local.get $2)
      (local.get $14)
     )
    )
    (local.set $16
     (i32.gt_s
      (local.get $4)
      (i32.const 0)
     )
    )
    (local.set $1
     (i32.const 0)
    )
    (loop $while-in13
     (local.set $10
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.set $8
      (call $_stbir__get_ring_buffer_scanline
       (local.get $2)
       (local.get $20)
       (local.get $21)
       (local.get $22)
       (local.get $19)
       (local.get $23)
      )
     )
     (local.set $9
      (f32.load
       (i32.add
        (i32.shl
         (i32.add
          (local.get $1)
          (local.get $24)
         )
         (i32.const 2)
        )
        (local.get $18)
       )
      )
     )
     (if
      (local.get $16)
      (block
       (local.set $1
        (i32.const 0)
       )
       (loop $while-in15
        (f32.store
         (local.tee $6
          (i32.add
           (i32.shl
            (local.tee $5
             (i32.shl
              (local.get $1)
              (i32.const 2)
             )
            )
            (i32.const 2)
           )
           (local.get $3)
          )
         )
         (f32.add
          (f32.load
           (local.get $6)
          )
          (f32.mul
           (local.get $9)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $5)
              (i32.const 2)
             )
             (local.get $8)
            )
           )
          )
         )
        )
        (f32.store
         (local.tee $17
          (i32.add
           (i32.shl
            (local.tee $6
             (i32.or
              (local.get $5)
              (i32.const 1)
             )
            )
            (i32.const 2)
           )
           (local.get $3)
          )
         )
         (f32.add
          (f32.load
           (local.get $17)
          )
          (f32.mul
           (local.get $9)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $6)
              (i32.const 2)
             )
             (local.get $8)
            )
           )
          )
         )
        )
        (f32.store
         (local.tee $17
          (i32.add
           (i32.shl
            (local.tee $6
             (i32.or
              (local.get $5)
              (i32.const 2)
             )
            )
            (i32.const 2)
           )
           (local.get $3)
          )
         )
         (f32.add
          (f32.load
           (local.get $17)
          )
          (f32.mul
           (local.get $9)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $6)
              (i32.const 2)
             )
             (local.get $8)
            )
           )
          )
         )
        )
        (f32.store
         (local.tee $6
          (i32.add
           (i32.shl
            (local.tee $5
             (i32.or
              (local.get $5)
              (i32.const 3)
             )
            )
            (i32.const 2)
           )
           (local.get $3)
          )
         )
         (f32.add
          (f32.load
           (local.get $6)
          )
          (f32.mul
           (local.get $9)
           (f32.load
            (i32.add
             (i32.shl
              (local.get $5)
              (i32.const 2)
             )
             (local.get $8)
            )
           )
          )
         )
        )
        (br_if $while-in15
         (i32.ne
          (local.get $4)
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
     )
     (local.set $1
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (if
      (i32.lt_s
       (local.get $2)
       (local.get $14)
      )
      (block
       (local.set $2
        (local.get $1)
       )
       (local.set $1
        (local.get $10)
       )
       (br $while-in13)
      )
     )
    )
    (br $folding-inner0)
   )
   (br_if $folding-inner0
    (i32.gt_s
     (local.get $2)
     (local.get $14)
    )
   )
   (local.set $5
    (i32.gt_s
     (local.get $4)
     (i32.const 0)
    )
   )
   (local.set $16
    (i32.gt_s
     (local.get $7)
     (i32.const 0)
    )
   )
   (local.set $1
    (i32.const 0)
   )
   (loop $while-in18
    (local.set $8
     (i32.add
      (local.get $1)
      (i32.const 1)
     )
    )
    (local.set $6
     (call $_stbir__get_ring_buffer_scanline
      (local.get $2)
      (local.get $20)
      (local.get $21)
      (local.get $22)
      (local.get $19)
      (local.get $23)
     )
    )
    (local.set $9
     (f32.load
      (i32.add
       (i32.shl
        (i32.add
         (local.get $1)
         (local.get $24)
        )
        (i32.const 2)
       )
       (local.get $18)
      )
     )
    )
    (if
     (local.get $5)
     (block
      (local.set $1
       (i32.const 0)
      )
      (loop $while-in20
       (local.set $17
        (i32.mul
         (local.get $1)
         (local.get $7)
        )
       )
       (if
        (local.get $16)
        (block
         (local.set $10
          (i32.const 0)
         )
         (loop $while-in22
          (f32.store
           (local.tee $26
            (i32.add
             (i32.shl
              (local.tee $25
               (i32.add
                (local.get $10)
                (local.get $17)
               )
              )
              (i32.const 2)
             )
             (local.get $3)
            )
           )
           (f32.add
            (f32.load
             (local.get $26)
            )
            (f32.mul
             (local.get $9)
             (f32.load
              (i32.add
               (i32.shl
                (local.get $25)
                (i32.const 2)
               )
               (local.get $6)
              )
             )
            )
           )
          )
          (br_if $while-in22
           (i32.ne
            (local.get $7)
            (local.tee $10
             (i32.add
              (local.get $10)
              (i32.const 1)
             )
            )
           )
          )
         )
        )
       )
       (br_if $while-in20
        (i32.ne
         (local.get $4)
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
    (local.set $1
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (if
     (i32.lt_s
      (local.get $2)
      (local.get $14)
     )
     (block
      (local.set $2
       (local.get $1)
      )
      (local.set $1
       (local.get $8)
      )
      (br $while-in18)
     )
    )
   )
   (call $_stbir__encode_scanline
    (local.get $0)
    (local.get $4)
    (i32.add
     (local.get $12)
     (local.get $15)
    )
    (local.get $3)
    (local.get $7)
    (local.get $11)
    (local.get $13)
   )
   (return)
  )
  (call $_stbir__encode_scanline
   (local.get $0)
   (local.get $4)
   (i32.add
    (local.get $12)
    (local.get $15)
   )
   (local.get $3)
   (local.get $7)
   (local.get $11)
   (local.get $13)
  )
 )
 (func $_stbir__get_contributors (; 479 ;) (; has Stack IR ;) (param $0 f32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (if
   (call $_stbir__use_upsampling
    (local.get $0)
   )
   (return
    (local.get $3)
   )
  )
  (i32.add
   (local.get $2)
   (i32.shl
    (call $_stbir__get_filter_pixel_margin
     (local.get $1)
     (local.get $0)
    )
    (i32.const 1)
   )
  )
 )
 (func $_stbir__get_contributor (; 480 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (i32.add
   (i32.shl
    (local.get $1)
    (i32.const 3)
   )
   (local.get $0)
  )
 )
 (func $_stbir__get_coefficient (; 481 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32) (param $3 i32) (param $4 i32) (result i32)
  (i32.add
   (i32.shl
    (i32.add
     (local.get $4)
     (i32.mul
      (call $_stbir__get_coefficient_width
       (local.get $1)
       (local.get $2)
      )
      (local.get $3)
     )
    )
    (i32.const 2)
   )
   (local.get $0)
  )
 )
 (func $_stbir__calculate_coefficients_upsample (; 482 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 i32) (param $3 i32) (param $4 f32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (local $10 f32)
  (local.set $8
   (i32.add
    (i32.shl
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 4944)
   )
  )
  (local.set $0
   (i32.load
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 3)
     )
     (i32.const 4948)
    )
   )
  )
  (if
   (i32.gt_s
    (i32.sub
     (local.get $3)
     (local.get $2)
    )
    (i32.trunc_f32_s
     (f32.ceil
      (f32.mul
       (call_indirect (type $FUNCSIG$ff)
        (local.tee $9
         (f32.div
          (f32.const 1)
          (local.get $1)
         )
        )
        (i32.and
         (local.get $0)
         (i32.const 7)
        )
       )
       (f32.const 2)
      )
     )
    )
   )
   (call $___assert_fail
    (i32.const 21188)
    (i32.const 19136)
    (i32.const 1041)
    (i32.const 21287)
   )
  )
  (i32.store
   (local.get $5)
   (local.get $2)
  )
  (i32.store offset=4
   (local.get $5)
   (local.get $3)
  )
  (if
   (i32.lt_s
    (local.get $3)
    (local.get $2)
   )
   (call $___assert_fail
    (i32.const 21040)
    (i32.const 19136)
    (i32.const 1046)
    (i32.const 21287)
   )
  )
  (if
   (i32.lt_s
    (local.tee $0
     (i32.sub
      (local.get $3)
      (local.get $2)
     )
    )
    (i32.const 0)
   )
   (local.set $1
    (f32.const 0)
   )
   (block
    (local.set $0
     (i32.const 0)
    )
    (local.set $1
     (f32.const 0)
    )
    (local.set $0
     (loop $while-in (result i32)
      (local.set $7
       (i32.load
        (local.get $8)
       )
      )
      (f32.store
       (i32.add
        (i32.shl
         (local.get $0)
         (i32.const 2)
        )
        (local.get $6)
       )
       (local.tee $10
        (call_indirect (type $FUNCSIG$fff)
         (f32.sub
          (local.get $4)
          (f32.add
           (f32.convert_i32_s
            (i32.add
             (local.get $0)
             (local.get $2)
            )
           )
           (f32.const 0.5)
          )
         )
         (local.get $9)
         (i32.add
          (i32.and
           (local.get $7)
           (i32.const 7)
          )
          (i32.const 8)
         )
        )
       )
      )
      (local.set $0
       (i32.add
        (local.tee $7
         (if (result i32)
          (i32.or
           (f32.ne
            (local.get $10)
            (f32.const 0)
           )
           (local.get $0)
          )
          (block (result i32)
           (local.set $1
            (f32.add
             (local.get $1)
             (local.get $10)
            )
           )
           (local.get $0)
          )
          (block (result i32)
           (i32.store
            (local.get $5)
            (local.tee $2
             (i32.add
              (local.get $2)
              (i32.const 1)
             )
            )
           )
           (i32.const -1)
          )
         )
        )
        (i32.const 1)
       )
      )
      (br_if $while-in
       (i32.lt_s
        (local.get $7)
        (local.tee $7
         (i32.sub
          (local.get $3)
          (local.get $2)
         )
        )
       )
      )
      (local.get $7)
     )
    )
   )
  )
  (local.set $2
   (i32.load
    (local.get $8)
   )
  )
  (if
   (f32.ne
    (call_indirect (type $FUNCSIG$fff)
     (f32.sub
      (f32.add
       (f32.convert_i32_s
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (f32.const 0.5)
      )
      (local.get $4)
     )
     (local.get $9)
     (i32.add
      (i32.and
       (local.get $2)
       (i32.const 7)
      )
      (i32.const 8)
     )
    )
    (f32.const 0)
   )
   (call $___assert_fail
    (i32.const 21326)
    (i32.const 19136)
    (i32.const 1064)
    (i32.const 21287)
   )
  )
  (if
   (i32.eqz
    (f64.gt
     (f64.promote_f32
      (local.get $1)
     )
     (f64.const 0.9)
    )
   )
   (call $___assert_fail
    (i32.const 21434)
    (i32.const 19136)
    (i32.const 1066)
    (i32.const 21287)
   )
  )
  (if
   (i32.eqz
    (f32.lt
     (local.get $1)
     (f32.const 1.100000023841858)
    )
   )
   (call $___assert_fail
    (i32.const 21453)
    (i32.const 19136)
    (i32.const 1067)
    (i32.const 21287)
   )
  )
  (if
   (i32.lt_s
    (local.get $0)
    (i32.const 0)
   )
   (return)
  )
  (local.set $1
   (f32.div
    (f32.const 1)
    (local.get $1)
   )
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in1
   (f32.store
    (local.tee $3
     (i32.add
      (i32.shl
       (local.get $2)
       (i32.const 2)
      )
      (local.get $6)
     )
    )
    (f32.mul
     (local.get $1)
     (f32.load
      (local.get $3)
     )
    )
   )
   (local.set $3
    (i32.add
     (local.get $2)
     (i32.const 1)
    )
   )
   (if
    (i32.ne
     (local.get $0)
     (local.get $2)
    )
    (block
     (local.set $2
      (local.get $3)
     )
     (br $while-in1)
    )
   )
  )
  (if
   (i32.le_s
    (local.get $0)
    (i32.const -1)
   )
   (return)
  )
  (loop $while-in3
   (if
    (f32.eq
     (f32.load
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $6)
      )
     )
     (f32.const 0)
    )
    (block
     (i32.store offset=4
      (local.get $5)
      (i32.add
       (i32.load
        (local.get $5)
       )
       (i32.add
        (local.get $0)
        (i32.const -1)
       )
      )
     )
     (local.set $2
      (i32.add
       (local.get $0)
       (i32.const -1)
      )
     )
     (if
      (i32.gt_s
       (local.get $0)
       (i32.const 0)
      )
      (block
       (local.set $0
        (local.get $2)
       )
       (br $while-in3)
      )
     )
    )
   )
  )
 )
 (func $_stbir__calculate_coefficients_downsample (; 483 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 i32) (param $3 i32) (param $4 f32) (param $5 i32) (param $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local.set $8
   (i32.add
    (i32.shl
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 4944)
   )
  )
  (local.set $0
   (i32.load
    (i32.add
     (i32.shl
      (local.get $0)
      (i32.const 3)
     )
     (i32.const 4948)
    )
   )
  )
  (if
   (i32.gt_s
    (local.tee $7
     (i32.sub
      (local.get $3)
      (local.get $2)
     )
    )
    (i32.trunc_f32_s
     (f32.ceil
      (f32.mul
       (call_indirect (type $FUNCSIG$ff)
        (local.get $1)
        (i32.and
         (local.get $0)
         (i32.const 7)
        )
       )
       (f32.const 2)
      )
     )
    )
   )
   (call $___assert_fail
    (i32.const 20894)
    (i32.const 19136)
    (i32.const 1089)
    (i32.const 20999)
   )
  )
  (i32.store
   (local.get $5)
   (local.get $2)
  )
  (i32.store offset=4
   (local.get $5)
   (local.get $3)
  )
  (if
   (i32.lt_s
    (local.get $3)
    (local.get $2)
   )
   (call $___assert_fail
    (i32.const 21040)
    (i32.const 19136)
    (i32.const 1094)
    (i32.const 20999)
   )
  )
  (if
   (i32.ge_s
    (local.get $7)
    (i32.const 0)
   )
   (block
    (local.set $9
     (i32.sub
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
      (local.get $2)
     )
    )
    (local.set $0
     (i32.const 0)
    )
    (loop $while-in
     (local.set $10
      (i32.load
       (local.get $8)
      )
     )
     (f32.store
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $6)
      )
      (f32.mul
       (call_indirect (type $FUNCSIG$fff)
        (f32.sub
         (f32.add
          (f32.convert_i32_s
           (i32.add
            (local.get $0)
            (local.get $2)
           )
          )
          (f32.const 0.5)
         )
         (local.get $4)
        )
        (local.get $1)
        (i32.add
         (i32.and
          (local.get $10)
          (i32.const 7)
         )
         (i32.const 8)
        )
       )
       (local.get $1)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.get $9)
      )
     )
    )
   )
  )
  (local.set $0
   (i32.load
    (local.get $8)
   )
  )
  (if
   (f32.ne
    (call_indirect (type $FUNCSIG$fff)
     (f32.sub
      (f32.add
       (f32.convert_i32_s
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (f32.const 0.5)
      )
      (local.get $4)
     )
     (local.get $1)
     (i32.add
      (i32.and
       (local.get $0)
       (i32.const 7)
      )
      (i32.const 8)
     )
    )
    (f32.const 0)
   )
   (call $___assert_fail
    (i32.const 21075)
    (i32.const 19136)
    (i32.const 1103)
    (i32.const 20999)
   )
  )
  (if
   (i32.le_s
    (local.get $7)
    (i32.const -1)
   )
   (return)
  )
  (local.set $0
   (local.get $7)
  )
  (loop $while-in1
   (if
    (f32.eq
     (f32.load
      (i32.add
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
       (local.get $6)
      )
     )
     (f32.const 0)
    )
    (block
     (i32.store offset=4
      (local.get $5)
      (i32.add
       (i32.load
        (local.get $5)
       )
       (i32.add
        (local.get $0)
        (i32.const -1)
       )
      )
     )
     (local.set $2
      (i32.add
       (local.get $0)
       (i32.const -1)
      )
     )
     (if
      (i32.gt_s
       (local.get $0)
       (i32.const 0)
      )
      (block
       (local.set $0
        (local.get $2)
       )
       (br $while-in1)
      )
     )
    )
   )
  )
 )
 (func $_stbir__normalize_downsample_coefficients (; 484 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local $12 i32)
  (local $13 i32)
  (local.set $9
   (call $_stbir__get_contributors
    (local.get $3)
    (local.get $2)
    (local.get $4)
    (local.get $5)
   )
  )
  (local.set $13
   (call $_stbir__get_coefficient_width
    (local.get $2)
    (local.get $3)
   )
  )
  (if
   (i32.gt_s
    (local.get $5)
    (i32.const 0)
   )
   (block $label$break$L1
    (local.set $8
     (i32.gt_s
      (local.get $9)
      (i32.const 0)
     )
    )
    (local.set $10
     (i32.gt_s
      (local.get $9)
      (i32.const 0)
     )
    )
    (local.set $4
     (i32.const 0)
    )
    (block $__rjto$1
     (block $__rjti$1
      (loop $while-in
       (block $__rjti$0
        (br_if $__rjti$0
         (i32.eqz
          (local.get $8)
         )
        )
        (local.set $6
         (i32.const 0)
        )
        (local.set $11
         (f32.const 0)
        )
        (loop $while-in1
         (if
          (i32.ge_s
           (local.get $4)
           (local.tee $7
            (i32.load
             (i32.add
              (i32.shl
               (local.get $6)
               (i32.const 3)
              )
              (local.get $0)
             )
            )
           )
          )
          (block
           (if
            (i32.le_s
             (local.get $4)
             (i32.load offset=4
              (i32.add
               (i32.shl
                (local.get $6)
                (i32.const 3)
               )
               (local.get $0)
              )
             )
            )
            (local.set $11
             (f32.add
              (local.get $11)
              (f32.load
               (call $_stbir__get_coefficient
                (local.get $1)
                (local.get $2)
                (local.get $3)
                (local.get $6)
                (i32.sub
                 (local.get $4)
                 (local.get $7)
                )
               )
              )
             )
            )
           )
           (br_if $while-in1
            (i32.lt_s
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const 1)
              )
             )
             (local.get $9)
            )
           )
          )
         )
        )
        (br_if $__rjti$0
         (i32.eqz
          (f32.gt
           (local.get $11)
           (f32.const 0.8999999761581421)
          )
         )
        )
        (br_if $__rjti$1
         (i32.eqz
          (f32.lt
           (local.get $11)
           (f32.const 1.100000023841858)
          )
         )
        )
        (local.set $11
         (f32.div
          (f32.const 1)
          (local.get $11)
         )
        )
        (if
         (local.get $10)
         (block $label$break$L15
          (local.set $6
           (i32.const 0)
          )
          (loop $while-in4
           (br_if $label$break$L15
            (i32.lt_s
             (local.get $4)
             (local.tee $7
              (i32.load
               (i32.add
                (i32.shl
                 (local.get $6)
                 (i32.const 3)
                )
                (local.get $0)
               )
              )
             )
            )
           )
           (if
            (i32.le_s
             (local.get $4)
             (i32.load offset=4
              (i32.add
               (i32.shl
                (local.get $6)
                (i32.const 3)
               )
               (local.get $0)
              )
             )
            )
            (f32.store
             (local.tee $7
              (call $_stbir__get_coefficient
               (local.get $1)
               (local.get $2)
               (local.get $3)
               (local.get $6)
               (i32.sub
                (local.get $4)
                (local.get $7)
               )
              )
             )
             (f32.mul
              (local.get $11)
              (f32.load
               (local.get $7)
              )
             )
            )
           )
           (br_if $while-in4
            (i32.lt_s
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const 1)
              )
             )
             (local.get $9)
            )
           )
          )
         )
        )
        (br_if $while-in
         (i32.lt_s
          (local.tee $4
           (i32.add
            (local.get $4)
            (i32.const 1)
           )
          )
          (local.get $5)
         )
        )
        (br $label$break$L1)
       )
      )
      (call $___assert_fail
       (i32.const 20827)
       (i32.const 19136)
       (i32.const 1138)
       (i32.const 20840)
      )
      (br $__rjto$1)
     )
     (call $___assert_fail
      (i32.const 20881)
      (i32.const 19136)
      (i32.const 1139)
      (i32.const 20840)
     )
    )
   )
  )
  (if
   (i32.le_s
    (local.get $9)
    (i32.const 0)
   )
   (return)
  )
  (local.set $4
   (i32.const 0)
  )
  (loop $while-in6
   (local.set $6
    (i32.const 0)
   )
   (loop $while-in8
    (local.set $10
     (f32.eq
      (f32.load
       (call $_stbir__get_coefficient
        (local.get $1)
        (local.get $2)
        (local.get $3)
        (local.get $4)
        (local.get $6)
       )
      )
      (f32.const 0)
     )
    )
    (local.set $8
     (i32.add
      (local.get $6)
      (i32.const 1)
     )
    )
    (if
     (local.get $10)
     (block
      (local.set $6
       (local.get $8)
      )
      (br $while-in8)
     )
    )
   )
   (local.set $8
    (i32.lt_s
     (local.tee $10
      (i32.add
       (local.get $6)
       (local.tee $12
        (i32.load
         (local.tee $7
          (i32.add
           (i32.shl
            (local.get $4)
            (i32.const 3)
           )
           (local.get $0)
          )
         )
        )
       )
      )
     )
     (i32.const 0)
    )
   )
   (local.set $12
    (select
     (i32.sub
      (i32.const 0)
      (local.get $12)
     )
     (local.get $6)
     (local.get $8)
    )
   )
   (i32.store
    (local.get $7)
    (select
     (i32.const 0)
     (local.get $10)
     (local.get $8)
    )
   )
   (local.set $8
    (call $_stbir__min
     (local.get $13)
     (i32.add
      (i32.load offset=4
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 3)
        )
        (local.get $0)
       )
      )
      (select
       (i32.const 1)
       (i32.sub
        (i32.const 1)
        (local.get $10)
       )
       (local.get $8)
      )
     )
    )
   )
   (local.set $10
    (call $_stbir__get_coefficient_width
     (local.get $2)
     (local.get $3)
    )
   )
   (if
    (i32.gt_s
     (local.get $8)
     (i32.const 0)
    )
    (block $label$break$L37
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in11
      (br_if $label$break$L37
       (i32.ge_s
        (local.tee $7
         (i32.add
          (local.get $6)
          (local.get $12)
         )
        )
        (local.get $10)
       )
      )
      (local.set $7
       (i32.load
        (call $_stbir__get_coefficient
         (local.get $1)
         (local.get $2)
         (local.get $3)
         (local.get $4)
         (local.get $7)
        )
       )
      )
      (i32.store
       (call $_stbir__get_coefficient
        (local.get $1)
        (local.get $2)
        (local.get $3)
        (local.get $4)
        (local.get $6)
       )
       (local.get $7)
      )
      (br_if $while-in11
       (i32.lt_s
        (local.tee $6
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
        (local.get $8)
       )
      )
     )
    )
   )
   (br_if $while-in6
    (i32.ne
     (local.tee $4
      (i32.add
       (local.get $4)
       (i32.const 1)
      )
     )
     (local.get $9)
    )
   )
  )
  (if
   (i32.le_s
    (local.get $9)
    (i32.const 0)
   )
   (return)
  )
  (local.set $2
   (i32.add
    (local.get $5)
    (i32.const -1)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (loop $while-in13
   (i32.store offset=4
    (local.tee $4
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 3)
      )
      (local.get $0)
     )
    )
    (call $_stbir__min
     (i32.load offset=4
      (local.get $4)
     )
     (local.get $2)
    )
   )
   (br_if $while-in13
    (i32.ne
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (local.get $9)
    )
   )
  )
 )
 (func $_stbir__min (; 485 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (select
   (local.get $0)
   (local.get $1)
   (i32.lt_s
    (local.get $0)
    (local.get $1)
   )
  )
 )
 (func $_ErrorCallback (; 486 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $0)
  )
  (i32.store offset=4
   (local.get $2)
   (local.get $1)
  )
  (call $_TraceLog
   (i32.const 4)
   (i32.const 22824)
   (local.get $2)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_WindowSizeCallback (; 487 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (call $_rlViewport
   (i32.const 0)
   (i32.const 0)
   (local.get $1)
   (local.get $2)
  )
  (call $_rlMatrixMode
   (i32.const 5889)
  )
  (call $_rlLoadIdentity)
  (call $_rlOrtho
   (f64.const 0)
   (f64.convert_i32_s
    (local.get $1)
   )
   (f64.convert_i32_s
    (local.get $2)
   )
   (f64.const 0)
   (f64.const 0)
   (f64.const 1)
  )
  (call $_rlMatrixMode
   (i32.const 5888)
  )
  (call $_rlLoadIdentity)
  (call $_glClear
   (i32.const 16640)
  )
  (i32.store
   (i32.const 33400)
   (local.get $1)
  )
  (i32.store
   (i32.const 33404)
   (local.get $2)
  )
  (i32.store
   (i32.const 34184)
   (local.get $1)
  )
  (i32.store
   (i32.const 34188)
   (local.get $2)
  )
 )
 (func $_CursorEnterCallback (; 488 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (nop)
 )
 (func $_KeyCallback (; 489 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 576)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 576)
   )
  )
  (if
   (i32.and
    (local.tee $6
     (i32.eq
      (local.get $3)
      (i32.const 1)
     )
    )
    (i32.eq
     (local.get $1)
     (i32.const 256)
    )
   )
   (block
    (call $_glfwSetWindowShouldClose
     (local.get $0)
     (i32.const 1)
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (local.get $6)
     (i32.eq
      (local.get $1)
      (i32.const 301)
     )
    )
   )
   (block
    (i32.store8
     (i32.add
      (local.get $1)
      (i32.const 29696)
     )
     (local.get $3)
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (local.set $0
   (i32.add
    (local.get $2)
    (i32.const 568)
   )
  )
  (if
   (i32.ne
    (local.get $4)
    (i32.const 2)
   )
   (block
    (i32.store
     (local.get $0)
     (i32.load
      (i32.const 34212)
     )
    )
    (call $_TakeScreenshot
     (call $_TextFormat
      (i32.const 22151)
      (local.get $0)
     )
    )
    (i32.store
     (i32.const 34212)
     (i32.add
      (i32.load
       (i32.const 34212)
      )
      (i32.const 1)
     )
    )
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (local.set $1
   (i32.add
    (local.get $2)
    (i32.const 560)
   )
  )
  (local.set $3
   (i32.add
    (local.get $2)
    (i32.const 552)
   )
  )
  (local.set $4
   (i32.add
    (local.get $2)
    (i32.const 544)
   )
  )
  (local.set $8
   (i32.add
    (local.get $2)
    (i32.const 536)
   )
  )
  (local.set $0
   (i32.add
    (local.get $2)
    (i32.const 528)
   )
  )
  (local.set $6
   (i32.add
    (local.get $2)
    (i32.const 520)
   )
  )
  (local.set $7
   (i32.add
    (local.get $2)
    (i32.const 512)
   )
  )
  (if
   (i32.load8_s
    (i32.const 34856)
   )
   (block
    (call $_GifEnd)
    (i32.store8
     (i32.const 34856)
     (i32.const 0)
    )
    (i32.store
     (local.get $7)
     (i32.add
      (i32.load
       (i32.const 34212)
      )
      (i32.const -1)
     )
    )
    (local.set $1
     (call $_TextFormat
      (i32.const 22019)
      (local.get $7)
     )
    )
    (i32.store
     (local.get $6)
     (i32.add
      (i32.load
       (i32.const 34212)
      )
      (i32.const -1)
     )
    )
    (local.set $2
     (call $_TextFormat
      (i32.const 22019)
      (local.get $6)
     )
    )
    (i32.store
     (local.get $0)
     (local.get $1)
    )
    (i32.store offset=4
     (local.get $0)
     (local.get $2)
    )
    (call $_emscripten_run_script
     (call $_TextFormat
      (i32.const 22037)
      (local.get $0)
     )
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 22072)
     (local.get $8)
    )
   )
   (block
    (i32.store8
     (i32.const 34856)
     (i32.const 1)
    )
    (i32.store
     (i32.const 34216)
     (i32.const 0)
    )
    (drop
     (call $_memset
      (local.get $2)
      (i32.const 0)
      (i32.const 512)
     )
    )
    (i32.store
     (local.get $4)
     (i32.load
      (i32.const 34212)
     )
    )
    (call $_strcpy
     (local.get $2)
     (call $_TextFormat
      (i32.const 22099)
      (local.get $4)
     )
    )
    (call $_GifBegin
     (local.get $2)
     (i32.load
      (i32.const 33400)
     )
     (i32.load
      (i32.const 33404)
     )
     (i32.trunc_f32_s
      (f32.mul
       (f32.demote_f64
        (f64.load
         (i32.const 32864)
        )
       )
       (f32.const 10)
      )
     )
    )
    (i32.store
     (i32.const 34212)
     (local.tee $0
      (i32.add
       (i32.load
        (i32.const 34212)
       )
       (i32.const 1)
      )
     )
    )
    (i32.store
     (local.get $3)
     (local.get $0)
    )
    (i32.store
     (local.get $1)
     (call $_TextFormat
      (i32.const 22019)
      (local.get $3)
     )
    )
    (call $_TraceLog
     (i32.const 3)
     (i32.const 22118)
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_MouseButtonCallback (; 490 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 128)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 128)
   )
  )
  (local.set $4
   (i32.sub
    (local.get $0)
    (i32.const -64)
   )
  )
  (local.set $3
   (local.get $0)
  )
  (i32.store8
   (i32.add
    (local.get $1)
    (i32.const 34850)
   )
   (local.get $2)
  )
  (block $__rjto$0
   (block $__rjti$0
    (if
     (call $_IsMouseButtonPressed)
     (block
      (local.set $1
       (i32.const 1)
      )
      (br $__rjti$0)
     )
     (if
      (i32.and
       (i32.ne
        (local.tee $1
         (i32.load8_s
          (i32.const 34850)
         )
        )
        (i32.load8_s
         (i32.const 34853)
        )
       )
       (i32.eqz
        (local.get $1)
       )
      )
      (block
       (local.set $1
        (i32.const 0)
       )
       (br $__rjti$0)
      )
     )
    )
    (br $__rjto$0)
   )
   (i32.store offset=8
    (local.get $0)
    (local.get $1)
   )
  )
  (i32.store offset=16
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=12
   (local.get $0)
   (i32.const 1)
  )
  (call $_GetMousePosition
   (local.get $3)
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load
    (local.get $3)
   )
  )
  (f32.store offset=32
   (local.get $0)
   (f32.div
    (f32.load offset=32
     (local.get $0)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 33400)
     )
    )
   )
  )
  (f32.store offset=36
   (local.get $0)
   (f32.div
    (f32.load offset=36
     (local.get $0)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 33404)
     )
    )
   )
  )
  (i64.store align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store offset=16 align=4
   (local.get $4)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store offset=24 align=4
   (local.get $4)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store offset=32 align=4
   (local.get $4)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store offset=40 align=4
   (local.get $4)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (i64.store offset=48 align=4
   (local.get $4)
   (i64.load offset=56 align=4
    (local.get $0)
   )
  )
  (call $_ProcessGestureEvent
   (local.get $4)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_MouseCursorPosCallback (; 491 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 112)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 112)
   )
  )
  (i32.store
   (local.get $0)
   (i32.const 2)
  )
  (i32.store offset=8
   (local.get $0)
   (i32.const 0)
  )
  (i32.store offset=4
   (local.get $0)
   (i32.const 1)
  )
  (f32.store offset=24
   (local.get $0)
   (f32.demote_f64
    (local.get $1)
   )
  )
  (f32.store offset=28
   (local.get $0)
   (local.tee $5
    (f32.demote_f64
     (local.get $2)
    )
   )
  )
  (f32.store offset=24
   (local.get $0)
   (f32.div
    (f32.load offset=24
     (local.get $0)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 33400)
     )
    )
   )
  )
  (f32.store offset=28
   (local.get $0)
   (f32.div
    (local.get $5)
    (f32.convert_i32_s
     (i32.load
      (i32.const 33404)
     )
    )
   )
  )
  (i64.store align=4
   (local.tee $3
    (i32.add
     (local.get $0)
     (i32.const 56)
    )
   )
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $0)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $0)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $0)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $0)
   )
  )
  (call $_ProcessGestureEvent
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_ScrollCallback (; 492 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 f64)
  (i32.store
   (i32.const 34208)
   (i32.trunc_f64_s
    (local.get $2)
   )
  )
 )
 (func $_WindowIconifyCallback (; 493 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $0)
   (i32.const 0)
  )
  (i32.store8
   (local.get $0)
   (i32.ne
    (local.get $1)
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_WindowDropCallback (; 494 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (call $_ClearDroppedFiles)
  (i32.store
   (i32.const 34200)
   (call $_malloc
    (i32.shl
     (local.get $1)
     (i32.const 2)
    )
   )
  )
  (if
   (i32.le_s
    (local.get $1)
    (i32.const 0)
   )
   (block
    (i32.store
     (i32.const 34204)
     (local.get $1)
    )
    (return)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (local.set $3
    (call $_malloc
     (i32.const 256)
    )
   )
   (i32.store
    (i32.add
     (i32.load
      (i32.const 34200)
     )
     (i32.shl
      (local.get $0)
      (i32.const 2)
     )
    )
    (local.get $3)
   )
   (call $_strcpy
    (local.get $3)
    (i32.load
     (i32.add
      (i32.shl
       (local.get $0)
       (i32.const 2)
      )
      (local.get $2)
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (local.get $1)
    )
   )
  )
  (i32.store
   (i32.const 34204)
   (local.get $1)
  )
 )
 (func $_SetupViewport (; 495 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (call $_rlViewport
   (i32.div_s
    (local.tee $0
     (i32.load
      (i32.const 34192)
     )
    )
    (i32.const 2)
   )
   (i32.div_s
    (local.tee $1
     (i32.load
      (i32.const 34196)
     )
    )
    (i32.const 2)
   )
   (i32.sub
    (i32.load
     (i32.const 34184)
    )
    (local.get $0)
   )
   (i32.sub
    (i32.load
     (i32.const 34188)
    )
    (local.get $1)
   )
  )
 )
 (func $_ClearBackground (; 496 ;) (; has Stack IR ;) (param $0 i32)
  (call $_rlClearColor
   (i32.load8_s
    (local.get $0)
   )
   (i32.load8_s offset=1
    (local.get $0)
   )
   (i32.load8_s offset=2
    (local.get $0)
   )
   (i32.load8_s offset=3
    (local.get $0)
   )
  )
  (call $_glClear
   (i32.const 16640)
  )
 )
 (func $_ClearDroppedFiles (; 497 ;) (; has Stack IR ;)
  (local $0 i32)
  (if
   (i32.le_s
    (i32.load
     (i32.const 34204)
    )
    (i32.const 0)
   )
   (return)
  )
  (if
   (i32.gt_s
    (i32.load
     (i32.const 34204)
    )
    (i32.const 0)
   )
   (loop $while-in
    (call $_free
     (i32.load
      (i32.add
       (i32.load
        (i32.const 34200)
       )
       (i32.shl
        (local.get $0)
        (i32.const 2)
       )
      )
     )
    )
    (br_if $while-in
     (i32.lt_s
      (local.tee $0
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (i32.load
       (i32.const 34204)
      )
     )
    )
   )
  )
  (call $_free
   (i32.load
    (i32.const 34200)
   )
  )
  (i32.store
   (i32.const 34204)
   (i32.const 0)
  )
 )
 (func $_IsMouseButtonPressed (; 498 ;) (; has Stack IR ;) (result i32)
  (local $0 i32)
  (i32.and
   (i32.ne
    (local.tee $0
     (i32.load8_s
      (i32.const 34850)
     )
    )
    (i32.load8_s
     (i32.const 34853)
    )
   )
   (i32.eq
    (local.get $0)
    (i32.const 1)
   )
  )
 )
 (func $_TextFormat (; 499 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $1)
  )
  (call $_vsprintf
   (i32.const 30208)
   (local.get $0)
   (local.get $2)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (i32.const 30208)
 )
 (func $_TakeScreenshot (; 500 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 576)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 576)
   )
  )
  (local.set $2
   (i32.add
    (local.get $1)
    (i32.const 544)
   )
  )
  (local.set $4
   (i32.add
    (local.get $1)
    (i32.const 520)
   )
  )
  (local.set $3
   (i32.add
    (local.get $1)
    (i32.const 512)
   )
  )
  (i32.store offset=524
   (local.get $1)
   (local.tee $6
    (call $_rlReadScreenPixels
     (i32.load
      (i32.const 34184)
     )
     (i32.load
      (i32.const 34188)
     )
    )
   )
  )
  (i32.store offset=528
   (local.get $1)
   (i32.load
    (i32.const 34184)
   )
  )
  (i32.store offset=532
   (local.get $1)
   (i32.load
    (i32.const 34188)
   )
  )
  (i32.store offset=536
   (local.get $1)
   (i32.const 1)
  )
  (i32.store offset=540
   (local.get $1)
   (i32.const 7)
  )
  (drop
   (call $_memset
    (local.get $1)
    (i32.const 0)
    (i32.const 512)
   )
  )
  (call $_strcpy
   (local.get $1)
   (local.get $0)
  )
  (i64.store align=4
   (local.get $2)
   (i64.load offset=524 align=4
    (local.get $1)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load offset=532 align=4
    (local.get $1)
   )
  )
  (i32.store offset=16
   (local.get $2)
   (i32.load offset=540
    (local.get $1)
   )
  )
  (call $_ExportImage
   (local.get $2)
   (local.get $1)
  )
  (call $_free
   (local.get $6)
  )
  (i32.store
   (local.get $3)
   (local.tee $0
    (select
     (local.get $1)
     (i32.add
      (local.tee $0
       (call $_strprbrk
        (local.get $1)
       )
      )
      (i32.const 1)
     )
     (i32.or
      (i32.eqz
       (local.get $0)
      )
      (i32.eq
       (local.get $0)
       (local.get $1)
      )
     )
    )
   )
  )
  (i32.store offset=4
   (local.get $3)
   (local.get $0)
  )
  (call $_emscripten_run_script
   (call $_TextFormat
    (i32.const 22037)
    (local.get $3)
   )
  )
  (i32.store
   (local.get $4)
   (local.get $1)
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 22170)
   (local.get $4)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_ExportImage (; 501 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (local.set $6
   (i32.add
    (local.get $2)
    (i32.const 8)
   )
  )
  (local.set $5
   (local.get $2)
  )
  (i64.store align=4
   (local.tee $2
    (i32.add
     (local.get $2)
     (i32.const 12)
    )
   )
   (i64.load align=4
    (local.get $0)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load offset=8 align=4
    (local.get $0)
   )
  )
  (i32.store offset=16
   (local.get $2)
   (i32.load offset=16
    (local.get $0)
   )
  )
  (local.set $3
   (call $_GetImageData
    (local.get $2)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (if
     (call $_IsFileExtension
      (local.get $1)
      (i32.const 22194)
     )
     (block
      (local.set $0
       (call $_stbi_write_png
        (local.get $1)
        (local.tee $2
         (i32.load offset=4
          (local.get $0)
         )
        )
        (i32.load offset=8
         (local.get $0)
        )
        (local.get $3)
        (i32.shl
         (local.get $2)
         (i32.const 2)
        )
       )
      )
      (br $__rjti$0)
     )
     (block
      (if
       (call $_IsFileExtension
        (local.get $1)
        (i32.const 22199)
       )
       (block
        (local.set $0
         (call $_stbi_write_bmp
          (local.get $1)
          (i32.load offset=4
           (local.get $0)
          )
          (i32.load offset=8
           (local.get $0)
          )
          (local.get $3)
         )
        )
        (br $__rjti$0)
       )
      )
      (if
       (call $_IsFileExtension
        (local.get $1)
        (i32.const 22204)
       )
       (block
        (local.set $0
         (call $_stbi_write_tga
          (local.get $1)
          (i32.load offset=4
           (local.get $0)
          )
          (i32.load offset=8
           (local.get $0)
          )
          (local.get $3)
         )
        )
        (br $__rjti$0)
       )
      )
      (if
       (call $_IsFileExtension
        (local.get $1)
        (i32.const 22209)
       )
       (block
        (local.set $0
         (call $_stbi_write_jpg
          (local.get $1)
          (i32.load offset=4
           (local.get $0)
          )
          (i32.load offset=8
           (local.get $0)
          )
          (local.get $3)
         )
        )
        (br $__rjti$0)
       )
      )
      (if
       (call $_IsFileExtension
        (local.get $1)
        (i32.const 22214)
       )
       (block
        (i64.store align=4
         (local.get $2)
         (i64.load align=4
          (local.get $0)
         )
        )
        (i64.store offset=8 align=4
         (local.get $2)
         (i64.load offset=8 align=4
          (local.get $0)
         )
        )
        (i32.store offset=16
         (local.get $2)
         (i32.load offset=16
          (local.get $0)
         )
        )
        (local.set $0
         (call $_SaveKTX
          (local.get $2)
          (local.get $1)
         )
        )
        (br $__rjti$0)
       )
      )
      (if
       (call $_IsFileExtension
        (local.get $1)
        (i32.const 22219)
       )
       (block
        (local.set $2
         (call $_fopen
          (local.get $1)
         )
        )
        (local.set $0
         (call $_fwrite
          (i32.load
           (local.get $0)
          )
          (call $_GetPixelDataSize
           (i32.load offset=4
            (local.get $0)
           )
           (i32.load offset=8
            (local.get $0)
           )
           (i32.load offset=16
            (local.get $0)
           )
          )
          (i32.const 1)
          (local.get $2)
         )
        )
        (call $_fclose
         (local.get $2)
        )
        (br $__rjti$0)
       )
      )
     )
    )
    (br $__rjto$0)
   )
   (if
    (local.get $0)
    (block
     (i32.store
      (local.get $5)
      (local.get $1)
     )
     (call $_TraceLog
      (i32.const 3)
      (i32.const 22227)
      (local.get $5)
     )
     (call $_free
      (local.get $3)
     )
     (global.set $STACKTOP
      (local.get $4)
     )
     (return)
    )
   )
  )
  (call $_TraceLog
   (i32.const 4)
   (i32.const 22259)
   (local.get $6)
  )
  (call $_free
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_strprbrk (; 502 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (loop $while-in
   (local.set $0
    (i32.add
     (local.tee $1
      (select
       (local.tee $0
        (i32.add
         (call $_strcspn
          (local.get $0)
          (i32.const 22191)
         )
         (local.get $0)
        )
       )
       (i32.const 0)
       (i32.load8_s
        (local.get $0)
       )
      )
     )
     (i32.const 1)
    )
   )
   (if
    (local.get $1)
    (block
     (local.set $2
      (local.get $1)
     )
     (br $while-in)
    )
   )
  )
  (local.get $2)
 )
 (func $_IsFileExtension (; 503 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (local.tee $0
    (call $___memrchr
     (local.get $0)
     (i32.add
      (call $_strlen
       (local.get $0)
      )
      (i32.const 1)
     )
    )
   )
   (i32.eqz
    (call $_strcmp
     (local.get $0)
     (local.get $1)
    )
   )
   (i32.const 0)
  )
 )
 (func $_stbi_write_png (; 504 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $0
   (if (result i32)
    (local.tee $1
     (call $_stbi_write_png_to_mem
      (local.get $3)
      (local.get $4)
      (local.get $1)
      (local.get $2)
      (local.get $5)
     )
    )
    (if (result i32)
     (local.tee $0
      (call $_fopen
       (local.get $0)
      )
     )
     (block (result i32)
      (drop
       (call $_fwrite
        (local.get $1)
        (i32.const 1)
        (i32.load
         (local.get $5)
        )
        (local.get $0)
       )
      )
      (call $_fclose
       (local.get $0)
      )
      (call $_free
       (local.get $1)
      )
      (i32.const 1)
     )
     (block (result i32)
      (call $_free
       (local.get $1)
      )
      (i32.const 0)
     )
    )
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $0)
 )
 (func $_stbi_write_bmp (; 505 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.eqz
    (call $_stbi__start_write_file
     (local.get $4)
     (local.get $0)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $5)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (call $_stbi_write_bmp_core
    (local.get $4)
    (local.get $1)
    (local.get $2)
    (local.get $3)
   )
  )
  (call $_stbi__end_write_file
   (local.get $4)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $_stbi_write_tga (; 506 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.eqz
    (call $_stbi__start_write_file
     (local.get $4)
     (local.get $0)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $5)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (call $_stbi_write_tga_core
    (local.get $4)
    (local.get $1)
    (local.get $2)
    (local.get $3)
   )
  )
  (call $_stbi__end_write_file
   (local.get $4)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $_stbi_write_jpg (; 507 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.eqz
    (call $_stbi__start_write_file
     (local.get $4)
     (local.get $0)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $5)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (local.set $0
   (call $_stbi_write_jpg_core
    (local.get $4)
    (local.get $1)
    (local.get $2)
    (local.get $3)
   )
  )
  (call $_stbi__end_write_file
   (local.get $4)
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $_SaveKTX (; 508 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 80)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 80)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 8)
   )
  )
  (local.set $4
   (local.get $3)
  )
  (local.set $2
   (i32.add
    (local.get $3)
    (i32.const 16)
   )
  )
  (local.set $7
   (i32.add
    (local.get $3)
    (i32.const 12)
   )
  )
  (if
   (i32.eqz
    (local.tee $5
     (call $_fopen
      (local.get $1)
     )
    )
   )
   (block
    (i32.store
     (local.get $4)
     (local.get $1)
    )
    (call $_TraceLog
     (i32.const 4)
     (i32.const 22288)
     (local.get $4)
    )
    (global.set $STACKTOP
     (local.get $9)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (i64.store align=1
   (local.get $2)
   (i64.load align=1
    (i32.const 22329)
   )
  )
  (i32.store offset=8 align=1
   (local.get $2)
   (i32.load align=1
    (i32.const 22337)
   )
  )
  (i32.store offset=12
   (local.get $2)
   (i32.const 0)
  )
  (i32.store
   (local.tee $8
    (i32.add
     (local.get $2)
     (i32.const 16)
    )
   )
   (i32.const 0)
  )
  (i32.store offset=20
   (local.get $2)
   (i32.const 1)
  )
  (i32.store
   (local.tee $3
    (i32.add
     (local.get $2)
     (i32.const 24)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (local.tee $11
    (i32.add
     (local.get $2)
     (i32.const 28)
    )
   )
   (i32.const 0)
  )
  (i32.store offset=32
   (local.get $2)
   (i32.const 0)
  )
  (i32.store offset=36
   (local.get $2)
   (local.tee $1
    (i32.load offset=4
     (local.get $0)
    )
   )
  )
  (i32.store offset=40
   (local.get $2)
   (local.tee $4
    (i32.load offset=8
     (local.get $0)
    )
   )
  )
  (i32.store offset=44
   (local.get $2)
   (i32.const 0)
  )
  (i32.store offset=48
   (local.get $2)
   (i32.const 0)
  )
  (i32.store offset=52
   (local.get $2)
   (i32.const 1)
  )
  (i32.store offset=56
   (local.get $2)
   (local.tee $10
    (i32.load offset=12
     (local.get $0)
    )
   )
  )
  (i32.store offset=60
   (local.get $2)
   (i32.const 0)
  )
  (call $_rlGetGlTextureFormats
   (local.tee $12
    (i32.load offset=16
     (local.get $0)
    )
   )
   (local.get $11)
   (local.get $3)
   (local.get $8)
  )
  (i32.store offset=32
   (local.get $2)
   (local.tee $3
    (i32.load
     (local.get $3)
    )
   )
  )
  (local.set $0
   (if (result i32)
    (i32.eq
     (local.get $3)
     (i32.const -1)
    )
    (block (result i32)
     (call $_TraceLog
      (i32.const 4)
      (i32.const 22344)
      (local.get $6)
     )
     (i32.const 0)
    )
    (block (result i32)
     (local.set $3
      (call $_fwrite
       (local.get $2)
       (i32.const 64)
       (i32.const 1)
       (local.get $5)
      )
     )
     (if (result i32)
      (i32.gt_s
       (local.get $10)
       (i32.const 0)
      )
      (block (result i32)
       (local.set $6
        (i32.load
         (local.get $0)
        )
       )
       (local.set $3
        (i32.const 0)
       )
       (local.set $0
        (local.get $4)
       )
       (local.set $4
        (i32.const 0)
       )
       (loop $while-in (result i32)
        (i32.store
         (local.get $7)
         (call $_GetPixelDataSize
          (local.get $1)
          (local.get $0)
          (local.get $12)
         )
        )
        (drop
         (call $_fwrite
          (local.get $7)
          (i32.const 4)
          (i32.const 1)
          (local.get $5)
         )
        )
        (local.set $2
         (call $_fwrite
          (i32.add
           (local.get $3)
           (local.get $6)
          )
          (local.tee $8
           (i32.load
            (local.get $7)
           )
          )
          (i32.const 1)
          (local.get $5)
         )
        )
        (local.set $1
         (i32.div_s
          (local.get $1)
          (i32.const 2)
         )
        )
        (local.set $0
         (i32.div_s
          (local.get $0)
          (i32.const 2)
         )
        )
        (local.set $3
         (i32.add
          (local.get $3)
          (local.get $8)
         )
        )
        (br_if $while-in
         (i32.ne
          (local.tee $4
           (i32.add
            (local.get $4)
            (i32.const 1)
           )
          )
          (local.get $10)
         )
        )
        (local.get $2)
       )
      )
      (local.get $3)
     )
    )
   )
  )
  (call $_fclose
   (local.get $5)
  )
  (global.set $STACKTOP
   (local.get $9)
  )
  (local.get $0)
 )
 (func $_stbi__start_write_file (; 509 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local.set $2
   (local.tee $1
    (call $_fopen
     (local.get $1)
    )
   )
  )
  (i32.store
   (local.get $0)
   (i32.const 3)
  )
  (i32.store offset=4
   (local.get $0)
   (local.get $2)
  )
  (i32.ne
   (local.get $1)
   (i32.const 0)
  )
 )
 (func $_stbi_write_jpg_core (; 510 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 f32)
  (local $15 f32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 f32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local.set $18
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 1456)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 1456)
   )
  )
  (if
   (i32.xor
    (i32.and
     (i32.and
      (i32.ne
       (local.get $3)
       (i32.const 0)
      )
      (i32.ne
       (local.get $1)
       (i32.const 0)
      )
     )
     (i32.ne
      (local.get $2)
      (i32.const 0)
     )
    )
    (i32.const 1)
   )
   (block
    (global.set $STACKTOP
     (local.get $18)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (local.set $19
   (i32.add
    (local.get $8)
    (i32.const 1184)
   )
  )
  (local.set $17
   (i32.add
    (local.get $8)
    (i32.const 928)
   )
  )
  (local.set $10
   (i32.add
    (local.get $8)
    (i32.const 864)
   )
  )
  (local.set $11
   (i32.add
    (local.get $8)
    (i32.const 800)
   )
  )
  (local.set $4
   (i32.add
    (local.get $8)
    (i32.const 768)
   )
  )
  (local.set $13
   (i32.add
    (local.get $8)
    (i32.const 1440)
   )
  )
  (local.set $20
   (i32.add
    (local.get $8)
    (i32.const 512)
   )
  )
  (local.set $21
   (i32.add
    (local.get $8)
    (i32.const 256)
   )
  )
  (loop $while-in
   (i32.store8
    (i32.add
     (local.tee $12
      (i32.load8_u
       (i32.add
        (local.get $5)
        (i32.const 6688)
       )
      )
     )
     (local.get $10)
    )
    (select
     (i32.const 1)
     (i32.and
      (select
       (local.tee $7
        (i32.div_s
         (i32.add
          (local.tee $6
           (i32.mul
            (i32.load
             (i32.add
              (i32.shl
               (local.get $5)
               (i32.const 2)
              )
              (i32.const 6432)
             )
            )
            (i32.const 40)
           )
          )
          (i32.const 50)
         )
         (i32.const 100)
        )
       )
       (i32.const 255)
       (i32.lt_s
        (local.get $7)
        (i32.const 255)
       )
      )
      (i32.const 255)
     )
     (i32.lt_s
      (local.get $6)
      (i32.const 50)
     )
    )
   )
   (i32.store8
    (i32.add
     (local.get $11)
     (local.get $12)
    )
    (select
     (i32.const 1)
     (i32.and
      (select
       (local.tee $7
        (i32.div_s
         (i32.add
          (local.tee $6
           (i32.mul
            (i32.load
             (i32.add
              (i32.shl
               (local.get $5)
               (i32.const 2)
              )
              (i32.const 6752)
             )
            )
            (i32.const 40)
           )
          )
          (i32.const 50)
         )
         (i32.const 100)
        )
       )
       (i32.const 255)
       (i32.lt_s
        (local.get $7)
        (i32.const 255)
       )
      )
      (i32.const 255)
     )
     (i32.lt_s
      (local.get $6)
      (i32.const 50)
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $5
      (i32.add
       (local.get $5)
       (i32.const 1)
      )
     )
     (i32.const 64)
    )
   )
  )
  (local.set $6
   (i32.const 0)
  )
  (local.set $7
   (i32.const 0)
  )
  (loop $while-in1
   (local.set $14
    (f32.load
     (i32.add
      (i32.shl
       (local.get $6)
       (i32.const 2)
      )
      (i32.const 7008)
     )
    )
   )
   (local.set $9
    (i32.const 0)
   )
   (local.set $5
    (local.get $7)
   )
   (loop $while-in3
    (f32.store
     (i32.add
      (i32.shl
       (local.get $5)
       (i32.const 2)
      )
      (local.get $19)
     )
     (f32.div
      (f32.const 1)
      (f32.mul
       (f32.mul
        (local.get $14)
        (f32.convert_i32_s
         (i32.load8_u
          (i32.add
           (local.tee $12
            (i32.load8_u
             (i32.add
              (local.get $5)
              (i32.const 6688)
             )
            )
           )
           (local.get $10)
          )
         )
        )
       )
       (local.tee $15
        (f32.load
         (i32.add
          (i32.shl
           (local.get $9)
           (i32.const 2)
          )
          (i32.const 7008)
         )
        )
       )
      )
     )
    )
    (f32.store
     (i32.add
      (i32.shl
       (local.get $5)
       (i32.const 2)
      )
      (local.get $17)
     )
     (f32.div
      (f32.const 1)
      (f32.mul
       (local.get $15)
       (f32.mul
        (local.get $14)
        (f32.convert_i32_s
         (i32.load8_u
          (i32.add
           (local.get $11)
           (local.get $12)
          )
         )
        )
       )
      )
     )
    )
    (local.set $5
     (i32.add
      (local.get $5)
      (i32.const 1)
     )
    )
    (br_if $while-in3
     (i32.ne
      (local.tee $9
       (i32.add
        (local.get $9)
        (i32.const 1)
       )
      )
      (i32.const 8)
     )
    )
   )
   (local.set $7
    (i32.add
     (local.get $7)
     (i32.const 8)
    )
   )
   (br_if $while-in1
    (i32.ne
     (local.tee $6
      (i32.add
       (local.get $6)
       (i32.const 1)
      )
     )
     (i32.const 8)
    )
   )
  )
  (i32.store8
   (local.get $4)
   (i32.const -1)
  )
  (i32.store8 offset=1
   (local.get $4)
   (i32.const -64)
  )
  (i32.store8 offset=2
   (local.get $4)
   (i32.const 0)
  )
  (i32.store8 offset=3
   (local.get $4)
   (i32.const 17)
  )
  (i32.store8 offset=4
   (local.get $4)
   (i32.const 8)
  )
  (i32.store8 offset=5
   (local.get $4)
   (i32.shr_u
    (local.get $2)
    (i32.const 8)
   )
  )
  (i32.store8 offset=6
   (local.get $4)
   (local.get $2)
  )
  (i32.store8 offset=7
   (local.get $4)
   (i32.shr_u
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store8 offset=8
   (local.get $4)
   (local.get $1)
  )
  (i32.store8 offset=9
   (local.get $4)
   (i32.const 3)
  )
  (i32.store8 offset=10
   (local.get $4)
   (i32.const 1)
  )
  (i32.store8 offset=11
   (local.get $4)
   (i32.const 17)
  )
  (i32.store8 offset=12
   (local.get $4)
   (i32.const 0)
  )
  (i32.store8 offset=13
   (local.get $4)
   (i32.const 2)
  )
  (i32.store8 offset=14
   (local.get $4)
   (i32.const 17)
  )
  (i32.store8 offset=15
   (local.get $4)
   (i32.const 1)
  )
  (i32.store8 offset=16
   (local.get $4)
   (i32.const 3)
  )
  (i32.store8 offset=17
   (local.get $4)
   (i32.const 17)
  )
  (i32.store8 offset=18
   (local.get $4)
   (i32.const 1)
  )
  (i32.store8 offset=19
   (local.get $4)
   (i32.const -1)
  )
  (i32.store8 offset=20
   (local.get $4)
   (i32.const -60)
  )
  (i32.store8 offset=21
   (local.get $4)
   (i32.const 1)
  )
  (i32.store8 offset=22
   (local.get $4)
   (i32.const -94)
  )
  (i32.store8 offset=23
   (local.get $4)
   (i32.const 0)
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (i32.const 7040)
   (i32.const 25)
   (i32.add
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (local.get $10)
   (i32.const 64)
   (i32.add
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (call $_stbiw__putc
   (local.get $0)
   (i32.const 1)
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (local.get $11)
   (i32.const 64)
   (i32.add
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (local.get $4)
   (i32.const 24)
   (i32.add
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (i32.const 7073)
   (i32.const 16)
   (i32.add
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (i32.const 22387)
   (i32.const 12)
   (i32.add
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (call $_stbiw__putc
   (local.get $0)
   (i32.const 16)
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (i32.const 7105)
   (i32.const 16)
   (i32.add
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (i32.const 7136)
   (i32.const 162)
   (i32.add
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (call $_stbiw__putc
   (local.get $0)
   (i32.const 1)
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (i32.const 7313)
   (i32.const 16)
   (i32.add
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (i32.const 22399)
   (i32.const 12)
   (i32.add
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (call $_stbiw__putc
   (local.get $0)
   (i32.const 17)
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (i32.const 7345)
   (i32.const 16)
   (i32.add
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (i32.const 7376)
   (i32.const 162)
   (i32.add
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (i32.const 22411)
   (i32.const 14)
   (i32.add
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (i32.store
   (local.get $4)
   (i32.const 0)
  )
  (i32.store
   (local.get $13)
   (i32.const 0)
  )
  (if
   (i32.gt_s
    (local.get $2)
    (i32.const 0)
   )
   (block
    (local.set $24
     (i32.gt_s
      (local.get $1)
      (i32.const 0)
     )
    )
    (local.set $25
     (i32.shl
      (local.get $1)
      (i32.const 2)
     )
    )
    (local.set $9
     (i32.const 0)
    )
    (local.set $5
     (i32.const 0)
    )
    (local.set $7
     (i32.const 0)
    )
    (local.set $6
     (i32.const 0)
    )
    (loop $while-in5
     (if
      (local.get $24)
      (block
       (local.set $26
        (i32.add
         (local.get $9)
         (i32.const 8)
        )
       )
       (local.set $16
        (i32.const 0)
       )
       (local.set $10
        (local.get $5)
       )
       (local.set $11
        (local.get $7)
       )
       (local.set $12
        (local.get $6)
       )
       (local.set $5
        (loop $while-in7 (result i32)
         (local.set $27
          (i32.add
           (local.get $16)
           (i32.const 8)
          )
         )
         (local.set $5
          (i32.const 0)
         )
         (local.set $7
          (local.get $9)
         )
         (loop $while-in9
          (local.set $28
           (i32.mul
            (local.get $1)
            (local.get $7)
           )
          )
          (local.set $29
           (select
            (i32.const 0)
            (i32.mul
             (local.get $25)
             (i32.sub
              (i32.add
               (local.get $7)
               (i32.const 1)
              )
              (local.get $2)
             )
            )
            (i32.lt_s
             (local.get $7)
             (local.get $2)
            )
           )
          )
          (local.set $6
           (local.get $16)
          )
          (loop $while-in11
           (f32.store
            (i32.add
             (i32.shl
              (local.get $5)
              (i32.const 2)
             )
             (local.get $20)
            )
            (f32.add
             (f32.add
              (f32.add
               (f32.mul
                (local.tee $23
                 (f32.convert_i32_s
                  (i32.load8_u
                   (i32.add
                    (local.get $3)
                    (local.tee $22
                     (i32.add
                      (i32.sub
                       (i32.shl
                        (i32.add
                         (local.get $6)
                         (local.get $28)
                        )
                        (i32.const 2)
                       )
                       (local.get $29)
                      )
                      (select
                       (i32.const 0)
                       (i32.sub
                        (i32.const 0)
                        (i32.shl
                         (i32.sub
                          (i32.add
                           (local.get $6)
                           (i32.const 1)
                          )
                          (local.get $1)
                         )
                         (i32.const 2)
                        )
                       )
                       (i32.lt_s
                        (local.get $6)
                        (local.get $1)
                       )
                      )
                     )
                    )
                   )
                  )
                 )
                )
                (f32.const 0.29899999499320984)
               )
               (f32.mul
                (local.tee $14
                 (f32.convert_i32_s
                  (i32.load8_u
                   (i32.add
                    (local.get $3)
                    (i32.add
                     (local.get $22)
                     (i32.const 1)
                    )
                   )
                  )
                 )
                )
                (f32.const 0.5870000123977661)
               )
              )
              (f32.mul
               (local.tee $15
                (f32.convert_i32_s
                 (i32.load8_u
                  (i32.add
                   (local.get $3)
                   (i32.add
                    (local.get $22)
                    (i32.const 2)
                   )
                  )
                 )
                )
               )
               (f32.const 0.11400000005960464)
              )
             )
             (f32.const -128)
            )
           )
           (f32.store
            (i32.add
             (i32.shl
              (local.get $5)
              (i32.const 2)
             )
             (local.get $21)
            )
            (f32.add
             (f32.sub
              (f32.mul
               (local.get $23)
               (f32.const -0.16874000430107117)
              )
              (f32.mul
               (local.get $14)
               (f32.const 0.33125999569892883)
              )
             )
             (f32.mul
              (local.get $15)
              (f32.const 0.5)
             )
            )
           )
           (f32.store
            (i32.add
             (i32.shl
              (local.get $5)
              (i32.const 2)
             )
             (local.get $8)
            )
            (f32.sub
             (f32.sub
              (f32.mul
               (local.get $23)
               (f32.const 0.5)
              )
              (f32.mul
               (local.get $14)
               (f32.const 0.4186899960041046)
              )
             )
             (f32.mul
              (local.get $15)
              (f32.const 0.08130999654531479)
             )
            )
           )
           (local.set $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
           (br_if $while-in11
            (i32.lt_u
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const 1)
              )
             )
             (local.get $27)
            )
           )
          )
          (br_if $while-in9
           (i32.lt_u
            (local.tee $7
             (i32.add
              (local.get $7)
              (i32.const 1)
             )
            )
            (local.get $26)
           )
          )
         )
         (local.set $12
          (call $_stbiw__jpg_processDU
           (local.get $0)
           (local.get $4)
           (local.get $13)
           (local.get $20)
           (local.get $19)
           (local.get $12)
           (i32.const 7552)
           (i32.const 8576)
          )
         )
         (local.set $11
          (call $_stbiw__jpg_processDU
           (local.get $0)
           (local.get $4)
           (local.get $13)
           (local.get $21)
           (local.get $17)
           (local.get $11)
           (i32.const 9600)
           (i32.const 10624)
          )
         )
         (local.set $10
          (call $_stbiw__jpg_processDU
           (local.get $0)
           (local.get $4)
           (local.get $13)
           (local.get $8)
           (local.get $17)
           (local.get $10)
           (i32.const 9600)
           (i32.const 10624)
          )
         )
         (br_if $while-in7
          (i32.lt_s
           (local.tee $16
            (i32.add
             (local.get $16)
             (i32.const 8)
            )
           )
           (local.get $1)
          )
         )
         (local.set $7
          (local.get $11)
         )
         (local.set $6
          (local.get $12)
         )
         (local.get $10)
        )
       )
      )
     )
     (br_if $while-in5
      (i32.lt_s
       (local.tee $9
        (i32.add
         (local.get $9)
         (i32.const 8)
        )
       )
       (local.get $2)
      )
     )
    )
   )
  )
  (call $_stbiw__jpg_writeBits
   (local.get $0)
   (local.get $4)
   (local.get $13)
   (i32.const 14484)
  )
  (call $_stbiw__putc
   (local.get $0)
   (i32.const -1)
  )
  (call $_stbiw__putc
   (local.get $0)
   (i32.const -39)
  )
  (global.set $STACKTOP
   (local.get $18)
  )
  (i32.const 1)
 )
 (func $_stbi__end_write_file (; 511 ;) (; has Stack IR ;) (param $0 i32)
  (call $_fclose
   (i32.load offset=4
    (local.get $0)
   )
  )
 )
 (func $_stbiw__putc (; 512 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $2)
   (local.get $1)
  )
  (local.set $1
   (i32.load
    (local.get $0)
   )
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (local.get $2)
   (i32.const 1)
   (i32.add
    (i32.and
     (local.get $1)
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_stbiw__jpg_processDU (; 513 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (result i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 f32)
  (local $16 i32)
  (local $17 i32)
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 272)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 272)
   )
  )
  (local.set $10
   (i32.add
    (local.get $9)
    (i32.const 256)
   )
  )
  (i32.store16
   (local.tee $12
    (i32.add
     (local.get $9)
     (i32.const 264)
    )
   )
   (i32.load16_s
    (local.get $7)
   )
  )
  (i32.store16 offset=2
   (local.get $12)
   (i32.load16_s offset=2
    (local.get $7)
   )
  )
  (i32.store16
   (local.tee $14
    (i32.add
     (local.get $9)
     (i32.const 260)
    )
   )
   (i32.load16_s offset=960
    (local.get $7)
   )
  )
  (i32.store16 offset=2
   (local.get $14)
   (i32.load16_s offset=962
    (local.get $7)
   )
  )
  (loop $while-in
   (call $_stbiw__jpg_DCT
    (i32.add
     (i32.shl
      (local.get $8)
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.add
     (i32.shl
      (i32.or
       (local.get $8)
       (i32.const 1)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.add
     (i32.shl
      (i32.or
       (local.get $8)
       (i32.const 2)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.add
     (i32.shl
      (i32.or
       (local.get $8)
       (i32.const 3)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.add
     (i32.shl
      (i32.or
       (local.get $8)
       (i32.const 4)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.add
     (i32.shl
      (i32.or
       (local.get $8)
       (i32.const 5)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.add
     (i32.shl
      (i32.or
       (local.get $8)
       (i32.const 6)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.add
     (i32.shl
      (i32.or
       (local.get $8)
       (i32.const 7)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
   )
   (br_if $while-in
    (i32.lt_u
     (local.tee $8
      (i32.add
       (local.get $8)
       (i32.const 8)
      )
     )
     (i32.const 64)
    )
   )
  )
  (local.set $8
   (i32.const 0)
  )
  (loop $while-in1
   (call $_stbiw__jpg_DCT
    (i32.add
     (i32.shl
      (local.get $8)
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.add
     (i32.shl
      (i32.add
       (local.get $8)
       (i32.const 8)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.add
     (i32.shl
      (i32.add
       (local.get $8)
       (i32.const 16)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.add
     (i32.shl
      (i32.add
       (local.get $8)
       (i32.const 24)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.add
     (i32.shl
      (i32.add
       (local.get $8)
       (i32.const 32)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.add
     (i32.shl
      (i32.add
       (local.get $8)
       (i32.const 40)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.add
     (i32.shl
      (i32.add
       (local.get $8)
       (i32.const 48)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
    (i32.add
     (i32.shl
      (i32.add
       (local.get $8)
       (i32.const 56)
      )
      (i32.const 2)
     )
     (local.get $3)
    )
   )
   (br_if $while-in1
    (i32.ne
     (local.tee $8
      (i32.add
       (local.get $8)
       (i32.const 1)
      )
     )
     (i32.const 8)
    )
   )
  )
  (local.set $8
   (i32.const 0)
  )
  (loop $while-in3
   (i32.store
    (i32.add
     (i32.shl
      (i32.load8_u
       (i32.add
        (local.get $8)
        (i32.const 6688)
       )
      )
      (i32.const 2)
     )
     (local.get $9)
    )
    (i32.trunc_f32_s
     (f32.add
      (local.tee $15
       (f32.mul
        (f32.load
         (i32.add
          (i32.shl
           (local.get $8)
           (i32.const 2)
          )
          (local.get $3)
         )
        )
        (f32.load
         (i32.add
          (i32.shl
           (local.get $8)
           (i32.const 2)
          )
          (local.get $4)
         )
        )
       )
      )
      (select
       (f32.const -0.5)
       (f32.const 0.5)
       (f32.lt
        (local.get $15)
        (f32.const 0)
       )
      )
     )
    )
   )
   (br_if $while-in3
    (i32.ne
     (local.tee $8
      (i32.add
       (local.get $8)
       (i32.const 1)
      )
     )
     (i32.const 64)
    )
   )
  )
  (if
   (local.tee $3
    (i32.sub
     (local.tee $13
      (i32.load
       (local.get $9)
      )
     )
     (local.get $5)
    )
   )
   (block
    (call $_stbiw__jpg_calcBits
     (local.get $3)
     (local.get $10)
    )
    (call $_stbiw__jpg_writeBits
     (local.get $0)
     (local.get $1)
     (local.get $2)
     (i32.add
      (i32.shl
       (i32.load16_u offset=2
        (local.get $10)
       )
       (i32.const 2)
      )
      (local.get $6)
     )
    )
    (call $_stbiw__jpg_writeBits
     (local.get $0)
     (local.get $1)
     (local.get $2)
     (local.get $10)
    )
   )
   (call $_stbiw__jpg_writeBits
    (local.get $0)
    (local.get $1)
    (local.get $2)
    (local.get $6)
   )
  )
  (local.set $3
   (i32.const 63)
  )
  (block $__rjto$0
   (block $__rjti$0
    (loop $while-in5
     (block $while-out4
      (if
       (i32.load
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 2)
         )
         (local.get $9)
        )
       )
       (block
        (local.set $5
         (local.get $3)
        )
        (br $while-out4)
       )
      )
      (local.set $4
       (i32.add
        (local.get $3)
        (i32.const -1)
       )
      )
      (br_if $__rjti$0
       (i32.le_u
        (local.get $3)
        (i32.const 1)
       )
      )
      (local.set $3
       (local.get $4)
      )
      (br $while-in5)
     )
    )
    (br $__rjto$0)
   )
   (local.set $5
    (if (result i32)
     (local.get $4)
     (local.get $4)
     (block
      (call $_stbiw__jpg_writeBits
       (local.get $0)
       (local.get $1)
       (local.get $2)
       (local.get $12)
      )
      (global.set $STACKTOP
       (local.get $11)
      )
      (return
       (local.get $13)
      )
     )
    )
   )
  )
  (if
   (i32.ge_s
    (local.get $5)
    (i32.const 1)
   )
   (block
    (local.set $4
     (i32.const 1)
    )
    (loop $while-in7
     (local.set $3
      (local.get $4)
     )
     (loop $while-in9
      (local.set $6
       (i32.add
        (local.get $3)
        (i32.const 1)
       )
      )
      (if
       (i32.eqz
        (i32.or
         (i32.ne
          (local.tee $16
           (i32.load
            (i32.add
             (i32.shl
              (local.get $3)
              (i32.const 2)
             )
             (local.get $9)
            )
           )
          )
          (i32.const 0)
         )
         (i32.gt_s
          (local.get $3)
          (local.get $5)
         )
        )
       )
       (block
        (local.set $3
         (local.get $6)
        )
        (br $while-in9)
       )
      )
     )
     (if
      (i32.gt_s
       (local.tee $8
        (i32.sub
         (local.get $3)
         (local.get $4)
        )
       )
       (i32.const 15)
      )
      (block
       (if
        (local.tee $17
         (i32.shr_u
          (local.get $8)
          (i32.const 4)
         )
        )
        (block
         (local.set $4
          (i32.const 1)
         )
         (loop $while-in11
          (call $_stbiw__jpg_writeBits
           (local.get $0)
           (local.get $1)
           (local.get $2)
           (local.get $14)
          )
          (local.set $6
           (i32.add
            (local.get $4)
            (i32.const 1)
           )
          )
          (if
           (i32.ne
            (local.get $4)
            (local.get $17)
           )
           (block
            (local.set $4
             (local.get $6)
            )
            (br $while-in11)
           )
          )
         )
        )
       )
       (local.set $8
        (i32.and
         (local.get $8)
         (i32.const 15)
        )
       )
      )
     )
     (call $_stbiw__jpg_calcBits
      (local.get $16)
      (local.get $10)
     )
     (call $_stbiw__jpg_writeBits
      (local.get $0)
      (local.get $1)
      (local.get $2)
      (i32.add
       (i32.shl
        (i32.add
         (i32.load16_u offset=2
          (local.get $10)
         )
         (i32.shl
          (local.get $8)
          (i32.const 4)
         )
        )
        (i32.const 2)
       )
       (local.get $7)
      )
     )
     (call $_stbiw__jpg_writeBits
      (local.get $0)
      (local.get $1)
      (local.get $2)
      (local.get $10)
     )
     (local.set $4
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (br_if $while-in7
      (i32.lt_s
       (local.get $3)
       (local.get $5)
      )
     )
    )
    (if
     (i32.eq
      (local.get $5)
      (i32.const 63)
     )
     (block
      (global.set $STACKTOP
       (local.get $11)
      )
      (return
       (local.get $13)
      )
     )
    )
   )
  )
  (call $_stbiw__jpg_writeBits
   (local.get $0)
   (local.get $1)
   (local.get $2)
   (local.get $12)
  )
  (global.set $STACKTOP
   (local.get $11)
  )
  (local.get $13)
 )
 (func $_stbiw__jpg_writeBits (; 514 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $3
   (i32.or
    (i32.load
     (local.get $1)
    )
    (i32.shl
     (i32.load16_u
      (local.get $3)
     )
     (i32.sub
      (i32.const 24)
      (local.tee $5
       (i32.add
        (local.tee $4
         (i32.load
          (local.get $2)
         )
        )
        (local.tee $6
         (i32.load16_u offset=2
          (local.get $3)
         )
        )
       )
      )
     )
    )
   )
  )
  (if
   (i32.le_s
    (local.get $5)
    (i32.const 7)
   )
   (block
    (i32.store
     (local.get $1)
     (local.get $3)
    )
    (i32.store
     (local.get $2)
     (local.get $5)
    )
    (return)
   )
  )
  (local.set $7
   (i32.add
    (local.get $4)
    (local.get $6)
   )
  )
  (local.set $6
   (i32.and
    (i32.add
     (i32.add
      (i32.add
       (local.get $4)
       (select
        (local.tee $4
         (i32.xor
          (local.get $5)
          (i32.const -1)
         )
        )
        (i32.const -16)
        (i32.gt_s
         (local.get $4)
         (i32.const -16)
        )
       )
      )
      (local.get $6)
     )
     (i32.const 8)
    )
    (i32.const -8)
   )
  )
  (loop $while-in
   (call $_stbiw__putc
    (local.get $0)
    (i32.and
     (i32.shr_u
      (local.get $3)
      (i32.const 16)
     )
     (i32.const 255)
    )
   )
   (if
    (i32.eq
     (i32.and
      (local.get $3)
      (i32.const 16711680)
     )
     (i32.const 16711680)
    )
    (call $_stbiw__putc
     (local.get $0)
     (i32.const 0)
    )
   )
   (local.set $3
    (i32.shl
     (local.get $3)
     (i32.const 8)
    )
   )
   (local.set $4
    (i32.add
     (local.get $5)
     (i32.const -8)
    )
   )
   (if
    (i32.gt_s
     (local.get $5)
     (i32.const 15)
    )
    (block
     (local.set $5
      (local.get $4)
     )
     (br $while-in)
    )
   )
  )
  (i32.store
   (local.get $1)
   (local.get $3)
  )
  (i32.store
   (local.get $2)
   (i32.sub
    (i32.add
     (local.get $7)
     (i32.const -8)
    )
    (local.get $6)
   )
  )
 )
 (func $_stbiw__jpg_DCT (; 515 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (local $15 f32)
  (local $16 f32)
  (local $17 f32)
  (local $18 f32)
  (local $19 f32)
  (local $20 f32)
  (local.set $17
   (f32.add
    (local.tee $11
     (f32.add
      (local.tee $8
       (f32.load
        (local.get $3)
       )
      )
      (local.tee $10
       (f32.load
        (local.get $4)
       )
      )
     )
    )
    (local.tee $13
     (f32.add
      (local.tee $12
       (f32.load
        (local.get $0)
       )
      )
      (local.tee $14
       (f32.load
        (local.get $7)
       )
      )
     )
    )
   )
  )
  (local.set $13
   (f32.mul
    (f32.add
     (f32.sub
      (local.tee $19
       (f32.add
        (local.tee $9
         (f32.load
          (local.get $1)
         )
        )
        (local.tee $18
         (f32.load
          (local.get $6)
         )
        )
       )
      )
      (local.tee $20
       (f32.add
        (local.tee $15
         (f32.load
          (local.get $2)
         )
        )
        (local.tee $16
         (f32.load
          (local.get $5)
         )
        )
       )
      )
     )
     (local.tee $11
      (f32.sub
       (local.get $13)
       (local.get $11)
      )
     )
    )
    (f32.const 0.7071067690849304)
   )
  )
  (local.set $10
   (f32.mul
    (f32.sub
     (local.tee $16
      (f32.add
       (f32.sub
        (local.get $8)
        (local.get $10)
       )
       (local.tee $15
        (f32.sub
         (local.get $15)
         (local.get $16)
        )
       )
      )
     )
     (local.tee $14
      (f32.add
       (local.tee $9
        (f32.sub
         (local.get $9)
         (local.get $18)
        )
       )
       (local.tee $8
        (f32.sub
         (local.get $12)
         (local.get $14)
        )
       )
      )
     )
    )
    (f32.const 0.3826834261417389)
   )
  )
  (local.set $12
   (f32.add
    (local.get $8)
    (local.tee $9
     (f32.mul
      (f32.add
       (local.get $15)
       (local.get $9)
      )
      (f32.const 0.7071067690849304)
     )
    )
   )
  )
  (f32.store
   (local.get $5)
   (f32.add
    (local.tee $8
     (f32.sub
      (local.get $8)
      (local.get $9)
     )
    )
    (local.tee $9
     (f32.add
      (f32.mul
       (local.get $16)
       (f32.const 0.5411961078643799)
      )
      (local.get $10)
     )
    )
   )
  )
  (f32.store
   (local.get $3)
   (f32.sub
    (local.get $8)
    (local.get $9)
   )
  )
  (f32.store
   (local.get $1)
   (f32.add
    (local.get $12)
    (local.tee $8
     (f32.add
      (f32.mul
       (local.get $14)
       (f32.const 1.3065630197525024)
      )
      (local.get $10)
     )
    )
   )
  )
  (f32.store
   (local.get $7)
   (f32.sub
    (local.get $12)
    (local.get $8)
   )
  )
  (f32.store
   (local.get $0)
   (f32.add
    (local.tee $8
     (f32.add
      (local.get $20)
      (local.get $19)
     )
    )
    (local.get $17)
   )
  )
  (f32.store
   (local.get $2)
   (f32.add
    (local.get $11)
    (local.get $13)
   )
  )
  (f32.store
   (local.get $4)
   (f32.sub
    (local.get $17)
    (local.get $8)
   )
  )
  (f32.store
   (local.get $6)
   (f32.sub
    (local.get $11)
    (local.get $13)
   )
  )
 )
 (func $_stbiw__jpg_calcBits (; 516 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (i32.store16 offset=2
   (local.get $1)
   (local.tee $2
    (i32.shr_s
     (i32.shl
      (i32.add
       (i32.and
        (i32.sub
         (i32.const 32)
         (i32.clz
          (i32.shr_s
           (select
            (i32.sub
             (i32.const 0)
             (local.get $0)
            )
            (local.get $0)
            (i32.lt_s
             (local.get $0)
             (i32.const 0)
            )
           )
           (i32.const 1)
          )
         )
        )
        (i32.const 65535)
       )
       (i32.const 1)
      )
      (i32.const 16)
     )
     (i32.const 16)
    )
   )
  )
  (i32.store16
   (local.get $1)
   (i32.and
    (i32.add
     (local.get $0)
     (i32.shr_s
      (local.get $0)
      (i32.const 31)
     )
    )
    (i32.add
     (i32.shl
      (i32.const 1)
      (i32.and
       (local.get $2)
       (i32.const 65535)
      )
     )
     (i32.const 65535)
    )
   )
  )
 )
 (func $_stbi__stdio_write (; 517 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (drop
   (call $_fwrite
    (local.get $1)
    (i32.const 1)
    (local.get $2)
    (local.get $0)
   )
  )
 )
 (func $_stbi_write_tga_core (; 518 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 96)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 96)
   )
  )
  (if
   (i32.lt_s
    (i32.or
     (local.get $1)
     (local.get $2)
    )
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $9)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $4)
     (i32.const 48)
    )
   )
   (i32.const 0)
  )
  (i32.store offset=4
   (local.get $5)
   (i32.const 0)
  )
  (i32.store offset=8
   (local.get $5)
   (i32.const 10)
  )
  (i32.store offset=12
   (local.get $5)
   (i32.const 0)
  )
  (i32.store offset=16
   (local.get $5)
   (i32.const 0)
  )
  (i32.store offset=20
   (local.get $5)
   (i32.const 0)
  )
  (i32.store offset=24
   (local.get $5)
   (i32.const 0)
  )
  (i32.store offset=28
   (local.get $5)
   (i32.const 0)
  )
  (i32.store offset=32
   (local.get $5)
   (local.get $1)
  )
  (i32.store offset=36
   (local.get $5)
   (local.get $2)
  )
  (i32.store offset=40
   (local.get $5)
   (i32.const 32)
  )
  (i32.store offset=44
   (local.get $5)
   (i32.const 8)
  )
  (call $_stbiw__writef
   (local.get $0)
   (local.get $5)
  )
  (if
   (i32.eq
    (local.tee $10
     (i32.add
      (local.get $2)
      (i32.const -1)
     )
    )
    (local.tee $13
     (i32.const -1)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $9)
    )
    (return
     (i32.const 1)
    )
   )
  )
  (local.set $14
   (i32.shl
    (local.get $1)
    (i32.const 2)
   )
  )
  (local.set $15
   (i32.gt_s
    (local.get $1)
    (i32.const 0)
   )
  )
  (local.set $16
   (i32.add
    (local.get $1)
    (i32.const -1)
   )
  )
  (drop
   (loop $while-in (result i32)
    (local.set $8
     (i32.add
      (local.get $3)
      (i32.mul
       (local.get $10)
       (local.get $14)
      )
     )
    )
    (if
     (local.get $15)
     (block
      (local.set $6
       (i32.const 0)
      )
      (loop $while-in1
       (local.set $7
        (i32.add
         (local.get $8)
         (i32.shl
          (local.get $6)
          (i32.const 2)
         )
        )
       )
       (block $__rjto$1
        (block $__rjti$1
         (if
          (i32.lt_s
           (local.get $6)
           (local.get $16)
          )
          (block
           (local.set $12
            (call $_memcmp
             (local.get $7)
             (i32.add
              (local.get $8)
              (i32.shl
               (i32.add
                (local.get $6)
                (i32.const 1)
               )
               (i32.const 2)
              )
             )
             (i32.const 4)
            )
           )
           (local.set $4
            (i32.lt_s
             (local.tee $2
              (i32.add
               (local.get $6)
               (i32.const 2)
              )
             )
             (local.get $1)
            )
           )
           (block $__rjto$0
            (block $__rjti$0
             (local.set $2
              (if (result i32)
               (local.get $12)
               (block
                (if
                 (i32.eqz
                  (local.get $4)
                 )
                 (block
                  (local.set $2
                   (i32.const 2)
                  )
                  (br $__rjti$1)
                 )
                )
                (local.set $11
                 (i32.const 2)
                )
                (local.set $4
                 (local.get $7)
                )
                (loop $while-in6
                 (if
                  (call $_memcmp
                   (local.get $4)
                   (i32.add
                    (local.get $8)
                    (i32.shl
                     (local.get $2)
                     (i32.const 2)
                    )
                   )
                   (i32.const 4)
                  )
                  (block
                   (local.set $4
                    (i32.add
                     (local.get $4)
                     (i32.const 4)
                    )
                   )
                   (br_if $__rjti$0
                    (i32.eqz
                     (i32.and
                      (i32.lt_s
                       (local.tee $17
                        (i32.add
                         (local.get $2)
                         (i32.const 1)
                        )
                       )
                       (local.get $1)
                      )
                      (i32.lt_u
                       (local.tee $2
                        (i32.add
                         (local.get $11)
                         (i32.const 1)
                        )
                       )
                       (i32.const 128)
                      )
                     )
                    )
                   )
                   (local.set $11
                    (local.get $2)
                   )
                   (local.set $2
                    (local.get $17)
                   )
                   (br $while-in6)
                  )
                 )
                )
                (local.set $2
                 (i32.add
                  (local.get $11)
                  (i32.const -1)
                 )
                )
                (br $__rjti$0)
               )
               (if (result i32)
                (local.get $4)
                (block
                 (local.set $4
                  (i32.const 2)
                 )
                 (loop $while-in4
                  (if
                   (call $_memcmp
                    (local.get $7)
                    (i32.add
                     (local.get $8)
                     (i32.shl
                      (local.get $2)
                      (i32.const 2)
                     )
                    )
                    (i32.const 4)
                   )
                   (block
                    (local.set $2
                     (local.get $4)
                    )
                    (br $__rjti$0)
                   )
                  )
                  (br_if $while-in4
                   (i32.and
                    (i32.lt_s
                     (local.tee $2
                      (i32.add
                       (local.get $2)
                       (i32.const 1)
                      )
                     )
                     (local.get $1)
                    )
                    (i32.lt_u
                     (local.tee $4
                      (i32.add
                       (local.get $4)
                       (i32.const 1)
                      )
                     )
                     (i32.const 128)
                    )
                   )
                  )
                 )
                 (local.set $2
                  (local.get $4)
                 )
                 (br $__rjti$0)
                )
                (i32.const 2)
               )
              )
             )
             (br $__rjto$0)
            )
            (br_if $__rjti$1
             (local.get $12)
            )
           )
           (i32.store8
            (local.get $5)
            (i32.add
             (local.get $2)
             (i32.const 127)
            )
           )
           (call_indirect (type $FUNCSIG$viii)
            (i32.load offset=4
             (local.get $0)
            )
            (local.get $5)
            (i32.const 1)
            (i32.add
             (i32.and
              (i32.load
               (local.get $0)
              )
              (i32.const 63)
             )
             (i32.const 203)
            )
           )
           (call $_stbiw__write_pixel
            (local.get $0)
            (i32.const 1)
            (local.get $7)
           )
          )
          (block
           (local.set $2
            (i32.const 1)
           )
           (br $__rjti$1)
          )
         )
         (br $__rjto$1)
        )
        (i32.store8
         (local.get $5)
         (i32.add
          (local.get $2)
          (i32.const 255)
         )
        )
        (call_indirect (type $FUNCSIG$viii)
         (i32.load offset=4
          (local.get $0)
         )
         (local.get $5)
         (i32.const 1)
         (i32.add
          (i32.and
           (i32.load
            (local.get $0)
           )
           (i32.const 63)
          )
          (i32.const 203)
         )
        )
        (if
         (i32.gt_s
          (local.get $2)
          (i32.const 0)
         )
         (block
          (local.set $4
           (i32.const 0)
          )
          (loop $while-in8
           (call $_stbiw__write_pixel
            (local.get $0)
            (i32.const 1)
            (i32.add
             (local.get $7)
             (i32.shl
              (local.get $4)
              (i32.const 2)
             )
            )
           )
           (br_if $while-in8
            (i32.ne
             (local.tee $4
              (i32.add
               (local.get $4)
               (i32.const 1)
              )
             )
             (local.get $2)
            )
           )
          )
         )
        )
       )
       (br_if $while-in1
        (i32.lt_s
         (local.tee $6
          (i32.add
           (local.get $2)
           (local.get $6)
          )
         )
         (local.get $1)
        )
       )
      )
     )
    )
    (br_if $while-in
     (i32.ne
      (local.tee $10
       (i32.add
        (local.get $10)
        (i32.const -1)
       )
      )
      (local.get $13)
     )
    )
    (i32.const 1)
   )
  )
  (global.set $STACKTOP
   (local.get $9)
  )
  (i32.const 1)
 )
 (func $_stbiw__outfile (; 519 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.lt_s
    (i32.or
     (local.get $1)
     (local.get $2)
    )
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $6)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (i32.store
   (local.get $7)
   (local.get $5)
  )
  (call $_stbiw__writefv
   (local.get $0)
   (i32.const 22487)
   (local.get $7)
  )
  (call $_stbiw__write_pixels
   (local.get $0)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (i32.const 1)
 )
 (func $_stbiw__writef (; 520 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $2)
   (local.get $1)
  )
  (call $_stbiw__writefv
   (local.get $0)
   (i32.const 22425)
   (local.get $2)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_stbiw__write_pixel (; 521 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.lt_s
    (local.get $1)
    (i32.const 0)
   )
   (call_indirect (type $FUNCSIG$viii)
    (i32.load offset=4
     (local.get $0)
    )
    (i32.add
     (local.get $2)
     (i32.const 3)
    )
    (i32.const 1)
    (i32.add
     (i32.and
      (i32.load
       (local.get $0)
      )
      (i32.const 63)
     )
     (i32.const 203)
    )
   )
  )
  (if
   (i32.eqz
    (local.get $1)
   )
   (block
    (i32.store8
     (local.get $3)
     (i32.add
      (i32.div_s
       (i32.mul
        (local.tee $1
         (i32.load8_u offset=3
          (local.get $2)
         )
        )
        (i32.add
         (i32.load8_u
          (local.get $2)
         )
         (i32.const -255)
        )
       )
       (i32.const 255)
      )
      (i32.const 255)
     )
    )
    (i32.store8 offset=1
     (local.get $3)
     (i32.div_u
      (i32.mul
       (local.get $1)
       (i32.load8_u offset=1
        (local.get $2)
       )
      )
      (i32.const 255)
     )
    )
    (i32.store8 offset=2
     (local.get $3)
     (local.tee $1
      (i32.and
       (i32.add
        (i32.div_s
         (i32.mul
          (local.get $1)
          (i32.add
           (i32.load8_u offset=2
            (local.get $2)
           )
           (i32.const -255)
          )
         )
         (i32.const 255)
        )
        (i32.const 255)
       )
       (i32.const 255)
      )
     )
    )
    (call $_stbiw__write3
     (local.get $0)
     (local.get $1)
     (i32.load8_s offset=1
      (local.get $3)
     )
     (i32.load8_s
      (local.get $3)
     )
    )
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (call $_stbiw__write3
   (local.get $0)
   (i32.load8_s offset=2
    (local.get $2)
   )
   (i32.load8_s offset=1
    (local.get $2)
   )
   (i32.load8_s
    (local.get $2)
   )
  )
  (if
   (i32.le_s
    (local.get $1)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (i32.add
    (local.get $2)
    (i32.const 3)
   )
   (i32.const 1)
   (i32.add
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_stbiw__write3 (; 522 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $4)
   (local.get $1)
  )
  (i32.store8 offset=1
   (local.get $4)
   (local.get $2)
  )
  (i32.store8 offset=2
   (local.get $4)
   (local.get $3)
  )
  (local.set $1
   (i32.load
    (local.get $0)
   )
  )
  (call_indirect (type $FUNCSIG$viii)
   (i32.load offset=4
    (local.get $0)
   )
   (local.get $4)
   (i32.const 3)
   (i32.add
    (i32.and
     (local.get $1)
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_stbiw__writefv (; 523 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.eqz
    (local.tee $3
     (i32.load8_s
      (local.get $1)
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $6)
    )
    (return)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (loop $label$continue$L4
     (block $__rjti$0
      (local.set $1
       (i32.add
        (local.get $1)
        (i32.const 1)
       )
      )
      (block $switch
       (block $switch-case2
        (block $switch-case1
         (block $switch-case0
          (br_table $switch $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $__rjti$0 $switch-case0 $switch-case1 $__rjti$0 $switch-case2 $__rjti$0
           (i32.sub
            (i32.shr_s
             (i32.shl
              (local.get $3)
              (i32.const 24)
             )
             (i32.const 24)
            )
            (i32.const 32)
           )
          )
         )
         (local.set $5
          (i32.load
           (local.tee $3
            (i32.and
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 3)
             )
             (i32.const -4)
            )
           )
          )
         )
         (i32.store
          (local.get $2)
          (i32.add
           (local.get $3)
           (i32.const 4)
          )
         )
         (i32.store8
          (local.get $4)
          (local.get $5)
         )
         (local.set $3
          (i32.load
           (local.get $0)
          )
         )
         (call_indirect (type $FUNCSIG$viii)
          (i32.load offset=4
           (local.get $0)
          )
          (local.get $4)
          (i32.const 1)
          (i32.add
           (i32.and
            (local.get $3)
            (i32.const 63)
           )
           (i32.const 203)
          )
         )
         (br $switch)
        )
        (local.set $3
         (i32.load
          (local.tee $5
           (i32.and
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 3)
            )
            (i32.const -4)
           )
          )
         )
        )
        (i32.store
         (local.get $2)
         (i32.add
          (local.get $5)
          (i32.const 4)
         )
        )
        (i32.store8
         (local.get $4)
         (local.get $3)
        )
        (i32.store8 offset=1
         (local.get $4)
         (i32.shr_u
          (local.get $3)
          (i32.const 8)
         )
        )
        (local.set $3
         (i32.load
          (local.get $0)
         )
        )
        (call_indirect (type $FUNCSIG$viii)
         (i32.load offset=4
          (local.get $0)
         )
         (local.get $4)
         (i32.const 2)
         (i32.add
          (i32.and
           (local.get $3)
           (i32.const 63)
          )
          (i32.const 203)
         )
        )
        (br $switch)
       )
       (local.set $3
        (i32.load
         (local.tee $5
          (i32.and
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 3)
           )
           (i32.const -4)
          )
         )
        )
       )
       (i32.store
        (local.get $2)
        (i32.add
         (local.get $5)
         (i32.const 4)
        )
       )
       (i32.store8
        (local.get $4)
        (local.get $3)
       )
       (i32.store8 offset=1
        (local.get $4)
        (i32.shr_u
         (local.get $3)
         (i32.const 8)
        )
       )
       (i32.store8 offset=2
        (local.get $4)
        (i32.shr_u
         (local.get $3)
         (i32.const 16)
        )
       )
       (i32.store8 offset=3
        (local.get $4)
        (i32.shr_u
         (local.get $3)
         (i32.const 24)
        )
       )
       (local.set $3
        (i32.load
         (local.get $0)
        )
       )
       (call_indirect (type $FUNCSIG$viii)
        (i32.load offset=4
         (local.get $0)
        )
        (local.get $4)
        (i32.const 4)
        (i32.add
         (i32.and
          (local.get $3)
          (i32.const 63)
         )
         (i32.const 203)
        )
       )
      )
      (br_if $label$continue$L4
       (local.tee $3
        (i32.load8_s
         (local.get $1)
        )
       )
      )
      (br $__rjti$1)
     )
    )
    (call $___assert_fail
     (i32.const 22441)
     (i32.const 22443)
     (i32.const 324)
     (i32.const 22472)
    )
    (br $__rjto$1)
   )
   (global.set $STACKTOP
    (local.get $6)
   )
  )
 )
 (func $_stbiw__write_pixels (; 524 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $7)
   (i32.const 0)
  )
  (if
   (i32.lt_s
    (local.get $2)
    (i32.const 1)
   )
   (block
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (if
   (i32.eq
    (local.tee $2
     (i32.add
      (local.get $2)
      (i32.const -1)
     )
    )
    (i32.const -1)
   )
   (block
    (global.set $STACKTOP
     (local.get $5)
    )
    (return)
   )
  )
  (local.set $8
   (i32.gt_s
    (local.get $1)
    (i32.const 0)
   )
  )
  (loop $while-in
   (if
    (local.get $8)
    (block
     (local.set $9
      (i32.mul
       (local.get $1)
       (local.get $2)
      )
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in1
      (call $_stbiw__write_pixel
       (local.get $0)
       (i32.const 0)
       (i32.add
        (local.get $3)
        (i32.shl
         (i32.add
          (local.get $6)
          (local.get $9)
         )
         (i32.const 2)
        )
       )
      )
      (br_if $while-in1
       (i32.ne
        (local.tee $6
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
        (local.get $1)
       )
      )
     )
    )
   )
   (call_indirect (type $FUNCSIG$viii)
    (i32.load offset=4
     (local.get $0)
    )
    (local.get $7)
    (local.get $4)
    (i32.add
     (i32.and
      (i32.load
       (local.get $0)
      )
      (i32.const 63)
     )
     (i32.const 203)
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $2
      (i32.add
       (local.get $2)
       (i32.const -1)
      )
     )
     (i32.const -1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_stbi_write_bmp_core (; 525 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 80)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 80)
   )
  )
  (i32.store
   (local.get $4)
   (i32.const 66)
  )
  (i32.store offset=4
   (local.get $4)
   (i32.const 77)
  )
  (i32.store offset=8
   (local.get $4)
   (i32.add
    (i32.mul
     (local.get $2)
     (i32.add
      (local.tee $6
       (i32.and
        (i32.mul
         (local.get $1)
         (i32.const -3)
        )
        (i32.const 3)
       )
      )
      (i32.mul
       (local.get $1)
       (i32.const 3)
      )
     )
    )
    (i32.const 54)
   )
  )
  (i32.store offset=12
   (local.get $4)
   (i32.const 0)
  )
  (i32.store offset=16
   (local.get $4)
   (i32.const 0)
  )
  (i32.store offset=20
   (local.get $4)
   (i32.const 54)
  )
  (i32.store offset=24
   (local.get $4)
   (i32.const 40)
  )
  (i32.store offset=28
   (local.get $4)
   (local.get $1)
  )
  (i32.store offset=32
   (local.get $4)
   (local.get $2)
  )
  (i32.store offset=36
   (local.get $4)
   (i32.const 1)
  )
  (i32.store offset=40
   (local.get $4)
   (i32.const 24)
  )
  (i32.store offset=44
   (local.get $4)
   (i32.const 0)
  )
  (i32.store offset=48
   (local.get $4)
   (i32.const 0)
  )
  (i32.store offset=52
   (local.get $4)
   (i32.const 0)
  )
  (i32.store offset=56
   (local.get $4)
   (i32.const 0)
  )
  (i32.store offset=60
   (local.get $4)
   (i32.const 0)
  )
  (i32.store
   (i32.sub
    (local.get $4)
    (i32.const -64)
   )
   (i32.const 0)
  )
  (local.set $0
   (call $_stbiw__outfile
    (local.get $0)
    (local.get $1)
    (local.get $2)
    (local.get $3)
    (local.get $6)
    (local.get $4)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $_stbi_write_png_to_mem (; 526 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local.set $17
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $13
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $6
   (i32.add
    (local.get $13)
    (i32.const 4)
   )
  )
  (local.set $12
   (select
    (local.get $1)
    (local.tee $10
     (i32.shl
      (local.get $2)
      (i32.const 2)
     )
    )
    (local.get $1)
   )
  )
  (block $folding-inner0
   (br_if $folding-inner0
    (i32.eqz
     (local.tee $16
      (call $_malloc
       (local.tee $19
        (i32.mul
         (local.get $3)
         (local.tee $18
          (i32.add
           (local.get $10)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
   )
   (if
    (i32.eqz
     (local.tee $8
      (call $_malloc
       (local.get $10)
      )
     )
    )
    (block
     (call $_free
      (local.get $16)
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.gt_s
     (local.get $3)
     (i32.const 0)
    )
    (block
     (local.set $14
      (i32.gt_s
       (local.get $10)
       (i32.const 0)
      )
     )
     (loop $while-in
      (call $_stbiw__encode_png_line
       (local.get $0)
       (local.get $12)
       (local.get $2)
       (local.get $11)
       (i32.const 0)
       (local.get $8)
      )
      (if
       (local.get $14)
       (block
        (local.set $1
         (i32.const 0)
        )
        (local.set $5
         (i32.const 0)
        )
        (loop $while-in1
         (local.set $1
          (i32.add
           (local.get $1)
           (select
            (local.tee $7
             (i32.load8_s
              (i32.add
               (local.get $5)
               (local.get $8)
              )
             )
            )
            (i32.sub
             (i32.const 0)
             (local.get $7)
            )
            (i32.gt_s
             (local.get $7)
             (i32.const -1)
            )
           )
          )
         )
         (br_if $while-in1
          (i32.ne
           (local.get $10)
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
          )
         )
        )
        (call $_stbiw__encode_png_line
         (local.get $0)
         (local.get $12)
         (local.get $2)
         (local.get $11)
         (i32.const 1)
         (local.get $8)
        )
        (if
         (local.get $14)
         (block
          (local.set $5
           (i32.const 0)
          )
          (local.set $7
           (i32.const 0)
          )
          (loop $while-in3
           (local.set $5
            (i32.add
             (local.get $5)
             (select
              (local.tee $9
               (i32.load8_s
                (i32.add
                 (local.get $7)
                 (local.get $8)
                )
               )
              )
              (i32.sub
               (i32.const 0)
               (local.get $9)
              )
              (i32.gt_s
               (local.get $9)
               (i32.const -1)
              )
             )
            )
           )
           (br_if $while-in3
            (i32.ne
             (local.get $10)
             (local.tee $7
              (i32.add
               (local.get $7)
               (i32.const 1)
              )
             )
            )
           )
          )
         )
         (local.set $5
          (i32.const 0)
         )
        )
       )
       (block
        (call $_stbiw__encode_png_line
         (local.get $0)
         (local.get $12)
         (local.get $2)
         (local.get $11)
         (i32.const 1)
         (local.get $8)
        )
        (local.set $5
         (i32.const 0)
        )
        (local.set $1
         (i32.const 0)
        )
       )
      )
      (local.set $15
       (local.tee $7
        (i32.lt_s
         (local.get $5)
         (local.get $1)
        )
       )
      )
      (local.set $7
       (select
        (local.get $5)
        (local.get $1)
        (local.get $7)
       )
      )
      (call $_stbiw__encode_png_line
       (local.get $0)
       (local.get $12)
       (local.get $2)
       (local.get $11)
       (i32.const 2)
       (local.get $8)
      )
      (if
       (local.get $14)
       (block
        (local.set $1
         (i32.const 0)
        )
        (local.set $5
         (i32.const 0)
        )
        (loop $while-in5
         (local.set $1
          (i32.add
           (local.get $1)
           (select
            (local.tee $9
             (i32.load8_s
              (i32.add
               (local.get $5)
               (local.get $8)
              )
             )
            )
            (i32.sub
             (i32.const 0)
             (local.get $9)
            )
            (i32.gt_s
             (local.get $9)
             (i32.const -1)
            )
           )
          )
         )
         (br_if $while-in5
          (i32.ne
           (local.get $10)
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
       (local.set $1
        (i32.const 0)
       )
      )
      (local.set $15
       (select
        (i32.const 2)
        (local.get $15)
        (local.tee $5
         (i32.lt_s
          (local.get $1)
          (local.get $7)
         )
        )
       )
      )
      (local.set $7
       (select
        (local.get $1)
        (local.get $7)
        (local.get $5)
       )
      )
      (call $_stbiw__encode_png_line
       (local.get $0)
       (local.get $12)
       (local.get $2)
       (local.get $11)
       (i32.const 3)
       (local.get $8)
      )
      (if
       (local.get $14)
       (block
        (local.set $1
         (i32.const 0)
        )
        (local.set $5
         (i32.const 0)
        )
        (loop $while-in7
         (local.set $1
          (i32.add
           (local.get $1)
           (select
            (local.tee $9
             (i32.load8_s
              (i32.add
               (local.get $5)
               (local.get $8)
              )
             )
            )
            (i32.sub
             (i32.const 0)
             (local.get $9)
            )
            (i32.gt_s
             (local.get $9)
             (i32.const -1)
            )
           )
          )
         )
         (br_if $while-in7
          (i32.ne
           (local.get $10)
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
       (local.set $1
        (i32.const 0)
       )
      )
      (local.set $9
       (select
        (i32.const 3)
        (local.get $15)
        (local.tee $5
         (i32.lt_s
          (local.get $1)
          (local.get $7)
         )
        )
       )
      )
      (local.set $15
       (select
        (local.get $1)
        (local.get $7)
        (local.get $5)
       )
      )
      (call $_stbiw__encode_png_line
       (local.get $0)
       (local.get $12)
       (local.get $2)
       (local.get $11)
       (i32.const 4)
       (local.get $8)
      )
      (if
       (local.get $14)
       (block
        (local.set $1
         (i32.const 0)
        )
        (local.set $5
         (i32.const 0)
        )
        (loop $while-in9
         (local.set $1
          (i32.add
           (local.get $1)
           (select
            (local.tee $7
             (i32.load8_s
              (i32.add
               (local.get $5)
               (local.get $8)
              )
             )
            )
            (i32.sub
             (i32.const 0)
             (local.get $7)
            )
            (i32.gt_s
             (local.get $7)
             (i32.const -1)
            )
           )
          )
         )
         (br_if $while-in9
          (i32.ne
           (local.get $10)
           (local.tee $5
            (i32.add
             (local.get $5)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
       (local.set $1
        (i32.const 0)
       )
      )
      (call $_stbiw__encode_png_line
       (local.get $0)
       (local.get $12)
       (local.get $2)
       (local.get $11)
       (local.tee $1
        (select
         (i32.const 4)
         (local.get $9)
         (i32.lt_s
          (local.get $1)
          (local.get $15)
         )
        )
       )
       (local.get $8)
      )
      (i32.store8
       (local.tee $5
        (i32.add
         (local.get $16)
         (i32.mul
          (local.get $11)
          (local.get $18)
         )
        )
       )
       (local.get $1)
      )
      (drop
       (call $_memcpy
        (i32.add
         (local.get $5)
         (i32.const 1)
        )
        (local.get $8)
        (local.get $10)
       )
      )
      (br_if $while-in
       (i32.ne
        (local.tee $11
         (i32.add
          (local.get $11)
          (i32.const 1)
         )
        )
        (local.get $3)
       )
      )
     )
    )
   )
   (call $_free
    (local.get $8)
   )
   (local.set $5
    (call $_stbi_zlib_compress
     (local.get $16)
     (local.get $19)
     (local.get $13)
    )
   )
   (call $_free
    (local.get $16)
   )
   (br_if $folding-inner0
    (i32.eqz
     (local.get $5)
    )
   )
   (br_if $folding-inner0
    (i32.eqz
     (local.tee $0
      (call $_malloc
       (local.tee $13
        (i32.add
         (local.tee $1
          (i32.load
           (local.get $13)
          )
         )
         (i32.const 57)
        )
       )
      )
     )
    )
   )
   (i32.store
    (local.get $4)
    (local.get $13)
   )
   (i64.store align=1
    (local.get $0)
    (i64.const 727905341920923785)
   )
   (i32.store8 offset=8
    (local.get $0)
    (i32.const 0)
   )
   (i32.store8 offset=9
    (local.get $0)
    (i32.const 0)
   )
   (i32.store8 offset=10
    (local.get $0)
    (i32.const 0)
   )
   (i32.store8 offset=11
    (local.get $0)
    (i32.const 13)
   )
   (i32.store8 offset=12
    (local.get $0)
    (i32.const 73)
   )
   (i32.store8 offset=13
    (local.get $0)
    (i32.const 72)
   )
   (i32.store8 offset=14
    (local.get $0)
    (i32.const 68)
   )
   (i32.store8 offset=15
    (local.get $0)
    (i32.const 82)
   )
   (i32.store
    (local.get $6)
    (i32.add
     (local.get $0)
     (i32.const 16)
    )
   )
   (i32.store8 offset=16
    (local.get $0)
    (i32.shr_u
     (local.get $2)
     (i32.const 24)
    )
   )
   (i32.store8 offset=17
    (local.get $0)
    (i32.shr_u
     (local.get $2)
     (i32.const 16)
    )
   )
   (i32.store8 offset=18
    (local.get $0)
    (i32.shr_u
     (local.get $2)
     (i32.const 8)
    )
   )
   (i32.store8 offset=3
    (i32.load
     (local.get $6)
    )
    (local.get $2)
   )
   (i32.store
    (local.get $6)
    (i32.add
     (local.tee $2
      (i32.load
       (local.get $6)
      )
     )
     (i32.const 4)
    )
   )
   (i32.store8 offset=4
    (local.get $2)
    (i32.shr_u
     (local.get $3)
     (i32.const 24)
    )
   )
   (i32.store8 offset=5
    (local.get $2)
    (i32.shr_u
     (local.get $3)
     (i32.const 16)
    )
   )
   (i32.store8 offset=6
    (local.get $2)
    (i32.shr_u
     (local.get $3)
     (i32.const 8)
    )
   )
   (i32.store8 offset=3
    (i32.load
     (local.get $6)
    )
    (local.get $3)
   )
   (i32.store8 offset=4
    (local.tee $2
     (i32.load
      (local.get $6)
     )
    )
    (i32.const 8)
   )
   (i32.store8 offset=5
    (local.get $2)
    (i32.load
     (i32.const 11664)
    )
   )
   (i32.store8 offset=6
    (local.get $2)
    (i32.const 0)
   )
   (i32.store8 offset=7
    (local.get $2)
    (i32.const 0)
   )
   (i32.store
    (local.get $6)
    (i32.add
     (local.get $2)
     (i32.const 9)
    )
   )
   (i32.store8 offset=8
    (local.get $2)
    (i32.const 0)
   )
   (call $_stbiw__wpcrc
    (local.get $6)
    (i32.const 13)
   )
   (i32.store8
    (i32.load
     (local.get $6)
    )
    (i32.shr_u
     (local.get $1)
     (i32.const 24)
    )
   )
   (i32.store8 offset=1
    (i32.load
     (local.get $6)
    )
    (i32.shr_u
     (local.get $1)
     (i32.const 16)
    )
   )
   (i32.store8 offset=2
    (i32.load
     (local.get $6)
    )
    (i32.shr_u
     (local.get $1)
     (i32.const 8)
    )
   )
   (i32.store8 offset=3
    (i32.load
     (local.get $6)
    )
    (local.get $1)
   )
   (i32.store8 offset=4
    (local.tee $2
     (i32.load
      (local.get $6)
     )
    )
    (i32.const 73)
   )
   (i32.store8 offset=5
    (local.get $2)
    (i32.const 68)
   )
   (i32.store8 offset=6
    (local.get $2)
    (i32.const 65)
   )
   (i32.store8 offset=7
    (local.get $2)
    (i32.const 84)
   )
   (drop
    (call $_memmove
     (local.tee $2
      (i32.add
       (local.get $2)
       (i32.const 8)
      )
     )
     (local.get $5)
     (local.get $1)
    )
   )
   (i32.store
    (local.get $6)
    (i32.add
     (local.get $1)
     (local.get $2)
    )
   )
   (call $_free
    (local.get $5)
   )
   (call $_stbiw__wpcrc
    (local.get $6)
    (local.get $1)
   )
   (i32.store8
    (i32.load
     (local.get $6)
    )
    (i32.const 0)
   )
   (i32.store8 offset=1
    (i32.load
     (local.get $6)
    )
    (i32.const 0)
   )
   (i32.store8 offset=2
    (i32.load
     (local.get $6)
    )
    (i32.const 0)
   )
   (i32.store8 offset=3
    (i32.load
     (local.get $6)
    )
    (i32.const 0)
   )
   (i32.store8 offset=4
    (local.tee $1
     (i32.load
      (local.get $6)
     )
    )
    (i32.const 73)
   )
   (i32.store8 offset=5
    (local.get $1)
    (i32.const 69)
   )
   (i32.store8 offset=6
    (local.get $1)
    (i32.const 78)
   )
   (i32.store8 offset=7
    (local.get $1)
    (i32.const 68)
   )
   (i32.store
    (local.get $6)
    (i32.add
     (local.get $1)
     (i32.const 8)
    )
   )
   (call $_stbiw__wpcrc
    (local.get $6)
    (i32.const 0)
   )
   (if
    (i32.eq
     (i32.load
      (local.get $6)
     )
     (i32.add
      (i32.load
       (local.get $4)
      )
      (local.get $0)
     )
    )
    (block
     (global.set $STACKTOP
      (local.get $17)
     )
     (return
      (local.get $0)
     )
    )
    (call $___assert_fail
     (i32.const 22511)
     (i32.const 22443)
     (i32.const 1102)
     (i32.const 22531)
    )
   )
   (return
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $17)
  )
  (i32.const 0)
 )
 (func $_stbiw__encode_png_line (; 527 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local.set $4
   (i32.load
    (i32.add
     (i32.shl
      (local.get $4)
      (i32.const 2)
     )
     (select
      (i32.const 12928)
      (i32.const 12896)
      (local.get $3)
     )
    )
   )
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (i32.mul
     (local.get $1)
     (local.get $3)
    )
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (block $__rjto$0
    (i32.store8
     (i32.add
      (local.get $0)
      (local.get $5)
     )
     (block $__rjti$0 (result i32)
      (block $switch-case5
       (block $switch-case4
        (block $switch-case3
         (block $switch-case2
          (block $switch-case1
           (block $switch-case0
            (block $switch-case
             (br_table $switch-case $switch-case0 $switch-case1 $switch-case2 $switch-case3 $switch-case4 $switch-case5 $__rjto$0
              (local.get $4)
             )
            )
            (br $__rjti$0
             (i32.load8_s
              (i32.add
               (local.get $0)
               (local.get $3)
              )
             )
            )
           )
           (br $__rjti$0
            (i32.load8_s
             (i32.add
              (local.get $0)
              (local.get $3)
             )
            )
           )
          )
          (br $__rjti$0
           (i32.and
            (i32.sub
             (i32.load8_u
              (i32.add
               (local.get $0)
               (local.get $3)
              )
             )
             (i32.load8_u
              (i32.add
               (local.get $3)
               (i32.sub
                (local.get $0)
                (local.get $1)
               )
              )
             )
            )
            (i32.const 255)
           )
          )
         )
         (br $__rjti$0
          (i32.and
           (i32.sub
            (i32.load8_u
             (i32.add
              (local.get $0)
              (local.get $3)
             )
            )
            (i32.shr_u
             (i32.load8_u
              (i32.add
               (local.get $3)
               (i32.sub
                (local.get $0)
                (local.get $1)
               )
              )
             )
             (i32.const 1)
            )
           )
           (i32.const 255)
          )
         )
        )
        (br $__rjti$0
         (i32.and
          (i32.sub
           (i32.load8_u
            (i32.add
             (local.get $0)
             (local.get $3)
            )
           )
           (i32.and
            (call $_stbiw__paeth
             (i32.const 0)
             (i32.load8_u
              (i32.add
               (local.get $3)
               (i32.sub
                (local.get $0)
                (local.get $1)
               )
              )
             )
             (i32.const 0)
            )
            (i32.const 255)
           )
          )
          (i32.const 255)
         )
        )
       )
       (br $__rjti$0
        (i32.load8_s
         (i32.add
          (local.get $0)
          (local.get $3)
         )
        )
       )
      )
      (i32.load8_s
       (i32.add
        (local.get $0)
        (local.get $3)
       )
      )
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (i32.const 4)
    )
   )
  )
  (if
   (i32.le_s
    (local.tee $2
     (i32.shl
      (local.get $2)
      (i32.const 2)
     )
    )
    (i32.const 4)
   )
   (return)
  )
  (local.set $0
   (i32.const 4)
  )
  (loop $while-in7
   (block $__rjto$1
    (i32.store8
     (i32.add
      (local.get $0)
      (local.get $5)
     )
     (block $__rjti$1 (result i32)
      (block $switch-case15
       (block $switch-case14
        (block $switch-case13
         (block $switch-case12
          (block $switch-case11
           (block $switch-case10
            (block $switch-case9
             (br_table $switch-case9 $switch-case10 $switch-case11 $switch-case12 $switch-case13 $switch-case14 $switch-case15 $__rjto$1
              (local.get $4)
             )
            )
            (br $__rjti$1
             (i32.load8_s
              (i32.add
               (local.get $0)
               (local.get $3)
              )
             )
            )
           )
           (br $__rjti$1
            (i32.and
             (i32.sub
              (i32.load8_u
               (i32.add
                (local.get $0)
                (local.get $3)
               )
              )
              (i32.load8_u
               (i32.add
                (local.get $3)
                (i32.sub
                 (local.get $0)
                 (i32.const 4)
                )
               )
              )
             )
             (i32.const 255)
            )
           )
          )
          (br $__rjti$1
           (i32.and
            (i32.sub
             (i32.load8_u
              (i32.add
               (local.get $0)
               (local.get $3)
              )
             )
             (i32.load8_u
              (i32.add
               (local.get $3)
               (i32.sub
                (local.get $0)
                (local.get $1)
               )
              )
             )
            )
            (i32.const 255)
           )
          )
         )
         (br $__rjti$1
          (i32.and
           (i32.sub
            (i32.load8_u
             (i32.add
              (local.get $0)
              (local.get $3)
             )
            )
            (i32.shr_u
             (i32.add
              (i32.load8_u
               (i32.add
                (local.get $3)
                (i32.sub
                 (local.get $0)
                 (i32.const 4)
                )
               )
              )
              (i32.load8_u
               (i32.add
                (local.get $3)
                (i32.sub
                 (local.get $0)
                 (local.get $1)
                )
               )
              )
             )
             (i32.const 1)
            )
           )
           (i32.const 255)
          )
         )
        )
        (br $__rjti$1
         (i32.and
          (i32.sub
           (i32.load8_u
            (i32.add
             (local.get $0)
             (local.get $3)
            )
           )
           (i32.and
            (call $_stbiw__paeth
             (i32.load8_u
              (i32.add
               (i32.sub
                (local.get $0)
                (i32.const 4)
               )
               (local.get $3)
              )
             )
             (i32.load8_u
              (i32.add
               (local.tee $6
                (i32.sub
                 (local.get $0)
                 (local.get $1)
                )
               )
               (local.get $3)
              )
             )
             (i32.load8_u
              (i32.add
               (i32.sub
                (local.get $6)
                (i32.const 4)
               )
               (local.get $3)
              )
             )
            )
            (i32.const 255)
           )
          )
          (i32.const 255)
         )
        )
       )
       (br $__rjti$1
        (i32.and
         (i32.sub
          (i32.load8_u
           (i32.add
            (local.get $0)
            (local.get $3)
           )
          )
          (i32.shr_u
           (i32.load8_u
            (i32.add
             (i32.sub
              (local.get $0)
              (i32.const 4)
             )
             (local.get $3)
            )
           )
           (i32.const 1)
          )
         )
         (i32.const 255)
        )
       )
      )
      (i32.and
       (i32.sub
        (i32.load8_u
         (i32.add
          (local.get $0)
          (local.get $3)
         )
        )
        (i32.and
         (call $_stbiw__paeth
          (i32.load8_u
           (i32.add
            (i32.sub
             (local.get $0)
             (i32.const 4)
            )
            (local.get $3)
           )
          )
          (i32.const 0)
          (i32.const 0)
         )
         (i32.const 255)
        )
       )
       (i32.const 255)
      )
     )
    )
   )
   (br_if $while-in7
    (i32.ne
     (local.get $2)
     (local.tee $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
    )
   )
  )
 )
 (func $_stbi_zlib_compress (; 528 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local.set $19
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.tee $6
    (i32.add
     (local.get $4)
     (i32.const 8)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (local.tee $7
    (i32.add
     (local.get $4)
     (i32.const 4)
    )
   )
   (i32.const 0)
  )
  (i32.store
   (local.get $4)
   (i32.const 0)
  )
  (if
   (i32.eqz
    (local.tee $14
     (call $_malloc
      (i32.const 65536)
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $19)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (call $_stbiw__sbgrowf
   (local.get $4)
   (i32.const 1)
  )
  (local.set $3
   (i32.load
    (local.tee $5
     (i32.add
      (local.tee $9
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -4)
     )
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.add
    (local.get $3)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $3)
    (local.get $9)
   )
   (i32.const 120)
  )
  (block $__rjto$2
   (block $__rjti$2
    (br_if $__rjti$2
     (i32.eqz
      (local.tee $3
       (i32.load
        (local.get $4)
       )
      )
     )
    )
    (br_if $__rjti$2
     (i32.ge_s
      (i32.add
       (i32.load
        (i32.add
         (local.get $3)
         (i32.const -4)
        )
       )
       (i32.const 1)
      )
      (i32.load
       (i32.add
        (local.get $3)
        (i32.const -8)
       )
      )
     )
    )
    (br $__rjto$2)
   )
   (call $_stbiw__sbgrowf
    (local.get $4)
    (i32.const 1)
   )
  )
  (local.set $3
   (i32.load
    (local.tee $5
     (i32.add
      (local.tee $9
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -4)
     )
    )
   )
  )
  (i32.store
   (local.get $5)
   (i32.add
    (local.get $3)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $3)
    (local.get $9)
   )
   (i32.const 94)
  )
  (i32.store
   (local.get $6)
   (i32.or
    (i32.load
     (local.get $6)
    )
    (i32.shl
     (i32.const 1)
     (local.tee $3
      (i32.load
       (local.get $7)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $7)
   (i32.add
    (local.get $3)
    (i32.const 1)
   )
  )
  (i32.store
   (local.get $4)
   (local.tee $3
    (call $_stbiw__zlib_flushf
     (i32.load
      (local.get $4)
     )
     (local.get $6)
     (local.get $7)
    )
   )
  )
  (i32.store
   (local.get $6)
   (i32.or
    (i32.load
     (local.get $6)
    )
    (i32.shl
     (i32.const 1)
     (local.tee $9
      (i32.load
       (local.get $7)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $7)
   (i32.add
    (local.get $9)
    (i32.const 2)
   )
  )
  (i32.store
   (local.get $4)
   (call $_stbiw__zlib_flushf
    (local.get $3)
    (local.get $6)
    (local.get $7)
   )
  )
  (drop
   (call $_memset
    (local.get $14)
    (i32.const 0)
    (i32.const 65536)
   )
  )
  (local.set $20
   (i32.add
    (local.get $1)
    (i32.const -3)
   )
  )
  (if
   (i32.gt_s
    (local.get $1)
    (i32.const 3)
   )
   (block $label$break$L9
    (local.set $21
     (local.get $0)
    )
    (local.set $22
     (i32.add
      (local.get $1)
      (i32.const -1)
     )
    )
    (local.set $23
     (local.get $0)
    )
    (local.set $9
     (i32.const 0)
    )
    (loop $label$continue$L11
     (block $label$break$L11
      (block $__rjto$0
       (block $__rjti$0
        (if
         (local.tee $11
          (i32.load
           (local.tee $12
            (i32.add
             (i32.shl
              (i32.and
               (call $_stbiw__zhash
                (local.tee $15
                 (i32.add
                  (local.get $0)
                  (local.get $9)
                 )
                )
               )
               (i32.const 16383)
              )
              (i32.const 2)
             )
             (local.get $14)
            )
           )
          )
         )
         (block
          (if
           (i32.gt_s
            (local.tee $16
             (i32.load
              (i32.add
               (local.get $11)
               (i32.const -4)
              )
             )
            )
            (i32.const 0)
           )
           (block
            (local.set $17
             (i32.add
              (local.get $9)
              (i32.const -32768)
             )
            )
            (local.set $18
             (i32.sub
              (local.get $1)
              (local.get $9)
             )
            )
            (local.set $3
             (i32.const 0)
            )
            (local.set $8
             (i32.const 3)
            )
            (local.set $5
             (i32.const 0)
            )
            (loop $while-in
             (if
              (i32.gt_s
               (i32.sub
                (local.tee $13
                 (i32.load
                  (i32.add
                   (i32.shl
                    (local.get $5)
                    (i32.const 2)
                   )
                   (local.get $11)
                  )
                 )
                )
                (local.get $21)
               )
               (local.get $17)
              )
              (block
               (local.set $3
                (select
                 (local.get $3)
                 (local.get $13)
                 (local.tee $24
                  (i32.lt_s
                   (local.tee $13
                    (call $_stbiw__zlib_countm
                     (local.get $13)
                     (local.get $15)
                     (local.get $18)
                    )
                   )
                   (local.get $8)
                  )
                 )
                )
               )
               (local.set $8
                (select
                 (local.get $8)
                 (local.get $13)
                 (local.get $24)
                )
               )
              )
             )
             (br_if $while-in
              (i32.ne
               (local.tee $5
                (i32.add
                 (local.get $5)
                 (i32.const 1)
                )
               )
               (local.get $16)
              )
             )
            )
           )
           (block
            (local.set $3
             (i32.const 0)
            )
            (local.set $8
             (i32.const 3)
            )
           )
          )
          (if
           (i32.eq
            (i32.load
             (i32.add
              (local.get $11)
              (i32.const -4)
             )
            )
            (i32.const 16)
           )
           (block
            (drop
             (call $_memmove
              (local.get $11)
              (i32.add
               (local.get $11)
               (i32.const 32)
              )
              (i32.const 32)
             )
            )
            (i32.store
             (i32.add
              (i32.load
               (local.get $12)
              )
              (i32.const -4)
             )
             (i32.const 8)
            )
           )
          )
          (br_if $__rjti$0
           (i32.ge_s
            (i32.add
             (i32.load
              (i32.add
               (local.get $11)
               (i32.const -4)
              )
             )
             (i32.const 1)
            )
            (i32.load
             (i32.add
              (local.get $11)
              (i32.const -8)
             )
            )
           )
          )
         )
         (block
          (local.set $3
           (i32.const 0)
          )
          (local.set $8
           (i32.const 3)
          )
          (br $__rjti$0)
         )
        )
        (br $__rjto$0)
       )
       (call $_stbiw__sbgrowf
        (local.get $12)
        (i32.const 4)
       )
      )
      (local.set $5
       (i32.load
        (local.tee $12
         (i32.add
          (local.tee $11
           (i32.load
            (local.get $12)
           )
          )
          (i32.const -4)
         )
        )
       )
      )
      (i32.store
       (local.get $12)
       (i32.add
        (local.get $5)
        (i32.const 1)
       )
      )
      (i32.store
       (i32.add
        (i32.shl
         (local.get $5)
         (i32.const 2)
        )
        (local.get $11)
       )
       (local.get $15)
      )
      (block $__rjto$1
       (block $__rjti$1
        (br_if $__rjti$1
         (i32.eqz
          (local.get $3)
         )
        )
        (if
         (local.tee $11
          (i32.load
           (i32.add
            (i32.shl
             (i32.and
              (call $_stbiw__zhash
               (local.tee $12
                (i32.add
                 (local.get $15)
                 (i32.const 1)
                )
               )
              )
              (i32.const 16383)
             )
             (i32.const 2)
            )
            (local.get $14)
           )
          )
         )
         (block
          (local.set $13
           (i32.sub
            (local.get $22)
            (local.get $9)
           )
          )
          (if
           (i32.gt_s
            (local.tee $16
             (i32.load
              (i32.add
               (local.get $11)
               (i32.const -4)
              )
             )
            )
            (i32.const 0)
           )
           (block
            (local.set $17
             (i32.add
              (local.get $9)
              (i32.const -32767)
             )
            )
            (local.set $5
             (i32.const 0)
            )
            (loop $while-in2
             (block $while-out1
              (if
               (i32.gt_s
                (i32.sub
                 (local.tee $18
                  (i32.load
                   (i32.add
                    (i32.shl
                     (local.get $5)
                     (i32.const 2)
                    )
                    (local.get $11)
                   )
                  )
                 )
                 (local.get $23)
                )
                (local.get $17)
               )
               (if
                (i32.gt_s
                 (call $_stbiw__zlib_countm
                  (local.get $18)
                  (local.get $12)
                  (local.get $13)
                 )
                 (local.get $8)
                )
                (block
                 (local.set $3
                  (i32.const 0)
                 )
                 (br $while-out1)
                )
               )
              )
              (br_if $while-in2
               (i32.lt_s
                (local.tee $5
                 (i32.add
                  (local.get $5)
                  (i32.const 1)
                 )
                )
                (local.get $16)
               )
              )
             )
            )
            (br_if $__rjti$1
             (i32.eqz
              (local.get $3)
             )
            )
           )
          )
         )
        )
        (br_if $label$break$L11
         (i32.eqz
          (i32.and
           (i32.lt_s
            (local.tee $11
             (i32.sub
              (local.get $15)
              (local.get $3)
             )
            )
            (i32.const 32768)
           )
           (i32.lt_s
            (local.get $8)
            (i32.const 259)
           )
          )
         )
        )
        (local.set $3
         (i32.const 0)
        )
        (loop $while-in4
         (if
          (i32.ge_s
           (local.get $8)
           (i32.load16_u
            (i32.add
             (i32.shl
              (local.tee $5
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (i32.const 1)
             )
             (i32.const 12704)
            )
           )
          )
          (block
           (local.set $3
            (local.get $5)
           )
           (br $while-in4)
          )
         )
        )
        (i32.store
         (local.get $7)
         (if (result i32)
          (i32.lt_u
           (i32.add
            (local.get $3)
            (i32.const 257)
           )
           (i32.const 280)
          )
          (block (result i32)
           (i32.store
            (local.get $6)
            (i32.or
             (i32.shl
              (call $_stbiw__zlib_bitrev
               (local.get $5)
               (i32.const 7)
              )
              (local.tee $5
               (i32.load
                (local.get $7)
               )
              )
             )
             (i32.load
              (local.get $6)
             )
            )
           )
           (i32.add
            (local.get $5)
            (i32.const 7)
           )
          )
          (block (result i32)
           (i32.store
            (local.get $6)
            (i32.or
             (i32.shl
              (call $_stbiw__zlib_bitrev
               (i32.add
                (local.get $3)
                (i32.const 169)
               )
               (i32.const 8)
              )
              (local.tee $5
               (i32.load
                (local.get $7)
               )
              )
             )
             (i32.load
              (local.get $6)
             )
            )
           )
           (i32.add
            (local.get $5)
            (i32.const 8)
           )
          )
         )
        )
        (i32.store
         (local.get $4)
         (call $_stbiw__zlib_flushf
          (i32.load
           (local.get $4)
          )
          (local.get $6)
          (local.get $7)
         )
        )
        (if
         (i32.lt_u
          (i32.add
           (local.get $3)
           (i32.const -8)
          )
          (i32.const 20)
         )
         (block
          (i32.store
           (local.get $6)
           (i32.or
            (i32.load
             (local.get $6)
            )
            (i32.shl
             (i32.sub
              (local.get $8)
              (i32.load16_u
               (i32.add
                (i32.shl
                 (local.get $3)
                 (i32.const 1)
                )
                (i32.const 12704)
               )
              )
             )
             (local.tee $5
              (i32.load
               (local.get $7)
              )
             )
            )
           )
          )
          (i32.store
           (local.get $7)
           (i32.add
            (local.get $5)
            (i32.load8_u
             (i32.add
              (local.get $3)
              (i32.const 12768)
             )
            )
           )
          )
          (i32.store
           (local.get $4)
           (call $_stbiw__zlib_flushf
            (i32.load
             (local.get $4)
            )
            (local.get $6)
            (local.get $7)
           )
          )
         )
        )
        (local.set $3
         (i32.const 0)
        )
        (loop $while-in6
         (if
          (i32.ge_s
           (local.get $11)
           (i32.load16_u
            (i32.add
             (i32.shl
              (local.tee $5
               (i32.add
                (local.get $3)
                (i32.const 1)
               )
              )
              (i32.const 1)
             )
             (i32.const 12800)
            )
           )
          )
          (block
           (local.set $3
            (local.get $5)
           )
           (br $while-in6)
          )
         )
        )
        (i32.store
         (local.get $6)
         (i32.or
          (i32.shl
           (call $_stbiw__zlib_bitrev
            (local.get $3)
            (i32.const 5)
           )
           (local.tee $5
            (i32.load
             (local.get $7)
            )
           )
          )
          (i32.load
           (local.get $6)
          )
         )
        )
        (i32.store
         (local.get $7)
         (i32.add
          (local.get $5)
          (i32.const 5)
         )
        )
        (i32.store
         (local.get $4)
         (local.tee $5
          (call $_stbiw__zlib_flushf
           (i32.load
            (local.get $4)
           )
           (local.get $6)
           (local.get $7)
          )
         )
        )
        (if
         (i32.lt_u
          (i32.add
           (local.get $3)
           (i32.const -4)
          )
          (i32.const 26)
         )
         (block
          (i32.store
           (local.get $6)
           (i32.or
            (i32.load
             (local.get $6)
            )
            (i32.shl
             (i32.sub
              (local.get $11)
              (i32.load16_u
               (i32.add
                (i32.shl
                 (local.get $3)
                 (i32.const 1)
                )
                (i32.const 12800)
               )
              )
             )
             (local.tee $11
              (i32.load
               (local.get $7)
              )
             )
            )
           )
          )
          (i32.store
           (local.get $7)
           (i32.add
            (local.get $11)
            (i32.load8_u
             (i32.add
              (local.get $3)
              (i32.const 12864)
             )
            )
           )
          )
          (i32.store
           (local.get $4)
           (call $_stbiw__zlib_flushf
            (local.get $5)
            (local.get $6)
            (local.get $7)
           )
          )
         )
        )
        (br $__rjto$1)
       )
       (local.set $3
        (local.tee $5
         (i32.load8_u
          (local.get $15)
         )
        )
       )
       (i32.store
        (local.get $7)
        (if (result i32)
         (i32.lt_s
          (local.get $5)
          (i32.const 144)
         )
         (block (result i32)
          (i32.store
           (local.get $6)
           (i32.or
            (i32.shl
             (call $_stbiw__zlib_bitrev
              (i32.add
               (local.get $3)
               (i32.const 48)
              )
              (i32.const 8)
             )
             (local.tee $3
              (i32.load
               (local.get $7)
              )
             )
            )
            (i32.load
             (local.get $6)
            )
           )
          )
          (i32.add
           (local.get $3)
           (i32.const 8)
          )
         )
         (block (result i32)
          (i32.store
           (local.get $6)
           (i32.or
            (i32.shl
             (call $_stbiw__zlib_bitrev
              (i32.or
               (local.get $3)
               (i32.const 256)
              )
              (i32.const 9)
             )
             (local.tee $3
              (i32.load
               (local.get $7)
              )
             )
            )
            (i32.load
             (local.get $6)
            )
           )
          )
          (i32.add
           (local.get $3)
           (i32.const 9)
          )
         )
        )
       )
       (i32.store
        (local.get $4)
        (call $_stbiw__zlib_flushf
         (i32.load
          (local.get $4)
         )
         (local.get $6)
         (local.get $7)
        )
       )
       (local.set $8
        (i32.const 1)
       )
      )
      (if
       (i32.lt_s
        (local.tee $3
         (i32.add
          (local.get $8)
          (local.get $9)
         )
        )
        (local.get $20)
       )
       (block
        (local.set $9
         (local.get $3)
        )
        (br $label$continue$L11)
       )
       (block
        (local.set $10
         (local.get $3)
        )
        (br $label$break$L9)
       )
      )
     )
    )
    (call $___assert_fail
     (i32.const 22553)
     (i32.const 22443)
     (i32.const 876)
     (i32.const 22579)
    )
   )
  )
  (if
   (i32.lt_s
    (local.get $10)
    (local.get $1)
   )
   (block
    (local.set $3
     (local.get $10)
    )
    (loop $while-in8
     (local.set $10
      (local.tee $9
       (i32.load8_u
        (i32.add
         (local.get $0)
         (local.get $3)
        )
       )
      )
     )
     (i32.store
      (local.get $7)
      (if (result i32)
       (i32.lt_s
        (local.get $9)
        (i32.const 144)
       )
       (block (result i32)
        (i32.store
         (local.get $6)
         (i32.or
          (i32.shl
           (call $_stbiw__zlib_bitrev
            (i32.add
             (local.get $10)
             (i32.const 48)
            )
            (i32.const 8)
           )
           (local.tee $10
            (i32.load
             (local.get $7)
            )
           )
          )
          (i32.load
           (local.get $6)
          )
         )
        )
        (i32.add
         (local.get $10)
         (i32.const 8)
        )
       )
       (block (result i32)
        (i32.store
         (local.get $6)
         (i32.or
          (i32.shl
           (call $_stbiw__zlib_bitrev
            (i32.or
             (local.get $10)
             (i32.const 256)
            )
            (i32.const 9)
           )
           (local.tee $10
            (i32.load
             (local.get $7)
            )
           )
          )
          (i32.load
           (local.get $6)
          )
         )
        )
        (i32.add
         (local.get $10)
         (i32.const 9)
        )
       )
      )
     )
     (i32.store
      (local.get $4)
      (call $_stbiw__zlib_flushf
       (i32.load
        (local.get $4)
       )
       (local.get $6)
       (local.get $7)
      )
     )
     (br_if $while-in8
      (i32.ne
       (local.tee $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.get $1)
      )
     )
    )
   )
  )
  (i32.store
   (local.get $6)
   (i32.or
    (i32.shl
     (call $_stbiw__zlib_bitrev
      (i32.const 0)
      (i32.const 7)
     )
     (local.tee $3
      (i32.load
       (local.get $7)
      )
     )
    )
    (i32.load
     (local.get $6)
    )
   )
  )
  (i32.store
   (local.get $7)
   (i32.add
    (local.get $3)
    (i32.const 7)
   )
  )
  (i32.store
   (local.get $4)
   (local.tee $8
    (call $_stbiw__zlib_flushf
     (i32.load
      (local.get $4)
     )
     (local.get $6)
     (local.get $7)
    )
   )
  )
  (if
   (local.tee $3
    (i32.load
     (local.get $7)
    )
   )
   (loop $while-in10
    (i32.store
     (local.get $7)
     (i32.add
      (local.get $3)
      (i32.const 1)
     )
    )
    (i32.store
     (local.get $4)
     (local.tee $8
      (call $_stbiw__zlib_flushf
       (local.get $8)
       (local.get $6)
       (local.get $7)
      )
     )
    )
    (br_if $while-in10
     (local.tee $3
      (i32.load
       (local.get $7)
      )
     )
    )
   )
  )
  (local.set $3
   (i32.const 0)
  )
  (loop $while-in12
   (if
    (local.tee $10
     (i32.load
      (i32.add
       (i32.shl
        (local.get $3)
        (i32.const 2)
       )
       (local.get $14)
      )
     )
    )
    (call $_free
     (i32.add
      (local.get $10)
      (i32.const -8)
     )
    )
   )
   (br_if $while-in12
    (i32.ne
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (i32.const 16384)
    )
   )
  )
  (call $_free
   (local.get $14)
  )
  (if
   (i32.gt_s
    (local.get $1)
    (i32.const 0)
   )
   (block
    (local.set $3
     (i32.const 0)
    )
    (local.set $8
     (i32.const 1)
    )
    (local.set $5
     (i32.rem_u
      (local.get $1)
      (i32.const 5552)
     )
    )
    (local.set $10
     (i32.const 0)
    )
    (loop $while-in14
     (if
      (local.get $5)
      (block
       (local.set $9
        (i32.const 0)
       )
       (loop $while-in16
        (local.set $3
         (i32.add
          (local.get $3)
          (local.tee $8
           (i32.add
            (local.get $8)
            (i32.load8_u
             (i32.add
              (local.get $0)
              (i32.add
               (local.get $9)
               (local.get $10)
              )
             )
            )
           )
          )
         )
        )
        (br_if $while-in16
         (i32.ne
          (local.tee $9
           (i32.add
            (local.get $9)
            (i32.const 1)
           )
          )
          (local.get $5)
         )
        )
       )
      )
     )
     (local.set $8
      (i32.rem_u
       (local.get $8)
       (i32.const 65521)
      )
     )
     (local.set $3
      (i32.rem_u
       (local.get $3)
       (i32.const 65521)
      )
     )
     (if
      (i32.lt_s
       (local.tee $10
        (i32.add
         (local.get $5)
         (local.get $10)
        )
       )
       (local.get $1)
      )
      (block
       (local.set $5
        (i32.const 5552)
       )
       (br $while-in14)
      )
     )
    )
   )
   (block
    (local.set $3
     (i32.const 0)
    )
    (local.set $8
     (i32.const 1)
    )
   )
  )
  (block $__rjto$3
   (block $__rjti$3
    (br_if $__rjti$3
     (i32.eqz
      (local.tee $0
       (i32.load
        (local.get $4)
       )
      )
     )
    )
    (br_if $__rjti$3
     (i32.ge_s
      (i32.add
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const -4)
        )
       )
       (i32.const 1)
      )
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const -8)
       )
      )
     )
    )
    (br $__rjto$3)
   )
   (call $_stbiw__sbgrowf
    (local.get $4)
    (i32.const 1)
   )
  )
  (local.set $0
   (i32.load
    (local.tee $10
     (i32.add
      (local.tee $1
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -4)
     )
    )
   )
  )
  (i32.store
   (local.get $10)
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (local.get $1)
   )
   (i32.shr_u
    (local.get $3)
    (i32.const 8)
   )
  )
  (block $__rjto$4
   (block $__rjti$4
    (br_if $__rjti$4
     (i32.eqz
      (local.tee $0
       (i32.load
        (local.get $4)
       )
      )
     )
    )
    (br_if $__rjti$4
     (i32.ge_s
      (i32.add
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const -4)
        )
       )
       (i32.const 1)
      )
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const -8)
       )
      )
     )
    )
    (br $__rjto$4)
   )
   (call $_stbiw__sbgrowf
    (local.get $4)
    (i32.const 1)
   )
  )
  (local.set $0
   (i32.load
    (local.tee $10
     (i32.add
      (local.tee $1
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -4)
     )
    )
   )
  )
  (i32.store
   (local.get $10)
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (local.get $1)
   )
   (local.get $3)
  )
  (block $__rjto$5
   (block $__rjti$5
    (br_if $__rjti$5
     (i32.eqz
      (local.tee $0
       (i32.load
        (local.get $4)
       )
      )
     )
    )
    (br_if $__rjti$5
     (i32.ge_s
      (i32.add
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const -4)
        )
       )
       (i32.const 1)
      )
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const -8)
       )
      )
     )
    )
    (br $__rjto$5)
   )
   (call $_stbiw__sbgrowf
    (local.get $4)
    (i32.const 1)
   )
  )
  (local.set $0
   (i32.load
    (local.tee $3
     (i32.add
      (local.tee $1
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -4)
     )
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (local.get $1)
   )
   (i32.shr_u
    (local.get $8)
    (i32.const 8)
   )
  )
  (block $__rjto$6
   (block $__rjti$6
    (br_if $__rjti$6
     (i32.eqz
      (local.tee $0
       (i32.load
        (local.get $4)
       )
      )
     )
    )
    (br_if $__rjti$6
     (i32.ge_s
      (i32.add
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const -4)
        )
       )
       (i32.const 1)
      )
      (i32.load
       (i32.add
        (local.get $0)
        (i32.const -8)
       )
      )
     )
    )
    (br $__rjto$6)
   )
   (call $_stbiw__sbgrowf
    (local.get $4)
    (i32.const 1)
   )
  )
  (local.set $0
   (i32.load
    (local.tee $3
     (i32.add
      (local.tee $1
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -4)
     )
    )
   )
  )
  (i32.store
   (local.get $3)
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
  (i32.store8
   (i32.add
    (local.get $0)
    (local.get $1)
   )
   (local.get $8)
  )
  (i32.store
   (local.get $2)
   (local.tee $1
    (i32.load
     (i32.add
      (local.tee $0
       (i32.load
        (local.get $4)
       )
      )
      (i32.const -4)
     )
    )
   )
  )
  (drop
   (call $_memmove
    (i32.add
     (local.get $0)
     (i32.const -8)
    )
    (local.get $0)
    (local.get $1)
   )
  )
  (local.set $0
   (i32.add
    (i32.load
     (local.get $4)
    )
    (i32.const -8)
   )
  )
  (global.set $STACKTOP
   (local.get $19)
  )
  (local.get $0)
 )
 (func $_stbiw__wpcrc (; 529 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local.set $1
   (call $_stbiw__crc32
    (i32.add
     (i32.sub
      (local.tee $2
       (i32.load
        (local.get $0)
       )
      )
      (local.get $1)
     )
     (i32.const -4)
    )
    (i32.add
     (local.get $1)
     (i32.const 4)
    )
   )
  )
  (i32.store8
   (local.get $2)
   (i32.shr_u
    (local.get $1)
    (i32.const 24)
   )
  )
  (i32.store8 offset=1
   (i32.load
    (local.get $0)
   )
   (i32.shr_u
    (local.get $1)
    (i32.const 16)
   )
  )
  (i32.store8 offset=2
   (i32.load
    (local.get $0)
   )
   (i32.shr_u
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store8 offset=3
   (i32.load
    (local.get $0)
   )
   (local.get $1)
  )
  (i32.store
   (local.get $0)
   (i32.add
    (i32.load
     (local.get $0)
    )
    (i32.const 4)
   )
  )
 )
 (func $_stbiw__crc32 (; 530 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.le_s
    (local.get $1)
    (i32.const 0)
   )
   (return
    (i32.const 0)
   )
  )
  (local.set $2
   (i32.const -1)
  )
  (loop $while-in
   (local.set $2
    (i32.xor
     (i32.load
      (i32.add
       (i32.shl
        (i32.xor
         (i32.load8_u
          (i32.add
           (local.get $0)
           (local.get $3)
          )
         )
         (i32.and
          (local.get $2)
          (i32.const 255)
         )
        )
        (i32.const 2)
       )
       (i32.const 11680)
      )
     )
     (i32.shr_u
      (local.get $2)
      (i32.const 8)
     )
    )
   )
   (br_if $while-in
    (i32.ne
     (local.tee $3
      (i32.add
       (local.get $3)
       (i32.const 1)
      )
     )
     (local.get $1)
    )
   )
  )
  (i32.xor
   (local.get $2)
   (i32.const -1)
  )
 )
 (func $_stbiw__sbgrowf (; 531 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $2
   (if (result i32)
    (local.tee $4
     (i32.eqz
      (local.tee $3
       (i32.load
        (local.get $0)
       )
      )
     )
    )
    (i32.const 2)
    (i32.or
     (i32.shl
      (i32.load
       (i32.add
        (local.get $3)
        (i32.const -8)
       )
      )
      (i32.const 1)
     )
     (i32.const 1)
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $1
     (call $_realloc
      (select
       (i32.const 0)
       (i32.add
        (local.get $3)
        (i32.const -8)
       )
       (local.get $4)
      )
      (i32.add
       (i32.mul
        (local.get $1)
        (local.get $2)
       )
       (i32.const 8)
      )
     )
    )
   )
   (call $___assert_fail
    (i32.const 22598)
    (i32.const 22443)
    (i32.const 747)
    (i32.const 22600)
   )
  )
  (if
   (i32.load
    (local.get $0)
   )
   (block
    (i32.store
     (local.get $0)
     (i32.add
      (local.get $1)
      (i32.const 8)
     )
    )
    (i32.store
     (local.get $1)
     (local.get $2)
    )
    (return)
   )
  )
  (i32.store offset=4
   (local.get $1)
   (i32.const 0)
  )
  (i32.store
   (local.get $0)
   (i32.add
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $2)
  )
 )
 (func $_stbiw__zlib_flushf (; 532 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $3)
   (local.get $0)
  )
  (if
   (i32.le_s
    (i32.load
     (local.get $2)
    )
    (i32.const 7)
   )
   (block
    (global.set $STACKTOP
     (local.get $5)
    )
    (return
     (local.get $0)
    )
   )
  )
  (loop $while-in
   (block $__rjto$0
    (block $__rjti$0
     (br_if $__rjti$0
      (i32.eqz
       (local.get $0)
      )
     )
     (br_if $__rjti$0
      (i32.ge_s
       (i32.add
        (i32.load
         (i32.add
          (local.get $0)
          (i32.const -4)
         )
        )
        (i32.const 1)
       )
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const -8)
        )
       )
      )
     )
     (br $__rjto$0)
    )
    (call $_stbiw__sbgrowf
     (local.get $3)
     (i32.const 1)
    )
   )
   (local.set $4
    (i32.and
     (i32.load
      (local.get $1)
     )
     (i32.const 255)
    )
   )
   (local.set $0
    (i32.load
     (local.tee $7
      (i32.add
       (local.tee $6
        (i32.load
         (local.get $3)
        )
       )
       (i32.const -4)
      )
     )
    )
   )
   (i32.store
    (local.get $7)
    (i32.add
     (local.get $0)
     (i32.const 1)
    )
   )
   (i32.store8
    (i32.add
     (local.get $0)
     (local.get $6)
    )
    (local.get $4)
   )
   (i32.store
    (local.get $1)
    (i32.shr_u
     (i32.load
      (local.get $1)
     )
     (i32.const 8)
    )
   )
   (i32.store
    (local.get $2)
    (i32.add
     (local.tee $4
      (i32.load
       (local.get $2)
      )
     )
     (i32.const -8)
    )
   )
   (local.set $0
    (i32.load
     (local.get $3)
    )
   )
   (br_if $while-in
    (i32.gt_s
     (local.get $4)
     (i32.const 15)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $_stbiw__zhash (; 533 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.add
   (local.tee $0
    (i32.xor
     (local.tee $0
      (i32.add
       (local.tee $0
        (i32.xor
         (local.tee $0
          (i32.add
           (local.tee $0
            (i32.xor
             (local.tee $0
              (i32.or
               (i32.or
                (i32.load8_u
                 (local.get $0)
                )
                (i32.shl
                 (i32.load8_u offset=1
                  (local.get $0)
                 )
                 (i32.const 8)
                )
               )
               (i32.shl
                (i32.load8_u offset=2
                 (local.get $0)
                )
                (i32.const 16)
               )
              )
             )
             (i32.shl
              (local.get $0)
              (i32.const 3)
             )
            )
           )
           (i32.shr_u
            (local.get $0)
            (i32.const 5)
           )
          )
         )
         (i32.shl
          (local.get $0)
          (i32.const 4)
         )
        )
       )
       (i32.shr_u
        (local.get $0)
        (i32.const 17)
       )
      )
     )
     (i32.shl
      (local.get $0)
      (i32.const 25)
     )
    )
   )
   (i32.shr_u
    (local.get $0)
    (i32.const 6)
   )
  )
 )
 (func $_stbiw__zlib_countm (; 534 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (if
   (i32.le_s
    (local.get $2)
    (i32.const 0)
   )
   (return
    (i32.const 0)
   )
  )
  (loop $while-in
   (if
    (i32.eq
     (i32.load8_s
      (i32.add
       (local.get $0)
       (local.get $3)
      )
     )
     (i32.load8_s
      (i32.add
       (local.get $1)
       (local.get $3)
      )
     )
    )
    (br_if $while-in
     (i32.and
      (i32.lt_s
       (local.tee $3
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.get $2)
      )
      (i32.lt_u
       (local.get $3)
       (i32.const 258)
      )
     )
    )
   )
  )
  (local.get $3)
 )
 (func $_stbiw__zlib_bitrev (; 535 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (if
   (i32.eqz
    (local.get $1)
   )
   (return
    (i32.const 0)
   )
  )
  (loop $while-in
   (local.set $2
    (i32.or
     (i32.and
      (local.get $0)
      (i32.const 1)
     )
     (i32.shl
      (local.get $2)
      (i32.const 1)
     )
    )
   )
   (local.set $0
    (i32.shr_s
     (local.get $0)
     (i32.const 1)
    )
   )
   (br_if $while-in
    (local.tee $1
     (i32.add
      (local.get $1)
      (i32.const -1)
     )
    )
   )
  )
  (local.get $2)
 )
 (func $_stbiw__paeth (; 536 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (if (result i32)
   (i32.or
    (i32.gt_s
     (local.tee $5
      (select
       (local.tee $4
        (i32.sub
         (local.tee $3
          (i32.sub
           (i32.add
            (local.get $0)
            (local.get $1)
           )
           (local.get $2)
          )
         )
         (local.get $0)
        )
       )
       (i32.sub
        (i32.const 0)
        (local.get $4)
       )
       (i32.gt_s
        (local.get $4)
        (i32.const -1)
       )
      )
     )
     (local.tee $4
      (select
       (local.tee $4
        (i32.sub
         (local.get $3)
         (local.get $1)
        )
       )
       (i32.sub
        (i32.const 0)
        (local.get $4)
       )
       (i32.gt_s
        (local.get $4)
        (i32.const -1)
       )
      )
     )
    )
    (i32.gt_s
     (local.get $5)
     (local.tee $3
      (select
       (local.tee $3
        (i32.sub
         (local.get $3)
         (local.get $2)
        )
       )
       (i32.sub
        (i32.const 0)
        (local.get $3)
       )
       (i32.gt_s
        (local.get $3)
        (i32.const -1)
       )
      )
     )
    )
   )
   (i32.and
    (select
     (local.get $2)
     (i32.and
      (local.get $1)
      (i32.const 255)
     )
     (i32.gt_s
      (local.get $4)
      (local.get $3)
     )
    )
    (i32.const 255)
   )
   (i32.and
    (local.get $0)
    (i32.const 255)
   )
  )
 )
 (func $_CloseWindow (; 537 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.load8_s
    (i32.const 34856)
   )
   (block
    (call $_GifEnd)
    (i32.store8
     (i32.const 34856)
     (i32.const 0)
    )
   )
  )
  (call $_UnloadDefaultFont)
  (call $_rlglClose)
  (call $_glfwDestroyWindow
   (i32.load
    (i32.const 34056)
   )
  )
  (call $_glfwTerminate)
  (call $_TraceLog
   (i32.const 3)
   (i32.const 22862)
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $0)
  )
 )
 (func $_UnloadDefaultFont (; 538 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34080)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34088)
   )
  )
  (i32.store offset=16
   (local.get $0)
   (i32.load
    (i32.const 34096)
   )
  )
  (call $_UnloadTexture
   (local.get $0)
  )
  (call $_free
   (i32.load
    (i32.const 34108)
   )
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $_UnloadTexture (; 539 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.eqz
    (local.tee $0
     (i32.load
      (local.get $0)
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $1)
    )
    (return)
   )
  )
  (call $_rlDeleteTextures
   (local.get $0)
  )
  (i32.store
   (local.get $2)
   (local.get $0)
  )
  (call $_TraceLog
   (i32.const 3)
   (i32.const 22889)
   (local.get $2)
  )
  (global.set $STACKTOP
   (local.get $1)
  )
 )
 (func $_BeginDrawing (; 540 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 128)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 128)
   )
  )
  (local.set $0
   (i32.sub
    (local.get $1)
    (i32.const -64)
   )
  )
  (f64.store
   (i32.const 32872)
   (f64.sub
    (local.tee $3
     (call $_glfwGetTime)
    )
    (f64.load
     (i32.const 32856)
    )
   )
  )
  (f64.store
   (i32.const 32856)
   (local.get $3)
  )
  (call $_rlLoadIdentity)
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34112)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34120)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34128)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34136)
   )
  )
  (i64.store offset=32 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34144)
   )
  )
  (i64.store offset=40 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34152)
   )
  )
  (i64.store offset=48 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34160)
   )
  )
  (i64.store offset=56 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34168)
   )
  )
  (call $_MatrixToFloatV
   (local.get $1)
   (local.get $0)
  )
  (call $_rlMultMatrixf
   (local.get $1)
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_EndDrawing (; 541 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $0
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.get $0)
    (i32.const 8)
   )
  )
  (local.set $2
   (local.get $0)
  )
  (call $_rlglDraw)
  (if
   (i32.load8_s
    (i32.const 34856)
   )
   (block
    (i32.store
     (i32.const 34216)
     (local.tee $3
      (i32.add
       (i32.load
        (i32.const 34216)
       )
       (i32.const 1)
      )
     )
    )
    (if
     (i32.eqz
      (i32.rem_s
       (local.get $3)
       (i32.const 10)
      )
     )
     (block
      (call $_GifWriteFrame
       (local.tee $3
        (call $_rlReadScreenPixels
         (i32.load
          (i32.const 33400)
         )
         (i32.load
          (i32.const 33404)
         )
        )
       )
       (i32.load
        (i32.const 33400)
       )
       (i32.load
        (i32.const 33404)
       )
      )
      (call $_free
       (local.get $3)
      )
     )
    )
    (if
     (i32.eq
      (i32.rem_s
       (i32.div_s
        (i32.load
         (i32.const 34216)
        )
        (i32.const 15)
       )
       (i32.const 2)
      )
      (i32.const 1)
     )
     (block
      (local.set $3
       (i32.add
        (i32.load
         (i32.const 33404)
        )
        (i32.const -20)
       )
      )
      (i32.store8 offset=4
       (local.get $0)
       (i32.const -26)
      )
      (i32.store8 offset=5
       (local.get $0)
       (i32.const 41)
      )
      (i32.store8 offset=6
       (local.get $0)
       (i32.const 55)
      )
      (i32.store8 offset=7
       (local.get $0)
       (i32.const -1)
      )
      (i32.store align=1
       (local.get $5)
       (i32.load offset=4 align=1
        (local.get $0)
       )
      )
      (call $_DrawCircle
       (local.get $3)
       (local.get $5)
      )
      (local.set $0
       (i32.add
        (i32.load
         (i32.const 33404)
        )
        (i32.const -25)
       )
      )
      (i32.store8
       (local.get $2)
       (i32.const -66)
      )
      (i32.store8 offset=1
       (local.get $2)
       (i32.const 33)
      )
      (i32.store8 offset=2
       (local.get $2)
       (i32.const 55)
      )
      (i32.store8 offset=3
       (local.get $2)
       (i32.const -1)
      )
      (i32.store align=1
       (local.get $5)
       (i32.load align=1
        (local.get $2)
       )
      )
      (call $_DrawText
       (i32.const 22939)
       (i32.const 50)
       (local.get $0)
       (i32.const 10)
       (local.get $5)
      )
     )
    )
    (call $_rlglDraw)
   )
  )
  (call $_glfwSwapBuffers
   (i32.load
    (i32.const 34056)
   )
  )
  (call $_PollInputEvents)
  (local.set $4
   (f64.sub
    (local.tee $1
     (call $_glfwGetTime)
    )
    (f64.load
     (i32.const 32856)
    )
   )
  )
  (f64.store
   (i32.const 32856)
   (local.get $1)
  )
  (f64.store
   (i32.const 32864)
   (local.tee $1
    (f64.add
     (local.get $4)
     (f64.load
      (i32.const 32872)
     )
    )
   )
  )
  (if
   (i32.eqz
    (f64.lt
     (local.get $1)
     (local.tee $4
      (f64.load
       (i32.const 32848)
      )
     )
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $6)
    )
    (return)
   )
  )
  (call $_Wait
   (f32.mul
    (f32.demote_f64
     (f64.sub
      (local.get $4)
      (local.get $1)
     )
    )
    (f32.const 1e3)
   )
  )
  (local.set $4
   (f64.sub
    (local.tee $1
     (call $_glfwGetTime)
    )
    (f64.load
     (i32.const 32856)
    )
   )
  )
  (f64.store
   (i32.const 32856)
   (local.get $1)
  )
  (f64.store
   (i32.const 32864)
   (f64.add
    (local.get $4)
    (f64.load
     (i32.const 32864)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $_DrawCircle (; 542 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (f32.store
   (local.get $2)
   (f32.const 30)
  )
  (f32.store offset=4
   (local.get $2)
   (f32.convert_i32_s
    (local.get $0)
   )
  )
  (i64.store align=4
   (local.tee $0
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
   (i64.load align=4
    (local.get $2)
   )
  )
  (i32.store align=1
   (local.tee $2
    (i32.add
     (local.get $2)
     (i32.const 16)
    )
   )
   (i32.load align=1
    (local.get $1)
   )
  )
  (call $_DrawCircleV
   (local.get $0)
   (local.get $2)
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_DrawText (; 543 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 128)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 128)
   )
  )
  (local.set $10
   (i32.add
    (local.get $5)
    (i32.const 112)
   )
  )
  (local.set $11
   (i32.add
    (local.get $5)
    (i32.const 104)
   )
  )
  (local.set $6
   (i32.add
    (local.get $5)
    (i32.const 72)
   )
  )
  (local.set $8
   (i32.sub
    (local.get $5)
    (i32.const -64)
   )
  )
  (local.set $7
   (local.get $5)
  )
  (call $_GetFontDefault
   (local.tee $5
    (i32.add
     (local.get $5)
     (i32.const 32)
    )
   )
  )
  (if
   (i32.eqz
    (i32.load
     (local.get $5)
    )
   )
   (block
    (global.set $STACKTOP
     (local.get $9)
    )
    (return)
   )
  )
  (f32.store
   (local.get $8)
   (f32.convert_i32_s
    (local.get $1)
   )
  )
  (f32.store offset=4
   (local.get $8)
   (f32.convert_i32_s
    (local.get $2)
   )
  )
  (local.set $1
   (i32.div_u
    (local.tee $2
     (select
      (local.get $3)
      (i32.const 10)
      (i32.gt_s
       (local.get $3)
       (i32.const 10)
      )
     )
    )
    (i32.const 10)
   )
  )
  (call $_GetFontDefault
   (local.get $7)
  )
  (i64.store align=4
   (local.get $6)
   (i64.load align=4
    (local.get $7)
   )
  )
  (i64.store offset=8 align=4
   (local.get $6)
   (i64.load offset=8 align=4
    (local.get $7)
   )
  )
  (i64.store offset=16 align=4
   (local.get $6)
   (i64.load offset=16 align=4
    (local.get $7)
   )
  )
  (i64.store offset=24 align=4
   (local.get $6)
   (i64.load offset=24 align=4
    (local.get $7)
   )
  )
  (i64.store align=4
   (local.get $11)
   (i64.load align=4
    (local.get $8)
   )
  )
  (i32.store align=1
   (local.get $10)
   (i32.load align=1
    (local.get $4)
   )
  )
  (call $_DrawTextEx
   (local.get $6)
   (local.get $0)
   (local.get $11)
   (f32.convert_i32_s
    (local.get $2)
   )
   (f32.convert_i32_s
    (local.get $1)
   )
   (local.get $10)
  )
  (global.set $STACKTOP
   (local.get $9)
  )
 )
 (func $_PollInputEvents (; 544 ;) (; has Stack IR ;)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 1456)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 1456)
   )
  )
  (local.set $2
   (i32.add
    (local.get $1)
    (i32.const 1440)
   )
  )
  (local.set $0
   (i32.add
    (local.get $1)
    (i32.const 1432)
   )
  )
  (call $_UpdateGestures)
  (call $_glfwGetCursorPos
   (i32.load
    (i32.const 34056)
   )
   (local.get $2)
   (local.get $0)
  )
  (f32.store
   (i32.const 34064)
   (f32.demote_f64
    (f64.load
     (local.get $2)
    )
   )
  )
  (f32.store
   (i32.const 34068)
   (f32.demote_f64
    (f64.load
     (local.get $0)
    )
   )
  )
  (drop
   (call $_memcpy
    (i32.const 31232)
    (i32.const 29696)
    (i32.const 512)
   )
  )
  (i32.store16 align=1
   (i32.const 34853)
   (i32.load16_s align=1
    (i32.const 34850)
   )
  )
  (i32.store8
   (i32.const 34855)
   (i32.load8_s
    (i32.const 34852)
   )
  )
  (i32.store
   (i32.const 34060)
   (i32.load
    (i32.const 34208)
   )
  )
  (i32.store
   (i32.const 34208)
   (i32.const 0)
  )
  (if
   (i32.le_s
    (local.tee $5
     (call $_emscripten_get_num_gamepads)
    )
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $4)
    )
    (return)
   )
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.eqz
     (call $_emscripten_get_gamepad_status
      (local.get $2)
      (local.get $1)
     )
    )
    (block
     (if
      (i32.gt_s
       (i32.load offset=12
        (local.get $1)
       )
       (i32.const 0)
      )
      (block
       (local.set $3
        (i32.load offset=12
         (local.get $1)
        )
       )
       (local.set $0
        (i32.const 0)
       )
       (loop $while-in1
        (br_if $while-in1
         (i32.and
          (i32.lt_s
           (local.tee $0
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
           (local.get $3)
          )
          (i32.lt_u
           (local.get $0)
           (i32.const 32)
          )
         )
        )
       )
      )
     )
     (if
      (i32.gt_s
       (i32.load offset=8
        (local.get $1)
       )
       (i32.const 0)
      )
      (block
       (local.set $3
        (i32.load offset=8
         (local.get $1)
        )
       )
       (local.set $0
        (i32.const 0)
       )
       (loop $while-in3
        (br_if $while-in3
         (i32.and
          (i32.lt_s
           (local.tee $0
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
           (local.get $3)
          )
          (i32.lt_u
           (local.get $0)
           (i32.const 8)
          )
         )
        )
       )
      )
     )
    )
   )
   (br_if $while-in
    (i32.and
     (i32.lt_s
      (local.tee $2
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
      )
      (local.get $5)
     )
     (i32.lt_u
      (local.get $2)
      (i32.const 4)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_Wait (; 545 ;) (; has Stack IR ;) (param $0 f32)
  (local $1 f64)
  (local $2 f64)
  (if
   (i32.eqz
    (f64.lt
     (f64.sub
      (f64.const 0)
      (local.tee $1
       (call $_glfwGetTime)
      )
     )
     (local.tee $2
      (f64.promote_f32
       (f32.div
        (local.get $0)
        (f32.const 1e3)
       )
      )
     )
    )
   )
   (return)
  )
  (loop $while-in
   (br_if $while-in
    (f64.lt
     (f64.sub
      (call $_glfwGetTime)
      (local.get $1)
     )
     (local.get $2)
    )
   )
  )
 )
 (func $_GetFontDefault (; 546 ;) (; has Stack IR ;) (param $0 i32)
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34080)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34088)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34096)
   )
  )
  (i64.store offset=24 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34104)
   )
  )
 )
 (func $_DrawTextEx (; 547 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f32) (param $4 f32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 f32)
  (local $21 f32)
  (local.set $17
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 128)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 128)
   )
  )
  (local.set $8
   (i32.add
    (local.get $7)
    (i32.const 88)
   )
  )
  (local.set $18
   (i32.add
    (local.get $7)
    (i32.const 80)
   )
  )
  (local.set $14
   (i32.sub
    (local.get $7)
    (i32.const -64)
   )
  )
  (local.set $15
   (i32.add
    (local.get $7)
    (i32.const 48)
   )
  )
  (local.set $11
   (i32.add
    (local.get $7)
    (i32.const 24)
   )
  )
  (local.set $16
   (local.get $7)
  )
  (local.set $19
   (call $_strlen
    (local.get $1)
   )
  )
  (local.set $9
   (i32.load offset=20
    (local.get $0)
   )
  )
  (if
   (i32.le_s
    (local.get $19)
    (i32.const 0)
   )
   (block
    (global.set $STACKTOP
     (local.get $17)
    )
    (return)
   )
  )
  (local.set $3
   (f32.div
    (local.get $3)
    (f32.convert_i32_s
     (local.get $9)
    )
   )
  )
  (local.set $20
   (f32.load
    (local.get $2)
   )
  )
  (local.set $21
   (f32.load offset=4
    (local.get $2)
   )
  )
  (local.set $9
   (i32.const 0)
  )
  (local.set $2
   (i32.const 0)
  )
  (loop $while-in
   (local.set $12
    (block $do-once (result i32)
     (local.set $6
      (block $__rjti$0 (result i32)
       (block $switch-default
        (block $switch-case1
         (block $switch-case0
          (block $switch-case
           (br_table $switch-case0 $switch-case1 $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-default $switch-case $switch-default
            (i32.sub
             (local.tee $6
              (i32.load8_s
               (i32.add
                (local.get $1)
                (local.get $2)
               )
              )
             )
             (i32.const -62)
            )
           )
          )
          (local.set $9
           (i32.add
            (local.get $9)
            (i32.trunc_f32_s
             (f32.mul
              (local.get $3)
              (f32.convert_i32_s
               (i32.add
                (local.tee $9
                 (i32.load offset=20
                  (local.get $0)
                 )
                )
                (i32.div_s
                 (local.get $9)
                 (i32.const 2)
                )
               )
              )
             )
            )
           )
          )
          (br $do-once
           (i32.const 0)
          )
         )
         (local.set $2
          (local.tee $6
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
          )
         )
         (br $__rjti$0
          (i32.load8_u
           (i32.add
            (local.get $1)
            (local.get $6)
           )
          )
         )
        )
        (local.set $2
         (local.tee $6
          (i32.add
           (local.get $2)
           (i32.const 1)
          )
         )
        )
        (br $__rjti$0
         (i32.sub
          (i32.load8_u
           (i32.add
            (local.get $1)
            (local.get $6)
           )
          )
          (i32.const -64)
         )
        )
       )
       (i32.and
        (local.get $6)
        (i32.const 255)
       )
      )
     )
     (i64.store align=4
      (local.get $8)
      (i64.load align=4
       (local.get $0)
      )
     )
     (i64.store offset=8 align=4
      (local.get $8)
      (i64.load offset=8 align=4
       (local.get $0)
      )
     )
     (i64.store offset=16 align=4
      (local.get $8)
      (i64.load offset=16 align=4
       (local.get $0)
      )
     )
     (i64.store offset=24 align=4
      (local.get $8)
      (i64.load offset=24 align=4
       (local.get $0)
      )
     )
     (local.set $6
      (call $_GetGlyphIndex
       (local.get $8)
       (local.get $6)
      )
     )
     (if
      (i32.ne
       (i32.load8_s
        (i32.add
         (local.get $1)
         (local.get $2)
        )
       )
       (i32.const 32)
      )
      (block
       (local.set $13
        (i32.add
         (local.tee $10
          (i32.load offset=28
           (local.get $0)
          )
         )
         (i32.mul
          (local.get $6)
          (i32.const 36)
         )
        )
       )
       (f32.store offset=8
        (local.get $7)
        (f32.add
         (f32.add
          (local.get $20)
          (f32.convert_i32_s
           (local.get $12)
          )
         )
         (f32.mul
          (local.get $3)
          (f32.convert_i32_s
           (i32.load offset=20
            (i32.add
             (i32.mul
              (local.get $6)
              (i32.const 36)
             )
             (local.get $10)
            )
           )
          )
         )
        )
       )
       (f32.store offset=12
        (local.get $7)
        (f32.add
         (f32.add
          (local.get $21)
          (f32.convert_i32_s
           (local.get $9)
          )
         )
         (f32.mul
          (local.get $3)
          (f32.convert_i32_s
           (i32.load offset=24
            (i32.add
             (i32.mul
              (local.get $6)
              (i32.const 36)
             )
             (local.get $10)
            )
           )
          )
         )
        )
       )
       (f32.store offset=16
        (local.get $7)
        (f32.mul
         (local.get $3)
         (f32.load offset=12
          (i32.add
           (i32.mul
            (local.get $6)
            (i32.const 36)
           )
           (local.get $10)
          )
         )
        )
       )
       (f32.store offset=20
        (local.get $7)
        (f32.mul
         (local.get $3)
         (f32.load offset=16
          (i32.add
           (i32.mul
            (local.get $6)
            (i32.const 36)
           )
           (local.get $10)
          )
         )
        )
       )
       (f32.store
        (local.get $16)
        (f32.const 0)
       )
       (f32.store offset=4
        (local.get $16)
        (f32.const 0)
       )
       (i64.store align=4
        (local.get $11)
        (i64.load align=4
         (local.get $0)
        )
       )
       (i64.store offset=8 align=4
        (local.get $11)
        (i64.load offset=8 align=4
         (local.get $0)
        )
       )
       (i32.store offset=16
        (local.get $11)
        (i32.load offset=16
         (local.get $0)
        )
       )
       (i64.store align=4
        (local.get $15)
        (i64.load offset=4 align=4
         (local.get $13)
        )
       )
       (i64.store offset=8 align=4
        (local.get $15)
        (i64.load offset=12 align=4
         (local.get $13)
        )
       )
       (i64.store align=4
        (local.get $14)
        (i64.load offset=8 align=4
         (local.get $7)
        )
       )
       (i64.store offset=8 align=4
        (local.get $14)
        (i64.load offset=16 align=4
         (local.get $7)
        )
       )
       (i64.store align=4
        (local.get $18)
        (i64.load align=4
         (local.get $16)
        )
       )
       (i32.store align=1
        (local.get $8)
        (i32.load align=1
         (local.get $5)
        )
       )
       (call $_DrawTexturePro
        (local.get $11)
        (local.get $15)
        (local.get $14)
        (local.get $18)
        (local.get $8)
       )
      )
     )
     (if (result i32)
      (local.tee $13
       (i32.load offset=28
        (i32.add
         (local.tee $10
          (i32.load offset=28
           (local.get $0)
          )
         )
         (i32.mul
          (local.get $6)
          (i32.const 36)
         )
        )
       )
      )
      (i32.add
       (local.get $12)
       (i32.trunc_f32_s
        (f32.add
         (f32.mul
          (local.get $3)
          (f32.convert_i32_s
           (local.get $13)
          )
         )
         (local.get $4)
        )
       )
      )
      (i32.add
       (local.get $12)
       (i32.trunc_f32_s
        (f32.add
         (f32.mul
          (local.get $3)
          (f32.load offset=12
           (i32.add
            (i32.mul
             (local.get $6)
             (i32.const 36)
            )
            (local.get $10)
           )
          )
         )
         (local.get $4)
        )
       )
      )
     )
    )
   )
   (br_if $while-in
    (i32.lt_s
     (local.tee $2
      (i32.add
       (local.get $2)
       (i32.const 1)
      )
     )
     (local.get $19)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $17)
  )
 )
 (func $_GetGlyphIndex (; 548 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.le_s
    (i32.load offset=24
     (local.get $0)
    )
    (i32.const 0)
   )
   (return
    (i32.const 0)
   )
  )
  (local.set $2
   (i32.load offset=28
    (local.get $0)
   )
  )
  (local.set $3
   (i32.load offset=24
    (local.get $0)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (if
    (i32.ne
     (i32.load
      (i32.add
       (i32.mul
        (local.get $0)
        (i32.const 36)
       )
       (local.get $2)
      )
     )
     (local.get $1)
    )
    (block
     (br_if $while-in
      (i32.lt_s
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.get $3)
      )
     )
     (local.set $0
      (i32.const 0)
     )
    )
   )
  )
  (local.get $0)
 )
 (func $_DrawTexturePro (; 549 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local $12 f32)
  (local $13 f32)
  (local $14 f32)
  (if
   (i32.eqz
    (local.tee $9
     (i32.load
      (local.get $0)
     )
    )
   )
   (return)
  )
  (local.set $10
   (i32.load offset=4
    (local.get $0)
   )
  )
  (local.set $0
   (i32.load offset=8
    (local.get $0)
   )
  )
  (if
   (f32.lt
    (local.tee $6
     (f32.load offset=8
      (local.get $1)
     )
    )
    (f32.const 0)
   )
   (f32.store
    (local.get $1)
    (f32.sub
     (f32.load
      (local.get $1)
     )
     (local.get $6)
    )
   )
  )
  (if
   (f32.lt
    (local.tee $5
     (f32.load offset=12
      (local.get $1)
     )
    )
    (f32.const 0)
   )
   (f32.store offset=4
    (local.get $1)
    (f32.sub
     (f32.load offset=4
      (local.get $1)
     )
     (local.get $5)
    )
   )
  )
  (local.set $8
   (f32.convert_i32_s
    (local.get $10)
   )
  )
  (local.set $7
   (f32.convert_i32_s
    (local.get $0)
   )
  )
  (call $_rlEnableTexture
   (local.get $9)
  )
  (call $_rlPushMatrix)
  (call $_rlTranslatef
   (f32.load
    (local.get $2)
   )
   (f32.load offset=4
    (local.get $2)
   )
   (f32.const 0)
  )
  (call $_rlRotatef)
  (call $_rlTranslatef
   (f32.neg
    (f32.load
     (local.get $3)
    )
   )
   (f32.neg
    (f32.load offset=4
     (local.get $3)
    )
   )
   (f32.const 0)
  )
  (call $_rlBegin
   (i32.const 7)
  )
  (call $_rlColor4ub
   (i32.load8_s
    (local.get $4)
   )
   (i32.load8_s offset=1
    (local.get $4)
   )
   (i32.load8_s offset=2
    (local.get $4)
   )
   (i32.load8_s offset=3
    (local.get $4)
   )
  )
  (call $_rlTexCoord2f
   (local.tee $12
    (f32.div
     (local.tee $11
      (f32.load
       (local.get $1)
      )
     )
     (local.get $8)
    )
   )
   (local.tee $14
    (f32.div
     (local.tee $13
      (f32.load offset=4
       (local.get $1)
      )
     )
     (local.get $7)
    )
   )
  )
  (call $_rlVertex2f
   (f32.const 0)
   (f32.const 0)
  )
  (call $_rlTexCoord2f
   (local.get $12)
   (local.tee $5
    (f32.div
     (f32.add
      (local.get $5)
      (local.get $13)
     )
     (local.get $7)
    )
   )
  )
  (call $_rlVertex2f
   (f32.const 0)
   (local.tee $7
    (f32.load offset=12
     (local.get $2)
    )
   )
  )
  (call $_rlTexCoord2f
   (local.tee $6
    (f32.div
     (f32.add
      (local.get $6)
      (local.get $11)
     )
     (local.get $8)
    )
   )
   (local.get $5)
  )
  (call $_rlVertex2f
   (local.tee $5
    (f32.load offset=8
     (local.get $2)
    )
   )
   (local.get $7)
  )
  (call $_rlTexCoord2f
   (local.get $6)
   (local.get $14)
  )
  (call $_rlVertex2f
   (local.get $5)
   (f32.const 0)
  )
  (call $_rlEnd)
  (call $_rlPopMatrix)
  (call $_rlDisableTexture)
 )
 (func $_DrawCircleV (; 550 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 f32)
  (local $3 i32)
  (local $4 f32)
  (local $5 f32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (if
   (call $_rlCheckBufferLimit
    (i32.const 72)
   )
   (call $_rlglDraw)
  )
  (call $_GetShapesTexture
   (local.get $3)
  )
  (call $_rlEnableTexture
   (i32.load
    (local.get $3)
   )
  )
  (call $_rlBegin
   (i32.const 7)
  )
  (local.set $3
   (i32.load8_s
    (local.get $1)
   )
  )
  (local.set $7
   (i32.load8_s offset=1
    (local.get $1)
   )
  )
  (local.set $8
   (i32.load8_s offset=2
    (local.get $1)
   )
  )
  (local.set $1
   (i32.load8_s offset=3
    (local.get $1)
   )
  )
  (local.set $4
   (f32.load
    (local.get $0)
   )
  )
  (local.set $5
   (f32.load offset=4
    (local.get $0)
   )
  )
  (local.set $0
   (i32.const 0)
  )
  (loop $while-in
   (call $_rlColor4ub
    (local.get $3)
    (local.get $7)
    (local.get $8)
    (local.get $1)
   )
   (call $_rlTexCoord2f
    (f32.div
     (f32.load
      (i32.const 34820)
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 34224)
      )
     )
    )
    (f32.div
     (f32.load
      (i32.const 34824)
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 34228)
      )
     )
    )
   )
   (call $_rlVertex2f
    (local.get $4)
    (local.get $5)
   )
   (call $_rlTexCoord2f
    (f32.div
     (f32.load
      (i32.const 34820)
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 34224)
      )
     )
    )
    (f32.div
     (f32.add
      (f32.load
       (i32.const 34824)
      )
      (f32.load
       (i32.const 34832)
      )
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 34228)
      )
     )
    )
   )
   (call $_rlVertex2f
    (f32.add
     (f32.mul
      (call $_sinf
       (local.tee $2
        (f32.mul
         (f32.convert_i32_s
          (local.get $0)
         )
         (f32.const 0.01745329238474369)
        )
       )
      )
      (f32.const 10)
     )
     (local.get $4)
    )
    (f32.add
     (f32.mul
      (call $_cosf
       (local.get $2)
      )
      (f32.const 10)
     )
     (local.get $5)
    )
   )
   (call $_rlTexCoord2f
    (f32.div
     (f32.add
      (f32.load
       (i32.const 34820)
      )
      (f32.load
       (i32.const 34828)
      )
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 34224)
      )
     )
    )
    (f32.div
     (f32.add
      (f32.load
       (i32.const 34824)
      )
      (f32.load
       (i32.const 34832)
      )
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 34228)
      )
     )
    )
   )
   (call $_rlVertex2f
    (f32.add
     (f32.mul
      (call $_sinf
       (local.tee $2
        (f32.mul
         (f32.convert_i32_s
          (i32.add
           (local.get $0)
           (i32.const 10)
          )
         )
         (f32.const 0.01745329238474369)
        )
       )
      )
      (f32.const 10)
     )
     (local.get $4)
    )
    (f32.add
     (f32.mul
      (call $_cosf
       (local.get $2)
      )
      (f32.const 10)
     )
     (local.get $5)
    )
   )
   (call $_rlTexCoord2f
    (f32.div
     (f32.add
      (f32.load
       (i32.const 34820)
      )
      (f32.load
       (i32.const 34828)
      )
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 34224)
      )
     )
    )
    (f32.div
     (f32.load
      (i32.const 34824)
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 34228)
      )
     )
    )
   )
   (call $_rlVertex2f
    (f32.add
     (f32.mul
      (call $_sinf
       (local.tee $2
        (f32.mul
         (f32.convert_i32_s
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 20)
           )
          )
         )
         (f32.const 0.01745329238474369)
        )
       )
      )
      (f32.const 10)
     )
     (local.get $4)
    )
    (f32.add
     (f32.mul
      (call $_cosf
       (local.get $2)
      )
      (f32.const 10)
     )
     (local.get $5)
    )
   )
   (br_if $while-in
    (i32.lt_u
     (local.get $0)
     (i32.const 360)
    )
   )
  )
  (call $_rlEnd)
  (call $_rlDisableTexture)
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $_GetShapesTexture (; 551 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 f32)
  (local $6 f32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 64)
   )
  )
  (if
   (i32.load
    (i32.const 34220)
   )
   (block
    (i64.store align=4
     (local.get $0)
     (i64.load align=4
      (i32.const 34220)
     )
    )
    (i64.store offset=8 align=4
     (local.get $0)
     (i64.load align=4
      (i32.const 34228)
     )
    )
    (i32.store offset=16
     (local.get $0)
     (i32.load
      (i32.const 34236)
     )
    )
    (global.set $STACKTOP
     (local.get $3)
    )
    (return)
   )
  )
  (call $_GetFontDefault
   (local.tee $2
    (i32.add
     (local.get $1)
     (i32.const 32)
    )
   )
  )
  (i64.store align=4
   (i32.const 34220)
   (i64.load align=4
    (local.get $2)
   )
  )
  (i64.store align=4
   (i32.const 34228)
   (i64.load offset=8 align=4
    (local.get $2)
   )
  )
  (i32.store
   (i32.const 34236)
   (i32.load offset=16
    (local.get $2)
   )
  )
  (call $_GetFontDefault
   (local.get $1)
  )
  (local.set $4
   (f32.add
    (f32.load
     (i32.add
      (local.tee $1
       (i32.load offset=28
        (local.get $1)
       )
      )
      (i32.const 3428)
     )
    )
    (f32.const 1)
   )
  )
  (local.set $5
   (f32.add
    (f32.load
     (i32.add
      (local.get $1)
      (i32.const 3432)
     )
    )
    (f32.const -2)
   )
  )
  (local.set $6
   (f32.add
    (f32.load
     (i32.add
      (local.get $1)
      (i32.const 3436)
     )
    )
    (f32.const -2)
   )
  )
  (f32.store
   (i32.const 34820)
   (f32.add
    (f32.load
     (i32.add
      (local.get $1)
      (i32.const 3424)
     )
    )
    (f32.const 1)
   )
  )
  (f32.store
   (i32.const 34824)
   (local.get $4)
  )
  (f32.store
   (i32.const 34828)
   (local.get $5)
  )
  (f32.store
   (i32.const 34832)
   (local.get $6)
  )
  (i64.store align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34220)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load align=4
    (i32.const 34228)
   )
  )
  (i32.store offset=16
   (local.get $0)
   (i32.load
    (i32.const 34236)
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
 )
 (func $_BeginMode3D (; 552 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 224)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 224)
   )
  )
  (local.set $2
   (i32.add
    (local.get $1)
    (i32.const 152)
   )
  )
  (local.set $4
   (i32.add
    (local.get $1)
    (i32.const 140)
   )
  )
  (local.set $5
   (i32.add
    (local.get $1)
    (i32.const 128)
   )
  )
  (local.set $7
   (i32.sub
    (local.get $1)
    (i32.const -64)
   )
  )
  (call $_rlglDraw)
  (call $_rlMatrixMode
   (i32.const 5889)
  )
  (call $_rlPushMatrix)
  (call $_rlLoadIdentity)
  (local.set $8
   (f32.div
    (f32.convert_i32_s
     (i32.load
      (i32.const 33400)
     )
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 33404)
     )
    )
   )
  )
  (block $switch
   (block $switch-case0
    (block $switch-case
     (br_table $switch-case $switch-case0 $switch
      (i32.load offset=40
       (local.get $0)
      )
     )
    )
    (call $_rlFrustum
     (f64.neg
      (local.tee $6
       (f64.mul
        (local.tee $3
         (f64.mul
          (call $_tan
           (f64.mul
            (f64.mul
             (f64.promote_f32
              (f32.load offset=36
               (local.get $0)
              )
             )
             (f64.const 0.5)
            )
            (f64.const 0.01745329238474369)
           )
          )
          (f64.const 0.01)
         )
        )
        (f64.promote_f32
         (local.get $8)
        )
       )
      )
     )
     (local.get $6)
     (f64.neg
      (local.get $3)
     )
     (local.get $3)
    )
    (br $switch)
   )
   (call $_rlOrtho
    (f64.neg
     (local.tee $6
      (f64.mul
       (local.tee $3
        (f64.mul
         (f64.promote_f32
          (f32.load offset=36
           (local.get $0)
          )
         )
         (f64.const 0.5)
        )
       )
       (f64.promote_f32
        (local.get $8)
       )
      )
     )
    )
    (local.get $6)
    (f64.neg
     (local.get $3)
    )
    (local.get $3)
    (f64.const 0.01)
    (f64.const 1e3)
   )
  )
  (call $_rlMatrixMode
   (i32.const 5888)
  )
  (call $_rlLoadIdentity)
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $0)
   )
  )
  (i32.store offset=8
   (local.get $5)
   (i32.load offset=8
    (local.get $0)
   )
  )
  (i64.store align=4
   (local.get $4)
   (i64.load offset=12 align=4
    (local.get $0)
   )
  )
  (i32.store offset=8
   (local.get $4)
   (i32.load offset=20
    (local.get $0)
   )
  )
  (i64.store align=4
   (local.get $2)
   (i64.load offset=24 align=4
    (local.get $0)
   )
  )
  (i32.store offset=8
   (local.get $2)
   (i32.load offset=32
    (local.get $0)
   )
  )
  (call $_MatrixLookAt
   (local.get $1)
   (local.get $5)
   (local.get $4)
   (local.get $2)
  )
  (i64.store align=4
   (local.get $2)
   (i64.load align=4
    (local.get $1)
   )
  )
  (i64.store offset=8 align=4
   (local.get $2)
   (i64.load offset=8 align=4
    (local.get $1)
   )
  )
  (i64.store offset=16 align=4
   (local.get $2)
   (i64.load offset=16 align=4
    (local.get $1)
   )
  )
  (i64.store offset=24 align=4
   (local.get $2)
   (i64.load offset=24 align=4
    (local.get $1)
   )
  )
  (i64.store offset=32 align=4
   (local.get $2)
   (i64.load offset=32 align=4
    (local.get $1)
   )
  )
  (i64.store offset=40 align=4
   (local.get $2)
   (i64.load offset=40 align=4
    (local.get $1)
   )
  )
  (i64.store offset=48 align=4
   (local.get $2)
   (i64.load offset=48 align=4
    (local.get $1)
   )
  )
  (i64.store offset=56 align=4
   (local.get $2)
   (i64.load offset=56 align=4
    (local.get $1)
   )
  )
  (call $_MatrixToFloatV
   (local.get $7)
   (local.get $2)
  )
  (call $_rlMultMatrixf
   (local.get $7)
  )
  (call $_glEnable
   (i32.const 2929)
  )
  (global.set $STACKTOP
   (local.get $9)
  )
 )
 (func $_GetMouseRay (; 553 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 f32)
  (local $14 f32)
  (local $15 i32)
  (local $16 f64)
  (local $17 f64)
  (local.set $15
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 384)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 384)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 40)
   )
  )
  (local.set $9
   (i32.add
    (local.get $3)
    (i32.const 24)
   )
  )
  (local.set $10
   (i32.add
    (local.get $3)
    (i32.const 12)
   )
  )
  (local.set $11
   (local.get $3)
  )
  (local.set $12
   (i32.add
    (local.get $3)
    (i32.const 192)
   )
  )
  (local.set $13
   (f32.add
    (f32.div
     (f32.mul
      (f32.load
       (local.get $1)
      )
      (f32.const 2)
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 33400)
      )
     )
    )
    (f32.const -1)
   )
  )
  (local.set $14
   (f32.sub
    (f32.const 1)
    (f32.div
     (f32.mul
      (f32.load offset=4
       (local.get $1)
      )
      (f32.const 2)
     )
     (f32.convert_i32_s
      (i32.load
       (i32.const 33404)
      )
     )
    )
   )
  )
  (i64.store align=4
   (local.tee $8
    (i32.add
     (local.get $3)
     (i32.const 240)
    )
   )
   (i64.load align=4
    (local.get $2)
   )
  )
  (i32.store offset=8
   (local.get $8)
   (i32.load offset=8
    (local.get $2)
   )
  )
  (i64.store align=4
   (local.tee $5
    (i32.add
     (local.get $3)
     (i32.const 256)
    )
   )
   (i64.load offset=12 align=4
    (local.get $2)
   )
  )
  (i32.store offset=8
   (local.get $5)
   (i32.load offset=20
    (local.get $2)
   )
  )
  (i64.store align=4
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 320)
    )
   )
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i32.store offset=8
   (local.get $4)
   (i32.load offset=32
    (local.get $2)
   )
  )
  (call $_MatrixLookAt
   (local.tee $7
    (i32.add
     (local.get $3)
     (i32.const 104)
    )
   )
   (local.get $8)
   (local.get $5)
   (local.get $4)
  )
  (call $_MatrixIdentity
   (local.get $6)
  )
  (block $switch
   (block $switch-case0
    (block $switch-case
     (br_table $switch-case $switch-case0 $switch
      (local.tee $1
       (i32.load offset=40
        (local.get $2)
       )
      )
     )
    )
    (call $_MatrixPerspective
     (local.get $6)
     (f64.promote_f32
      (f32.mul
       (f32.load offset=36
        (local.get $2)
       )
       (f32.const 0.01745329238474369)
      )
     )
     (f64.div
      (f64.convert_i32_s
       (i32.load
        (i32.const 33400)
       )
      )
      (f64.convert_i32_s
       (i32.load
        (i32.const 33404)
       )
      )
     )
    )
    (br $switch)
   )
   (call $_MatrixOrtho
    (local.get $6)
    (f64.neg
     (local.tee $17
      (f64.mul
       (local.tee $16
        (f64.mul
         (f64.promote_f32
          (f32.load offset=36
           (local.get $2)
          )
         )
         (f64.const 0.5)
        )
       )
       (f64.promote_f32
        (f32.div
         (f32.convert_i32_s
          (i32.load
           (i32.const 33400)
          )
         )
         (f32.convert_i32_s
          (i32.load
           (i32.const 33404)
          )
         )
        )
       )
      )
     )
    )
    (local.get $17)
    (f64.neg
     (local.get $16)
    )
    (local.get $16)
    (f64.const 0.01)
    (f64.const 1e3)
   )
  )
  (f32.store offset=228
   (local.get $3)
   (local.get $13)
  )
  (f32.store offset=232
   (local.get $3)
   (local.get $14)
  )
  (f32.store offset=236
   (local.get $3)
   (f32.const 0)
  )
  (i64.store align=4
   (local.get $8)
   (i64.load offset=228 align=4
    (local.get $3)
   )
  )
  (i32.store offset=8
   (local.get $8)
   (i32.load offset=236
    (local.get $3)
   )
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $6)
   )
  )
  (i64.store offset=8 align=4
   (local.get $5)
   (i64.load offset=8 align=4
    (local.get $6)
   )
  )
  (i64.store offset=16 align=4
   (local.get $5)
   (i64.load offset=16 align=4
    (local.get $6)
   )
  )
  (i64.store offset=24 align=4
   (local.get $5)
   (i64.load offset=24 align=4
    (local.get $6)
   )
  )
  (i64.store offset=32 align=4
   (local.get $5)
   (i64.load offset=32 align=4
    (local.get $6)
   )
  )
  (i64.store offset=40 align=4
   (local.get $5)
   (i64.load offset=40 align=4
    (local.get $6)
   )
  )
  (i64.store offset=48 align=4
   (local.get $5)
   (i64.load offset=48 align=4
    (local.get $6)
   )
  )
  (i64.store offset=56 align=4
   (local.get $5)
   (i64.load offset=56 align=4
    (local.get $6)
   )
  )
  (i64.store align=4
   (local.get $4)
   (i64.load align=4
    (local.get $7)
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $7)
   )
  )
  (i64.store offset=16 align=4
   (local.get $4)
   (i64.load offset=16 align=4
    (local.get $7)
   )
  )
  (i64.store offset=24 align=4
   (local.get $4)
   (i64.load offset=24 align=4
    (local.get $7)
   )
  )
  (i64.store offset=32 align=4
   (local.get $4)
   (i64.load offset=32 align=4
    (local.get $7)
   )
  )
  (i64.store offset=40 align=4
   (local.get $4)
   (i64.load offset=40 align=4
    (local.get $7)
   )
  )
  (i64.store offset=48 align=4
   (local.get $4)
   (i64.load offset=48 align=4
    (local.get $7)
   )
  )
  (i64.store offset=56 align=4
   (local.get $4)
   (i64.load offset=56 align=4
    (local.get $7)
   )
  )
  (call $_rlUnproject
   (local.get $9)
   (local.get $8)
   (local.get $5)
   (local.get $4)
  )
  (f32.store offset=216
   (local.get $3)
   (local.get $13)
  )
  (f32.store offset=220
   (local.get $3)
   (local.get $14)
  )
  (f32.store offset=224
   (local.get $3)
   (f32.const 1)
  )
  (i64.store align=4
   (local.get $8)
   (i64.load offset=216 align=4
    (local.get $3)
   )
  )
  (i32.store offset=8
   (local.get $8)
   (i32.load offset=224
    (local.get $3)
   )
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $6)
   )
  )
  (i64.store offset=8 align=4
   (local.get $5)
   (i64.load offset=8 align=4
    (local.get $6)
   )
  )
  (i64.store offset=16 align=4
   (local.get $5)
   (i64.load offset=16 align=4
    (local.get $6)
   )
  )
  (i64.store offset=24 align=4
   (local.get $5)
   (i64.load offset=24 align=4
    (local.get $6)
   )
  )
  (i64.store offset=32 align=4
   (local.get $5)
   (i64.load offset=32 align=4
    (local.get $6)
   )
  )
  (i64.store offset=40 align=4
   (local.get $5)
   (i64.load offset=40 align=4
    (local.get $6)
   )
  )
  (i64.store offset=48 align=4
   (local.get $5)
   (i64.load offset=48 align=4
    (local.get $6)
   )
  )
  (i64.store offset=56 align=4
   (local.get $5)
   (i64.load offset=56 align=4
    (local.get $6)
   )
  )
  (i64.store align=4
   (local.get $4)
   (i64.load align=4
    (local.get $7)
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $7)
   )
  )
  (i64.store offset=16 align=4
   (local.get $4)
   (i64.load offset=16 align=4
    (local.get $7)
   )
  )
  (i64.store offset=24 align=4
   (local.get $4)
   (i64.load offset=24 align=4
    (local.get $7)
   )
  )
  (i64.store offset=32 align=4
   (local.get $4)
   (i64.load offset=32 align=4
    (local.get $7)
   )
  )
  (i64.store offset=40 align=4
   (local.get $4)
   (i64.load offset=40 align=4
    (local.get $7)
   )
  )
  (i64.store offset=48 align=4
   (local.get $4)
   (i64.load offset=48 align=4
    (local.get $7)
   )
  )
  (i64.store offset=56 align=4
   (local.get $4)
   (i64.load offset=56 align=4
    (local.get $7)
   )
  )
  (call $_rlUnproject
   (local.get $10)
   (local.get $8)
   (local.get $5)
   (local.get $4)
  )
  (f32.store offset=204
   (local.get $3)
   (local.get $13)
  )
  (f32.store offset=208
   (local.get $3)
   (local.get $14)
  )
  (f32.store offset=212
   (local.get $3)
   (f32.const -1)
  )
  (i64.store align=4
   (local.get $8)
   (i64.load offset=204 align=4
    (local.get $3)
   )
  )
  (i32.store offset=8
   (local.get $8)
   (i32.load offset=212
    (local.get $3)
   )
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $6)
   )
  )
  (i64.store offset=8 align=4
   (local.get $5)
   (i64.load offset=8 align=4
    (local.get $6)
   )
  )
  (i64.store offset=16 align=4
   (local.get $5)
   (i64.load offset=16 align=4
    (local.get $6)
   )
  )
  (i64.store offset=24 align=4
   (local.get $5)
   (i64.load offset=24 align=4
    (local.get $6)
   )
  )
  (i64.store offset=32 align=4
   (local.get $5)
   (i64.load offset=32 align=4
    (local.get $6)
   )
  )
  (i64.store offset=40 align=4
   (local.get $5)
   (i64.load offset=40 align=4
    (local.get $6)
   )
  )
  (i64.store offset=48 align=4
   (local.get $5)
   (i64.load offset=48 align=4
    (local.get $6)
   )
  )
  (i64.store offset=56 align=4
   (local.get $5)
   (i64.load offset=56 align=4
    (local.get $6)
   )
  )
  (i64.store align=4
   (local.get $4)
   (i64.load align=4
    (local.get $7)
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $7)
   )
  )
  (i64.store offset=16 align=4
   (local.get $4)
   (i64.load offset=16 align=4
    (local.get $7)
   )
  )
  (i64.store offset=24 align=4
   (local.get $4)
   (i64.load offset=24 align=4
    (local.get $7)
   )
  )
  (i64.store offset=32 align=4
   (local.get $4)
   (i64.load offset=32 align=4
    (local.get $7)
   )
  )
  (i64.store offset=40 align=4
   (local.get $4)
   (i64.load offset=40 align=4
    (local.get $7)
   )
  )
  (i64.store offset=48 align=4
   (local.get $4)
   (i64.load offset=48 align=4
    (local.get $7)
   )
  )
  (i64.store offset=56 align=4
   (local.get $4)
   (i64.load offset=56 align=4
    (local.get $7)
   )
  )
  (call $_rlUnproject
   (local.get $11)
   (local.get $8)
   (local.get $5)
   (local.get $4)
  )
  (i64.store align=4
   (local.get $5)
   (i64.load align=4
    (local.get $10)
   )
  )
  (i32.store offset=8
   (local.get $5)
   (i32.load offset=8
    (local.get $10)
   )
  )
  (i64.store align=4
   (local.get $4)
   (i64.load align=4
    (local.get $9)
   )
  )
  (i32.store offset=8
   (local.get $4)
   (i32.load offset=8
    (local.get $9)
   )
  )
  (call $_Vector3Subtract
   (local.get $12)
   (local.get $5)
   (local.get $4)
  )
  (i64.store align=4
   (local.get $4)
   (i64.load align=4
    (local.get $12)
   )
  )
  (i32.store offset=8
   (local.get $4)
   (i32.load offset=8
    (local.get $12)
   )
  )
  (call $_Vector3Normalize
   (local.get $8)
   (local.get $4)
  )
  (block $folding-inner0
   (block $switch-default4
    (block $switch-case3
     (block $switch-case2
      (br_table $switch-case2 $switch-case3 $switch-default4
       (local.get $1)
      )
     )
     (i64.store offset=168 align=4
      (local.get $3)
      (i64.load align=4
       (local.get $2)
      )
     )
     (i32.store offset=176
      (local.get $3)
      (i32.load offset=8
       (local.get $2)
      )
     )
     (br $folding-inner0)
    )
    (i64.store offset=168 align=4
     (local.get $3)
     (i64.load align=4
      (local.get $11)
     )
    )
    (i32.store offset=176
     (local.get $3)
     (i32.load offset=8
      (local.get $11)
     )
    )
    (br $folding-inner0)
   )
   (i64.store offset=180 align=4
    (local.get $3)
    (i64.load align=4
     (local.get $8)
    )
   )
   (i32.store offset=188
    (local.get $3)
    (i32.load offset=8
     (local.get $8)
    )
   )
   (i64.store align=4
    (local.get $0)
    (i64.load offset=168 align=4
     (local.get $3)
    )
   )
   (i64.store offset=8 align=4
    (local.get $0)
    (i64.load offset=176 align=4
     (local.get $3)
    )
   )
   (i64.store offset=16 align=4
    (local.get $0)
    (i64.load offset=184 align=4
     (local.get $3)
    )
   )
   (global.set $STACKTOP
    (local.get $15)
   )
   (return)
  )
  (i64.store offset=180 align=4
   (local.get $3)
   (i64.load align=4
    (local.get $8)
   )
  )
  (i32.store offset=188
   (local.get $3)
   (i32.load offset=8
    (local.get $8)
   )
  )
  (i64.store align=4
   (local.get $0)
   (i64.load offset=168 align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load offset=176 align=4
    (local.get $3)
   )
  )
  (i64.store offset=16 align=4
   (local.get $0)
   (i64.load offset=184 align=4
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $15)
  )
 )
 (func $_GetWorldToScreen (; 554 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f64)
  (local $10 i32)
  (local $11 f64)
  (local $12 f32)
  (local $13 f32)
  (local.set $10
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 240)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 240)
   )
  )
  (local.set $3
   (i32.add
    (local.get $5)
    (i32.const 176)
   )
  )
  (local.set $7
   (i32.add
    (local.get $5)
    (i32.const 160)
   )
  )
  (local.set $4
   (i32.add
    (local.get $5)
    (i32.const 128)
   )
  )
  (local.set $8
   (i32.add
    (local.get $5)
    (i32.const 144)
   )
  )
  (call $_MatrixIdentity
   (local.tee $6
    (i32.sub
     (local.get $5)
     (i32.const -64)
    )
   )
  )
  (block $switch
   (block $switch-case0
    (block $switch-case
     (br_table $switch-case $switch-case0 $switch
      (i32.load offset=40
       (local.get $2)
      )
     )
    )
    (call $_MatrixPerspective
     (local.get $6)
     (f64.promote_f32
      (f32.mul
       (f32.load offset=36
        (local.get $2)
       )
       (f32.const 0.01745329238474369)
      )
     )
     (f64.div
      (f64.convert_i32_s
       (i32.load
        (i32.const 33400)
       )
      )
      (f64.convert_i32_s
       (i32.load
        (i32.const 33404)
       )
      )
     )
    )
    (br $switch)
   )
   (call $_MatrixOrtho
    (local.get $6)
    (f64.neg
     (local.tee $11
      (f64.mul
       (local.tee $9
        (f64.mul
         (f64.promote_f32
          (f32.load offset=36
           (local.get $2)
          )
         )
         (f64.const 0.5)
        )
       )
       (f64.promote_f32
        (f32.div
         (f32.convert_i32_s
          (i32.load
           (i32.const 33400)
          )
         )
         (f32.convert_i32_s
          (i32.load
           (i32.const 33404)
          )
         )
        )
       )
      )
     )
    )
    (local.get $11)
    (f64.neg
     (local.get $9)
    )
    (local.get $9)
    (f64.const 0.01)
    (f64.const 1e3)
   )
  )
  (i64.store align=4
   (local.get $4)
   (i64.load align=4
    (local.get $2)
   )
  )
  (i32.store offset=8
   (local.get $4)
   (i32.load offset=8
    (local.get $2)
   )
  )
  (i64.store align=4
   (local.get $7)
   (i64.load offset=12 align=4
    (local.get $2)
   )
  )
  (i32.store offset=8
   (local.get $7)
   (i32.load offset=20
    (local.get $2)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $2)
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.load offset=32
    (local.get $2)
   )
  )
  (call $_MatrixLookAt
   (local.get $5)
   (local.get $4)
   (local.get $7)
   (local.get $3)
  )
  (i32.store
   (local.get $4)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store offset=4
   (local.get $4)
   (i32.load offset=4
    (local.get $1)
   )
  )
  (i32.store offset=8
   (local.get $4)
   (i32.load offset=8
    (local.get $1)
   )
  )
  (f32.store offset=12
   (local.get $4)
   (f32.const 1)
  )
  (i64.store align=4
   (local.get $7)
   (i64.load align=4
    (local.get $4)
   )
  )
  (i64.store offset=8 align=4
   (local.get $7)
   (i64.load offset=8 align=4
    (local.get $4)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.get $5)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $5)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $5)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $5)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $5)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $5)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $5)
   )
  )
  (i64.store offset=56 align=4
   (local.get $3)
   (i64.load offset=56 align=4
    (local.get $5)
   )
  )
  (call $_QuaternionTransform
   (local.get $8)
   (local.get $7)
   (local.get $3)
  )
  (i64.store align=4
   (local.get $4)
   (i64.load align=4
    (local.get $8)
   )
  )
  (i64.store offset=8 align=4
   (local.get $4)
   (i64.load offset=8 align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (local.get $7)
   (i64.load align=4
    (local.get $8)
   )
  )
  (i64.store offset=8 align=4
   (local.get $7)
   (i64.load offset=8 align=4
    (local.get $8)
   )
  )
  (i64.store align=4
   (local.get $3)
   (i64.load align=4
    (local.get $6)
   )
  )
  (i64.store offset=8 align=4
   (local.get $3)
   (i64.load offset=8 align=4
    (local.get $6)
   )
  )
  (i64.store offset=16 align=4
   (local.get $3)
   (i64.load offset=16 align=4
    (local.get $6)
   )
  )
  (i64.store offset=24 align=4
   (local.get $3)
   (i64.load offset=24 align=4
    (local.get $6)
   )
  )
  (i64.store offset=32 align=4
   (local.get $3)
   (i64.load offset=32 align=4
    (local.get $6)
   )
  )
  (i64.store offset=40 align=4
   (local.get $3)
   (i64.load offset=40 align=4
    (local.get $6)
   )
  )
  (i64.store offset=48 align=4
   (local.get $3)
   (i64.load offset=48 align=4
    (local.get $6)
   )
  )
  (i64.store offset=56 align=4
   (local.get $3)
   (i64.load offset=56 align=4
    (local.get $6)
   )
  )
  (call $_QuaternionTransform
   (local.get $4)
   (local.get $7)
   (local.get $3)
  )
  (local.set $13
   (f32.mul
    (f32.mul
     (f32.add
      (f32.div
       (f32.neg
        (f32.load offset=4
         (local.get $4)
        )
       )
       (local.tee $12
        (f32.load offset=12
         (local.get $4)
        )
       )
      )
      (f32.const 1)
     )
     (f32.const 0.5)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 33404)
     )
    )
   )
  )
  (f32.store
   (local.get $0)
   (f32.mul
    (f32.mul
     (f32.add
      (f32.div
       (f32.load
        (local.get $4)
       )
       (local.get $12)
      )
      (f32.const 1)
     )
     (f32.const 0.5)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 33400)
     )
    )
   )
  )
  (f32.store offset=4
   (local.get $0)
   (local.get $13)
  )
  (global.set $STACKTOP
   (local.get $10)
  )
 )
 (func $_GetColor (; 555 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (i32.store8
   (local.get $0)
   (i32.shr_u
    (local.get $1)
    (i32.const 24)
   )
  )
  (i32.store8 offset=1
   (local.get $0)
   (i32.shr_u
    (local.get $1)
    (i32.const 16)
   )
  )
  (i32.store8 offset=2
   (local.get $0)
   (i32.shr_u
    (local.get $1)
    (i32.const 8)
   )
  )
  (i32.store8 offset=3
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_Fade (; 556 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32)
  (if
   (f32.lt
    (local.get $2)
    (f32.const 0)
   )
   (local.set $2
    (f32.const 0)
   )
   (if
    (f32.gt
     (local.get $2)
     (f32.const 1)
    )
    (local.set $2
     (f32.const 1)
    )
   )
  )
  (i32.store8
   (local.get $0)
   (i32.load8_s
    (local.get $1)
   )
  )
  (i32.store8 offset=1
   (local.get $0)
   (i32.load8_s offset=1
    (local.get $1)
   )
  )
  (i32.store8 offset=2
   (local.get $0)
   (i32.load8_s offset=2
    (local.get $1)
   )
  )
  (i32.store8 offset=3
   (local.get $0)
   (i32.trunc_f32_s
    (f32.mul
     (local.get $2)
     (f32.const 255)
    )
   )
  )
 )
 (func $_IsKeyPressed (; 557 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (i32.and
   (i32.ne
    (local.tee $1
     (i32.load8_s
      (i32.add
       (local.get $0)
       (i32.const 29696)
      )
     )
    )
    (i32.load8_s
     (i32.add
      (local.get $0)
      (i32.const 31232)
     )
    )
   )
   (i32.eq
    (local.get $1)
    (i32.const 1)
   )
  )
 )
 (func $_DrawRectangleV (; 558 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 64)
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.load
    (local.get $0)
   )
  )
  (i32.store offset=12
   (local.get $3)
   (i32.load offset=4
    (local.get $0)
   )
  )
  (i32.store offset=16
   (local.get $3)
   (i32.load
    (local.get $1)
   )
  )
  (i32.store offset=20
   (local.get $3)
   (i32.load offset=4
    (local.get $1)
   )
  )
  (f32.store
   (local.get $3)
   (f32.const 0)
  )
  (f32.store offset=4
   (local.get $3)
   (f32.const 0)
  )
  (i64.store align=4
   (local.tee $0
    (i32.add
     (local.get $3)
     (i32.const 24)
    )
   )
   (i64.load offset=8 align=4
    (local.get $3)
   )
  )
  (i64.store offset=8 align=4
   (local.get $0)
   (i64.load offset=16 align=4
    (local.get $3)
   )
  )
  (i64.store align=4
   (local.tee $1
    (i32.add
     (local.get $3)
     (i32.const 40)
    )
   )
   (i64.load align=4
    (local.get $3)
   )
  )
  (i32.store align=1
   (local.tee $3
    (i32.add
     (local.get $3)
     (i32.const 48)
    )
   )
   (i32.load align=1
    (local.get $2)
   )
  )
  (call $_DrawRectanglePro
   (local.get $0)
   (local.get $1)
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_DrawRectanglePro (; 559 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 f32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (call $_GetShapesTexture
   (local.get $3)
  )
  (call $_rlEnableTexture
   (i32.load
    (local.get $3)
   )
  )
  (call $_rlPushMatrix)
  (call $_rlTranslatef
   (f32.load
    (local.get $0)
   )
   (f32.load offset=4
    (local.get $0)
   )
   (f32.const 0)
  )
  (call $_rlRotatef)
  (call $_rlTranslatef
   (f32.neg
    (f32.load
     (local.get $1)
    )
   )
   (f32.neg
    (f32.load offset=4
     (local.get $1)
    )
   )
   (f32.const 0)
  )
  (call $_rlBegin
   (i32.const 7)
  )
  (call $_rlColor4ub
   (i32.load8_s
    (local.get $2)
   )
   (i32.load8_s offset=1
    (local.get $2)
   )
   (i32.load8_s offset=2
    (local.get $2)
   )
   (i32.load8_s offset=3
    (local.get $2)
   )
  )
  (call $_rlTexCoord2f
   (f32.div
    (f32.load
     (i32.const 34820)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 34224)
     )
    )
   )
   (f32.div
    (f32.load
     (i32.const 34824)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 34228)
     )
    )
   )
  )
  (call $_rlVertex2f
   (f32.const 0)
   (f32.const 0)
  )
  (call $_rlTexCoord2f
   (f32.div
    (f32.load
     (i32.const 34820)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 34224)
     )
    )
   )
   (f32.div
    (f32.add
     (f32.load
      (i32.const 34824)
     )
     (f32.load
      (i32.const 34832)
     )
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 34228)
     )
    )
   )
  )
  (call $_rlVertex2f
   (f32.const 0)
   (local.tee $5
    (f32.load offset=12
     (local.get $0)
    )
   )
  )
  (call $_rlTexCoord2f
   (f32.div
    (f32.add
     (f32.load
      (i32.const 34820)
     )
     (f32.load
      (i32.const 34828)
     )
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 34224)
     )
    )
   )
   (f32.div
    (f32.add
     (f32.load
      (i32.const 34824)
     )
     (f32.load
      (i32.const 34832)
     )
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 34228)
     )
    )
   )
  )
  (call $_rlVertex2f
   (local.tee $6
    (f32.load offset=8
     (local.get $0)
    )
   )
   (local.get $5)
  )
  (call $_rlTexCoord2f
   (f32.div
    (f32.add
     (f32.load
      (i32.const 34820)
     )
     (f32.load
      (i32.const 34828)
     )
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 34224)
     )
    )
   )
   (f32.div
    (f32.load
     (i32.const 34824)
    )
    (f32.convert_i32_s
     (i32.load
      (i32.const 34228)
     )
    )
   )
  )
  (call $_rlVertex2f
   (local.get $6)
   (f32.const 0)
  )
  (call $_rlEnd)
  (call $_rlPopMatrix)
  (call $_rlDisableTexture)
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_DrawLine3D (; 560 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (call $_rlBegin
   (i32.const 1)
  )
  (call $_rlColor4ub
   (i32.load8_s
    (local.get $2)
   )
   (i32.load8_s offset=1
    (local.get $2)
   )
   (i32.load8_s offset=2
    (local.get $2)
   )
   (i32.load8_s offset=3
    (local.get $2)
   )
  )
  (call $_rlVertex3f
   (f32.load
    (local.get $0)
   )
   (f32.load offset=4
    (local.get $0)
   )
   (f32.load offset=8
    (local.get $0)
   )
  )
  (call $_rlVertex3f
   (f32.load
    (local.get $1)
   )
   (f32.load offset=4
    (local.get $1)
   )
   (f32.load offset=8
    (local.get $1)
   )
  )
  (call $_rlEnd)
 )
 (func $_DrawCube (; 561 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32) (param $4 i32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (if
   (call $_rlCheckBufferLimit
    (i32.const 36)
   )
   (call $_rlglDraw)
  )
  (call $_rlPushMatrix)
  (call $_rlTranslatef
   (f32.load
    (local.get $0)
   )
   (f32.load offset=4
    (local.get $0)
   )
   (f32.load offset=8
    (local.get $0)
   )
  )
  (call $_rlBegin
   (i32.const 4)
  )
  (call $_rlColor4ub
   (i32.load8_s
    (local.get $4)
   )
   (i32.load8_s offset=1
    (local.get $4)
   )
   (i32.load8_s offset=2
    (local.get $4)
   )
   (i32.load8_s offset=3
    (local.get $4)
   )
  )
  (call $_rlVertex3f
   (local.tee $1
    (f32.sub
     (f32.const 0)
     (local.tee $5
      (f32.mul
       (local.get $1)
       (f32.const 0.5)
      )
     )
    )
   )
   (local.tee $2
    (f32.sub
     (f32.const 0)
     (local.tee $6
      (f32.mul
       (local.get $2)
       (f32.const 0.5)
      )
     )
    )
   )
   (local.tee $3
    (f32.add
     (local.tee $7
      (f32.mul
       (local.get $3)
       (f32.const 0.5)
      )
     )
     (f32.const 0)
    )
   )
  )
  (call $_rlVertex3f
   (local.tee $5
    (f32.add
     (local.get $5)
     (f32.const 0)
    )
   )
   (local.get $2)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.tee $6
    (f32.add
     (local.get $6)
     (f32.const 0)
    )
   )
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $6)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $6)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $2)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $2)
   (local.tee $7
    (f32.sub
     (f32.const 0)
     (local.get $7)
    )
   )
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $6)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $2)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $6)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $2)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $6)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $6)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $6)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $6)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $6)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $6)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $6)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $2)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $2)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $2)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $2)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $2)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $2)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $6)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $6)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $2)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $2)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $6)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $2)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $6)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $6)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $6)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $2)
   (local.get $7)
  )
  (call $_rlEnd)
  (call $_rlPopMatrix)
 )
 (func $_DrawCubeWires (; 562 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32) (param $4 i32)
  (local $5 f32)
  (local $6 f32)
  (local $7 f32)
  (if
   (call $_rlCheckBufferLimit
    (i32.const 36)
   )
   (call $_rlglDraw)
  )
  (call $_rlPushMatrix)
  (call $_rlTranslatef
   (f32.load
    (local.get $0)
   )
   (f32.load offset=4
    (local.get $0)
   )
   (f32.load offset=8
    (local.get $0)
   )
  )
  (call $_rlBegin
   (i32.const 1)
  )
  (call $_rlColor4ub
   (i32.load8_s
    (local.get $4)
   )
   (i32.load8_s offset=1
    (local.get $4)
   )
   (i32.load8_s offset=2
    (local.get $4)
   )
   (i32.load8_s offset=3
    (local.get $4)
   )
  )
  (call $_rlVertex3f
   (local.tee $1
    (f32.sub
     (f32.const 0)
     (local.tee $5
      (f32.mul
       (local.get $1)
       (f32.const 0.5)
      )
     )
    )
   )
   (local.tee $2
    (f32.sub
     (f32.const 0)
     (local.tee $6
      (f32.mul
       (local.get $2)
       (f32.const 0.5)
      )
     )
    )
   )
   (local.tee $3
    (f32.add
     (local.tee $7
      (f32.mul
       (local.get $3)
       (f32.const 0.5)
      )
     )
     (f32.const 0)
    )
   )
  )
  (call $_rlVertex3f
   (local.tee $5
    (f32.add
     (local.get $5)
     (f32.const 0)
    )
   )
   (local.get $2)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $2)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.tee $6
    (f32.add
     (local.get $6)
     (f32.const 0)
    )
   )
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $6)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $6)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $6)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $2)
   (local.tee $7
    (f32.sub
     (f32.const 0)
     (local.get $7)
    )
   )
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $2)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $2)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $6)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $6)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $6)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $6)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $2)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $6)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $6)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $6)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $6)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $2)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $1)
   (local.get $2)
   (local.get $7)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $2)
   (local.get $3)
  )
  (call $_rlVertex3f
   (local.get $5)
   (local.get $2)
   (local.get $7)
  )
  (call $_rlEnd)
  (call $_rlPopMatrix)
 )
 (func $_CheckCollisionRayBox (; 563 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 f32)
  (local $3 f32)
  (local $4 f64)
  (local $5 f64)
  (local $6 f64)
  (local $7 f64)
  (local $8 f64)
  (local $9 f64)
  (local.set $4
   (f64.promote_f32
    (f32.div
     (f32.sub
      (f32.load offset=4
       (local.get $1)
      )
      (local.tee $2
       (f32.load offset=4
        (local.get $0)
       )
      )
     )
     (local.tee $3
      (f32.load offset=16
       (local.get $0)
      )
     )
    )
   )
  )
  (local.set $5
   (f64.promote_f32
    (f32.div
     (f32.sub
      (f32.load offset=16
       (local.get $1)
      )
      (local.get $2)
     )
     (local.get $3)
    )
   )
  )
  (local.set $6
   (f64.promote_f32
    (f32.div
     (f32.sub
      (f32.load offset=8
       (local.get $1)
      )
      (local.tee $2
       (f32.load offset=8
        (local.get $0)
       )
      )
     )
     (local.tee $3
      (f32.load offset=20
       (local.get $0)
      )
     )
    )
   )
  )
  (local.set $7
   (f64.promote_f32
    (f32.div
     (f32.sub
      (f32.load offset=20
       (local.get $1)
      )
      (local.get $2)
     )
     (local.get $3)
    )
   )
  )
  (i32.eqz
   (i32.or
    (f32.lt
     (local.tee $2
      (f32.demote_f64
       (call $_llvm_minnum_f64
        (call $_llvm_minnum_f64
         (call $_llvm_maxnum_f64
          (local.tee $8
           (f64.promote_f32
            (f32.div
             (f32.sub
              (f32.load
               (local.get $1)
              )
              (local.tee $2
               (f32.load
                (local.get $0)
               )
              )
             )
             (local.tee $3
              (f32.load offset=12
               (local.get $0)
              )
             )
            )
           )
          )
          (local.tee $9
           (f64.promote_f32
            (f32.div
             (f32.sub
              (f32.load offset=12
               (local.get $1)
              )
              (local.get $2)
             )
             (local.get $3)
            )
           )
          )
         )
         (call $_llvm_maxnum_f64
          (local.get $4)
          (local.get $5)
         )
        )
        (call $_llvm_maxnum_f64
         (local.get $6)
         (local.get $7)
        )
       )
      )
     )
     (f32.const 0)
    )
    (f32.gt
     (f32.demote_f64
      (call $_llvm_maxnum_f64
       (call $_llvm_maxnum_f64
        (call $_llvm_minnum_f64
         (local.get $8)
         (local.get $9)
        )
        (call $_llvm_minnum_f64
         (local.get $4)
         (local.get $5)
        )
       )
       (call $_llvm_minnum_f64
        (local.get $6)
        (local.get $7)
       )
      )
     )
     (local.get $2)
    )
   )
  )
 )
 (func $___stdio_close (; 564 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.and
   (call $___wasi_fd_close
    (i32.load offset=60
     (local.get $0)
    )
   )
   (i32.const 65535)
  )
 )
 (func $___stdio_write (; 565 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local.set $9
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (local.set $6
   (i32.add
    (local.get $3)
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $3)
   (local.tee $4
    (i32.load offset=28
     (local.get $0)
    )
   )
  )
  (i32.store offset=4
   (local.get $3)
   (local.tee $5
    (i32.sub
     (i32.load offset=20
      (local.get $0)
     )
     (local.get $4)
    )
   )
  )
  (i32.store offset=8
   (local.get $3)
   (local.get $1)
  )
  (i32.store offset=12
   (local.get $3)
   (local.get $2)
  )
  (local.set $1
   (local.get $3)
  )
  (local.set $4
   (i32.const 2)
  )
  (local.set $5
   (i32.add
    (local.get $2)
    (local.get $5)
   )
  )
  (block $__rjto$1
   (block $__rjti$1
    (loop $while-in
     (if
      (i32.ne
       (local.get $5)
       (local.tee $3
        (if (result i32)
         (call $___wasi_syscall_ret
          (call $___wasi_fd_write
           (i32.load offset=60
            (local.get $0)
           )
           (local.get $1)
           (local.get $4)
           (local.get $6)
          )
         )
         (block (result i32)
          (i32.store
           (local.get $6)
           (i32.const -1)
          )
          (i32.const -1)
         )
         (i32.load
          (local.get $6)
         )
        )
       )
      )
      (block
       (br_if $__rjti$1
        (i32.lt_s
         (local.get $3)
         (i32.const 0)
        )
       )
       (i32.store
        (local.tee $1
         (select
          (i32.add
           (local.get $1)
           (i32.const 8)
          )
          (local.get $1)
          (local.tee $8
           (i32.gt_u
            (local.get $3)
            (local.tee $7
             (i32.load offset=4
              (local.get $1)
             )
            )
           )
          )
         )
        )
        (i32.add
         (local.tee $7
          (i32.sub
           (local.get $3)
           (select
            (local.get $7)
            (i32.const 0)
            (local.get $8)
           )
          )
         )
         (i32.load
          (local.get $1)
         )
        )
       )
       (i32.store offset=4
        (local.get $1)
        (i32.sub
         (i32.load offset=4
          (local.get $1)
         )
         (local.get $7)
        )
       )
       (local.set $4
        (i32.add
         (i32.shr_s
          (i32.shl
           (local.get $8)
           (i32.const 31)
          )
          (i32.const 31)
         )
         (local.get $4)
        )
       )
       (local.set $5
        (i32.sub
         (local.get $5)
         (local.get $3)
        )
       )
       (br $while-in)
      )
     )
    )
    (i32.store offset=16
     (local.get $0)
     (i32.add
      (local.tee $1
       (i32.load offset=44
        (local.get $0)
       )
      )
      (i32.load offset=48
       (local.get $0)
      )
     )
    )
    (i32.store offset=28
     (local.get $0)
     (local.get $1)
    )
    (i32.store offset=20
     (local.get $0)
     (local.get $1)
    )
    (br $__rjto$1)
   )
   (i32.store offset=16
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=28
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=20
    (local.get $0)
    (i32.const 0)
   )
   (i32.store
    (local.get $0)
    (i32.or
     (i32.load
      (local.get $0)
     )
     (i32.const 32)
    )
   )
   (local.set $2
    (if (result i32)
     (i32.eq
      (local.get $4)
      (i32.const 2)
     )
     (i32.const 0)
     (i32.sub
      (local.get $2)
      (i32.load offset=4
       (local.get $1)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $9)
  )
  (local.get $2)
 )
 (func $___stdio_seek (; 566 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (param $2 i32) (result i64)
  (local $3 i32)
  (local $4 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $1
   (if (result i64)
    (call $___wasi_syscall_ret
     (call $legalimport$___wasi_fd_seek
      (i32.load offset=60
       (local.get $0)
      )
      (i32.wrap_i64
       (local.get $1)
      )
      (i32.wrap_i64
       (i64.shr_u
        (local.get $1)
        (i64.const 32)
       )
      )
      (i32.and
       (local.get $2)
       (i32.const 255)
      )
      (local.get $3)
     )
    )
    (block (result i64)
     (i64.store
      (local.get $3)
      (i64.const -1)
     )
     (i64.const -1)
    )
    (i64.load
     (local.get $3)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (local.get $1)
 )
 (func $___wasi_syscall_ret (; 567 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (i32.and
    (local.get $0)
    (i32.const 65535)
   )
   (block (result i32)
    (i32.store
     (i32.const 34304)
     (i32.and
      (local.get $0)
      (i32.const 65535)
     )
    )
    (i32.const -1)
   )
   (i32.const 0)
  )
 )
 (func $___errno_location (; 568 ;) (; has Stack IR ;) (result i32)
  (i32.const 34304)
 )
 (func $___stdio_read (; 569 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (i32.store
   (local.get $3)
   (local.get $1)
  )
  (i32.store offset=4
   (local.get $3)
   (i32.sub
    (local.get $2)
    (i32.ne
     (local.tee $4
      (i32.load offset=48
       (local.get $0)
      )
     )
     (i32.const 0)
    )
   )
  )
  (i32.store offset=8
   (local.get $3)
   (i32.load offset=44
    (local.get $0)
   )
  )
  (i32.store offset=12
   (local.get $3)
   (local.get $4)
  )
  (block $__rjto$0
   (block $__rjti$0
    (if
     (call $___wasi_syscall_ret
      (call $___wasi_fd_read
       (i32.load offset=60
        (local.get $0)
       )
       (local.get $3)
       (i32.const 2)
       (local.tee $4
        (i32.add
         (local.get $3)
         (i32.const 16)
        )
       )
      )
     )
     (block
      (i32.store
       (local.get $4)
       (i32.const -1)
      )
      (local.set $2
       (i32.const -1)
      )
      (br $__rjti$0)
     )
     (if
      (i32.lt_s
       (local.tee $4
        (i32.load
         (local.get $4)
        )
       )
       (i32.const 1)
      )
      (block
       (local.set $2
        (local.get $4)
       )
       (br $__rjti$0)
      )
      (if
       (i32.gt_u
        (local.get $4)
        (local.tee $6
         (i32.load offset=4
          (local.get $3)
         )
        )
       )
       (block
        (i32.store offset=4
         (local.get $0)
         (local.tee $3
          (i32.load offset=44
           (local.get $0)
          )
         )
        )
        (i32.store offset=8
         (local.get $0)
         (i32.add
          (local.get $3)
          (i32.sub
           (local.get $4)
           (local.get $6)
          )
         )
        )
        (if
         (i32.load offset=48
          (local.get $0)
         )
         (block
          (i32.store offset=4
           (local.get $0)
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
          (i32.store8
           (i32.add
            (local.get $1)
            (i32.add
             (local.get $2)
             (i32.const -1)
            )
           )
           (i32.load8_s
            (local.get $3)
           )
          )
         )
        )
       )
       (local.set $2
        (local.get $4)
       )
      )
     )
    )
    (br $__rjto$0)
   )
   (i32.store
    (local.get $0)
    (i32.or
     (i32.load
      (local.get $0)
     )
     (i32.xor
      (i32.and
       (local.get $2)
       (i32.const 48)
      )
      (i32.const 16)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $2)
 )
 (func $___emscripten_stdout_close (; 570 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.const 0)
 )
 (func $___emscripten_stdout_seek (; 571 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (param $2 i32) (result i64)
  (i64.const 0)
 )
 (func $_strcmp (; 572 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $0
   (if (result i32)
    (i32.or
     (i32.ne
      (local.tee $2
       (i32.load8_s
        (local.get $0)
       )
      )
      (local.tee $3
       (i32.load8_s
        (local.get $1)
       )
      )
     )
     (i32.eqz
      (local.get $2)
     )
    )
    (block (result i32)
     (local.set $1
      (local.get $2)
     )
     (local.get $3)
    )
    (loop $while-in (result i32)
     (if (result i32)
      (i32.or
       (i32.ne
        (local.tee $2
         (i32.load8_s
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
         )
        )
        (local.tee $3
         (i32.load8_s
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
         )
        )
       )
       (i32.eqz
        (local.get $2)
       )
      )
      (block (result i32)
       (local.set $1
        (local.get $2)
       )
       (local.get $3)
      )
      (br $while-in)
     )
    )
   )
  )
  (i32.sub
   (i32.and
    (local.get $1)
    (i32.const 255)
   )
   (i32.and
    (local.get $0)
    (i32.const 255)
   )
  )
 )
 (func $_memcmp (; 573 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (if (result i32)
   (local.get $2)
   (block $label$break$L1 (result i32)
    (loop $while-in
     (if
      (i32.eq
       (local.tee $3
        (i32.load8_s
         (local.get $0)
        )
       )
       (local.tee $4
        (i32.load8_s
         (local.get $1)
        )
       )
      )
      (block
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (drop
        (br_if $label$break$L1
         (i32.const 0)
         (i32.eqz
          (local.tee $2
           (i32.add
            (local.get $2)
            (i32.const -1)
           )
          )
         )
        )
       )
       (br $while-in)
      )
     )
    )
    (i32.sub
     (i32.and
      (local.get $3)
      (i32.const 255)
     )
     (i32.and
      (local.get $4)
      (i32.const 255)
     )
    )
   )
   (i32.const 0)
  )
 )
 (func $_isdigit (; 574 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (i32.lt_u
   (i32.add
    (local.get $0)
    (i32.const -48)
   )
   (i32.const 10)
  )
 )
 (func $_sprintf (; 575 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store
   (local.get $3)
   (local.get $2)
  )
  (call $_vsprintf
   (local.get $0)
   (local.get $1)
   (local.get $3)
  )
  (global.set $STACKTOP
   (local.get $4)
  )
 )
 (func $_vsprintf (; 576 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (call $_vsnprintf
   (local.get $0)
   (local.get $1)
   (local.get $2)
  )
 )
 (func $_vsnprintf (; 577 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 160)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 160)
   )
  )
  (drop
   (call $_memcpy
    (local.get $3)
    (i32.const 14016)
    (i32.const 144)
   )
  )
  (i32.store offset=48
   (local.get $3)
   (local.tee $4
    (select
     (local.tee $4
      (i32.sub
       (i32.const -2)
       (local.get $0)
      )
     )
     (i32.const 2147483647)
     (i32.gt_u
      (i32.const 2147483647)
      (local.get $4)
     )
    )
   )
  )
  (i32.store offset=20
   (local.get $3)
   (local.get $0)
  )
  (i32.store offset=44
   (local.get $3)
   (local.get $0)
  )
  (i32.store offset=16
   (local.get $3)
   (local.tee $0
    (i32.add
     (local.get $0)
     (local.get $4)
    )
   )
  )
  (i32.store offset=28
   (local.get $3)
   (local.get $0)
  )
  (call $_vfprintf
   (local.get $3)
   (local.get $1)
   (local.get $2)
  )
  (if
   (local.get $4)
   (i32.store8
    (i32.add
     (local.tee $0
      (i32.load offset=20
       (local.get $3)
      )
     )
     (i32.shr_s
      (i32.shl
       (i32.eq
        (local.get $0)
        (i32.load offset=16
         (local.get $3)
        )
       )
       (i32.const 31)
      )
      (i32.const 31)
     )
    )
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_vfprintf (; 578 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (call $___vfprintf_internal
   (local.get $0)
   (local.get $1)
   (local.get $2)
  )
 )
 (func $_fmt_fp (; 579 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 f64)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i64)
  (local $27 i64)
  (local $28 i32)
  (local $29 i64)
  (local.set $28
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $11
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 560)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 560)
   )
  )
  (local.set $8
   (i32.add
    (local.get $11)
    (i32.const 32)
   )
  )
  (local.set $21
   (local.get $11)
  )
  (i32.store
   (local.tee $16
    (i32.add
     (local.get $11)
     (i32.const 536)
    )
   )
   (i32.const 0)
  )
  (local.set $18
   (i32.add
    (local.tee $6
     (i32.add
      (local.get $11)
      (i32.const 540)
     )
    )
    (i32.const 12)
   )
  )
  (local.set $23
   (if (result i32)
    (i64.lt_s
     (local.tee $26
      (i64.reinterpret_f64
       (local.get $1)
      )
     )
     (i64.const 0)
    )
    (block (result i32)
     (local.set $26
      (i64.reinterpret_f64
       (local.tee $1
        (f64.neg
         (local.get $1)
        )
       )
      )
     )
     (local.set $22
      (i32.const 22966)
     )
     (i32.const 1)
    )
    (block (result i32)
     (local.set $22
      (select
       (i32.const 22969)
       (select
        (i32.const 22972)
        (i32.const 22967)
        (i32.and
         (local.get $4)
         (i32.const 1)
        )
       )
       (i32.and
        (local.get $4)
        (i32.const 2048)
       )
      )
     )
     (i32.ne
      (i32.and
       (local.get $4)
       (i32.const 2049)
      )
      (i32.const 0)
     )
    )
   )
  )
  (local.set $0
   (if (result i32)
    (i64.eq
     (i64.and
      (local.get $26)
      (i64.const 9218868437227405312)
     )
     (i64.const 9218868437227405312)
    )
    (block (result i32)
     (local.set $3
      (select
       (select
        (i32.const 22993)
        (i32.const 22997)
        (local.tee $3
         (i32.ne
          (i32.and
           (local.get $5)
           (i32.const 32)
          )
          (i32.const 0)
         )
        )
       )
       (select
        (i32.const 22985)
        (i32.const 22989)
        (local.get $3)
       )
       (f64.ne
        (local.get $1)
        (local.get $1)
       )
      )
     )
     (call $_pad_659
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.tee $5
       (i32.add
        (local.get $23)
        (i32.const 3)
       )
      )
      (i32.and
       (local.get $4)
       (i32.const -65537)
      )
     )
     (call $_out
      (local.get $0)
      (local.get $22)
      (local.get $23)
     )
     (call $_out
      (local.get $0)
      (local.get $3)
      (i32.const 3)
     )
     (call $_pad_659
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.get $5)
      (i32.xor
       (local.get $4)
       (i32.const 8192)
      )
     )
     (local.get $5)
    )
    (block $do-once (result i32)
     (if
      (local.tee $7
       (f64.ne
        (local.tee $1
         (f64.mul
          (call $_frexp
           (local.get $1)
           (local.get $16)
          )
          (f64.const 2)
         )
        )
        (f64.const 0)
       )
      )
      (i32.store
       (local.get $16)
       (i32.add
        (i32.load
         (local.get $16)
        )
        (i32.const -1)
       )
      )
     )
     (if
      (i32.eq
       (local.tee $24
        (i32.or
         (local.get $5)
         (i32.const 32)
        )
       )
       (i32.const 97)
      )
      (block
       (local.set $9
        (select
         (i32.add
          (local.get $22)
          (i32.const 9)
         )
         (local.get $22)
         (local.tee $10
          (i32.and
           (local.get $5)
           (i32.const 32)
          )
         )
        )
       )
       (if
        (i32.eqz
         (i32.or
          (i32.eqz
           (local.tee $7
            (i32.sub
             (i32.const 12)
             (local.get $3)
            )
           )
          )
          (i32.gt_u
           (local.get $3)
           (i32.const 11)
          )
         )
        )
        (block
         (local.set $15
          (f64.const 8)
         )
         (loop $while-in
          (local.set $15
           (f64.mul
            (local.get $15)
            (f64.const 16)
           )
          )
          (br_if $while-in
           (local.tee $7
            (i32.add
             (local.get $7)
             (i32.const -1)
            )
           )
          )
         )
         (local.set $1
          (if (result f64)
           (i32.eq
            (i32.load8_s
             (local.get $9)
            )
            (i32.const 45)
           )
           (f64.neg
            (f64.add
             (local.get $15)
             (f64.sub
              (f64.neg
               (local.get $1)
              )
              (local.get $15)
             )
            )
           )
           (f64.sub
            (f64.add
             (local.get $1)
             (local.get $15)
            )
            (local.get $15)
           )
          )
         )
        )
       )
       (if
        (i32.eq
         (local.get $18)
         (local.tee $7
          (call $_fmt_u
           (i64.extend_i32_s
            (select
             (i32.sub
              (i32.const 0)
              (local.tee $8
               (i32.load
                (local.get $16)
               )
              )
             )
             (local.get $8)
             (i32.lt_s
              (local.get $8)
              (i32.const 0)
             )
            )
           )
           (local.get $18)
          )
         )
        )
        (i32.store8
         (local.tee $7
          (i32.add
           (local.get $6)
           (i32.const 11)
          )
         )
         (i32.const 48)
        )
       )
       (local.set $14
        (i32.or
         (local.get $23)
         (i32.const 2)
        )
       )
       (i32.store8
        (i32.add
         (local.get $7)
         (i32.const -1)
        )
        (i32.add
         (i32.and
          (i32.shr_s
           (local.get $8)
           (i32.const 31)
          )
          (i32.const 2)
         )
         (i32.const 43)
        )
       )
       (i32.store8
        (local.tee $12
         (i32.add
          (local.get $7)
          (i32.const -2)
         )
        )
        (i32.add
         (local.get $5)
         (i32.const 15)
        )
       )
       (local.set $8
        (i32.lt_s
         (local.get $3)
         (i32.const 1)
        )
       )
       (local.set $6
        (i32.eqz
         (i32.and
          (local.get $4)
          (i32.const 8)
         )
        )
       )
       (local.set $5
        (local.get $11)
       )
       (loop $while-in3
        (i32.store8
         (local.get $5)
         (i32.or
          (local.get $10)
          (i32.load8_u
           (i32.add
            (local.tee $7
             (i32.trunc_f64_s
              (local.get $1)
             )
            )
            (i32.const 13424)
           )
          )
         )
        )
        (local.set $1
         (f64.mul
          (f64.sub
           (local.get $1)
           (f64.convert_i32_s
            (local.get $7)
           )
          )
          (f64.const 16)
         )
        )
        (local.set $5
         (if (result i32)
          (i32.eq
           (i32.sub
            (local.tee $7
             (i32.add
              (local.get $5)
              (i32.const 1)
             )
            )
            (local.get $21)
           )
           (i32.const 1)
          )
          (if (result i32)
           (i32.and
            (i32.and
             (local.get $8)
             (f64.eq
              (local.get $1)
              (f64.const 0)
             )
            )
            (local.get $6)
           )
           (local.get $7)
           (block (result i32)
            (i32.store8
             (local.get $7)
             (i32.const 46)
            )
            (i32.add
             (local.get $5)
             (i32.const 2)
            )
           )
          )
          (local.get $7)
         )
        )
        (br_if $while-in3
         (f64.ne
          (local.get $1)
          (f64.const 0)
         )
        )
       )
       (local.set $3
        (block $__rjto$0 (result i32)
         (if
          (i32.eqz
           (i32.or
            (i32.eqz
             (local.get $3)
            )
            (i32.ge_s
             (i32.add
              (local.get $5)
              (i32.sub
               (i32.const -2)
               (local.get $21)
              )
             )
             (local.get $3)
            )
           )
          )
          (block
           (local.set $8
            (i32.sub
             (i32.add
              (local.get $18)
              (i32.add
               (local.get $3)
               (i32.const 2)
              )
             )
             (local.get $12)
            )
           )
           (br $__rjto$0
            (local.get $12)
           )
          )
         )
         (local.set $8
          (i32.add
           (local.get $5)
           (i32.sub
            (i32.sub
             (local.get $18)
             (local.get $21)
            )
            (local.get $12)
           )
          )
         )
         (local.get $12)
        )
       )
       (call $_pad_659
        (local.get $0)
        (i32.const 32)
        (local.get $2)
        (local.tee $7
         (i32.add
          (local.get $8)
          (local.get $14)
         )
        )
        (local.get $4)
       )
       (call $_out
        (local.get $0)
        (local.get $9)
        (local.get $14)
       )
       (call $_pad_659
        (local.get $0)
        (i32.const 48)
        (local.get $2)
        (local.get $7)
        (i32.xor
         (local.get $4)
         (i32.const 65536)
        )
       )
       (call $_out
        (local.get $0)
        (local.get $11)
        (local.tee $5
         (i32.sub
          (local.get $5)
          (local.get $21)
         )
        )
       )
       (call $_pad_659
        (local.get $0)
        (i32.const 48)
        (i32.sub
         (local.get $8)
         (i32.add
          (local.get $5)
          (local.tee $3
           (i32.sub
            (local.get $18)
            (local.get $3)
           )
          )
         )
        )
        (i32.const 0)
        (i32.const 0)
       )
       (call $_out
        (local.get $0)
        (local.get $12)
        (local.get $3)
       )
       (call $_pad_659
        (local.get $0)
        (i32.const 32)
        (local.get $2)
        (local.get $7)
        (i32.xor
         (local.get $4)
         (i32.const 8192)
        )
       )
       (br $do-once
        (local.get $7)
       )
      )
     )
     (if
      (local.get $7)
      (block
       (i32.store
        (local.get $16)
        (local.tee $7
         (i32.add
          (i32.load
           (local.get $16)
          )
          (i32.const -28)
         )
        )
       )
       (local.set $1
        (f64.mul
         (local.get $1)
         (f64.const 268435456)
        )
       )
      )
      (local.set $7
       (i32.load
        (local.get $16)
       )
      )
     )
     (local.set $6
      (local.tee $14
       (select
        (local.get $8)
        (i32.add
         (local.get $8)
         (i32.const 288)
        )
        (i32.lt_s
         (local.get $7)
         (i32.const 0)
        )
       )
      )
     )
     (loop $while-in5
      (i32.store
       (local.get $6)
       (local.tee $8
        (i32.trunc_f64_u
         (local.get $1)
        )
       )
      )
      (local.set $6
       (i32.add
        (local.get $6)
        (i32.const 4)
       )
      )
      (br_if $while-in5
       (f64.ne
        (local.tee $1
         (f64.mul
          (f64.sub
           (local.get $1)
           (f64.convert_i32_u
            (local.get $8)
           )
          )
          (f64.const 1e9)
         )
        )
        (f64.const 0)
       )
      )
     )
     (if
      (i32.gt_s
       (local.get $7)
       (i32.const 0)
      )
      (block
       (local.set $8
        (local.get $7)
       )
       (local.set $7
        (local.get $14)
       )
       (loop $while-in7
        (local.set $9
         (select
          (local.get $8)
          (i32.const 29)
          (i32.lt_s
           (local.get $8)
           (i32.const 29)
          )
         )
        )
        (if
         (i32.ge_u
          (local.tee $8
           (i32.add
            (local.get $6)
            (i32.const -4)
           )
          )
          (local.get $7)
         )
         (block
          (local.set $29
           (i64.extend_i32_u
            (local.get $9)
           )
          )
          (local.set $10
           (i32.const 0)
          )
          (loop $while-in9
           (local.set $27
            (i64.div_u
             (local.tee $26
              (i64.add
               (i64.extend_i32_u
                (local.get $10)
               )
               (i64.shl
                (i64.extend_i32_u
                 (i32.load
                  (local.get $8)
                 )
                )
                (local.get $29)
               )
              )
             )
             (i64.const 1000000000)
            )
           )
           (i64.store32
            (local.get $8)
            (i64.sub
             (local.get $26)
             (i64.mul
              (local.get $27)
              (i64.const 1000000000)
             )
            )
           )
           (local.set $10
            (i32.wrap_i64
             (local.get $27)
            )
           )
           (br_if $while-in9
            (i32.ge_u
             (local.tee $8
              (i32.add
               (local.get $8)
               (i32.const -4)
              )
             )
             (local.get $7)
            )
           )
          )
          (if
           (local.get $10)
           (i32.store
            (local.tee $7
             (i32.add
              (local.get $7)
              (i32.const -4)
             )
            )
            (local.get $10)
           )
          )
         )
        )
        (if
         (i32.gt_u
          (local.get $6)
          (local.get $7)
         )
         (block $label$break$L57
          (local.set $6
           (loop $while-in12 (result i32)
            (br_if $label$break$L57
             (i32.load
              (local.tee $8
               (i32.add
                (local.get $6)
                (i32.const -4)
               )
              )
             )
            )
            (if (result i32)
             (i32.gt_u
              (local.get $8)
              (local.get $7)
             )
             (block
              (local.set $6
               (local.get $8)
              )
              (br $while-in12)
             )
             (local.get $8)
            )
           )
          )
         )
        )
        (i32.store
         (local.get $16)
         (local.tee $8
          (i32.sub
           (i32.load
            (local.get $16)
           )
           (local.get $9)
          )
         )
        )
        (br_if $while-in7
         (i32.gt_s
          (local.get $8)
          (i32.const 0)
         )
        )
       )
      )
      (block
       (local.set $8
        (local.get $7)
       )
       (local.set $7
        (local.get $14)
       )
      )
     )
     (local.set $13
      (select
       (i32.const 6)
       (local.get $3)
       (i32.lt_s
        (local.get $3)
        (i32.const 0)
       )
      )
     )
     (local.set $12
      (local.get $14)
     )
     (if
      (i32.lt_u
       (local.tee $3
        (if (result i32)
         (i32.lt_s
          (local.get $8)
          (i32.const 0)
         )
         (block (result i32)
          (local.set $19
           (i32.add
            (i32.div_s
             (i32.add
              (local.get $13)
              (i32.const 25)
             )
             (i32.const 9)
            )
            (i32.const 1)
           )
          )
          (local.set $25
           (i32.eq
            (local.get $24)
            (i32.const 102)
           )
          )
          (local.set $3
           (local.get $6)
          )
          (loop $while-in14 (result i32)
           (local.set $20
            (select
             (local.tee $6
              (i32.sub
               (i32.const 0)
               (local.get $8)
              )
             )
             (i32.const 9)
             (i32.lt_s
              (local.get $6)
              (i32.const 9)
             )
            )
           )
           (if
            (i32.lt_u
             (local.get $7)
             (local.get $3)
            )
            (block
             (local.set $17
              (i32.add
               (i32.shl
                (i32.const 1)
                (local.get $20)
               )
               (i32.const -1)
              )
             )
             (local.set $9
              (i32.shr_u
               (i32.const 1000000000)
               (local.get $20)
              )
             )
             (local.set $8
              (i32.const 0)
             )
             (local.set $6
              (local.get $7)
             )
             (loop $while-in16
              (i32.store
               (local.get $6)
               (i32.add
                (local.get $8)
                (i32.shr_u
                 (local.tee $10
                  (i32.load
                   (local.get $6)
                  )
                 )
                 (local.get $20)
                )
               )
              )
              (local.set $8
               (i32.mul
                (i32.and
                 (local.get $10)
                 (local.get $17)
                )
                (local.get $9)
               )
              )
              (br_if $while-in16
               (i32.lt_u
                (local.tee $6
                 (i32.add
                  (local.get $6)
                  (i32.const 4)
                 )
                )
                (local.get $3)
               )
              )
             )
             (local.set $7
              (select
               (local.get $7)
               (i32.add
                (local.get $7)
                (i32.const 4)
               )
               (i32.load
                (local.get $7)
               )
              )
             )
             (if
              (local.get $8)
              (block
               (i32.store
                (local.get $3)
                (local.get $8)
               )
               (local.set $3
                (i32.add
                 (local.get $3)
                 (i32.const 4)
                )
               )
              )
             )
            )
            (local.set $7
             (select
              (local.get $7)
              (i32.add
               (local.get $7)
               (i32.const 4)
              )
              (i32.load
               (local.get $7)
              )
             )
            )
           )
           (local.set $10
            (select
             (i32.add
              (local.tee $6
               (select
                (local.get $14)
                (local.get $7)
                (local.get $25)
               )
              )
              (i32.shl
               (local.get $19)
               (i32.const 2)
              )
             )
             (local.get $3)
             (i32.gt_s
              (i32.shr_s
               (i32.sub
                (local.get $3)
                (local.get $6)
               )
               (i32.const 2)
              )
              (local.get $19)
             )
            )
           )
           (i32.store
            (local.get $16)
            (local.tee $8
             (i32.add
              (i32.load
               (local.get $16)
              )
              (local.get $20)
             )
            )
           )
           (if (result i32)
            (i32.lt_s
             (local.get $8)
             (i32.const 0)
            )
            (block
             (local.set $3
              (local.get $10)
             )
             (br $while-in14)
            )
            (local.get $7)
           )
          )
         )
         (block (result i32)
          (local.set $10
           (local.get $6)
          )
          (local.get $7)
         )
        )
       )
       (local.get $10)
      )
      (block
       (local.set $7
        (i32.mul
         (i32.shr_s
          (i32.sub
           (local.get $12)
           (local.get $3)
          )
          (i32.const 2)
         )
         (i32.const 9)
        )
       )
       (if
        (i32.ge_u
         (local.tee $8
          (i32.load
           (local.get $3)
          )
         )
         (i32.const 10)
        )
        (block
         (local.set $6
          (i32.const 10)
         )
         (loop $while-in18
          (local.set $7
           (i32.add
            (local.get $7)
            (i32.const 1)
           )
          )
          (br_if $while-in18
           (i32.ge_u
            (local.get $8)
            (local.tee $6
             (i32.mul
              (local.get $6)
              (i32.const 10)
             )
            )
           )
          )
         )
        )
       )
      )
      (local.set $7
       (i32.const 0)
      )
     )
     (local.set $17
      (if (result i32)
       (i32.gt_u
        (local.tee $3
         (if (result i32)
          (i32.lt_s
           (local.tee $6
            (i32.add
             (i32.sub
              (local.get $13)
              (select
               (i32.const 0)
               (local.get $7)
               (i32.eq
                (local.get $24)
                (i32.const 102)
               )
              )
             )
             (i32.shr_s
              (i32.shl
               (i32.and
                (local.tee $19
                 (i32.eq
                  (local.get $24)
                  (i32.const 103)
                 )
                )
                (local.tee $25
                 (i32.ne
                  (local.get $13)
                  (i32.const 0)
                 )
                )
               )
               (i32.const 31)
              )
              (i32.const 31)
             )
            )
           )
           (i32.add
            (i32.mul
             (i32.shr_s
              (i32.sub
               (local.get $10)
               (local.get $12)
              )
              (i32.const 2)
             )
             (i32.const 9)
            )
            (i32.const -9)
           )
          )
          (block (result i32)
           (local.set $17
            (i32.div_s
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const 9216)
              )
             )
             (i32.const 9)
            )
           )
           (if
            (i32.lt_s
             (local.tee $6
              (i32.sub
               (local.get $6)
               (i32.mul
                (local.get $17)
                (i32.const 9)
               )
              )
             )
             (i32.const 8)
            )
            (block
             (local.set $8
              (i32.const 10)
             )
             (loop $while-in20
              (local.set $9
               (i32.add
                (local.get $6)
                (i32.const 1)
               )
              )
              (local.set $8
               (i32.mul
                (local.get $8)
                (i32.const 10)
               )
              )
              (if
               (i32.lt_s
                (local.get $6)
                (i32.const 7)
               )
               (block
                (local.set $6
                 (local.get $9)
                )
                (br $while-in20)
               )
              )
             )
            )
            (local.set $8
             (i32.const 10)
            )
           )
           (local.set $9
            (i32.div_u
             (local.tee $24
              (i32.load
               (local.tee $6
                (i32.add
                 (i32.add
                  (i32.shl
                   (local.get $17)
                   (i32.const 2)
                  )
                  (local.get $14)
                 )
                 (i32.const -4092)
                )
               )
              )
             )
             (local.get $8)
            )
           )
           (if
            (i32.eqz
             (i32.and
              (local.tee $17
               (i32.eq
                (i32.add
                 (local.get $6)
                 (i32.const 4)
                )
                (local.get $10)
               )
              )
              (i32.eqz
               (local.tee $20
                (i32.sub
                 (local.get $24)
                 (i32.mul
                  (local.get $8)
                  (local.get $9)
                 )
                )
               )
              )
             )
            )
            (block
             (local.set $1
              (select
               (f64.const 9007199254740994)
               (f64.const 9007199254740992)
               (i32.and
                (local.get $9)
                (i32.const 1)
               )
              )
             )
             (local.set $15
              (select
               (f64.const 0.5)
               (select
                (f64.const 1)
                (f64.const 1.5)
                (i32.and
                 (local.get $17)
                 (i32.eq
                  (local.get $20)
                  (local.tee $9
                   (i32.shr_u
                    (local.get $8)
                    (i32.const 1)
                   )
                  )
                 )
                )
               )
               (i32.lt_u
                (local.get $20)
                (local.get $9)
               )
              )
             )
             (if
              (local.get $23)
              (block
               (local.set $1
                (select
                 (f64.neg
                  (local.get $1)
                 )
                 (local.get $1)
                 (local.tee $9
                  (i32.eq
                   (i32.load8_s
                    (local.get $22)
                   )
                   (i32.const 45)
                  )
                 )
                )
               )
               (local.set $15
                (select
                 (f64.neg
                  (local.get $15)
                 )
                 (local.get $15)
                 (local.get $9)
                )
               )
              )
             )
             (i32.store
              (local.get $6)
              (local.tee $9
               (i32.sub
                (local.get $24)
                (local.get $20)
               )
              )
             )
             (if
              (f64.ne
               (f64.add
                (local.get $1)
                (local.get $15)
               )
               (local.get $1)
              )
              (block
               (i32.store
                (local.get $6)
                (local.tee $7
                 (i32.add
                  (local.get $8)
                  (local.get $9)
                 )
                )
               )
               (if
                (i32.gt_u
                 (local.get $7)
                 (i32.const 999999999)
                )
                (loop $while-in22
                 (i32.store
                  (local.get $6)
                  (i32.const 0)
                 )
                 (if
                  (i32.lt_u
                   (local.tee $6
                    (i32.add
                     (local.get $6)
                     (i32.const -4)
                    )
                   )
                   (local.get $3)
                  )
                  (i32.store
                   (local.tee $3
                    (i32.add
                     (local.get $3)
                     (i32.const -4)
                    )
                   )
                   (i32.const 0)
                  )
                 )
                 (i32.store
                  (local.get $6)
                  (local.tee $7
                   (i32.add
                    (i32.load
                     (local.get $6)
                    )
                    (i32.const 1)
                   )
                  )
                 )
                 (br_if $while-in22
                  (i32.gt_u
                   (local.get $7)
                   (i32.const 999999999)
                  )
                 )
                )
               )
               (local.set $7
                (i32.mul
                 (i32.shr_s
                  (i32.sub
                   (local.get $12)
                   (local.get $3)
                  )
                  (i32.const 2)
                 )
                 (i32.const 9)
                )
               )
               (if
                (i32.ge_u
                 (local.tee $9
                  (i32.load
                   (local.get $3)
                  )
                 )
                 (i32.const 10)
                )
                (block
                 (local.set $8
                  (i32.const 10)
                 )
                 (loop $while-in24
                  (local.set $7
                   (i32.add
                    (local.get $7)
                    (i32.const 1)
                   )
                  )
                  (br_if $while-in24
                   (i32.ge_u
                    (local.get $9)
                    (local.tee $8
                     (i32.mul
                      (local.get $8)
                      (i32.const 10)
                     )
                    )
                   )
                  )
                 )
                )
               )
              )
             )
            )
           )
           (local.set $8
            (local.get $3)
           )
           (local.set $9
            (local.get $7)
           )
           (select
            (local.tee $3
             (i32.add
              (local.get $6)
              (i32.const 4)
             )
            )
            (local.get $10)
            (i32.gt_u
             (local.get $10)
             (local.get $3)
            )
           )
          )
          (block (result i32)
           (local.set $8
            (local.get $3)
           )
           (local.set $9
            (local.get $7)
           )
           (local.get $10)
          )
         )
        )
        (local.get $8)
       )
       (loop $while-in27 (result i32)
        (block $label$break$L109 (result i32)
         (if
          (i32.load
           (local.tee $7
            (i32.add
             (local.get $3)
             (i32.const -4)
            )
           )
          )
          (block
           (local.set $7
            (local.get $3)
           )
           (br $label$break$L109
            (i32.const 1)
           )
          )
         )
         (if (result i32)
          (i32.gt_u
           (local.get $7)
           (local.get $8)
          )
          (block
           (local.set $3
            (local.get $7)
           )
           (br $while-in27)
          )
          (i32.const 0)
         )
        )
       )
       (block (result i32)
        (local.set $7
         (local.get $3)
        )
        (i32.const 0)
       )
      )
     )
     (local.set $3
      (if (result i32)
       (local.get $19)
       (block (result i32)
        (local.set $5
         (if (result i32)
          (i32.and
           (i32.gt_s
            (local.tee $3
             (i32.add
              (i32.xor
               (local.get $25)
               (i32.const 1)
              )
              (local.get $13)
             )
            )
            (local.get $9)
           )
           (i32.gt_s
            (local.get $9)
            (i32.const -5)
           )
          )
          (block (result i32)
           (local.set $10
            (i32.sub
             (i32.add
              (local.get $3)
              (i32.const -1)
             )
             (local.get $9)
            )
           )
           (i32.add
            (local.get $5)
            (i32.const -1)
           )
          )
          (block (result i32)
           (local.set $10
            (i32.add
             (local.get $3)
             (i32.const -1)
            )
           )
           (i32.add
            (local.get $5)
            (i32.const -2)
           )
          )
         )
        )
        (if (result i32)
         (i32.and
          (local.get $4)
          (i32.const 8)
         )
         (local.get $10)
         (block (result i32)
          (if
           (local.get $17)
           (if
            (local.tee $13
             (i32.load
              (i32.add
               (local.get $7)
               (i32.const -4)
              )
             )
            )
            (if
             (i32.rem_u
              (local.get $13)
              (i32.const 10)
             )
             (local.set $3
              (i32.const 0)
             )
             (block
              (local.set $6
               (i32.const 10)
              )
              (local.set $3
               (i32.const 0)
              )
              (loop $while-in31
               (local.set $3
                (i32.add
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (br_if $while-in31
                (i32.eqz
                 (i32.rem_u
                  (local.get $13)
                  (local.tee $6
                   (i32.mul
                    (local.get $6)
                    (i32.const 10)
                   )
                  )
                 )
                )
               )
              )
             )
            )
            (local.set $3
             (i32.const 9)
            )
           )
           (local.set $3
            (i32.const 9)
           )
          )
          (local.set $6
           (i32.add
            (i32.mul
             (i32.shr_s
              (i32.sub
               (local.get $7)
               (local.get $12)
              )
              (i32.const 2)
             )
             (i32.const 9)
            )
            (i32.const -9)
           )
          )
          (if (result i32)
           (i32.eq
            (i32.or
             (local.get $5)
             (i32.const 32)
            )
            (i32.const 102)
           )
           (select
            (local.get $10)
            (local.tee $3
             (select
              (local.tee $3
               (i32.sub
                (local.get $6)
                (local.get $3)
               )
              )
              (i32.const 0)
              (i32.gt_s
               (local.get $3)
               (i32.const 0)
              )
             )
            )
            (i32.lt_s
             (local.get $10)
             (local.get $3)
            )
           )
           (select
            (local.get $10)
            (local.tee $3
             (select
              (local.tee $3
               (i32.sub
                (i32.add
                 (local.get $6)
                 (local.get $9)
                )
                (local.get $3)
               )
              )
              (i32.const 0)
              (i32.gt_s
               (local.get $3)
               (i32.const 0)
              )
             )
            )
            (i32.lt_s
             (local.get $10)
             (local.get $3)
            )
           )
          )
         )
        )
       )
       (local.get $13)
      )
     )
     (local.set $6
      (i32.sub
       (i32.const 0)
       (local.get $9)
      )
     )
     (call $_pad_659
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.tee $19
       (i32.add
        (if (result i32)
         (local.tee $13
          (i32.eq
           (i32.or
            (local.get $5)
            (i32.const 32)
           )
           (i32.const 102)
          )
         )
         (block (result i32)
          (local.set $10
           (i32.const 0)
          )
          (select
           (local.get $9)
           (i32.const 0)
           (i32.gt_s
            (local.get $9)
            (i32.const 0)
           )
          )
         )
         (block (result i32)
          (local.set $6
           (call $_fmt_u
            (i64.extend_i32_s
             (select
              (local.get $6)
              (local.get $9)
              (i32.lt_s
               (local.get $9)
               (i32.const 0)
              )
             )
            )
            (local.get $18)
           )
          )
          (if
           (i32.lt_s
            (i32.sub
             (local.tee $12
              (local.get $18)
             )
             (local.get $6)
            )
            (i32.const 2)
           )
           (loop $while-in33
            (i32.store8
             (local.tee $6
              (i32.add
               (local.get $6)
               (i32.const -1)
              )
             )
             (i32.const 48)
            )
            (br_if $while-in33
             (i32.lt_s
              (i32.sub
               (local.get $12)
               (local.get $6)
              )
              (i32.const 2)
             )
            )
           )
          )
          (i32.store8
           (i32.add
            (local.get $6)
            (i32.const -1)
           )
           (i32.add
            (i32.and
             (i32.shr_s
              (local.get $9)
              (i32.const 31)
             )
             (i32.const 2)
            )
            (i32.const 43)
           )
          )
          (i32.store8
           (local.tee $10
            (i32.add
             (local.get $6)
             (i32.const -2)
            )
           )
           (local.get $5)
          )
          (i32.sub
           (local.get $12)
           (local.get $10)
          )
         )
        )
        (i32.add
         (i32.add
          (i32.add
           (local.get $23)
           (i32.const 1)
          )
          (local.get $3)
         )
         (select
          (i32.const 1)
          (i32.and
           (i32.shr_u
            (local.get $4)
            (i32.const 3)
           )
           (i32.const 1)
          )
          (local.tee $12
           (i32.ne
            (local.get $3)
            (i32.const 0)
           )
          )
         )
        )
       )
      )
      (local.get $4)
     )
     (call $_out
      (local.get $0)
      (local.get $22)
      (local.get $23)
     )
     (call $_pad_659
      (local.get $0)
      (i32.const 48)
      (local.get $2)
      (local.get $19)
      (i32.xor
       (local.get $4)
       (i32.const 65536)
      )
     )
     (if
      (local.get $13)
      (block
       (local.set $9
        (local.tee $13
         (i32.add
          (local.get $11)
          (i32.const 9)
         )
        )
       )
       (local.set $10
        (i32.add
         (local.get $11)
         (i32.const 8)
        )
       )
       (local.set $6
        (local.tee $8
         (select
          (local.get $14)
          (local.get $8)
          (i32.gt_u
           (local.get $8)
           (local.get $14)
          )
         )
        )
       )
       (loop $while-in35
        (local.set $5
         (call $_fmt_u
          (i64.extend_i32_u
           (i32.load
            (local.get $6)
           )
          )
          (local.get $13)
         )
        )
        (if
         (i32.eq
          (local.get $6)
          (local.get $8)
         )
         (if
          (i32.eq
           (local.get $5)
           (local.get $13)
          )
          (block
           (i32.store8
            (local.get $10)
            (i32.const 48)
           )
           (local.set $5
            (local.get $10)
           )
          )
         )
         (if
          (i32.gt_u
           (local.get $5)
           (local.get $11)
          )
          (block
           (drop
            (call $_memset
             (local.get $11)
             (i32.const 48)
             (i32.sub
              (local.get $5)
              (local.get $21)
             )
            )
           )
           (loop $while-in37
            (br_if $while-in37
             (i32.gt_u
              (local.tee $5
               (i32.add
                (local.get $5)
                (i32.const -1)
               )
              )
              (local.get $11)
             )
            )
           )
          )
         )
        )
        (call $_out
         (local.get $0)
         (local.get $5)
         (i32.sub
          (local.get $9)
          (local.get $5)
         )
        )
        (if
         (i32.le_u
          (local.tee $5
           (i32.add
            (local.get $6)
            (i32.const 4)
           )
          )
          (local.get $14)
         )
         (block
          (local.set $6
           (local.get $5)
          )
          (br $while-in35)
         )
        )
       )
       (if
        (i32.eqz
         (i32.and
          (i32.eqz
           (i32.and
            (local.get $4)
            (i32.const 8)
           )
          )
          (i32.xor
           (local.get $12)
           (i32.const 1)
          )
         )
        )
        (call $_out
         (local.get $0)
         (i32.const 23001)
         (i32.const 1)
        )
       )
       (call $_pad_659
        (local.get $0)
        (i32.const 48)
        (i32.add
         (if (result i32)
          (i32.and
           (i32.lt_u
            (local.get $5)
            (local.get $7)
           )
           (i32.gt_s
            (local.get $3)
            (i32.const 0)
           )
          )
          (loop $while-in39 (result i32)
           (if
            (i32.gt_u
             (local.tee $6
              (call $_fmt_u
               (i64.extend_i32_u
                (i32.load
                 (local.get $5)
                )
               )
               (local.get $13)
              )
             )
             (local.get $11)
            )
            (block
             (drop
              (call $_memset
               (local.get $11)
               (i32.const 48)
               (i32.sub
                (local.get $6)
                (local.get $21)
               )
              )
             )
             (loop $while-in41
              (br_if $while-in41
               (i32.gt_u
                (local.tee $6
                 (i32.add
                  (local.get $6)
                  (i32.const -1)
                 )
                )
                (local.get $11)
               )
              )
             )
            )
           )
           (call $_out
            (local.get $0)
            (local.get $6)
            (select
             (local.get $3)
             (i32.const 9)
             (i32.lt_s
              (local.get $3)
              (i32.const 9)
             )
            )
           )
           (local.set $6
            (i32.add
             (local.get $3)
             (i32.const -9)
            )
           )
           (if (result i32)
            (i32.and
             (i32.lt_u
              (local.tee $5
               (i32.add
                (local.get $5)
                (i32.const 4)
               )
              )
              (local.get $7)
             )
             (i32.gt_s
              (local.get $3)
              (i32.const 9)
             )
            )
            (block
             (local.set $3
              (local.get $6)
             )
             (br $while-in39)
            )
            (local.get $6)
           )
          )
          (local.get $3)
         )
         (i32.const 9)
        )
        (i32.const 9)
        (i32.const 0)
       )
      )
      (block
       (call $_pad_659
        (local.get $0)
        (i32.const 48)
        (i32.add
         (if (result i32)
          (i32.and
           (i32.lt_u
            (local.get $8)
            (local.tee $17
             (select
              (local.get $7)
              (i32.add
               (local.get $8)
               (i32.const 4)
              )
              (local.get $17)
             )
            )
           )
           (i32.gt_s
            (local.get $3)
            (i32.const -1)
           )
          )
          (block (result i32)
           (local.set $13
            (i32.eqz
             (i32.and
              (local.get $4)
              (i32.const 8)
             )
            )
           )
           (local.set $12
            (local.tee $25
             (i32.add
              (local.get $11)
              (i32.const 9)
             )
            )
           )
           (local.set $9
            (i32.sub
             (i32.const 0)
             (local.get $21)
            )
           )
           (local.set $14
            (i32.add
             (local.get $11)
             (i32.const 8)
            )
           )
           (local.set $7
            (local.get $8)
           )
           (local.set $5
            (local.get $3)
           )
           (loop $while-in43 (result i32)
            (if
             (i32.eq
              (local.get $25)
              (local.tee $3
               (call $_fmt_u
                (i64.extend_i32_u
                 (i32.load
                  (local.get $7)
                 )
                )
                (local.get $25)
               )
              )
             )
             (block
              (i32.store8
               (local.get $14)
               (i32.const 48)
              )
              (local.set $3
               (local.get $14)
              )
             )
            )
            (block $do-once44
             (if
              (i32.eq
               (local.get $7)
               (local.get $8)
              )
              (block
               (local.set $6
                (i32.add
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (call $_out
                (local.get $0)
                (local.get $3)
                (i32.const 1)
               )
               (if
                (i32.and
                 (i32.lt_s
                  (local.get $5)
                  (i32.const 1)
                 )
                 (local.get $13)
                )
                (block
                 (local.set $3
                  (local.get $6)
                 )
                 (br $do-once44)
                )
               )
               (call $_out
                (local.get $0)
                (i32.const 23001)
                (i32.const 1)
               )
               (local.set $3
                (local.get $6)
               )
              )
              (block
               (br_if $do-once44
                (i32.le_u
                 (local.get $3)
                 (local.get $11)
                )
               )
               (drop
                (call $_memset
                 (local.get $11)
                 (i32.const 48)
                 (i32.add
                  (local.get $3)
                  (local.get $9)
                 )
                )
               )
               (loop $while-in47
                (br_if $while-in47
                 (i32.gt_u
                  (local.tee $3
                   (i32.add
                    (local.get $3)
                    (i32.const -1)
                   )
                  )
                  (local.get $11)
                 )
                )
               )
              )
             )
            )
            (call $_out
             (local.get $0)
             (local.get $3)
             (select
              (local.tee $3
               (i32.sub
                (local.get $12)
                (local.get $3)
               )
              )
              (local.get $5)
              (i32.gt_s
               (local.get $5)
               (local.get $3)
              )
             )
            )
            (br_if $while-in43
             (i32.and
              (i32.lt_u
               (local.tee $7
                (i32.add
                 (local.get $7)
                 (i32.const 4)
                )
               )
               (local.get $17)
              )
              (i32.gt_s
               (local.tee $5
                (i32.sub
                 (local.get $5)
                 (local.get $3)
                )
               )
               (i32.const -1)
              )
             )
            )
            (local.get $5)
           )
          )
          (local.get $3)
         )
         (i32.const 18)
        )
        (i32.const 18)
        (i32.const 0)
       )
       (call $_out
        (local.get $0)
        (local.get $10)
        (i32.sub
         (local.get $18)
         (local.get $10)
        )
       )
      )
     )
     (call $_pad_659
      (local.get $0)
      (i32.const 32)
      (local.get $2)
      (local.get $19)
      (i32.xor
       (local.get $4)
       (i32.const 8192)
      )
     )
     (local.get $19)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $28)
  )
  (select
   (local.get $2)
   (local.get $0)
   (i32.lt_s
    (local.get $0)
    (local.get $2)
   )
  )
 )
 (func $_pop_arg_long_double (; 580 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local.set $3
   (f64.load
    (local.tee $2
     (i32.and
      (i32.add
       (i32.load
        (local.get $1)
       )
       (i32.const 7)
      )
      (i32.const -8)
     )
    )
   )
  )
  (i32.store
   (local.get $1)
   (i32.add
    (local.get $2)
    (i32.const 8)
   )
  )
  (f64.store
   (local.get $0)
   (local.get $3)
  )
 )
 (func $___vfprintf_internal (; 581 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 224)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 224)
   )
  )
  (i64.store
   (local.tee $4
    (i32.add
     (local.get $3)
     (i32.const 160)
    )
   )
   (i64.const 0)
  )
  (i64.store offset=8
   (local.get $4)
   (i64.const 0)
  )
  (i64.store offset=16
   (local.get $4)
   (i64.const 0)
  )
  (i64.store offset=24
   (local.get $4)
   (i64.const 0)
  )
  (i64.store offset=32
   (local.get $4)
   (i64.const 0)
  )
  (i32.store
   (local.tee $5
    (i32.add
     (local.get $3)
     (i32.const 208)
    )
   )
   (i32.load
    (local.get $2)
   )
  )
  (drop
   (if (result i32)
    (i32.lt_s
     (call $_printf_core
      (i32.const 0)
      (local.get $1)
      (local.get $5)
      (local.tee $2
       (i32.add
        (local.get $3)
        (i32.const 80)
       )
      )
      (local.get $4)
     )
     (i32.const 0)
    )
    (i32.const -1)
    (block (result i32)
     (drop
      (if (result i32)
       (i32.gt_s
        (i32.load offset=76
         (local.get $0)
        )
        (i32.const -1)
       )
       (i32.const 1)
       (i32.const 0)
      )
     )
     (local.set $6
      (i32.load
       (local.get $0)
      )
     )
     (if
      (i32.lt_s
       (i32.load8_s offset=74
        (local.get $0)
       )
       (i32.const 1)
      )
      (i32.store
       (local.get $0)
       (i32.and
        (local.get $6)
        (i32.const -33)
       )
      )
     )
     (if
      (i32.load offset=48
       (local.get $0)
      )
      (drop
       (call $_printf_core
        (local.get $0)
        (local.get $1)
        (local.get $5)
        (local.get $2)
        (local.get $4)
       )
      )
      (block
       (local.set $7
        (i32.load offset=44
         (local.get $0)
        )
       )
       (i32.store offset=44
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=28
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=20
        (local.get $0)
        (local.get $3)
       )
       (i32.store offset=48
        (local.get $0)
        (i32.const 80)
       )
       (i32.store offset=16
        (local.get $0)
        (i32.add
         (local.get $3)
         (i32.const 80)
        )
       )
       (drop
        (call $_printf_core
         (local.get $0)
         (local.get $1)
         (local.get $5)
         (local.get $2)
         (local.get $4)
        )
       )
       (if
        (local.get $7)
        (block
         (drop
          (call_indirect (type $FUNCSIG$iiii)
           (local.get $0)
           (i32.const 0)
           (i32.const 0)
           (i32.add
            (i32.and
             (i32.load offset=36
              (local.get $0)
             )
             (i32.const 15)
            )
            (i32.const 42)
           )
          )
         )
         (drop
          (i32.load offset=20
           (local.get $0)
          )
         )
         (i32.store offset=44
          (local.get $0)
          (local.get $7)
         )
         (i32.store offset=48
          (local.get $0)
          (i32.const 0)
         )
         (i32.store offset=16
          (local.get $0)
          (i32.const 0)
         )
         (i32.store offset=28
          (local.get $0)
          (i32.const 0)
         )
         (i32.store offset=20
          (local.get $0)
          (i32.const 0)
         )
        )
       )
      )
     )
     (i32.store
      (local.get $0)
      (i32.or
       (i32.load
        (local.get $0)
       )
       (i32.and
        (local.get $6)
        (i32.const 32)
       )
      )
     )
     (i32.const 0)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $8)
  )
 )
 (func $_printf_core (; 582 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i64)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local.set $25
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $16
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.sub
    (global.get $STACKTOP)
    (i32.const -64)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 64)
   )
  )
  (local.set $9
   (i32.add
    (local.get $16)
    (i32.const 40)
   )
  )
  (local.set $26
   (i32.add
    (local.get $16)
    (i32.const 48)
   )
  )
  (local.set $22
   (i32.add
    (local.get $16)
    (i32.const 60)
   )
  )
  (i32.store
   (local.tee $11
    (i32.add
     (local.get $16)
     (i32.const 56)
    )
   )
   (local.get $1)
  )
  (local.set $18
   (i32.ne
    (local.get $0)
    (i32.const 0)
   )
  )
  (local.set $19
   (local.tee $20
    (i32.add
     (local.get $16)
     (i32.const 40)
    )
   )
  )
  (local.set $23
   (i32.add
    (local.get $16)
    (i32.const 39)
   )
  )
  (local.set $1
   (i32.const 0)
  )
  (block $label$break$L123
   (block $__rjti$10
    (loop $label$continue$L1
     (block $label$break$L1
      (loop $while-in
       (if
        (i32.gt_s
         (local.get $8)
         (i32.const -1)
        )
        (local.set $8
         (if (result i32)
          (i32.gt_s
           (local.get $1)
           (i32.sub
            (i32.const 2147483647)
            (local.get $8)
           )
          )
          (block (result i32)
           (i32.store
            (i32.const 34304)
            (i32.const 61)
           )
           (i32.const -1)
          )
          (i32.add
           (local.get $1)
           (local.get $8)
          )
         )
        )
       )
       (br_if $__rjti$10
        (i32.eqz
         (local.tee $5
          (i32.load8_s
           (local.tee $10
            (i32.load
             (local.get $11)
            )
           )
          )
         )
        )
       )
       (local.set $1
        (local.get $10)
       )
       (block $label$break$L15
        (block $__rjti$0
         (loop $label$continue$L12
          (block $label$break$L12
           (block $switch
            (if
             (local.tee $5
              (i32.shr_s
               (i32.shl
                (local.get $5)
                (i32.const 24)
               )
               (i32.const 24)
              )
             )
             (block
              (br_if $switch
               (i32.ne
                (local.get $5)
                (i32.const 37)
               )
              )
              (br $__rjti$0)
             )
            )
            (br $label$break$L12)
           )
           (i32.store
            (local.get $11)
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
           )
           (local.set $5
            (i32.load8_s
             (local.get $1)
            )
           )
           (br $label$continue$L12)
          )
         )
         (br $label$break$L15)
        )
        (local.set $5
         (local.get $1)
        )
        (loop $while-in3
         (br_if $label$break$L15
          (i32.ne
           (i32.load8_s offset=1
            (local.get $5)
           )
           (i32.const 37)
          )
         )
         (local.set $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.store
          (local.get $11)
          (local.tee $5
           (i32.add
            (local.get $5)
            (i32.const 2)
           )
          )
         )
         (br_if $while-in3
          (i32.eq
           (i32.load8_s
            (local.get $5)
           )
           (i32.const 37)
          )
         )
        )
       )
       (local.set $1
        (i32.sub
         (local.get $1)
         (local.get $10)
        )
       )
       (if
        (local.get $18)
        (call $_out
         (local.get $0)
         (local.get $10)
         (local.get $1)
        )
       )
       (br_if $while-in
        (local.get $1)
       )
      )
      (local.set $5
       (i32.eqz
        (call $_isdigit
         (i32.load8_s offset=1
          (i32.load
           (local.get $11)
          )
         )
        )
       )
      )
      (i32.store
       (local.get $11)
       (local.tee $1
        (i32.add
         (local.tee $1
          (i32.load
           (local.get $11)
          )
         )
         (if (result i32)
          (local.get $5)
          (block (result i32)
           (local.set $17
            (i32.const -1)
           )
           (i32.const 1)
          )
          (if (result i32)
           (i32.eq
            (i32.load8_s offset=2
             (local.get $1)
            )
            (i32.const 36)
           )
           (block (result i32)
            (local.set $17
             (i32.add
              (i32.load8_s offset=1
               (local.get $1)
              )
              (i32.const -48)
             )
            )
            (local.set $6
             (i32.const 1)
            )
            (i32.const 3)
           )
           (block (result i32)
            (local.set $17
             (i32.const -1)
            )
            (i32.const 1)
           )
          )
         )
        )
       )
      )
      (if
       (i32.or
        (i32.gt_u
         (local.tee $5
          (i32.add
           (local.tee $7
            (i32.load8_s
             (local.get $1)
            )
           )
           (i32.const -32)
          )
         )
         (i32.const 31)
        )
        (i32.eqz
         (i32.and
          (i32.shl
           (i32.const 1)
           (local.get $5)
          )
          (i32.const 75913)
         )
        )
       )
       (local.set $5
        (i32.const 0)
       )
       (block
        (local.set $7
         (i32.const 0)
        )
        (loop $while-in5
         (local.set $5
          (i32.or
           (local.get $7)
           (i32.shl
            (i32.const 1)
            (local.get $5)
           )
          )
         )
         (i32.store
          (local.get $11)
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
         )
         (if
          (i32.eqz
           (i32.or
            (i32.gt_u
             (local.tee $12
              (i32.add
               (local.tee $7
                (i32.load8_s
                 (local.get $1)
                )
               )
               (i32.const -32)
              )
             )
             (i32.const 31)
            )
            (i32.eqz
             (i32.and
              (i32.shl
               (i32.const 1)
               (local.get $12)
              )
              (i32.const 75913)
             )
            )
           )
          )
          (block
           (local.set $7
            (local.get $5)
           )
           (local.set $5
            (local.get $12)
           )
           (br $while-in5)
          )
         )
        )
       )
      )
      (local.set $24
       (if (result i32)
        (i32.eq
         (i32.and
          (local.get $7)
          (i32.const 255)
         )
         (i32.const 42)
        )
        (block (result i32)
         (local.set $6
          (block $__rjto$1 (result i32)
           (block $__rjti$1
            (br_if $__rjti$1
             (i32.eqz
              (call $_isdigit
               (i32.load8_s offset=1
                (local.get $1)
               )
              )
             )
            )
            (br_if $__rjti$1
             (i32.ne
              (i32.load8_s offset=2
               (local.tee $1
                (i32.load
                 (local.get $11)
                )
               )
              )
              (i32.const 36)
             )
            )
            (i32.store
             (i32.add
              (i32.shl
               (i32.add
                (i32.load8_s offset=1
                 (local.get $1)
                )
                (i32.const -48)
               )
               (i32.const 2)
              )
              (local.get $4)
             )
             (i32.const 10)
            )
            (local.set $13
             (i32.const 1)
            )
            (local.set $7
             (i32.add
              (local.get $1)
              (i32.const 3)
             )
            )
            (br $__rjto$1
             (i32.wrap_i64
              (i64.load
               (i32.add
                (i32.shl
                 (i32.add
                  (i32.load8_s offset=1
                   (local.get $1)
                  )
                  (i32.const -48)
                 )
                 (i32.const 3)
                )
                (local.get $3)
               )
              )
             )
            )
           )
           (if
            (local.get $6)
            (block
             (local.set $8
              (i32.const -1)
             )
             (br $label$break$L1)
            )
           )
           (if
            (local.get $18)
            (block
             (local.set $1
              (i32.load
               (local.tee $6
                (i32.and
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 3)
                 )
                 (i32.const -4)
                )
               )
              )
             )
             (i32.store
              (local.get $2)
              (i32.add
               (local.get $6)
               (i32.const 4)
              )
             )
            )
            (local.set $1
             (i32.const 0)
            )
           )
           (local.set $13
            (i32.const 0)
           )
           (local.set $7
            (i32.add
             (i32.load
              (local.get $11)
             )
             (i32.const 1)
            )
           )
           (local.get $1)
          )
         )
         (i32.store
          (local.get $11)
          (local.get $7)
         )
         (local.set $1
          (local.get $7)
         )
         (local.set $14
          (select
           (i32.or
            (local.get $5)
            (i32.const 8192)
           )
           (local.get $5)
           (local.tee $5
            (i32.lt_s
             (local.get $6)
             (i32.const 0)
            )
           )
          )
         )
         (local.set $15
          (select
           (i32.sub
            (i32.const 0)
            (local.get $6)
           )
           (local.get $6)
           (local.get $5)
          )
         )
         (local.get $13)
        )
        (block (result i32)
         (if
          (i32.lt_s
           (local.tee $15
            (call $_getint
             (local.get $11)
            )
           )
           (i32.const 0)
          )
          (block
           (local.set $8
            (i32.const -1)
           )
           (br $label$break$L1)
          )
         )
         (local.set $1
          (i32.load
           (local.get $11)
          )
         )
         (local.set $14
          (local.get $5)
         )
         (local.get $6)
        )
       )
      )
      (if
       (i32.eq
        (i32.load8_s
         (local.get $1)
        )
        (i32.const 46)
       )
       (block $do-once6
        (local.set $5
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (if
         (i32.ne
          (i32.load8_s offset=1
           (local.get $1)
          )
          (i32.const 42)
         )
         (block
          (i32.store
           (local.get $11)
           (local.get $5)
          )
          (local.set $1
           (call $_getint
            (local.get $11)
           )
          )
          (local.set $6
           (i32.load
            (local.get $11)
           )
          )
          (br $do-once6)
         )
        )
        (if
         (call $_isdigit
          (i32.load8_s offset=2
           (local.get $1)
          )
         )
         (if
          (i32.eq
           (i32.load8_s offset=3
            (local.tee $5
             (i32.load
              (local.get $11)
             )
            )
           )
           (i32.const 36)
          )
          (block
           (i32.store
            (i32.add
             (i32.shl
              (i32.add
               (i32.load8_s offset=2
                (local.get $5)
               )
               (i32.const -48)
              )
              (i32.const 2)
             )
             (local.get $4)
            )
            (i32.const 10)
           )
           (local.set $1
            (i32.wrap_i64
             (i64.load
              (i32.add
               (i32.shl
                (i32.add
                 (i32.load8_s offset=2
                  (local.get $5)
                 )
                 (i32.const -48)
                )
                (i32.const 3)
               )
               (local.get $3)
              )
             )
            )
           )
           (i32.store
            (local.get $11)
            (local.tee $6
             (i32.add
              (local.get $5)
              (i32.const 4)
             )
            )
           )
           (br $do-once6)
          )
         )
        )
        (if
         (local.get $24)
         (block
          (local.set $8
           (i32.const -1)
          )
          (br $label$break$L1)
         )
        )
        (if
         (local.get $18)
         (block
          (local.set $1
           (i32.load
            (local.tee $5
             (i32.and
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 3)
              )
              (i32.const -4)
             )
            )
           )
          )
          (i32.store
           (local.get $2)
           (i32.add
            (local.get $5)
            (i32.const 4)
           )
          )
         )
         (local.set $1
          (i32.const 0)
         )
        )
        (i32.store
         (local.get $11)
         (local.tee $6
          (i32.add
           (i32.load
            (local.get $11)
           )
           (i32.const 2)
          )
         )
        )
       )
       (block
        (local.set $6
         (local.get $1)
        )
        (local.set $1
         (i32.const -1)
        )
       )
      )
      (local.set $12
       (i32.const 0)
      )
      (loop $while-in9
       (if
        (i32.gt_u
         (i32.add
          (i32.load8_s
           (local.get $6)
          )
          (i32.const -65)
         )
         (i32.const 57)
        )
        (block
         (local.set $8
          (i32.const -1)
         )
         (br $label$break$L1)
        )
       )
       (i32.store
        (local.get $11)
        (local.tee $7
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
       )
       (if
        (i32.lt_u
         (i32.add
          (local.tee $5
           (i32.and
            (local.tee $6
             (i32.load8_s
              (i32.add
               (i32.add
                (i32.load8_s
                 (local.get $6)
                )
                (i32.mul
                 (local.get $12)
                 (i32.const 58)
                )
               )
               (i32.const 12895)
              )
             )
            )
            (i32.const 255)
           )
          )
          (i32.const -1)
         )
         (i32.const 8)
        )
        (block
         (local.set $6
          (local.get $7)
         )
         (local.set $12
          (local.get $5)
         )
         (br $while-in9)
        )
       )
      )
      (if
       (i32.eqz
        (local.get $6)
       )
       (block
        (local.set $8
         (i32.const -1)
        )
        (br $label$break$L1)
       )
      )
      (local.set $13
       (i32.gt_s
        (local.get $17)
        (i32.const -1)
       )
      )
      (block $label$break$L77
       (block $__rjti$9
        (if
         (i32.eq
          (local.get $6)
          (i32.const 19)
         )
         (if
          (local.get $13)
          (block
           (local.set $8
            (i32.const -1)
           )
           (br $label$break$L1)
          )
         )
         (block $__rjti$8
          (if
           (local.get $13)
           (block
            (i32.store
             (i32.add
              (i32.shl
               (local.get $17)
               (i32.const 2)
              )
              (local.get $4)
             )
             (local.get $5)
            )
            (i64.store
             (local.get $9)
             (i64.load
              (i32.add
               (i32.shl
                (local.get $17)
                (i32.const 3)
               )
               (local.get $3)
              )
             )
            )
            (br $__rjti$8)
           )
          )
          (if
           (i32.eqz
            (local.get $18)
           )
           (block
            (local.set $8
             (i32.const 0)
            )
            (br $label$break$L1)
           )
          )
          (call $_pop_arg
           (local.get $9)
           (local.get $5)
           (local.get $2)
          )
          (local.set $7
           (i32.load
            (local.get $11)
           )
          )
          (br $__rjti$9)
         )
        )
        (br_if $__rjti$9
         (local.get $18)
        )
        (local.set $1
         (i32.const 0)
        )
        (br $label$break$L77)
       )
       (local.set $6
        (select
         (local.tee $5
          (i32.and
           (local.get $14)
           (i32.const -65537)
          )
         )
         (local.get $14)
         (i32.and
          (local.get $14)
          (i32.const 8192)
         )
        )
       )
       (block $__rjto$7
        (block $__rjti$7
         (block $__rjti$6
          (block $__rjti$5
           (block $__rjti$4
            (block $__rjti$3
             (block $switch-default44
              (block $switch-case43
               (block $switch-case35
                (block $switch-case34
                 (block $switch-case33
                  (block $switch-case32
                   (block $switch-case31
                    (block $switch-case30
                     (block $switch-case28
                      (block $switch-case25
                       (block $switch-case24
                        (br_table $switch-case43 $switch-default44 $switch-case34 $switch-default44 $switch-case43 $switch-case43 $switch-case43 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-case35 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $__rjti$3 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-case43 $switch-default44 $switch-case32 $switch-case30 $switch-case43 $switch-case43 $switch-case43 $switch-default44 $switch-case30 $switch-default44 $switch-default44 $switch-default44 $switch-default44 $switch-case24 $switch-case28 $switch-case25 $switch-default44 $switch-default44 $switch-case33 $switch-default44 $switch-case31 $switch-default44 $switch-default44 $__rjti$3 $switch-default44
                         (i32.sub
                          (local.tee $7
                           (select
                            (i32.and
                             (local.tee $7
                              (i32.load8_s
                               (i32.add
                                (local.get $7)
                                (i32.const -1)
                               )
                              )
                             )
                             (i32.const -33)
                            )
                            (local.get $7)
                            (i32.and
                             (i32.eq
                              (i32.and
                               (local.get $7)
                               (i32.const 15)
                              )
                              (i32.const 3)
                             )
                             (i32.ne
                              (local.get $12)
                              (i32.const 0)
                             )
                            )
                           )
                          )
                          (i32.const 65)
                         )
                        )
                       )
                       (block $switch-default23
                        (block $switch-case22
                         (block $switch-case21
                          (block $switch-case20
                           (block $switch-case19
                            (block $switch-case18
                             (block $switch-case17
                              (block $switch-case16
                               (br_table $switch-case16 $switch-case17 $switch-case18 $switch-case19 $switch-case20 $switch-default23 $switch-case21 $switch-case22 $switch-default23
                                (i32.shr_s
                                 (i32.shl
                                  (i32.and
                                   (local.get $12)
                                   (i32.const 255)
                                  )
                                  (i32.const 24)
                                 )
                                 (i32.const 24)
                                )
                               )
                              )
                              (i32.store
                               (i32.load
                                (local.get $9)
                               )
                               (local.get $8)
                              )
                              (local.set $1
                               (i32.const 0)
                              )
                              (br $label$break$L77)
                             )
                             (i32.store
                              (i32.load
                               (local.get $9)
                              )
                              (local.get $8)
                             )
                             (local.set $1
                              (i32.const 0)
                             )
                             (br $label$break$L77)
                            )
                            (i64.store
                             (i32.load
                              (local.get $9)
                             )
                             (i64.extend_i32_s
                              (local.get $8)
                             )
                            )
                            (local.set $1
                             (i32.const 0)
                            )
                            (br $label$break$L77)
                           )
                           (i32.store16
                            (i32.load
                             (local.get $9)
                            )
                            (local.get $8)
                           )
                           (local.set $1
                            (i32.const 0)
                           )
                           (br $label$break$L77)
                          )
                          (i32.store8
                           (i32.load
                            (local.get $9)
                           )
                           (local.get $8)
                          )
                          (local.set $1
                           (i32.const 0)
                          )
                          (br $label$break$L77)
                         )
                         (i32.store
                          (i32.load
                           (local.get $9)
                          )
                          (local.get $8)
                         )
                         (local.set $1
                          (i32.const 0)
                         )
                         (br $label$break$L77)
                        )
                        (i64.store
                         (i32.load
                          (local.get $9)
                         )
                         (i64.extend_i32_s
                          (local.get $8)
                         )
                        )
                        (local.set $1
                         (i32.const 0)
                        )
                        (br $label$break$L77)
                       )
                       (local.set $1
                        (i32.const 0)
                       )
                       (br $label$break$L77)
                      )
                      (local.set $6
                       (i32.or
                        (local.get $6)
                        (i32.const 8)
                       )
                      )
                      (local.set $1
                       (select
                        (local.get $1)
                        (i32.const 8)
                        (i32.gt_u
                         (local.get $1)
                         (i32.const 8)
                        )
                       )
                      )
                      (local.set $7
                       (i32.const 120)
                      )
                      (br $__rjti$3)
                     )
                     (local.set $1
                      (select
                       (local.get $1)
                       (i32.add
                        (local.tee $7
                         (i32.sub
                          (local.get $19)
                          (local.tee $14
                           (call $_fmt_o
                            (i64.load
                             (local.get $9)
                            )
                            (local.get $20)
                           )
                          )
                         )
                        )
                        (i32.const 1)
                       )
                       (i32.or
                        (i32.eqz
                         (i32.and
                          (local.tee $5
                           (local.get $6)
                          )
                          (i32.const 8)
                         )
                        )
                        (i32.gt_s
                         (local.get $1)
                         (local.get $7)
                        )
                       )
                      )
                     )
                     (local.set $13
                      (i32.const 0)
                     )
                     (local.set $12
                      (i32.const 22949)
                     )
                     (br $__rjti$6)
                    )
                    (local.set $12
                     (if (result i32)
                      (i64.lt_s
                       (local.tee $21
                        (i64.load
                         (local.get $9)
                        )
                       )
                       (i64.const 0)
                      )
                      (block (result i32)
                       (i64.store
                        (local.get $9)
                        (local.tee $21
                         (i64.sub
                          (i64.const 0)
                          (local.get $21)
                         )
                        )
                       )
                       (local.set $13
                        (i32.const 1)
                       )
                       (i32.const 22949)
                      )
                      (block (result i32)
                       (local.set $13
                        (i32.ne
                         (i32.and
                          (local.get $6)
                          (i32.const 2049)
                         )
                         (i32.const 0)
                        )
                       )
                       (select
                        (i32.const 22950)
                        (select
                         (i32.const 22951)
                         (i32.const 22949)
                         (i32.and
                          (local.get $6)
                          (i32.const 1)
                         )
                        )
                        (i32.and
                         (local.get $6)
                         (i32.const 2048)
                        )
                       )
                      )
                     )
                    )
                    (br $__rjti$4)
                   )
                   (local.set $21
                    (i64.load
                     (local.get $9)
                    )
                   )
                   (local.set $13
                    (i32.const 0)
                   )
                   (local.set $12
                    (i32.const 22949)
                   )
                   (br $__rjti$4)
                  )
                  (i64.store8
                   (local.get $23)
                   (i64.load
                    (local.get $9)
                   )
                  )
                  (local.set $7
                   (local.get $23)
                  )
                  (local.set $6
                   (local.get $5)
                  )
                  (local.set $5
                   (i32.const 1)
                  )
                  (local.set $13
                   (i32.const 0)
                  )
                  (local.set $12
                   (i32.const 22949)
                  )
                  (local.set $1
                   (local.get $19)
                  )
                  (br $__rjto$7)
                 )
                 (local.set $14
                  (i32.eqz
                   (local.tee $10
                    (call $_memchr
                     (local.tee $7
                      (select
                       (local.tee $6
                        (i32.load
                         (local.get $9)
                        )
                       )
                       (i32.const 22959)
                       (local.get $6)
                      )
                     )
                     (local.get $1)
                    )
                   )
                  )
                 )
                 (local.set $6
                  (local.get $5)
                 )
                 (local.set $5
                  (select
                   (local.get $1)
                   (i32.sub
                    (local.get $10)
                    (local.get $7)
                   )
                   (local.get $14)
                  )
                 )
                 (local.set $13
                  (i32.const 0)
                 )
                 (local.set $12
                  (i32.const 22949)
                 )
                 (local.set $1
                  (select
                   (i32.add
                    (local.get $1)
                    (local.get $7)
                   )
                   (local.get $10)
                   (local.get $14)
                  )
                 )
                 (br $__rjto$7)
                )
                (i64.store32 offset=48
                 (local.get $16)
                 (i64.load
                  (local.get $9)
                 )
                )
                (i32.store offset=52
                 (local.get $16)
                 (i32.const 0)
                )
                (i32.store
                 (local.get $9)
                 (local.get $26)
                )
                (local.set $5
                 (i32.const -1)
                )
                (br $__rjti$5)
               )
               (if
                (local.get $1)
                (block
                 (local.set $5
                  (local.get $1)
                 )
                 (br $__rjti$5)
                )
                (block
                 (call $_pad_659
                  (local.get $0)
                  (i32.const 32)
                  (local.get $15)
                  (i32.const 0)
                  (local.get $6)
                 )
                 (local.set $1
                  (i32.const 0)
                 )
                 (br $__rjti$7)
                )
               )
              )
              (local.set $1
               (call_indirect (type $FUNCSIG$iidiiii)
                (local.get $0)
                (f64.load
                 (local.get $9)
                )
                (local.get $15)
                (local.get $1)
                (local.get $6)
                (local.get $7)
                (i32.const 37)
               )
              )
              (br $label$break$L77)
             )
             (local.set $7
              (local.get $10)
             )
             (local.set $5
              (local.get $1)
             )
             (local.set $13
              (i32.const 0)
             )
             (local.set $12
              (i32.const 22949)
             )
             (local.set $1
              (local.get $19)
             )
             (br $__rjto$7)
            )
            (local.set $14
             (call $_fmt_x
              (i64.load
               (local.get $9)
              )
              (local.get $20)
              (i32.and
               (local.get $7)
               (i32.const 32)
              )
             )
            )
            (local.set $13
             (select
              (i32.const 0)
              (i32.const 2)
              (local.tee $6
               (i32.or
                (i32.eqz
                 (i32.and
                  (local.tee $5
                   (local.get $6)
                  )
                  (i32.const 8)
                 )
                )
                (i64.eqz
                 (i64.load
                  (local.get $9)
                 )
                )
               )
              )
             )
            )
            (local.set $12
             (select
              (i32.const 22949)
              (i32.add
               (i32.shr_u
                (local.get $7)
                (i32.const 4)
               )
               (i32.const 22949)
              )
              (local.get $6)
             )
            )
            (br $__rjti$6)
           )
           (local.set $14
            (call $_fmt_u
             (local.get $21)
             (local.get $20)
            )
           )
           (local.set $5
            (local.get $6)
           )
           (br $__rjti$6)
          )
          (local.set $1
           (i32.const 0)
          )
          (local.set $7
           (i32.load
            (local.get $9)
           )
          )
          (block $__rjto$2
           (block $__rjti$2
            (loop $while-in47
             (if
              (local.tee $10
               (i32.load
                (local.get $7)
               )
              )
              (block
               (br_if $__rjti$2
                (i32.or
                 (local.tee $12
                  (i32.lt_s
                   (local.tee $10
                    (call $_wctomb
                     (local.get $22)
                     (local.get $10)
                    )
                   )
                   (i32.const 0)
                  )
                 )
                 (i32.gt_u
                  (local.get $10)
                  (i32.sub
                   (local.get $5)
                   (local.get $1)
                  )
                 )
                )
               )
               (local.set $7
                (i32.add
                 (local.get $7)
                 (i32.const 4)
                )
               )
               (br_if $while-in47
                (i32.gt_u
                 (local.get $5)
                 (local.tee $1
                  (i32.add
                   (local.get $1)
                   (local.get $10)
                  )
                 )
                )
               )
              )
             )
            )
            (br $__rjto$2)
           )
           (if
            (local.get $12)
            (block
             (local.set $8
              (i32.const -1)
             )
             (br $label$break$L1)
            )
           )
          )
          (call $_pad_659
           (local.get $0)
           (i32.const 32)
           (local.get $15)
           (local.get $1)
           (local.get $6)
          )
          (if
           (local.get $1)
           (block
            (local.set $5
             (i32.const 0)
            )
            (local.set $7
             (i32.load
              (local.get $9)
             )
            )
            (loop $while-in49
             (br_if $__rjti$7
              (i32.eqz
               (local.tee $10
                (i32.load
                 (local.get $7)
                )
               )
              )
             )
             (br_if $__rjti$7
              (i32.gt_s
               (local.tee $5
                (i32.add
                 (local.tee $10
                  (call $_wctomb
                   (local.get $22)
                   (local.get $10)
                  )
                 )
                 (local.get $5)
                )
               )
               (local.get $1)
              )
             )
             (local.set $7
              (i32.add
               (local.get $7)
               (i32.const 4)
              )
             )
             (call $_out
              (local.get $0)
              (local.get $22)
              (local.get $10)
             )
             (br_if $while-in49
              (i32.lt_u
               (local.get $5)
               (local.get $1)
              )
             )
            )
           )
           (local.set $1
            (i32.const 0)
           )
          )
          (br $__rjti$7)
         )
         (local.set $7
          (select
           (local.get $14)
           (local.get $20)
           (local.tee $17
            (i32.or
             (local.tee $10
              (i64.ne
               (i64.load
                (local.get $9)
               )
               (i64.const 0)
              )
             )
             (i32.ne
              (local.get $1)
              (i32.const 0)
             )
            )
           )
          )
         )
         (local.set $6
          (select
           (i32.and
            (local.get $5)
            (i32.const -65537)
           )
           (local.get $5)
           (i32.gt_s
            (local.get $1)
            (i32.const -1)
           )
          )
         )
         (local.set $5
          (select
           (select
            (local.get $1)
            (local.tee $5
             (i32.add
              (i32.sub
               (local.get $19)
               (local.get $14)
              )
              (i32.xor
               (local.get $10)
               (i32.const 1)
              )
             )
            )
            (i32.gt_s
             (local.get $1)
             (local.get $5)
            )
           )
           (i32.const 0)
           (local.get $17)
          )
         )
         (local.set $1
          (local.get $19)
         )
         (br $__rjto$7)
        )
        (call $_pad_659
         (local.get $0)
         (i32.const 32)
         (local.get $15)
         (local.get $1)
         (i32.xor
          (local.get $6)
          (i32.const 8192)
         )
        )
        (local.set $1
         (select
          (local.get $15)
          (local.get $1)
          (i32.gt_s
           (local.get $15)
           (local.get $1)
          )
         )
        )
        (br $label$break$L77)
       )
       (call $_pad_659
        (local.get $0)
        (i32.const 32)
        (local.tee $1
         (select
          (local.tee $5
           (i32.add
            (local.get $13)
            (local.tee $14
             (select
              (local.tee $10
               (i32.sub
                (local.get $1)
                (local.get $7)
               )
              )
              (local.get $5)
              (i32.lt_s
               (local.get $5)
               (local.get $10)
              )
             )
            )
           )
          )
          (local.get $15)
          (i32.lt_s
           (local.get $15)
           (local.get $5)
          )
         )
        )
        (local.get $5)
        (local.get $6)
       )
       (call $_out
        (local.get $0)
        (local.get $12)
        (local.get $13)
       )
       (call $_pad_659
        (local.get $0)
        (i32.const 48)
        (local.get $1)
        (local.get $5)
        (i32.xor
         (local.get $6)
         (i32.const 65536)
        )
       )
       (call $_pad_659
        (local.get $0)
        (i32.const 48)
        (local.get $14)
        (local.get $10)
        (i32.const 0)
       )
       (call $_out
        (local.get $0)
        (local.get $7)
        (local.get $10)
       )
       (call $_pad_659
        (local.get $0)
        (i32.const 32)
        (local.get $1)
        (local.get $5)
        (i32.xor
         (local.get $6)
         (i32.const 8192)
        )
       )
      )
      (local.set $6
       (local.get $24)
      )
      (br $label$continue$L1)
     )
    )
    (br $label$break$L123)
   )
   (if
    (i32.eqz
     (local.get $0)
    )
    (local.set $8
     (if (result i32)
      (local.get $6)
      (block (result i32)
       (local.set $0
        (i32.const 1)
       )
       (loop $while-in52
        (if
         (local.tee $1
          (i32.load
           (i32.add
            (i32.shl
             (local.get $0)
             (i32.const 2)
            )
            (local.get $4)
           )
          )
         )
         (block
          (call $_pop_arg
           (i32.add
            (i32.shl
             (local.get $0)
             (i32.const 3)
            )
            (local.get $3)
           )
           (local.get $1)
           (local.get $2)
          )
          (br_if $while-in52
           (i32.lt_u
            (local.tee $0
             (i32.add
              (local.get $0)
              (i32.const 1)
             )
            )
            (i32.const 10)
           )
          )
          (local.set $8
           (i32.const 1)
          )
          (br $label$break$L123)
         )
        )
       )
       (loop $while-in54 (result i32)
        (if
         (i32.load
          (i32.add
           (i32.shl
            (local.get $0)
            (i32.const 2)
           )
           (local.get $4)
          )
         )
         (block
          (local.set $8
           (i32.const -1)
          )
          (br $label$break$L123)
         )
        )
        (br_if $while-in54
         (i32.lt_u
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const 1)
           )
          )
          (i32.const 10)
         )
        )
        (i32.const 1)
       )
      )
      (i32.const 0)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $25)
  )
  (local.get $8)
 )
 (func $_out (; 583 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (local.get $0)
     )
     (i32.const 32)
    )
   )
   (drop
    (call $___fwritex
     (local.get $1)
     (local.get $2)
     (local.get $0)
    )
   )
  )
 )
 (func $_getint (; 584 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (if
   (call $_isdigit
    (i32.load8_s
     (i32.load
      (local.get $0)
     )
    )
   )
   (loop $while-in
    (local.set $1
     (i32.add
      (i32.load8_s
       (local.tee $2
        (i32.load
         (local.get $0)
        )
       )
      )
      (i32.add
       (i32.mul
        (local.get $1)
        (i32.const 10)
       )
       (i32.const -48)
      )
     )
    )
    (i32.store
     (local.get $0)
     (i32.add
      (local.get $2)
      (i32.const 1)
     )
    )
    (br_if $while-in
     (call $_isdigit
      (i32.load8_s offset=1
       (local.get $2)
      )
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_pop_arg (; 585 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 f64)
  (if
   (i32.le_u
    (local.get $1)
    (i32.const 20)
   )
   (block $label$break$L1
    (block $switch-case9
     (block $switch-case8
      (block $switch-case7
       (block $switch-case6
        (block $switch-case5
         (block $switch-case4
          (block $switch-case3
           (block $switch-case2
            (block $switch-case1
             (block $switch-case
              (br_table $switch-case $switch-case1 $switch-case2 $switch-case3 $switch-case4 $switch-case5 $switch-case6 $switch-case7 $switch-case8 $switch-case9 $label$break$L1
               (i32.sub
                (local.get $1)
                (i32.const 9)
               )
              )
             )
             (local.set $3
              (i32.load
               (local.tee $1
                (i32.and
                 (i32.add
                  (i32.load
                   (local.get $2)
                  )
                  (i32.const 3)
                 )
                 (i32.const -4)
                )
               )
              )
             )
             (i32.store
              (local.get $2)
              (i32.add
               (local.get $1)
               (i32.const 4)
              )
             )
             (i32.store
              (local.get $0)
              (local.get $3)
             )
             (br $label$break$L1)
            )
            (local.set $3
             (i32.load
              (local.tee $1
               (i32.and
                (i32.add
                 (i32.load
                  (local.get $2)
                 )
                 (i32.const 3)
                )
                (i32.const -4)
               )
              )
             )
            )
            (i32.store
             (local.get $2)
             (i32.add
              (local.get $1)
              (i32.const 4)
             )
            )
            (i64.store
             (local.get $0)
             (i64.extend_i32_s
              (local.get $3)
             )
            )
            (br $label$break$L1)
           )
           (local.set $3
            (i32.load
             (local.tee $1
              (i32.and
               (i32.add
                (i32.load
                 (local.get $2)
                )
                (i32.const 3)
               )
               (i32.const -4)
              )
             )
            )
           )
           (i32.store
            (local.get $2)
            (i32.add
             (local.get $1)
             (i32.const 4)
            )
           )
           (i64.store
            (local.get $0)
            (i64.extend_i32_u
             (local.get $3)
            )
           )
           (br $label$break$L1)
          )
          (local.set $4
           (i64.load
            (local.tee $1
             (i32.and
              (i32.add
               (i32.load
                (local.get $2)
               )
               (i32.const 7)
              )
              (i32.const -8)
             )
            )
           )
          )
          (i32.store
           (local.get $2)
           (i32.add
            (local.get $1)
            (i32.const 8)
           )
          )
          (i64.store
           (local.get $0)
           (local.get $4)
          )
          (br $label$break$L1)
         )
         (local.set $3
          (i32.load
           (local.tee $1
            (i32.and
             (i32.add
              (i32.load
               (local.get $2)
              )
              (i32.const 3)
             )
             (i32.const -4)
            )
           )
          )
         )
         (i32.store
          (local.get $2)
          (i32.add
           (local.get $1)
           (i32.const 4)
          )
         )
         (i64.store
          (local.get $0)
          (i64.extend_i32_s
           (i32.shr_s
            (i32.shl
             (i32.and
              (local.get $3)
              (i32.const 65535)
             )
             (i32.const 16)
            )
            (i32.const 16)
           )
          )
         )
         (br $label$break$L1)
        )
        (local.set $3
         (i32.load
          (local.tee $1
           (i32.and
            (i32.add
             (i32.load
              (local.get $2)
             )
             (i32.const 3)
            )
            (i32.const -4)
           )
          )
         )
        )
        (i32.store
         (local.get $2)
         (i32.add
          (local.get $1)
          (i32.const 4)
         )
        )
        (i64.store
         (local.get $0)
         (i64.extend_i32_u
          (i32.and
           (local.get $3)
           (i32.const 65535)
          )
         )
        )
        (br $label$break$L1)
       )
       (local.set $3
        (i32.load
         (local.tee $1
          (i32.and
           (i32.add
            (i32.load
             (local.get $2)
            )
            (i32.const 3)
           )
           (i32.const -4)
          )
         )
        )
       )
       (i32.store
        (local.get $2)
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (i64.store
        (local.get $0)
        (i64.extend_i32_s
         (i32.shr_s
          (i32.shl
           (i32.and
            (local.get $3)
            (i32.const 255)
           )
           (i32.const 24)
          )
          (i32.const 24)
         )
        )
       )
       (br $label$break$L1)
      )
      (local.set $3
       (i32.load
        (local.tee $1
         (i32.and
          (i32.add
           (i32.load
            (local.get $2)
           )
           (i32.const 3)
          )
          (i32.const -4)
         )
        )
       )
      )
      (i32.store
       (local.get $2)
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
      (i64.store
       (local.get $0)
       (i64.extend_i32_u
        (i32.and
         (local.get $3)
         (i32.const 255)
        )
       )
      )
      (br $label$break$L1)
     )
     (local.set $5
      (f64.load
       (local.tee $1
        (i32.and
         (i32.add
          (i32.load
           (local.get $2)
          )
          (i32.const 7)
         )
         (i32.const -8)
        )
       )
      )
     )
     (i32.store
      (local.get $2)
      (i32.add
       (local.get $1)
       (i32.const 8)
      )
     )
     (f64.store
      (local.get $0)
      (local.get $5)
     )
     (br $label$break$L1)
    )
    (call_indirect (type $FUNCSIG$vii)
     (local.get $0)
     (local.get $2)
     (i32.const 142)
    )
   )
  )
 )
 (func $_fmt_x (; 586 ;) (; has Stack IR ;) (param $0 i64) (param $1 i32) (param $2 i32) (result i32)
  (if
   (i32.eqz
    (i64.eqz
     (local.get $0)
    )
   )
   (loop $while-in
    (i32.store8
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
     )
     (i32.or
      (local.get $2)
      (i32.load8_u
       (i32.add
        (i32.and
         (i32.wrap_i64
          (local.get $0)
         )
         (i32.const 15)
        )
        (i32.const 13424)
       )
      )
     )
    )
    (br_if $while-in
     (i32.eqz
      (i64.eqz
       (local.tee $0
        (i64.shr_u
         (local.get $0)
         (i64.const 4)
        )
       )
      )
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_fmt_o (; 587 ;) (; has Stack IR ;) (param $0 i64) (param $1 i32) (result i32)
  (if
   (i32.eqz
    (i64.eqz
     (local.get $0)
    )
   )
   (loop $while-in
    (i32.store8
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
     )
     (i32.or
      (i32.and
       (i32.wrap_i64
        (local.get $0)
       )
       (i32.const 7)
      )
      (i32.const 48)
     )
    )
    (br_if $while-in
     (i32.eqz
      (i64.eqz
       (local.tee $0
        (i64.shr_u
         (local.get $0)
         (i64.const 3)
        )
       )
      )
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_fmt_u (; 588 ;) (; has Stack IR ;) (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local.set $2
   (i32.wrap_i64
    (local.get $0)
   )
  )
  (if
   (i64.gt_u
    (local.get $0)
    (i64.const 4294967295)
   )
   (block
    (loop $while-in
     (i32.store8
      (local.tee $1
       (i32.add
        (local.get $1)
        (i32.const -1)
       )
      )
      (i32.or
       (i32.and
        (i32.wrap_i64
         (i64.sub
          (local.get $0)
          (i64.mul
           (local.tee $3
            (i64.div_u
             (local.get $0)
             (i64.const 10)
            )
           )
           (i64.const 10)
          )
         )
        )
        (i32.const 255)
       )
       (i32.const 48)
      )
     )
     (if
      (i64.gt_u
       (local.get $0)
       (i64.const 42949672959)
      )
      (block
       (local.set $0
        (local.get $3)
       )
       (br $while-in)
      )
     )
    )
    (local.set $2
     (i32.wrap_i64
      (local.get $3)
     )
    )
   )
  )
  (if
   (local.get $2)
   (loop $while-in1
    (i32.store8
     (local.tee $1
      (i32.add
       (local.get $1)
       (i32.const -1)
      )
     )
     (i32.or
      (i32.sub
       (local.get $2)
       (i32.mul
        (local.tee $4
         (i32.div_u
          (local.get $2)
          (i32.const 10)
         )
        )
        (i32.const 10)
       )
      )
      (i32.const 48)
     )
    )
    (if
     (i32.ge_u
      (local.get $2)
      (i32.const 10)
     )
     (block
      (local.set $2
       (local.get $4)
      )
      (br $while-in1)
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_memchr (; 589 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (block $__rjto$3
   (block $__rjti$3
    (block $__rjti$2
     (if
      (i32.and
       (local.tee $2
        (i32.ne
         (local.get $1)
         (i32.const 0)
        )
       )
       (i32.ne
        (i32.and
         (local.get $0)
         (i32.const 3)
        )
        (i32.const 0)
       )
      )
      (loop $while-in
       (br_if $__rjti$2
        (i32.eqz
         (i32.load8_u
          (local.get $0)
         )
        )
       )
       (br_if $while-in
        (i32.and
         (local.tee $2
          (i32.ne
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const -1)
            )
           )
           (i32.const 0)
          )
         )
         (i32.ne
          (i32.and
           (local.tee $0
            (i32.add
             (local.get $0)
             (i32.const 1)
            )
           )
           (i32.const 3)
          )
          (i32.const 0)
         )
        )
       )
      )
     )
     (br_if $__rjti$3
      (i32.eqz
       (local.get $2)
      )
     )
    )
    (if
     (i32.eqz
      (i32.load8_u
       (local.get $0)
      )
     )
     (block
      (br_if $__rjti$3
       (i32.eqz
        (local.get $1)
       )
      )
      (br $__rjto$3)
     )
    )
    (block $__rjto$0
     (block $__rjti$0
      (br_if $__rjti$0
       (i32.le_u
        (local.get $1)
        (i32.const 3)
       )
      )
      (loop $while-in3
       (if
        (i32.eqz
         (i32.and
          (i32.xor
           (i32.and
            (local.tee $2
             (i32.load
              (local.get $0)
             )
            )
            (i32.const -2139062144)
           )
           (i32.const -2139062144)
          )
          (i32.add
           (local.get $2)
           (i32.const -16843009)
          )
         )
        )
        (block
         (local.set $0
          (i32.add
           (local.get $0)
           (i32.const 4)
          )
         )
         (br_if $while-in3
          (i32.gt_u
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const -4)
            )
           )
           (i32.const 3)
          )
         )
         (br $__rjti$0)
        )
       )
      )
      (br $__rjto$0)
     )
     (br_if $__rjti$3
      (i32.eqz
       (local.get $1)
      )
     )
    )
    (loop $while-in5
     (br_if $__rjto$3
      (i32.eqz
       (i32.load8_u
        (local.get $0)
       )
      )
     )
     (br_if $__rjti$3
      (i32.eqz
       (local.tee $1
        (i32.add
         (local.get $1)
         (i32.const -1)
        )
       )
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
   (local.set $0
    (i32.const 0)
   )
  )
  (local.get $0)
 )
 (func $_pad_659 (; 590 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 256)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 256)
   )
  )
  (if
   (i32.and
    (i32.eqz
     (i32.and
      (local.get $4)
      (i32.const 73728)
     )
    )
    (i32.gt_s
     (local.get $2)
     (local.get $3)
    )
   )
   (block
    (drop
     (call $_memset
      (local.get $5)
      (i32.shr_s
       (i32.shl
        (local.get $1)
        (i32.const 24)
       )
       (i32.const 24)
      )
      (select
       (local.tee $1
        (i32.sub
         (local.get $2)
         (local.get $3)
        )
       )
       (i32.const 256)
       (i32.lt_u
        (local.get $1)
        (i32.const 256)
       )
      )
     )
    )
    (if
     (i32.gt_u
      (local.get $1)
      (i32.const 255)
     )
     (block
      (local.set $2
       (i32.sub
        (local.get $2)
        (local.get $3)
       )
      )
      (loop $while-in
       (call $_out
        (local.get $0)
        (local.get $5)
        (i32.const 256)
       )
       (br_if $while-in
        (i32.gt_u
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const -256)
          )
         )
         (i32.const 255)
        )
       )
      )
      (local.set $1
       (i32.and
        (local.get $2)
        (i32.const 255)
       )
      )
     )
    )
    (call $_out
     (local.get $0)
     (local.get $5)
     (local.get $1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
 )
 (func $_wctomb (; 591 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (local.get $0)
   (call $_wcrtomb
    (local.get $0)
    (local.get $1)
   )
   (i32.const 0)
  )
 )
 (func $_wcrtomb (; 592 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (local.get $0)
   (block $do-once (result i32)
    (if
     (i32.lt_u
      (local.get $1)
      (i32.const 128)
     )
     (block
      (i32.store8
       (local.get $0)
       (local.get $1)
      )
      (br $do-once
       (i32.const 1)
      )
     )
    )
    (if
     (i32.eqz
      (i32.load
       (i32.load
        (i32.const 14428)
       )
      )
     )
     (if
      (i32.eq
       (i32.and
        (local.get $1)
        (i32.const -128)
       )
       (i32.const 57216)
      )
      (block
       (i32.store8
        (local.get $0)
        (local.get $1)
       )
       (br $do-once
        (i32.const 1)
       )
      )
      (block
       (i32.store
        (i32.const 34304)
        (i32.const 25)
       )
       (br $do-once
        (i32.const -1)
       )
      )
     )
    )
    (if
     (i32.lt_u
      (local.get $1)
      (i32.const 2048)
     )
     (block
      (i32.store8
       (local.get $0)
       (i32.or
        (i32.shr_u
         (local.get $1)
         (i32.const 6)
        )
        (i32.const 192)
       )
      )
      (i32.store8 offset=1
       (local.get $0)
       (i32.or
        (i32.and
         (local.get $1)
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (br $do-once
       (i32.const 2)
      )
     )
    )
    (if
     (i32.or
      (i32.eq
       (i32.and
        (local.get $1)
        (i32.const -8192)
       )
       (i32.const 57344)
      )
      (i32.lt_u
       (local.get $1)
       (i32.const 55296)
      )
     )
     (block
      (i32.store8
       (local.get $0)
       (i32.or
        (i32.shr_u
         (local.get $1)
         (i32.const 12)
        )
        (i32.const 224)
       )
      )
      (i32.store8 offset=1
       (local.get $0)
       (i32.or
        (i32.and
         (i32.shr_u
          (local.get $1)
          (i32.const 6)
         )
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.store8 offset=2
       (local.get $0)
       (i32.or
        (i32.and
         (local.get $1)
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (br $do-once
       (i32.const 3)
      )
     )
    )
    (if (result i32)
     (i32.lt_u
      (i32.add
       (local.get $1)
       (i32.const -65536)
      )
      (i32.const 1048576)
     )
     (block (result i32)
      (i32.store8
       (local.get $0)
       (i32.or
        (i32.shr_u
         (local.get $1)
         (i32.const 18)
        )
        (i32.const 240)
       )
      )
      (i32.store8 offset=1
       (local.get $0)
       (i32.or
        (i32.and
         (i32.shr_u
          (local.get $1)
          (i32.const 12)
         )
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.store8 offset=2
       (local.get $0)
       (i32.or
        (i32.and
         (i32.shr_u
          (local.get $1)
          (i32.const 6)
         )
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.store8 offset=3
       (local.get $0)
       (i32.or
        (i32.and
         (local.get $1)
         (i32.const 63)
        )
        (i32.const 128)
       )
      )
      (i32.const 4)
     )
     (block (result i32)
      (i32.store
       (i32.const 34304)
       (i32.const 25)
      )
      (i32.const -1)
     )
    )
   )
   (i32.const 1)
  )
 )
 (func $___fwritex (; 593 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (block $label$break$L5
   (block $__rjti$0
    (br_if $__rjti$0
     (local.tee $3
      (i32.load offset=16
       (local.get $2)
      )
     )
    )
    (local.set $4
     (if (result i32)
      (call $___towrite
       (local.get $2)
      )
      (i32.const 0)
      (block
       (local.set $3
        (i32.load offset=16
         (local.get $2)
        )
       )
       (br $__rjti$0)
      )
     )
    )
    (br $label$break$L5)
   )
   (if
    (i32.lt_u
     (i32.sub
      (local.get $3)
      (local.tee $4
       (i32.load offset=20
        (local.get $2)
       )
      )
     )
     (local.get $1)
    )
    (block
     (local.set $3
      (i32.load offset=36
       (local.get $2)
      )
     )
     (local.set $4
      (call_indirect (type $FUNCSIG$iiii)
       (local.get $2)
       (local.get $0)
       (local.get $1)
       (i32.add
        (i32.and
         (local.get $3)
         (i32.const 15)
        )
        (i32.const 42)
       )
      )
     )
     (br $label$break$L5)
    )
   )
   (local.set $5
    (if (result i32)
     (i32.or
      (i32.eqz
       (local.get $1)
      )
      (i32.lt_s
       (i32.load8_s offset=75
        (local.get $2)
       )
       (i32.const 0)
      )
     )
     (i32.const 0)
     (block $label$break$L10 (result i32)
      (local.set $3
       (local.get $1)
      )
      (loop $while-in
       (if
        (i32.ne
         (i32.load8_s
          (i32.add
           (local.get $0)
           (local.tee $5
            (i32.add
             (local.get $3)
             (i32.const -1)
            )
           )
          )
         )
         (i32.const 10)
        )
        (if
         (local.get $5)
         (block
          (local.set $3
           (local.get $5)
          )
          (br $while-in)
         )
         (br $label$break$L10
          (i32.const 0)
         )
        )
       )
      )
      (local.set $4
       (i32.load offset=36
        (local.get $2)
       )
      )
      (br_if $label$break$L5
       (i32.lt_u
        (local.tee $4
         (call_indirect (type $FUNCSIG$iiii)
          (local.get $2)
          (local.get $0)
          (local.get $3)
          (i32.add
           (i32.and
            (local.get $4)
            (i32.const 15)
           )
           (i32.const 42)
          )
         )
        )
        (local.get $3)
       )
      )
      (local.set $4
       (i32.load offset=20
        (local.get $2)
       )
      )
      (local.set $1
       (i32.sub
        (local.get $1)
        (local.get $3)
       )
      )
      (local.set $0
       (i32.add
        (local.get $0)
        (local.get $3)
       )
      )
      (local.get $3)
     )
    )
   )
   (drop
    (call $_memcpy
     (local.get $4)
     (local.get $0)
     (local.get $1)
    )
   )
   (i32.store offset=20
    (local.get $2)
    (i32.add
     (i32.load offset=20
      (local.get $2)
     )
     (local.get $1)
    )
   )
   (local.set $4
    (i32.add
     (local.get $1)
     (local.get $5)
    )
   )
  )
  (local.get $4)
 )
 (func $___towrite (; 594 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (i32.store8 offset=74
   (local.get $0)
   (i32.or
    (local.tee $1
     (i32.load8_s offset=74
      (local.get $0)
     )
    )
    (i32.add
     (local.get $1)
     (i32.const 255)
    )
   )
  )
  (if (result i32)
   (i32.and
    (local.tee $1
     (i32.load
      (local.get $0)
     )
    )
    (i32.const 8)
   )
   (block (result i32)
    (i32.store
     (local.get $0)
     (i32.or
      (local.get $1)
      (i32.const 32)
     )
    )
    (i32.const -1)
   )
   (block (result i32)
    (i32.store offset=8
     (local.get $0)
     (i32.const 0)
    )
    (i32.store offset=4
     (local.get $0)
     (i32.const 0)
    )
    (i32.store offset=28
     (local.get $0)
     (local.tee $1
      (i32.load offset=44
       (local.get $0)
      )
     )
    )
    (i32.store offset=20
     (local.get $0)
     (local.get $1)
    )
    (i32.store offset=16
     (local.get $0)
     (i32.add
      (local.get $1)
      (i32.load offset=48
       (local.get $0)
      )
     )
    )
    (i32.const 0)
   )
  )
 )
 (func $_frexp (; 595 ;) (; has Stack IR ;) (param $0 f64) (param $1 i32) (result f64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i32)
  (block $switch
   (block $switch-default
    (if
     (local.tee $4
      (i32.and
       (i32.wrap_i64
        (local.tee $3
         (i64.shr_u
          (local.tee $2
           (i64.reinterpret_f64
            (local.get $0)
           )
          )
          (i64.const 52)
         )
        )
       )
       (i32.const 2047)
      )
     )
     (if
      (i32.eq
       (local.get $4)
       (i32.const 2047)
      )
      (br $switch)
      (br $switch-default)
     )
    )
    (i32.store
     (local.get $1)
     (if (result i32)
      (f64.ne
       (local.get $0)
       (f64.const 0)
      )
      (block (result i32)
       (local.set $0
        (call $_frexp
         (f64.mul
          (local.get $0)
          (f64.const 18446744073709551615)
         )
         (local.get $1)
        )
       )
       (i32.add
        (i32.load
         (local.get $1)
        )
        (i32.const -64)
       )
      )
      (i32.const 0)
     )
    )
    (br $switch)
   )
   (i32.store
    (local.get $1)
    (i32.add
     (i32.and
      (i32.wrap_i64
       (local.get $3)
      )
      (i32.const 2047)
     )
     (i32.const -1022)
    )
   )
   (local.set $0
    (f64.reinterpret_i64
     (i64.or
      (i64.and
       (local.get $2)
       (i64.const -9218868437227405313)
      )
      (i64.const 4602678819172646912)
     )
    )
   )
  )
  (local.get $0)
 )
 (func $_sn_write (; 596 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local.set $3
   (select
    (local.get $2)
    (local.tee $3
     (i32.sub
      (i32.load offset=16
       (local.get $0)
      )
      (local.tee $4
       (i32.load offset=20
        (local.get $0)
       )
      )
     )
    )
    (i32.gt_u
     (local.get $3)
     (local.get $2)
    )
   )
  )
  (drop
   (call $_memcpy
    (local.get $4)
    (local.get $1)
    (local.get $3)
   )
  )
  (i32.store offset=20
   (local.get $0)
   (i32.add
    (i32.load offset=20
     (local.get $0)
    )
    (local.get $3)
   )
  )
  (local.get $2)
 )
 (func $_scalbn (; 597 ;) (; has Stack IR ;) (param $0 f64) (param $1 i32) (result f64)
  (local $2 i32)
  (if
   (i32.gt_s
    (local.get $1)
    (i32.const 1023)
   )
   (block
    (local.set $1
     (select
      (select
       (local.tee $2
        (i32.add
         (local.get $1)
         (i32.const -2046)
        )
       )
       (i32.const 1023)
       (i32.lt_s
        (local.get $2)
        (i32.const 1023)
       )
      )
      (i32.add
       (local.get $1)
       (i32.const -1023)
      )
      (local.tee $2
       (i32.gt_s
        (local.get $1)
        (i32.const 2046)
       )
      )
     )
    )
    (local.set $0
     (select
      (f64.mul
       (local.tee $0
        (f64.mul
         (local.get $0)
         (f64.const 8988465674311579538646525e283)
        )
       )
       (f64.const 8988465674311579538646525e283)
      )
      (local.get $0)
      (local.get $2)
     )
    )
   )
   (if
    (i32.lt_s
     (local.get $1)
     (i32.const -1022)
    )
    (block
     (local.set $1
      (select
       (select
        (local.tee $2
         (i32.add
          (local.get $1)
          (i32.const 2044)
         )
        )
        (i32.const -1022)
        (i32.gt_s
         (local.get $2)
         (i32.const -1022)
        )
       )
       (i32.add
        (local.get $1)
        (i32.const 1022)
       )
       (local.tee $2
        (i32.lt_s
         (local.get $1)
         (i32.const -2044)
        )
       )
      )
     )
     (local.set $0
      (select
       (f64.mul
        (local.tee $0
         (f64.mul
          (local.get $0)
          (f64.const 2.2250738585072014e-308)
         )
        )
        (f64.const 2.2250738585072014e-308)
       )
       (local.get $0)
       (local.get $2)
      )
     )
    )
   )
  )
  (f64.mul
   (local.get $0)
   (f64.reinterpret_i64
    (i64.shl
     (i64.extend_i32_u
      (i32.add
       (local.get $1)
       (i32.const 1023)
      )
     )
     (i64.const 52)
    )
   )
  )
 )
 (func $_strlen (; 598 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.eqz
      (i32.and
       (local.tee $2
        (local.get $0)
       )
       (i32.const 3)
      )
     )
    )
    (local.set $1
     (local.get $2)
    )
    (loop $while-in
     (block $label$break$L1
      (if
       (i32.eqz
        (i32.load8_s
         (local.get $0)
        )
       )
       (block
        (local.set $0
         (local.get $1)
        )
        (br $label$break$L1)
       )
      )
      (br_if $while-in
       (i32.and
        (local.tee $1
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
        )
        (i32.const 3)
       )
      )
      (br $__rjti$0)
     )
    )
    (br $__rjto$0)
   )
   (loop $while-in1
    (local.set $1
     (i32.add
      (local.get $0)
      (i32.const 4)
     )
    )
    (if
     (i32.eqz
      (i32.and
       (i32.xor
        (i32.and
         (local.tee $3
          (i32.load
           (local.get $0)
          )
         )
         (i32.const -2139062144)
        )
        (i32.const -2139062144)
       )
       (i32.add
        (local.get $3)
        (i32.const -16843009)
       )
      )
     )
     (block
      (local.set $0
       (local.get $1)
      )
      (br $while-in1)
     )
    )
   )
   (if
    (i32.and
     (local.get $3)
     (i32.const 255)
    )
    (loop $while-in3
     (br_if $while-in3
      (i32.load8_s
       (local.tee $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
      )
     )
    )
   )
  )
  (i32.sub
   (local.get $0)
   (local.get $2)
  )
 )
 (func $_strchr (; 599 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (select
   (local.tee $0
    (call $___strchrnul
     (local.get $0)
     (local.get $1)
    )
   )
   (i32.const 0)
   (i32.eq
    (i32.load8_u
     (local.get $0)
    )
    (i32.and
     (local.get $1)
     (i32.const 255)
    )
   )
  )
 )
 (func $___strchrnul (; 600 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (local.tee $2
    (i32.and
     (local.get $1)
     (i32.const 255)
    )
   )
   (block $label$break$L1
    (if
     (i32.and
      (local.get $0)
      (i32.const 3)
     )
     (block
      (local.set $3
       (i32.and
        (local.get $1)
        (i32.const 255)
       )
      )
      (loop $while-in
       (br_if $label$break$L1
        (i32.or
         (i32.eq
          (local.tee $4
           (i32.load8_s
            (local.get $0)
           )
          )
          (i32.shr_s
           (i32.shl
            (local.get $3)
            (i32.const 24)
           )
           (i32.const 24)
          )
         )
         (i32.eqz
          (local.get $4)
         )
        )
       )
       (br_if $while-in
        (i32.and
         (local.tee $0
          (i32.add
           (local.get $0)
           (i32.const 1)
          )
         )
         (i32.const 3)
        )
       )
      )
     )
    )
    (local.set $3
     (i32.mul
      (local.get $2)
      (i32.const 16843009)
     )
    )
    (if
     (i32.eqz
      (i32.and
       (i32.xor
        (i32.and
         (local.tee $2
          (i32.load
           (local.get $0)
          )
         )
         (i32.const -2139062144)
        )
        (i32.const -2139062144)
       )
       (i32.add
        (local.get $2)
        (i32.const -16843009)
       )
      )
     )
     (loop $while-in2
      (if
       (i32.eqz
        (i32.and
         (i32.xor
          (i32.and
           (local.tee $2
            (i32.xor
             (local.get $2)
             (local.get $3)
            )
           )
           (i32.const -2139062144)
          )
          (i32.const -2139062144)
         )
         (i32.add
          (local.get $2)
          (i32.const -16843009)
         )
        )
       )
       (br_if $while-in2
        (i32.eqz
         (i32.and
          (i32.xor
           (i32.and
            (local.tee $2
             (i32.load
              (local.tee $0
               (i32.add
                (local.get $0)
                (i32.const 4)
               )
              )
             )
            )
            (i32.const -2139062144)
           )
           (i32.const -2139062144)
          )
          (i32.add
           (local.get $2)
           (i32.const -16843009)
          )
         )
        )
       )
      )
     )
    )
    (local.set $2
     (i32.and
      (local.get $1)
      (i32.const 255)
     )
    )
    (loop $while-in4
     (local.set $1
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (if
      (i32.eqz
       (i32.or
        (i32.eq
         (local.tee $3
          (i32.load8_s
           (local.get $0)
          )
         )
         (i32.shr_s
          (i32.shl
           (local.get $2)
           (i32.const 24)
          )
          (i32.const 24)
         )
        )
        (i32.eqz
         (local.get $3)
        )
       )
      )
      (block
       (local.set $0
        (local.get $1)
       )
       (br $while-in4)
      )
     )
    )
   )
   (local.set $0
    (i32.add
     (call $_strlen
      (local.get $0)
     )
     (local.get $0)
    )
   )
  )
  (local.get $0)
 )
 (func $_strcpy (; 601 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $___stpcpy
   (local.get $0)
   (local.get $1)
  )
 )
 (func $___stpcpy (; 602 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.and
      (i32.xor
       (local.tee $2
        (local.get $1)
       )
       (local.get $0)
      )
      (i32.const 3)
     )
    )
    (block $label$break$L1
     (if
      (i32.and
       (local.get $2)
       (i32.const 3)
      )
      (loop $while-in
       (i32.store8
        (local.get $0)
        (local.tee $2
         (i32.load8_s
          (local.get $1)
         )
        )
       )
       (br_if $label$break$L1
        (i32.eqz
         (local.get $2)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (br_if $while-in
        (i32.and
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.const 3)
        )
       )
      )
     )
     (if
      (i32.eqz
       (i32.and
        (i32.xor
         (i32.and
          (local.tee $3
           (i32.load
            (local.get $1)
           )
          )
          (i32.const -2139062144)
         )
         (i32.const -2139062144)
        )
        (i32.add
         (local.get $3)
         (i32.const -16843009)
        )
       )
      )
      (local.set $0
       (loop $while-in1 (result i32)
        (local.set $2
         (i32.add
          (local.get $0)
          (i32.const 4)
         )
        )
        (i32.store
         (local.get $0)
         (local.get $3)
        )
        (if (result i32)
         (i32.and
          (i32.xor
           (i32.and
            (local.tee $3
             (i32.load
              (local.tee $1
               (i32.add
                (local.get $1)
                (i32.const 4)
               )
              )
             )
            )
            (i32.const -2139062144)
           )
           (i32.const -2139062144)
          )
          (i32.add
           (local.get $3)
           (i32.const -16843009)
          )
         )
         (local.get $2)
         (block
          (local.set $0
           (local.get $2)
          )
          (br $while-in1)
         )
        )
       )
      )
     )
     (br $__rjti$0)
    )
    (br $__rjto$0)
   )
   (i32.store8
    (local.get $0)
    (local.tee $2
     (i32.load8_s
      (local.get $1)
     )
    )
   )
   (if
    (local.get $2)
    (loop $while-in3
     (i32.store8
      (local.tee $0
       (i32.add
        (local.get $0)
        (i32.const 1)
       )
      )
      (local.tee $2
       (i32.load8_s
        (local.tee $1
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
       )
      )
     )
     (br_if $while-in3
      (local.get $2)
     )
    )
   )
  )
 )
 (func $___sindf (; 603 ;) (; has Stack IR ;) (param $0 f64) (result f32)
  (local $1 f64)
  (local $2 f64)
  (f32.demote_f64
   (f64.add
    (f64.mul
     (f64.mul
      (local.tee $2
       (f64.mul
        (local.tee $1
         (f64.mul
          (local.get $0)
          (local.get $0)
         )
        )
        (local.get $0)
       )
      )
      (f64.mul
       (local.get $1)
       (local.get $1)
      )
     )
     (f64.add
      (f64.mul
       (local.get $1)
       (f64.const 2.718311493989822e-06)
      )
      (f64.const -1.9839334836096632e-04)
     )
    )
    (f64.add
     (f64.mul
      (local.get $2)
      (f64.add
       (f64.mul
        (local.get $1)
        (f64.const 0.008333329385889463)
       )
       (f64.const -0.16666666641626524)
      )
     )
     (local.get $0)
    )
   )
  )
 )
 (func $___cosdf (; 604 ;) (; has Stack IR ;) (param $0 f64) (result f32)
  (local $1 f64)
  (local.set $1
   (f64.mul
    (local.tee $0
     (f64.mul
      (local.get $0)
      (local.get $0)
     )
    )
    (local.get $0)
   )
  )
  (f32.demote_f64
   (f64.add
    (f64.add
     (f64.sub
      (f64.const 1)
      (f64.mul
       (local.get $0)
       (f64.const 0.499999997251031)
      )
     )
     (f64.mul
      (local.get $1)
      (f64.const 0.04166662332373906)
     )
    )
    (f64.mul
     (f64.mul
      (local.get $0)
      (local.get $1)
     )
     (f64.add
      (f64.mul
       (local.get $0)
       (f64.const 2.439044879627741e-05)
      )
      (f64.const -0.001388676377460993)
     )
    )
   )
  )
 )
 (func $___rem_pio2 (; 605 ;) (; has Stack IR ;) (param $0 f64) (param $1 i32) (result i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f64)
  (local $10 f64)
  (local $11 i32)
  (local $12 i64)
  (local $13 i32)
  (local.set $13
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 48)
   )
  )
  (local.set $7
   (i32.add
    (local.get $6)
    (i32.const 16)
   )
  )
  (local.set $8
   (i32.wrap_i64
    (i64.shr_u
     (local.tee $12
      (i64.reinterpret_f64
       (local.get $0)
      )
     )
     (i64.const 63)
    )
   )
  )
  (local.set $1
   (block $__rjto$0 (result i32)
    (block $__rjti$0
     (br $__rjto$0
      (if (result i32)
       (i32.lt_u
        (local.tee $4
         (i32.and
          (local.tee $3
           (i32.wrap_i64
            (i64.shr_u
             (local.get $12)
             (i64.const 32)
            )
           )
          )
          (i32.const 2147483647)
         )
        )
        (i32.const 1074752123)
       )
       (block (result i32)
        (br_if $__rjti$0
         (i32.eq
          (i32.and
           (local.get $3)
           (i32.const 1048575)
          )
          (i32.const 598523)
         )
        )
        (local.set $3
         (i32.ne
          (local.get $8)
          (i32.const 0)
         )
        )
        (if (result i32)
         (i32.lt_u
          (local.get $4)
          (i32.const 1073928573)
         )
         (if (result i32)
          (local.get $3)
          (block (result i32)
           (f64.store
            (local.get $1)
            (local.tee $2
             (f64.add
              (local.tee $0
               (f64.add
                (local.get $0)
                (f64.const 1.5707963267341256)
               )
              )
              (f64.const 6.077100506506192e-11)
             )
            )
           )
           (f64.store offset=8
            (local.get $1)
            (f64.add
             (f64.sub
              (local.get $0)
              (local.get $2)
             )
             (f64.const 6.077100506506192e-11)
            )
           )
           (i32.const -1)
          )
          (block (result i32)
           (f64.store
            (local.get $1)
            (local.tee $2
             (f64.add
              (local.tee $0
               (f64.add
                (local.get $0)
                (f64.const -1.5707963267341256)
               )
              )
              (f64.const -6.077100506506192e-11)
             )
            )
           )
           (f64.store offset=8
            (local.get $1)
            (f64.add
             (f64.sub
              (local.get $0)
              (local.get $2)
             )
             (f64.const -6.077100506506192e-11)
            )
           )
           (i32.const 1)
          )
         )
         (if (result i32)
          (local.get $3)
          (block (result i32)
           (f64.store
            (local.get $1)
            (local.tee $2
             (f64.add
              (local.tee $0
               (f64.add
                (local.get $0)
                (f64.const 3.1415926534682512)
               )
              )
              (f64.const 1.2154201013012384e-10)
             )
            )
           )
           (f64.store offset=8
            (local.get $1)
            (f64.add
             (f64.sub
              (local.get $0)
              (local.get $2)
             )
             (f64.const 1.2154201013012384e-10)
            )
           )
           (i32.const -2)
          )
          (block (result i32)
           (f64.store
            (local.get $1)
            (local.tee $2
             (f64.add
              (local.tee $0
               (f64.add
                (local.get $0)
                (f64.const -3.1415926534682512)
               )
              )
              (f64.const -1.2154201013012384e-10)
             )
            )
           )
           (f64.store offset=8
            (local.get $1)
            (f64.add
             (f64.sub
              (local.get $0)
              (local.get $2)
             )
             (f64.const -1.2154201013012384e-10)
            )
           )
           (i32.const 2)
          )
         )
        )
       )
       (block $do-once (result i32)
        (if
         (i32.lt_u
          (local.get $4)
          (i32.const 1075594812)
         )
         (if
          (i32.lt_u
           (local.get $4)
           (i32.const 1075183037)
          )
          (block
           (br_if $__rjti$0
            (i32.eq
             (local.get $4)
             (i32.const 1074977148)
            )
           )
           (if
            (local.get $8)
            (block
             (f64.store
              (local.get $1)
              (local.tee $2
               (f64.add
                (local.tee $0
                 (f64.add
                  (local.get $0)
                  (f64.const 4.712388980202377)
                 )
                )
                (f64.const 1.8231301519518578e-10)
               )
              )
             )
             (f64.store offset=8
              (local.get $1)
              (f64.add
               (f64.sub
                (local.get $0)
                (local.get $2)
               )
               (f64.const 1.8231301519518578e-10)
              )
             )
             (br $do-once
              (i32.const -3)
             )
            )
            (block
             (f64.store
              (local.get $1)
              (local.tee $2
               (f64.add
                (local.tee $0
                 (f64.add
                  (local.get $0)
                  (f64.const -4.712388980202377)
                 )
                )
                (f64.const -1.8231301519518578e-10)
               )
              )
             )
             (f64.store offset=8
              (local.get $1)
              (f64.add
               (f64.sub
                (local.get $0)
                (local.get $2)
               )
               (f64.const -1.8231301519518578e-10)
              )
             )
             (br $do-once
              (i32.const 3)
             )
            )
           )
          )
          (block
           (br_if $__rjti$0
            (i32.eq
             (local.get $4)
             (i32.const 1075388923)
            )
           )
           (if
            (local.get $8)
            (block
             (f64.store
              (local.get $1)
              (local.tee $2
               (f64.add
                (local.tee $0
                 (f64.add
                  (local.get $0)
                  (f64.const 6.2831853069365025)
                 )
                )
                (f64.const 2.430840202602477e-10)
               )
              )
             )
             (f64.store offset=8
              (local.get $1)
              (f64.add
               (f64.sub
                (local.get $0)
                (local.get $2)
               )
               (f64.const 2.430840202602477e-10)
              )
             )
             (br $do-once
              (i32.const -4)
             )
            )
            (block
             (f64.store
              (local.get $1)
              (local.tee $2
               (f64.add
                (local.tee $0
                 (f64.add
                  (local.get $0)
                  (f64.const -6.2831853069365025)
                 )
                )
                (f64.const -2.430840202602477e-10)
               )
              )
             )
             (f64.store offset=8
              (local.get $1)
              (f64.add
               (f64.sub
                (local.get $0)
                (local.get $2)
               )
               (f64.const -2.430840202602477e-10)
              )
             )
             (br $do-once
              (i32.const 4)
             )
            )
           )
          )
         )
        )
        (br_if $__rjti$0
         (i32.lt_u
          (local.get $4)
          (i32.const 1094263291)
         )
        )
        (if
         (i32.gt_u
          (local.get $4)
          (i32.const 2146435071)
         )
         (block
          (f64.store offset=8
           (local.get $1)
           (local.tee $0
            (f64.sub
             (local.get $0)
             (local.get $0)
            )
           )
          )
          (f64.store
           (local.get $1)
           (local.get $0)
          )
          (br $do-once
           (i32.const 0)
          )
         )
        )
        (local.set $3
         (i32.const 0)
        )
        (local.set $0
         (f64.reinterpret_i64
          (i64.or
           (i64.and
            (local.get $12)
            (i64.const 4503599627370495)
           )
           (i64.const 4710765210229538816)
          )
         )
        )
        (loop $while-in
         (f64.store
          (i32.add
           (i32.shl
            (local.get $3)
            (i32.const 3)
           )
           (local.get $7)
          )
          (local.tee $2
           (f64.convert_i32_s
            (i32.trunc_f64_s
             (local.get $0)
            )
           )
          )
         )
         (local.set $0
          (f64.mul
           (f64.sub
            (local.get $0)
            (local.get $2)
           )
           (f64.const 16777216)
          )
         )
         (br_if $while-in
          (i32.ne
           (local.tee $3
            (i32.add
             (local.get $3)
             (i32.const 1)
            )
           )
           (i32.const 2)
          )
         )
        )
        (f64.store offset=16
         (local.get $7)
         (local.get $0)
        )
        (if
         (f64.eq
          (local.get $0)
          (f64.const 0)
         )
         (block
          (local.set $3
           (i32.const 1)
          )
          (loop $while-in1
           (local.set $11
            (i32.add
             (local.get $3)
             (i32.const -1)
            )
           )
           (if
            (f64.eq
             (f64.load
              (i32.add
               (i32.shl
                (local.get $3)
                (i32.const 3)
               )
               (local.get $7)
              )
             )
             (f64.const 0)
            )
            (block
             (local.set $3
              (local.get $11)
             )
             (br $while-in1)
            )
           )
          )
         )
         (local.set $3
          (i32.const 2)
         )
        )
        (local.set $3
         (call $___rem_pio2_large
          (local.get $7)
          (local.get $6)
          (i32.add
           (i32.shr_u
            (local.get $4)
            (i32.const 20)
           )
           (i32.const -1046)
          )
          (i32.add
           (local.get $3)
           (i32.const 1)
          )
          (i32.const 1)
         )
        )
        (local.set $0
         (f64.load
          (local.get $6)
         )
        )
        (if (result i32)
         (local.get $8)
         (block (result i32)
          (f64.store
           (local.get $1)
           (f64.neg
            (local.get $0)
           )
          )
          (f64.store offset=8
           (local.get $1)
           (f64.neg
            (f64.load offset=8
             (local.get $6)
            )
           )
          )
          (i32.sub
           (i32.const 0)
           (local.get $3)
          )
         )
         (block (result i32)
          (f64.store
           (local.get $1)
           (local.get $0)
          )
          (f64.store offset=8
           (local.get $1)
           (f64.load offset=8
            (local.get $6)
           )
          )
          (local.get $3)
         )
        )
       )
      )
     )
    )
    (local.set $3
     (i32.trunc_f64_s
      (local.tee $5
       (f64.add
        (f64.add
         (f64.mul
          (local.get $0)
          (f64.const 0.6366197723675814)
         )
         (f64.const 6755399441055744)
        )
        (f64.const -6755399441055744)
       )
      )
     )
    )
    (f64.store
     (local.get $1)
     (local.tee $0
      (f64.sub
       (local.tee $2
        (f64.sub
         (local.get $0)
         (f64.mul
          (local.get $5)
          (f64.const 1.5707963267341256)
         )
        )
       )
       (local.tee $9
        (f64.mul
         (local.get $5)
         (f64.const 6.077100506506192e-11)
        )
       )
      )
     )
    )
    (if
     (i32.gt_s
      (i32.sub
       (local.tee $11
        (i32.shr_u
         (local.get $4)
         (i32.const 20)
        )
       )
       (i32.and
        (i32.wrap_i64
         (i64.shr_u
          (i64.reinterpret_f64
           (local.get $0)
          )
          (i64.const 52)
         )
        )
        (i32.const 2047)
       )
      )
      (i32.const 16)
     )
     (block
      (local.set $9
       (f64.sub
        (f64.mul
         (local.get $5)
         (f64.const 2.0222662487959506e-21)
        )
        (f64.sub
         (f64.sub
          (local.get $2)
          (local.tee $2
           (f64.sub
            (local.get $2)
            (local.tee $0
             (f64.mul
              (local.get $5)
              (f64.const 6.077100506303966e-11)
             )
            )
           )
          )
         )
         (local.get $0)
        )
       )
      )
      (f64.store
       (local.get $1)
       (local.tee $0
        (f64.sub
         (local.get $2)
         (local.get $9)
        )
       )
      )
      (local.set $10
       (f64.sub
        (f64.mul
         (local.get $5)
         (f64.const 8.4784276603689e-32)
        )
        (f64.sub
         (f64.sub
          (local.get $2)
          (local.tee $5
           (f64.sub
            (local.get $2)
            (local.tee $10
             (f64.mul
              (local.get $5)
              (f64.const 2.0222662487111665e-21)
             )
            )
           )
          )
         )
         (local.get $10)
        )
       )
      )
      (if
       (i32.gt_s
        (i32.sub
         (local.get $11)
         (i32.and
          (i32.wrap_i64
           (i64.shr_u
            (i64.reinterpret_f64
             (local.get $0)
            )
            (i64.const 52)
           )
          )
          (i32.const 2047)
         )
        )
        (i32.const 49)
       )
       (block
        (f64.store
         (local.get $1)
         (local.tee $0
          (f64.sub
           (local.get $5)
           (local.get $10)
          )
         )
        )
        (local.set $2
         (local.get $5)
        )
        (local.set $9
         (local.get $10)
        )
       )
      )
     )
    )
    (f64.store offset=8
     (local.get $1)
     (f64.sub
      (f64.sub
       (local.get $2)
       (local.get $0)
      )
      (local.get $9)
     )
    )
    (local.get $3)
   )
  )
  (global.set $STACKTOP
   (local.get $13)
  )
  (local.get $1)
 )
 (func $___rem_pio2_large (; 606 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 f64)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 f64)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local.set $25
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $8
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 560)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 560)
   )
  )
  (local.set $17
   (i32.add
    (local.get $8)
    (i32.const 320)
   )
  )
  (local.set $19
   (select
    (local.tee $6
     (i32.div_s
      (i32.add
       (local.get $2)
       (i32.const -3)
      )
      (i32.const 24)
     )
    )
    (i32.const 0)
    (i32.gt_s
     (local.get $6)
     (i32.const 0)
    )
   )
  )
  (if
   (i32.ge_s
    (i32.add
     (local.tee $15
      (i32.load
       (i32.add
        (i32.shl
         (local.get $4)
         (i32.const 2)
        )
        (i32.const 13440)
       )
      )
     )
     (local.tee $11
      (i32.add
       (local.get $3)
       (i32.const -1)
      )
     )
    )
    (i32.const 0)
   )
   (block
    (local.set $9
     (i32.add
      (local.get $3)
      (local.get $15)
     )
    )
    (local.set $6
     (i32.const 0)
    )
    (local.set $7
     (i32.sub
      (local.get $19)
      (local.get $11)
     )
    )
    (loop $while-in
     (f64.store
      (i32.add
       (i32.shl
        (local.get $6)
        (i32.const 3)
       )
       (local.get $17)
      )
      (if (result f64)
       (i32.lt_s
        (local.get $7)
        (i32.const 0)
       )
       (f64.const 0)
       (f64.convert_i32_s
        (i32.load
         (i32.add
          (i32.shl
           (local.get $7)
           (i32.const 2)
          )
          (i32.const 13456)
         )
        )
       )
      )
     )
     (local.set $7
      (i32.add
       (local.get $7)
       (i32.const 1)
      )
     )
     (br_if $while-in
      (i32.ne
       (local.tee $6
        (i32.add
         (local.get $6)
         (i32.const 1)
        )
       )
       (local.get $9)
      )
     )
    )
   )
  )
  (local.set $13
   (i32.add
    (local.get $8)
    (i32.const 480)
   )
  )
  (local.set $10
   (i32.add
    (local.get $8)
    (i32.const 160)
   )
  )
  (local.set $16
   (local.get $8)
  )
  (local.set $12
   (i32.add
    (local.tee $26
     (i32.mul
      (local.get $19)
      (i32.const -24)
     )
    )
    (i32.add
     (local.get $2)
     (i32.const -24)
    )
   )
  )
  (local.set $9
   (i32.gt_s
    (local.get $3)
    (i32.const 0)
   )
  )
  (local.set $7
   (i32.const 0)
  )
  (loop $while-in1
   (if
    (local.get $9)
    (block
     (local.set $8
      (i32.add
       (local.get $7)
       (local.get $11)
      )
     )
     (local.set $5
      (f64.const 0)
     )
     (local.set $6
      (i32.const 0)
     )
     (loop $while-in3
      (local.set $5
       (f64.add
        (local.get $5)
        (f64.mul
         (f64.load
          (i32.add
           (i32.shl
            (local.get $6)
            (i32.const 3)
           )
           (local.get $0)
          )
         )
         (f64.load
          (i32.add
           (i32.shl
            (i32.sub
             (local.get $8)
             (local.get $6)
            )
            (i32.const 3)
           )
           (local.get $17)
          )
         )
        )
       )
      )
      (br_if $while-in3
       (i32.ne
        (local.tee $6
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
        (local.get $3)
       )
      )
     )
    )
    (local.set $5
     (f64.const 0)
    )
   )
   (f64.store
    (i32.add
     (i32.shl
      (local.get $7)
      (i32.const 3)
     )
     (local.get $16)
    )
    (local.get $5)
   )
   (local.set $6
    (i32.add
     (local.get $7)
     (i32.const 1)
    )
   )
   (if
    (i32.lt_s
     (local.get $7)
     (local.get $15)
    )
    (block
     (local.set $7
      (local.get $6)
     )
     (br $while-in1)
    )
   )
  )
  (local.set $21
   (i32.gt_s
    (local.get $12)
    (i32.const 0)
   )
  )
  (local.set $22
   (i32.sub
    (i32.const 24)
    (local.get $12)
   )
  )
  (local.set $27
   (i32.sub
    (i32.const 23)
    (local.get $12)
   )
  )
  (local.set $28
   (i32.eqz
    (local.get $12)
   )
  )
  (local.set $29
   (i32.gt_s
    (local.get $3)
    (i32.const 0)
   )
  )
  (local.set $6
   (local.get $15)
  )
  (block $__rjto$4
   (block $__rjti$4
    (loop $while-in5
     (block $__rjti$3
      (local.set $5
       (f64.load
        (i32.add
         (i32.shl
          (local.get $6)
          (i32.const 3)
         )
         (local.get $16)
        )
       )
      )
      (if
       (local.tee $11
        (i32.gt_s
         (local.get $6)
         (i32.const 0)
        )
       )
       (block
        (local.set $8
         (i32.const 0)
        )
        (local.set $7
         (local.get $6)
        )
        (loop $while-in7
         (i32.store
          (i32.add
           (i32.shl
            (local.get $8)
            (i32.const 2)
           )
           (local.get $13)
          )
          (i32.trunc_f64_s
           (f64.sub
            (local.get $5)
            (f64.mul
             (local.tee $5
              (f64.convert_i32_s
               (i32.trunc_f64_s
                (f64.mul
                 (local.get $5)
                 (f64.const 5.960464477539063e-08)
                )
               )
              )
             )
             (f64.const 16777216)
            )
           )
          )
         )
         (local.set $5
          (f64.add
           (f64.load
            (i32.add
             (i32.shl
              (local.tee $9
               (i32.add
                (local.get $7)
                (i32.const -1)
               )
              )
              (i32.const 3)
             )
             (local.get $16)
            )
           )
           (local.get $5)
          )
         )
         (local.set $8
          (i32.add
           (local.get $8)
           (i32.const 1)
          )
         )
         (if
          (i32.gt_s
           (local.get $7)
           (i32.const 1)
          )
          (block
           (local.set $7
            (local.get $9)
           )
           (br $while-in7)
          )
         )
        )
       )
      )
      (local.set $7
       (i32.trunc_f64_s
        (local.tee $5
         (f64.sub
          (local.tee $5
           (call $_scalbn
            (local.get $5)
            (local.get $12)
           )
          )
          (f64.mul
           (f64.floor
            (f64.mul
             (local.get $5)
             (f64.const 0.125)
            )
           )
           (f64.const 8)
          )
         )
        )
       )
      )
      (local.set $5
       (f64.sub
        (local.get $5)
        (f64.convert_i32_s
         (local.get $7)
        )
       )
      )
      (block $__rjto$2
       (block $__rjti$2
        (block $__rjti$1
         (local.set $9
          (if (result i32)
           (local.get $21)
           (block
            (local.set $18
             (i32.shr_s
              (local.tee $8
               (i32.load
                (local.tee $9
                 (i32.add
                  (i32.shl
                   (i32.add
                    (local.get $6)
                    (i32.const -1)
                   )
                   (i32.const 2)
                  )
                  (local.get $13)
                 )
                )
               )
              )
              (local.get $22)
             )
            )
            (i32.store
             (local.get $9)
             (local.tee $8
              (i32.sub
               (local.get $8)
               (i32.shl
                (local.get $18)
                (local.get $22)
               )
              )
             )
            )
            (local.set $9
             (i32.shr_s
              (local.get $8)
              (local.get $27)
             )
            )
            (local.set $7
             (i32.add
              (local.get $7)
              (local.get $18)
             )
            )
            (br $__rjti$1)
           )
           (if (result i32)
            (local.get $28)
            (block
             (local.set $9
              (i32.shr_s
               (i32.load
                (i32.add
                 (i32.shl
                  (i32.add
                   (local.get $6)
                   (i32.const -1)
                  )
                  (i32.const 2)
                 )
                 (local.get $13)
                )
               )
               (i32.const 23)
              )
             )
             (br $__rjti$1)
            )
            (if (result i32)
             (f64.ge
              (local.get $5)
              (f64.const 0.5)
             )
             (block
              (local.set $9
               (i32.const 2)
              )
              (br $__rjti$2)
             )
             (i32.const 0)
            )
           )
          )
         )
         (br $__rjto$2)
        )
        (br_if $__rjti$2
         (i32.gt_s
          (local.get $9)
          (i32.const 0)
         )
        )
        (br $__rjto$2)
       )
       (local.set $8
        (local.get $7)
       )
       (local.set $11
        (if (result i32)
         (local.get $11)
         (block (result i32)
          (local.set $7
           (i32.const 0)
          )
          (local.set $11
           (i32.const 0)
          )
          (loop $while-in9 (result i32)
           (local.set $23
            (i32.load
             (local.tee $18
              (i32.add
               (i32.shl
                (local.get $11)
                (i32.const 2)
               )
               (local.get $13)
              )
             )
            )
           )
           (block $__rjto$0
            (block $__rjti$0
             (local.set $7
              (if (result i32)
               (local.get $7)
               (block
                (local.set $24
                 (i32.const 16777215)
                )
                (br $__rjti$0)
               )
               (if (result i32)
                (local.get $23)
                (block
                 (local.set $24
                  (i32.const 16777216)
                 )
                 (local.set $7
                  (i32.const 1)
                 )
                 (br $__rjti$0)
                )
                (i32.const 0)
               )
              )
             )
             (br $__rjto$0)
            )
            (i32.store
             (local.get $18)
             (i32.sub
              (local.get $24)
              (local.get $23)
             )
            )
           )
           (br_if $while-in9
            (i32.ne
             (local.get $6)
             (local.tee $11
              (i32.add
               (local.get $11)
               (i32.const 1)
              )
             )
            )
           )
           (local.get $7)
          )
         )
         (i32.const 0)
        )
       )
       (if
        (local.get $21)
        (block $label$break$L44
         (block $switch-case11
          (block $switch-case
           (br_table $switch-case $switch-case11 $label$break$L44
            (i32.sub
             (local.get $12)
             (i32.const 1)
            )
           )
          )
          (i32.store
           (local.tee $7
            (i32.add
             (i32.shl
              (i32.add
               (local.get $6)
               (i32.const -1)
              )
              (i32.const 2)
             )
             (local.get $13)
            )
           )
           (i32.and
            (i32.load
             (local.get $7)
            )
            (i32.const 8388607)
           )
          )
          (br $label$break$L44)
         )
         (i32.store
          (local.tee $7
           (i32.add
            (i32.shl
             (i32.add
              (local.get $6)
              (i32.const -1)
             )
             (i32.const 2)
            )
            (local.get $13)
           )
          )
          (i32.and
           (i32.load
            (local.get $7)
           )
           (i32.const 4194303)
          )
         )
        )
       )
       (local.set $7
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
       (if
        (i32.eq
         (local.get $9)
         (i32.const 2)
        )
        (block
         (local.set $5
          (f64.sub
           (f64.const 1)
           (local.get $5)
          )
         )
         (if
          (local.get $11)
          (local.set $5
           (f64.sub
            (local.get $5)
            (call $_scalbn
             (f64.const 1)
             (local.get $12)
            )
           )
          )
         )
         (local.set $9
          (i32.const 2)
         )
        )
       )
      )
      (br_if $__rjti$4
       (f64.ne
        (local.get $5)
        (f64.const 0)
       )
      )
      (if
       (i32.gt_s
        (local.get $6)
        (local.get $15)
       )
       (block
        (local.set $8
         (local.get $6)
        )
        (local.set $11
         (i32.const 0)
        )
        (loop $while-in13
         (local.set $11
          (i32.or
           (i32.load
            (i32.add
             (i32.shl
              (local.tee $8
               (i32.add
                (local.get $8)
                (i32.const -1)
               )
              )
              (i32.const 2)
             )
             (local.get $13)
            )
           )
           (local.get $11)
          )
         )
         (br_if $while-in13
          (i32.gt_s
           (local.get $8)
           (local.get $15)
          )
         )
        )
        (br_if $__rjti$3
         (local.get $11)
        )
       )
      )
      (local.set $8
       (i32.const 1)
      )
      (loop $while-in15
       (local.set $7
        (i32.add
         (local.get $8)
         (i32.const 1)
        )
       )
       (if
        (i32.eqz
         (i32.load
          (i32.add
           (i32.shl
            (i32.sub
             (local.get $15)
             (local.get $8)
            )
            (i32.const 2)
           )
           (local.get $13)
          )
         )
        )
        (block
         (local.set $8
          (local.get $7)
         )
         (br $while-in15)
        )
       )
      )
      (local.set $7
       (i32.add
        (local.get $6)
        (local.get $8)
       )
      )
      (loop $while-in17
       (f64.store
        (i32.add
         (i32.shl
          (local.tee $9
           (i32.add
            (local.get $3)
            (local.get $6)
           )
          )
          (i32.const 3)
         )
         (local.get $17)
        )
        (f64.convert_i32_s
         (i32.load
          (i32.add
           (i32.shl
            (i32.add
             (local.tee $8
              (i32.add
               (local.get $6)
               (i32.const 1)
              )
             )
             (local.get $19)
            )
            (i32.const 2)
           )
           (i32.const 13456)
          )
         )
        )
       )
       (if
        (local.get $29)
        (block
         (local.set $5
          (f64.const 0)
         )
         (local.set $6
          (i32.const 0)
         )
         (loop $while-in19
          (local.set $5
           (f64.add
            (local.get $5)
            (f64.mul
             (f64.load
              (i32.add
               (i32.shl
                (local.get $6)
                (i32.const 3)
               )
               (local.get $0)
              )
             )
             (f64.load
              (i32.add
               (i32.shl
                (i32.sub
                 (local.get $9)
                 (local.get $6)
                )
                (i32.const 3)
               )
               (local.get $17)
              )
             )
            )
           )
          )
          (br_if $while-in19
           (i32.ne
            (local.tee $6
             (i32.add
              (local.get $6)
              (i32.const 1)
             )
            )
            (local.get $3)
           )
          )
         )
        )
        (local.set $5
         (f64.const 0)
        )
       )
       (f64.store
        (i32.add
         (i32.shl
          (local.get $8)
          (i32.const 3)
         )
         (local.get $16)
        )
        (local.get $5)
       )
       (if
        (i32.lt_s
         (local.get $8)
         (local.get $7)
        )
        (block
         (local.set $6
          (local.get $8)
         )
         (br $while-in17)
        )
       )
      )
      (local.set $6
       (local.get $7)
      )
      (br $while-in5)
     )
    )
    (local.set $0
     (local.get $6)
    )
    (local.set $2
     (local.get $12)
    )
    (loop $while-in21
     (local.set $2
      (i32.add
       (local.get $2)
       (i32.const -24)
      )
     )
     (br_if $while-in21
      (i32.eqz
       (i32.load
        (i32.add
         (i32.shl
          (local.tee $0
           (i32.add
            (local.get $0)
            (i32.const -1)
           )
          )
          (i32.const 2)
         )
         (local.get $13)
        )
       )
      )
     )
    )
    (br $__rjto$4)
   )
   (i32.store
    (i32.add
     (i32.shl
      (local.tee $0
       (if (result i32)
        (f64.ge
         (local.tee $5
          (call $_scalbn
           (local.get $5)
           (i32.sub
            (i32.const 0)
            (local.get $12)
           )
          )
         )
         (f64.const 16777216)
        )
        (block (result i32)
         (i32.store
          (i32.add
           (i32.shl
            (local.get $6)
            (i32.const 2)
           )
           (local.get $13)
          )
          (i32.trunc_f64_s
           (f64.sub
            (local.get $5)
            (f64.mul
             (f64.convert_i32_s
              (local.tee $3
               (i32.trunc_f64_s
                (f64.mul
                 (local.get $5)
                 (f64.const 5.960464477539063e-08)
                )
               )
              )
             )
             (f64.const 16777216)
            )
           )
          )
         )
         (local.set $2
          (i32.add
           (local.get $2)
           (local.get $26)
          )
         )
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
        (block (result i32)
         (local.set $3
          (i32.trunc_f64_s
           (local.get $5)
          )
         )
         (local.set $2
          (local.get $12)
         )
         (local.get $6)
        )
       )
      )
      (i32.const 2)
     )
     (local.get $13)
    )
    (local.get $3)
   )
  )
  (local.set $5
   (call $_scalbn
    (f64.const 1)
    (local.get $2)
   )
  )
  (if
   (local.tee $12
    (i32.gt_s
     (local.get $0)
     (i32.const -1)
    )
   )
   (block
    (local.set $2
     (local.get $0)
    )
    (loop $while-in23
     (f64.store
      (i32.add
       (i32.shl
        (local.get $2)
        (i32.const 3)
       )
       (local.get $16)
      )
      (f64.mul
       (local.get $5)
       (f64.convert_i32_s
        (i32.load
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 2)
          )
          (local.get $13)
         )
        )
       )
      )
     )
     (local.set $5
      (f64.mul
       (local.get $5)
       (f64.const 5.960464477539063e-08)
      )
     )
     (local.set $3
      (i32.add
       (local.get $2)
       (i32.const -1)
      )
     )
     (if
      (i32.gt_s
       (local.get $2)
       (i32.const 0)
      )
      (block
       (local.set $2
        (local.get $3)
       )
       (br $while-in23)
      )
     )
    )
    (if
     (local.get $12)
     (block
      (local.set $2
       (local.get $0)
      )
      (loop $while-in25
       (local.set $8
        (i32.sub
         (local.get $0)
         (local.get $2)
        )
       )
       (local.set $5
        (f64.const 0)
       )
       (local.set $6
        (i32.const 0)
       )
       (loop $while-in27
        (local.set $5
         (f64.add
          (local.get $5)
          (f64.mul
           (f64.load
            (i32.add
             (i32.shl
              (local.get $6)
              (i32.const 3)
             )
             (i32.const 13728)
            )
           )
           (f64.load
            (i32.add
             (i32.shl
              (i32.add
               (local.get $2)
               (local.get $6)
              )
              (i32.const 3)
             )
             (local.get $16)
            )
           )
          )
         )
        )
        (local.set $3
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
        (if
         (i32.eqz
          (i32.or
           (i32.ge_s
            (local.get $6)
            (local.get $15)
           )
           (i32.ge_u
            (local.get $6)
            (local.get $8)
           )
          )
         )
         (block
          (local.set $6
           (local.get $3)
          )
          (br $while-in27)
         )
        )
       )
       (f64.store
        (i32.add
         (i32.shl
          (local.get $8)
          (i32.const 3)
         )
         (local.get $10)
        )
        (local.get $5)
       )
       (local.set $3
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
       )
       (if
        (i32.gt_s
         (local.get $2)
         (i32.const 0)
        )
        (block
         (local.set $2
          (local.get $3)
         )
         (br $while-in25)
        )
       )
      )
     )
    )
   )
  )
  (block $label$break$L93
   (block $switch-case45
    (block $switch-case38
     (block $switch-case32
      (br_table $switch-case32 $switch-case38 $switch-case38 $switch-case45 $label$break$L93
       (local.get $4)
      )
     )
     (if
      (local.get $12)
      (block
       (local.set $5
        (f64.const 0)
       )
       (loop $while-in31
        (local.set $5
         (f64.add
          (local.get $5)
          (f64.load
           (i32.add
            (i32.shl
             (local.get $0)
             (i32.const 3)
            )
            (local.get $10)
           )
          )
         )
        )
        (local.set $2
         (i32.add
          (local.get $0)
          (i32.const -1)
         )
        )
        (if
         (i32.gt_s
          (local.get $0)
          (i32.const 0)
         )
         (block
          (local.set $0
           (local.get $2)
          )
          (br $while-in31)
         )
        )
       )
      )
      (local.set $5
       (f64.const 0)
      )
     )
     (f64.store
      (local.get $1)
      (select
       (f64.neg
        (local.get $5)
       )
       (local.get $5)
       (local.get $9)
      )
     )
     (br $label$break$L93)
    )
    (if
     (local.get $12)
     (block
      (local.set $5
       (f64.const 0)
      )
      (local.set $2
       (local.get $0)
      )
      (loop $while-in35
       (local.set $5
        (f64.add
         (local.get $5)
         (f64.load
          (i32.add
           (i32.shl
            (local.get $2)
            (i32.const 3)
           )
           (local.get $10)
          )
         )
        )
       )
       (local.set $3
        (i32.add
         (local.get $2)
         (i32.const -1)
        )
       )
       (if
        (i32.gt_s
         (local.get $2)
         (i32.const 0)
        )
        (block
         (local.set $2
          (local.get $3)
         )
         (br $while-in35)
        )
       )
      )
     )
     (local.set $5
      (f64.const 0)
     )
    )
    (f64.store
     (local.get $1)
     (select
      (local.get $5)
      (f64.neg
       (local.get $5)
      )
      (local.tee $4
       (i32.eqz
        (local.get $9)
       )
      )
     )
    )
    (local.set $5
     (f64.sub
      (f64.load
       (local.get $10)
      )
      (local.get $5)
     )
    )
    (if
     (i32.ge_s
      (local.get $0)
      (i32.const 1)
     )
     (block
      (local.set $3
       (i32.const 1)
      )
      (loop $while-in37
       (local.set $5
        (f64.add
         (local.get $5)
         (f64.load
          (i32.add
           (i32.shl
            (local.get $3)
            (i32.const 3)
           )
           (local.get $10)
          )
         )
        )
       )
       (local.set $2
        (i32.add
         (local.get $3)
         (i32.const 1)
        )
       )
       (if
        (i32.ne
         (local.get $0)
         (local.get $3)
        )
        (block
         (local.set $3
          (local.get $2)
         )
         (br $while-in37)
        )
       )
      )
     )
    )
    (f64.store offset=8
     (local.get $1)
     (select
      (local.get $5)
      (f64.neg
       (local.get $5)
      )
      (local.get $4)
     )
    )
    (br $label$break$L93)
   )
   (if
    (i32.gt_s
     (local.get $0)
     (i32.const 0)
    )
    (block
     (local.set $14
      (f64.load
       (i32.add
        (i32.shl
         (local.get $0)
         (i32.const 3)
        )
        (local.get $10)
       )
      )
     )
     (local.set $2
      (local.get $0)
     )
     (loop $while-in40
      (local.set $5
       (f64.add
        (local.tee $20
         (f64.load
          (local.tee $4
           (i32.add
            (i32.shl
             (local.tee $3
              (i32.add
               (local.get $2)
               (i32.const -1)
              )
             )
             (i32.const 3)
            )
            (local.get $10)
           )
          )
         )
        )
        (local.get $14)
       )
      )
      (f64.store
       (i32.add
        (i32.shl
         (local.get $2)
         (i32.const 3)
        )
        (local.get $10)
       )
       (f64.add
        (local.get $14)
        (f64.sub
         (local.get $20)
         (local.get $5)
        )
       )
      )
      (f64.store
       (local.get $4)
       (local.get $5)
      )
      (if
       (i32.gt_s
        (local.get $2)
        (i32.const 1)
       )
       (block
        (local.set $14
         (local.get $5)
        )
        (local.set $2
         (local.get $3)
        )
        (br $while-in40)
       )
      )
     )
     (if
      (local.tee $6
       (i32.gt_s
        (local.get $0)
        (i32.const 1)
       )
      )
      (block
       (local.set $14
        (f64.load
         (i32.add
          (i32.shl
           (local.get $0)
           (i32.const 3)
          )
          (local.get $10)
         )
        )
       )
       (local.set $2
        (local.get $0)
       )
       (loop $while-in42
        (local.set $5
         (f64.add
          (local.tee $20
           (f64.load
            (local.tee $4
             (i32.add
              (i32.shl
               (local.tee $3
                (i32.add
                 (local.get $2)
                 (i32.const -1)
                )
               )
               (i32.const 3)
              )
              (local.get $10)
             )
            )
           )
          )
          (local.get $14)
         )
        )
        (f64.store
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 3)
          )
          (local.get $10)
         )
         (f64.add
          (local.get $14)
          (f64.sub
           (local.get $20)
           (local.get $5)
          )
         )
        )
        (f64.store
         (local.get $4)
         (local.get $5)
        )
        (if
         (i32.gt_s
          (local.get $2)
          (i32.const 2)
         )
         (block
          (local.set $14
           (local.get $5)
          )
          (local.set $2
           (local.get $3)
          )
          (br $while-in42)
         )
        )
       )
       (if
        (local.get $6)
        (block
         (local.set $5
          (f64.const 0)
         )
         (loop $while-in44
          (local.set $5
           (f64.add
            (local.get $5)
            (f64.load
             (i32.add
              (i32.shl
               (local.get $0)
               (i32.const 3)
              )
              (local.get $10)
             )
            )
           )
          )
          (local.set $2
           (i32.add
            (local.get $0)
            (i32.const -1)
           )
          )
          (if
           (i32.gt_s
            (local.get $0)
            (i32.const 2)
           )
           (block
            (local.set $0
             (local.get $2)
            )
            (br $while-in44)
           )
          )
         )
        )
        (local.set $5
         (f64.const 0)
        )
       )
      )
      (local.set $5
       (f64.const 0)
      )
     )
    )
    (local.set $5
     (f64.const 0)
    )
   )
   (local.set $14
    (f64.load
     (local.get $10)
    )
   )
   (if
    (local.get $9)
    (block
     (f64.store
      (local.get $1)
      (f64.neg
       (local.get $14)
      )
     )
     (f64.store offset=8
      (local.get $1)
      (f64.neg
       (f64.load offset=8
        (local.get $10)
       )
      )
     )
     (f64.store offset=16
      (local.get $1)
      (f64.neg
       (local.get $5)
      )
     )
    )
    (block
     (f64.store
      (local.get $1)
      (local.get $14)
     )
     (f64.store offset=8
      (local.get $1)
      (f64.load offset=8
       (local.get $10)
      )
     )
     (f64.store offset=16
      (local.get $1)
      (local.get $5)
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $25)
  )
  (i32.and
   (local.get $7)
   (i32.const 7)
  )
 )
 (func $___rem_pio2f (; 607 ;) (; has Stack IR ;) (param $0 f32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  (local.set $7
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $5
   (i32.add
    (local.get $4)
    (i32.const 8)
   )
  )
  (local.set $1
   (if (result i32)
    (i32.lt_u
     (local.tee $2
      (i32.and
       (local.tee $8
        (i32.reinterpret_f32
         (local.get $0)
        )
       )
       (i32.const 2147483647)
      )
     )
     (i32.const 1305022427)
    )
    (block (result i32)
     (local.set $2
      (i32.trunc_f64_s
       (local.tee $6
        (f64.add
         (f64.add
          (f64.mul
           (local.tee $3
            (f64.promote_f32
             (local.get $0)
            )
           )
           (f64.const 0.6366197723675814)
          )
          (f64.const 6755399441055744)
         )
         (f64.const -6755399441055744)
        )
       )
      )
     )
     (f64.store
      (local.get $1)
      (f64.sub
       (f64.sub
        (local.get $3)
        (f64.mul
         (local.get $6)
         (f64.const 1.5707963109016418)
        )
       )
       (f64.mul
        (local.get $6)
        (f64.const 1.5893254773528196e-08)
       )
      )
     )
     (local.get $2)
    )
    (block $do-once (result i32)
     (if
      (i32.gt_u
       (local.get $2)
       (i32.const 2139095039)
      )
      (block
       (f64.store
        (local.get $1)
        (f64.promote_f32
         (f32.sub
          (local.get $0)
          (local.get $0)
         )
        )
       )
       (br $do-once
        (i32.const 0)
       )
      )
     )
     (f64.store
      (local.get $5)
      (f64.promote_f32
       (f32.reinterpret_i32
        (i32.sub
         (local.get $2)
         (i32.shl
          (local.tee $2
           (i32.add
            (i32.shr_u
             (local.get $2)
             (i32.const 23)
            )
            (i32.const -150)
           )
          )
          (i32.const 23)
         )
        )
       )
      )
     )
     (local.set $2
      (call $___rem_pio2_large
       (local.get $5)
       (local.get $4)
       (local.get $2)
       (i32.const 1)
       (i32.const 0)
      )
     )
     (local.set $3
      (f64.load
       (local.get $4)
      )
     )
     (if (result i32)
      (i32.lt_s
       (local.get $8)
       (i32.const 0)
      )
      (block (result i32)
       (f64.store
        (local.get $1)
        (f64.neg
         (local.get $3)
        )
       )
       (i32.sub
        (i32.const 0)
        (local.get $2)
       )
      )
      (block (result i32)
       (f64.store
        (local.get $1)
        (local.get $3)
       )
       (local.get $2)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $7)
  )
  (local.get $1)
 )
 (func $___tan (; 608 ;) (; has Stack IR ;) (param $0 f64) (param $1 f64) (param $2 i32) (result f64)
  (local $3 f64)
  (local $4 f64)
  (local $5 f64)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local $9 i32)
  (if
   (local.tee $8
    (i64.gt_u
     (i64.and
      (local.tee $7
       (i64.reinterpret_f64
        (local.get $0)
       )
      )
      (i64.const 9223372002495037440)
     )
     (i64.const 4604249089280835584)
    )
   )
   (block
    (local.set $0
     (f64.add
      (f64.sub
       (f64.const 0.7853981633974483)
       (select
        (local.get $0)
        (f64.neg
         (local.get $0)
        )
        (local.tee $9
         (i32.eqz
          (local.tee $6
           (i32.wrap_i64
            (i64.shr_u
             (local.get $7)
             (i64.const 63)
            )
           )
          )
         )
        )
       )
      )
      (f64.sub
       (f64.const 3.061616997868383e-17)
       (select
        (local.get $1)
        (f64.neg
         (local.get $1)
        )
        (local.get $9)
       )
      )
     )
    )
    (local.set $1
     (f64.const 0)
    )
   )
  )
  (local.set $3
   (f64.mul
    (local.tee $4
     (f64.mul
      (local.get $0)
      (local.get $0)
     )
    )
    (local.get $4)
   )
  )
  (local.set $1
   (f64.add
    (local.get $0)
    (local.tee $4
     (f64.add
      (f64.mul
       (local.tee $5
        (f64.mul
         (local.get $0)
         (local.get $4)
        )
       )
       (f64.const 0.3333333333333341)
      )
      (f64.add
       (local.get $1)
       (f64.mul
        (local.get $4)
        (f64.add
         (local.get $1)
         (f64.mul
          (local.get $5)
          (f64.add
           (f64.add
            (f64.mul
             (local.get $3)
             (f64.add
              (f64.mul
               (local.get $3)
               (f64.add
                (f64.mul
                 (local.get $3)
                 (f64.add
                  (f64.mul
                   (local.get $3)
                   (f64.sub
                    (f64.const 7.817944429395571e-05)
                    (f64.mul
                     (local.get $3)
                     (f64.const 1.8558637485527546e-05)
                    )
                   )
                  )
                  (f64.const 5.880412408202641e-04)
                 )
                )
                (f64.const 3.5920791075913124e-03)
               )
              )
              (f64.const 0.021869488294859542)
             )
            )
            (f64.const 0.13333333333320124)
           )
           (f64.mul
            (local.get $4)
            (f64.add
             (f64.mul
              (local.get $3)
              (f64.add
               (f64.mul
                (local.get $3)
                (f64.add
                 (f64.mul
                  (local.get $3)
                  (f64.add
                   (f64.mul
                    (local.get $3)
                    (f64.add
                     (f64.mul
                      (local.get $3)
                      (f64.const 2.590730518636337e-05)
                     )
                     (f64.const 7.140724913826082e-05)
                    )
                   )
                   (f64.const 2.464631348184699e-04)
                  )
                 )
                 (f64.const 1.4562094543252903e-03)
                )
               )
               (f64.const 0.0088632398235993)
              )
             )
             (f64.const 0.05396825397622605)
            )
           )
          )
         )
        )
       )
      )
     )
    )
   )
  )
  (if
   (local.get $8)
   (local.set $1
    (select
     (local.tee $0
      (f64.sub
       (local.tee $3
        (f64.convert_i32_s
         (i32.sub
          (i32.const 1)
          (i32.shl
           (local.get $2)
           (i32.const 1)
          )
         )
        )
       )
       (f64.mul
        (f64.add
         (local.get $0)
         (f64.sub
          (local.get $4)
          (f64.div
           (f64.mul
            (local.get $1)
            (local.get $1)
           )
           (f64.add
            (local.get $1)
            (local.get $3)
           )
          )
         )
        )
        (f64.const 2)
       )
      )
     )
     (f64.neg
      (local.get $0)
     )
     (i32.eqz
      (local.get $6)
     )
    )
   )
   (if
    (local.get $2)
    (block
     (local.set $3
      (f64.reinterpret_i64
       (i64.and
        (i64.reinterpret_f64
         (local.tee $5
          (f64.div
           (f64.const -1)
           (local.get $1)
          )
         )
        )
        (i64.const -4294967296)
       )
      )
     )
     (local.set $1
      (f64.add
       (f64.mul
        (local.get $5)
        (f64.add
         (f64.add
          (f64.mul
           (local.tee $1
            (f64.reinterpret_i64
             (i64.and
              (i64.reinterpret_f64
               (local.get $1)
              )
              (i64.const -4294967296)
             )
            )
           )
           (local.get $3)
          )
          (f64.const 1)
         )
         (f64.mul
          (f64.sub
           (local.get $4)
           (f64.sub
            (local.get $1)
            (local.get $0)
           )
          )
          (local.get $3)
         )
        )
       )
       (local.get $3)
      )
     )
    )
   )
  )
  (local.get $1)
 )
 (func $_fwrite (; 609 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local.set $4
   (i32.mul
    (local.get $1)
    (local.get $2)
   )
  )
  (drop
   (i32.load offset=76
    (local.get $3)
   )
  )
  (local.set $0
   (call $___fwritex
    (local.get $0)
    (local.get $4)
    (local.get $3)
   )
  )
  (local.set $2
   (select
    (local.get $2)
    (i32.const 0)
    (local.get $1)
   )
  )
  (if (result i32)
   (i32.ne
    (local.get $0)
    (local.get $4)
   )
   (i32.div_u
    (local.get $0)
    (local.get $1)
   )
   (local.get $2)
  )
 )
 (func $___unlist_locked_file (; 610 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (if
   (i32.load offset=68
    (local.get $0)
   )
   (block
    (if
     (local.tee $1
      (i32.load offset=132
       (local.get $0)
      )
     )
     (i32.store offset=128
      (local.get $1)
      (i32.load offset=128
       (local.get $0)
      )
     )
    )
    (i32.store
     (if (result i32)
      (local.tee $0
       (i32.load offset=128
        (local.get $0)
       )
      )
      (i32.add
       (local.get $0)
       (i32.const 132)
      )
      (i32.const 14472)
     )
     (local.get $1)
    )
   )
  )
 )
 (func $___overflow (; 611 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i32.store8
   (local.get $2)
   (local.tee $6
    (i32.and
     (local.get $1)
     (i32.const 255)
    )
   )
  )
  (drop
   (block $do-once (result i32)
    (block $__rjti$0
     (br $do-once
      (if (result i32)
       (local.tee $3
        (i32.load offset=16
         (local.get $0)
        )
       )
       (br $__rjti$0)
       (if (result i32)
        (call $___towrite
         (local.get $0)
        )
        (i32.const -1)
        (block
         (local.set $3
          (i32.load offset=16
           (local.get $0)
          )
         )
         (br $__rjti$0)
        )
       )
      )
     )
    )
    (if
     (i32.lt_u
      (local.tee $4
       (i32.load offset=20
        (local.get $0)
       )
      )
      (local.get $3)
     )
     (if
      (i32.ne
       (local.tee $1
        (i32.and
         (local.get $1)
         (i32.const 255)
        )
       )
       (i32.load8_s offset=75
        (local.get $0)
       )
      )
      (block
       (i32.store offset=20
        (local.get $0)
        (i32.add
         (local.get $4)
         (i32.const 1)
        )
       )
       (i32.store8
        (local.get $4)
        (local.get $6)
       )
       (br $do-once
        (local.get $1)
       )
      )
     )
    )
    (if (result i32)
     (i32.eq
      (call_indirect (type $FUNCSIG$iiii)
       (local.get $0)
       (local.get $2)
       (i32.const 1)
       (i32.add
        (i32.and
         (i32.load offset=36
          (local.get $0)
         )
         (i32.const 15)
        )
        (i32.const 42)
       )
      )
      (i32.const 1)
     )
     (i32.load8_u
      (local.get $2)
     )
     (i32.const -1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
 )
 (func $_fopen (; 612 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $0
   (if (result i32)
    (call $_strchr
     (i32.const 23003)
     (i32.load8_s
      (i32.const 22224)
     )
    )
    (block (result i32)
     (local.set $3
      (call $___fmodeflags)
     )
     (i32.store
      (local.get $1)
      (local.get $0)
     )
     (i32.store offset=4
      (local.get $1)
      (i32.or
       (local.get $3)
       (i32.const 32768)
      )
     )
     (i32.store offset=8
      (local.get $1)
      (i32.const 438)
     )
     (if (result i32)
      (block (result i32)
       (if
        (i32.gt_u
         (local.tee $0
          (call $___syscall5
           (i32.const 5)
           (local.get $1)
          )
         )
         (i32.const -4096)
        )
        (block
         (i32.store
          (i32.const 34304)
          (i32.sub
           (i32.const 0)
           (local.get $0)
          )
         )
         (local.set $0
          (i32.const -1)
         )
        )
       )
       (i32.lt_s
        (local.get $0)
        (i32.const 0)
       )
      )
      (i32.const 0)
      (if (result i32)
       (local.tee $1
        (call $___fdopen
         (local.get $0)
        )
       )
       (local.get $1)
       (block (result i32)
        (drop
         (call $___wasi_fd_close
          (local.get $0)
         )
        )
        (i32.const 0)
       )
      )
     )
    )
    (block (result i32)
     (i32.store
      (i32.const 34304)
      (i32.const 28)
     )
     (i32.const 0)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
  (local.get $0)
 )
 (func $___fmodeflags (; 613 ;) (; has Stack IR ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local.set $0
   (i32.eqz
    (call $_strchr
     (i32.const 22224)
     (i32.const 43)
    )
   )
  )
  (select
   (i32.or
    (local.tee $0
     (select
      (i32.or
       (local.tee $0
        (select
         (local.tee $0
          (select
           (local.tee $0
            (select
             (local.tee $0
              (select
               (i32.ne
                (local.tee $1
                 (i32.load8_s
                  (i32.const 22224)
                 )
                )
                (i32.const 114)
               )
               (i32.const 2)
               (local.get $0)
              )
             )
             (i32.or
              (local.get $0)
              (i32.const 128)
             )
             (i32.eqz
              (call $_strchr
               (i32.const 22224)
               (i32.const 120)
              )
             )
            )
           )
           (i32.or
            (local.get $0)
            (i32.const 524288)
           )
           (i32.eqz
            (call $_strchr
             (i32.const 22224)
             (i32.const 101)
            )
           )
          )
         )
         (i32.or
          (local.get $0)
          (i32.const 64)
         )
         (i32.eq
          (local.get $1)
          (i32.const 114)
         )
        )
       )
       (i32.const 512)
      )
      (local.get $0)
      (i32.eq
       (local.get $1)
       (i32.const 119)
      )
     )
    )
    (i32.const 1024)
   )
   (local.get $0)
   (i32.eq
    (local.get $1)
    (i32.const 97)
   )
  )
 )
 (func $___fdopen (; 614 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local.set $6
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 48)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 48)
   )
  )
  (local.set $3
   (i32.add
    (local.get $1)
    (i32.const 24)
   )
  )
  (local.set $4
   (i32.add
    (local.get $1)
    (i32.const 8)
   )
  )
  (local.set $2
   (local.get $1)
  )
  (local.set $7
   (i32.add
    (local.get $1)
    (i32.const 40)
   )
  )
  (if
   (call $_strchr
    (i32.const 23003)
    (i32.load8_s
     (i32.const 22224)
    )
   )
   (if
    (local.tee $1
     (call $_malloc
      (i32.const 1176)
     )
    )
    (block
     (drop
      (call $_memset
       (local.get $1)
       (i32.const 0)
       (i32.const 144)
      )
     )
     (local.set $8
      (i32.eqz
       (call $_strchr
        (i32.const 22224)
        (i32.const 43)
       )
      )
     )
     (local.set $5
      (i32.load8_s
       (i32.const 22224)
      )
     )
     (if
      (local.get $8)
      (i32.store
       (local.get $1)
       (select
        (i32.const 8)
        (i32.const 4)
        (i32.eq
         (local.get $5)
         (i32.const 114)
        )
       )
      )
     )
     (if
      (i32.eq
       (local.get $5)
       (i32.const 97)
      )
      (block
       (i32.store
        (local.get $2)
        (local.get $0)
       )
       (i32.store offset=4
        (local.get $2)
        (i32.const 3)
       )
       (if
        (i32.eqz
         (i32.and
          (local.tee $2
           (call $___syscall221
            (i32.const 221)
            (local.get $2)
           )
          )
          (i32.const 1024)
         )
        )
        (block
         (i32.store
          (local.get $4)
          (local.get $0)
         )
         (i32.store offset=4
          (local.get $4)
          (i32.const 4)
         )
         (i32.store offset=8
          (local.get $4)
          (i32.or
           (local.get $2)
           (i32.const 1024)
          )
         )
         (drop
          (call $___syscall221
           (i32.const 221)
           (local.get $4)
          )
         )
        )
       )
       (i32.store
        (local.get $1)
        (local.tee $2
         (i32.or
          (i32.load
           (local.get $1)
          )
          (i32.const 128)
         )
        )
       )
      )
      (local.set $2
       (i32.load
        (local.get $1)
       )
      )
     )
     (i32.store offset=60
      (local.get $1)
      (local.get $0)
     )
     (i32.store offset=44
      (local.get $1)
      (i32.add
       (local.get $1)
       (i32.const 152)
      )
     )
     (i32.store offset=48
      (local.get $1)
      (i32.const 1024)
     )
     (i32.store8 offset=75
      (local.get $1)
      (i32.const -1)
     )
     (if
      (i32.eqz
       (i32.and
        (local.get $2)
        (i32.const 8)
       )
      )
      (block
       (i32.store
        (local.get $3)
        (local.get $0)
       )
       (i32.store offset=4
        (local.get $3)
        (i32.const 21523)
       )
       (i32.store offset=8
        (local.get $3)
        (local.get $7)
       )
       (if
        (i32.eqz
         (call $___syscall54
          (i32.const 54)
          (local.get $3)
         )
        )
        (i32.store8 offset=75
         (local.get $1)
         (i32.const 10)
        )
       )
      )
     )
     (i32.store offset=32
      (local.get $1)
      (i32.const 8)
     )
     (i32.store offset=36
      (local.get $1)
      (i32.const 1)
     )
     (i32.store offset=40
      (local.get $1)
      (i32.const 2)
     )
     (i32.store offset=12
      (local.get $1)
      (i32.const 2)
     )
     (if
      (i32.eqz
       (i32.load
        (i32.const 34244)
       )
      )
      (i32.store offset=76
       (local.get $1)
       (i32.const -1)
      )
     )
     (call $___ofl_add
      (local.get $1)
     )
    )
    (local.set $1
     (i32.const 0)
    )
   )
   (block
    (i32.store
     (i32.const 34304)
     (i32.const 28)
    )
    (local.set $1
     (i32.const 0)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $6)
  )
  (local.get $1)
 )
 (func $___ofl_add (; 615 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (i32.store offset=56
   (local.get $0)
   (i32.load
    (local.tee $1
     (call $___ofl_lock)
    )
   )
  )
  (if
   (local.tee $2
    (i32.load
     (local.get $1)
    )
   )
   (i32.store offset=52
    (local.get $2)
    (local.get $0)
   )
  )
  (i32.store
   (local.get $1)
   (local.get $0)
  )
  (call $___unlock
   (i32.const 34308)
  )
 )
 (func $___ofl_lock (; 616 ;) (; has Stack IR ;) (result i32)
  (call $___lock
   (i32.const 34308)
  )
  (i32.const 34316)
 )
 (func $_fclose (; 617 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (drop
   (if (result i32)
    (i32.gt_s
     (i32.load offset=76
      (local.get $0)
     )
     (i32.const -1)
    )
    (i32.const 1)
    (i32.const 0)
   )
  )
  (call $___unlist_locked_file
   (local.get $0)
  )
  (if
   (i32.eqz
    (local.tee $4
     (i32.ne
      (i32.and
       (i32.load
        (local.get $0)
       )
       (i32.const 1)
      )
      (i32.const 0)
     )
    )
   )
   (block
    (local.set $1
     (call $___ofl_lock)
    )
    (if
     (local.tee $2
      (i32.load offset=52
       (local.get $0)
      )
     )
     (i32.store offset=56
      (local.get $2)
      (i32.load offset=56
       (local.get $0)
      )
     )
    )
    (if
     (local.tee $3
      (i32.load offset=56
       (local.get $0)
      )
     )
     (i32.store offset=52
      (local.get $3)
      (local.get $2)
     )
    )
    (if
     (i32.eq
      (local.get $0)
      (i32.load
       (local.get $1)
      )
     )
     (i32.store
      (local.get $1)
      (local.get $3)
     )
    )
    (call $___unlock
     (i32.const 34308)
    )
   )
  )
  (drop
   (call $_fflush
    (local.get $0)
   )
  )
  (drop
   (call_indirect (type $FUNCSIG$ii)
    (local.get $0)
    (i32.add
     (i32.and
      (i32.load offset=12
       (local.get $0)
      )
      (i32.const 15)
     )
     (i32.const 20)
    )
   )
  )
  (if
   (local.tee $1
    (i32.load offset=96
     (local.get $0)
    )
   )
   (call $_free
    (local.get $1)
   )
  )
  (if
   (i32.eqz
    (local.get $4)
   )
   (call $_free
    (local.get $0)
   )
  )
 )
 (func $_fflush (; 618 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (if
   (local.get $0)
   (local.set $0
    (block $do-once (result i32)
     (if
      (i32.le_s
       (i32.load offset=76
        (local.get $0)
       )
       (i32.const -1)
      )
      (br $do-once
       (call $___fflush_unlocked
        (local.get $0)
       )
      )
     )
     (call $___fflush_unlocked
      (local.get $0)
     )
    )
   )
   (block
    (local.set $0
     (if (result i32)
      (i32.load
       (i32.const 14236)
      )
      (call $_fflush
       (i32.load
        (i32.const 14236)
       )
      )
      (i32.const 0)
     )
    )
    (if
     (local.tee $1
      (i32.load
       (call $___ofl_lock)
      )
     )
     (loop $while-in
      (drop
       (if (result i32)
        (i32.gt_s
         (i32.load offset=76
          (local.get $1)
         )
         (i32.const -1)
        )
        (i32.const 1)
        (i32.const 0)
       )
      )
      (if
       (i32.gt_u
        (i32.load offset=20
         (local.get $1)
        )
        (i32.load offset=28
         (local.get $1)
        )
       )
       (local.set $0
        (i32.or
         (call $___fflush_unlocked
          (local.get $1)
         )
         (local.get $0)
        )
       )
      )
      (br_if $while-in
       (local.tee $1
        (i32.load offset=56
         (local.get $1)
        )
       )
      )
     )
    )
    (call $___unlock
     (i32.const 34308)
    )
   )
  )
  (local.get $0)
 )
 (func $___fflush_unlocked (; 619 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (block $__rjto$0 (result i32)
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.le_u
      (i32.load offset=20
       (local.get $0)
      )
      (i32.load offset=28
       (local.get $0)
      )
     )
    )
    (local.set $1
     (i32.load offset=36
      (local.get $0)
     )
    )
    (drop
     (call_indirect (type $FUNCSIG$iiii)
      (local.get $0)
      (i32.const 0)
      (i32.const 0)
      (i32.add
       (i32.and
        (local.get $1)
        (i32.const 15)
       )
       (i32.const 42)
      )
     )
    )
    (br_if $__rjti$0
     (i32.load offset=20
      (local.get $0)
     )
    )
    (br $__rjto$0
     (i32.const -1)
    )
   )
   (if
    (i32.lt_u
     (local.tee $1
      (i32.load offset=4
       (local.get $0)
      )
     )
     (local.tee $2
      (i32.load offset=8
       (local.get $0)
      )
     )
    )
    (block
     (local.set $3
      (i32.load offset=40
       (local.get $0)
      )
     )
     (drop
      (call_indirect (type $FUNCSIG$jiji)
       (local.get $0)
       (i64.extend_i32_s
        (i32.sub
         (local.get $1)
         (local.get $2)
        )
       )
       (i32.const 1)
       (i32.add
        (i32.and
         (local.get $3)
         (i32.const 3)
        )
        (i32.const 59)
       )
      )
     )
    )
   )
   (i32.store offset=16
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=28
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=20
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=8
    (local.get $0)
    (i32.const 0)
   )
   (i32.store offset=4
    (local.get $0)
    (i32.const 0)
   )
   (i32.const 0)
  )
 )
 (func $_strstr (; 620 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (if
   (local.tee $2
    (i32.load8_s
     (local.get $1)
    )
   )
   (if
    (local.tee $0
     (call $_strchr
      (local.get $0)
      (local.get $2)
     )
    )
    (if
     (i32.load8_s offset=1
      (local.get $1)
     )
     (local.set $0
      (if (result i32)
       (i32.load8_s offset=1
        (local.get $0)
       )
       (block $do-once (result i32)
        (if
         (i32.eqz
          (i32.load8_s offset=2
           (local.get $1)
          )
         )
         (br $do-once
          (call $_twobyte_strstr
           (local.get $0)
           (local.get $1)
          )
         )
        )
        (if (result i32)
         (i32.load8_s offset=2
          (local.get $0)
         )
         (block (result i32)
          (if
           (i32.eqz
            (i32.load8_s offset=3
             (local.get $1)
            )
           )
           (br $do-once
            (call $_threebyte_strstr
             (local.get $0)
             (local.get $1)
            )
           )
          )
          (if (result i32)
           (i32.load8_s offset=3
            (local.get $0)
           )
           (if (result i32)
            (i32.load8_s offset=4
             (local.get $1)
            )
            (call $_twoway_strstr
             (local.get $0)
             (local.get $1)
            )
            (call $_fourbyte_strstr
             (local.get $0)
             (local.get $1)
            )
           )
           (i32.const 0)
          )
         )
         (i32.const 0)
        )
       )
       (i32.const 0)
      )
     )
    )
    (local.set $0
     (i32.const 0)
    )
   )
  )
  (local.get $0)
 )
 (func $_twobyte_strstr (; 621 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (i32.or
    (i32.load8_u offset=1
     (local.get $1)
    )
    (i32.shl
     (i32.load8_u
      (local.get $1)
     )
     (i32.const 8)
    )
   )
  )
  (if (result i32)
   (local.tee $2
    (i32.load8_s
     (local.tee $1
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
    )
   )
   (block $label$break$L1 (result i32)
    (local.set $0
     (i32.or
      (i32.and
       (local.get $2)
       (i32.const 255)
      )
      (i32.shl
       (i32.load8_u
        (local.get $0)
       )
       (i32.const 8)
      )
     )
    )
    (loop $while-in
     (if
      (i32.ne
       (local.get $3)
       (local.tee $0
        (i32.and
         (local.get $0)
         (i32.const 65535)
        )
       )
      )
      (block
       (local.set $0
        (i32.or
         (i32.and
          (local.tee $2
           (i32.load8_s
            (local.tee $1
             (i32.add
              (local.get $1)
              (i32.const 1)
             )
            )
           )
          )
          (i32.const 255)
         )
         (i32.shl
          (local.get $0)
          (i32.const 8)
         )
        )
       )
       (drop
        (br_if $label$break$L1
         (i32.const 0)
         (i32.eqz
          (local.get $2)
         )
        )
       )
       (br $while-in)
      )
     )
    )
    (i32.add
     (local.get $1)
     (i32.const -1)
    )
   )
   (i32.const 0)
  )
 )
 (func $_threebyte_strstr (; 622 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.eqz
    (i32.or
     (i32.eq
      (local.tee $2
       (i32.or
        (i32.or
         (i32.shl
          (i32.load8_u
           (local.get $0)
          )
          (i32.const 24)
         )
         (i32.shl
          (i32.load8_u offset=1
           (local.get $0)
          )
          (i32.const 16)
         )
        )
        (i32.shl
         (i32.and
          (local.tee $3
           (i32.load8_s
            (local.tee $0
             (i32.add
              (local.get $0)
              (i32.const 2)
             )
            )
           )
          )
          (i32.const 255)
         )
         (i32.const 8)
        )
       )
      )
      (local.tee $4
       (i32.or
        (i32.or
         (i32.shl
          (i32.load8_u
           (local.get $1)
          )
          (i32.const 24)
         )
         (i32.shl
          (i32.load8_u offset=1
           (local.get $1)
          )
          (i32.const 16)
         )
        )
        (i32.shl
         (i32.load8_u offset=2
          (local.get $1)
         )
         (i32.const 8)
        )
       )
      )
     )
     (local.tee $1
      (i32.eqz
       (local.get $3)
      )
     )
    )
   )
   (block
    (local.set $1
     (local.get $2)
    )
    (local.set $1
     (loop $while-in (result i32)
      (if (result i32)
       (i32.or
        (i32.eq
         (local.get $4)
         (local.tee $1
          (i32.shl
           (i32.or
            (i32.and
             (local.tee $2
              (i32.load8_s
               (local.tee $0
                (i32.add
                 (local.get $0)
                 (i32.const 1)
                )
               )
              )
             )
             (i32.const 255)
            )
            (local.get $1)
           )
           (i32.const 8)
          )
         )
        )
        (local.tee $2
         (i32.eqz
          (local.get $2)
         )
        )
       )
       (local.get $2)
       (br $while-in)
      )
     )
    )
   )
  )
  (select
   (i32.const 0)
   (i32.add
    (local.get $0)
    (i32.const -2)
   )
   (local.get $1)
  )
 )
 (func $_fourbyte_strstr (; 623 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (if
   (i32.eqz
    (i32.or
     (i32.eq
      (local.tee $3
       (i32.or
        (i32.load8_u offset=3
         (local.get $1)
        )
        (i32.or
         (i32.or
          (i32.shl
           (i32.load8_u
            (local.get $1)
           )
           (i32.const 24)
          )
          (i32.shl
           (i32.load8_u offset=1
            (local.get $1)
           )
           (i32.const 16)
          )
         )
         (i32.shl
          (i32.load8_u offset=2
           (local.get $1)
          )
          (i32.const 8)
         )
        )
       )
      )
      (local.tee $2
       (i32.or
        (i32.and
         (local.tee $4
          (i32.load8_s
           (local.tee $1
            (i32.add
             (local.get $0)
             (i32.const 3)
            )
           )
          )
         )
         (i32.const 255)
        )
        (i32.or
         (i32.or
          (i32.shl
           (i32.load8_u
            (local.get $0)
           )
           (i32.const 24)
          )
          (i32.shl
           (i32.load8_u offset=1
            (local.get $0)
           )
           (i32.const 16)
          )
         )
         (i32.shl
          (i32.load8_u offset=2
           (local.get $0)
          )
          (i32.const 8)
         )
        )
       )
      )
     )
     (local.tee $0
      (i32.eqz
       (local.get $4)
      )
     )
    )
   )
   (block
    (local.set $0
     (local.get $1)
    )
    (local.set $1
     (local.get $2)
    )
    (local.set $0
     (loop $while-in (result i32)
      (if (result i32)
       (i32.or
        (i32.eq
         (local.get $3)
         (local.tee $1
          (i32.or
           (i32.and
            (local.tee $2
             (i32.load8_s
              (local.tee $0
               (i32.add
                (local.get $0)
                (i32.const 1)
               )
              )
             )
            )
            (i32.const 255)
           )
           (i32.shl
            (local.get $1)
            (i32.const 8)
           )
          )
         )
        )
        (local.tee $2
         (i32.eqz
          (local.get $2)
         )
        )
       )
       (block (result i32)
        (local.set $1
         (local.get $0)
        )
        (local.get $2)
       )
       (br $while-in)
      )
     )
    )
   )
  )
  (select
   (i32.const 0)
   (i32.add
    (local.get $1)
    (i32.const -3)
   )
   (local.get $0)
  )
 )
 (func $_twoway_strstr (; 624 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local.set $15
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $13
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 1056)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 1056)
   )
  )
  (i64.store
   (local.tee $12
    (i32.add
     (local.get $13)
     (i32.const 1024)
    )
   )
   (i64.const 0)
  )
  (i64.store offset=8
   (local.get $12)
   (i64.const 0)
  )
  (i64.store offset=16
   (local.get $12)
   (i64.const 0)
  )
  (i64.store offset=24
   (local.get $12)
   (i64.const 0)
  )
  (block $label$break$L34
   (block $__rjti$0
    (if
     (local.tee $3
      (i32.load8_s
       (local.get $1)
      )
     )
     (block $label$break$L1
      (loop $while-in
       (if
        (i32.eqz
         (i32.load8_s
          (i32.add
           (local.get $0)
           (local.get $6)
          )
         )
        )
        (block
         (local.set $0
          (i32.const 0)
         )
         (br $label$break$L1)
        )
       )
       (i32.store
        (local.tee $2
         (i32.add
          (i32.shl
           (i32.shr_u
            (local.tee $3
             (i32.and
              (local.get $3)
              (i32.const 255)
             )
            )
            (i32.const 5)
           )
           (i32.const 2)
          )
          (local.get $12)
         )
        )
        (i32.or
         (i32.load
          (local.get $2)
         )
         (i32.shl
          (i32.const 1)
          (i32.and
           (local.get $3)
           (i32.const 31)
          )
         )
        )
       )
       (i32.store
        (i32.add
         (i32.shl
          (local.get $3)
          (i32.const 2)
         )
         (local.get $13)
        )
        (local.tee $6
         (i32.add
          (local.get $6)
          (i32.const 1)
         )
        )
       )
       (br_if $while-in
        (local.tee $3
         (i32.load8_s
          (i32.add
           (local.get $1)
           (local.get $6)
          )
         )
        )
       )
      )
      (if
       (local.tee $10
        (i32.gt_u
         (local.get $6)
         (i32.const 1)
        )
       )
       (block
        (local.set $7
         (i32.const 1)
        )
        (local.set $2
         (i32.const -1)
        )
        (local.set $4
         (i32.const 1)
        )
        (local.set $5
         (i32.const 1)
        )
        (loop $while-in1
         (if
          (i32.eq
           (local.tee $3
            (i32.load8_s
             (i32.add
              (local.get $1)
              (i32.add
               (local.get $2)
               (local.get $4)
              )
             )
            )
           )
           (local.tee $9
            (i32.load8_s
             (i32.add
              (local.get $1)
              (local.get $7)
             )
            )
           )
          )
          (block
           (if
            (i32.eq
             (local.get $4)
             (local.get $5)
            )
            (block
             (local.set $8
              (i32.add
               (local.get $5)
               (local.get $8)
              )
             )
             (local.set $4
              (i32.const 1)
             )
            )
            (local.set $4
             (i32.add
              (local.get $4)
              (i32.const 1)
             )
            )
           )
           (local.set $3
            (local.get $2)
           )
          )
          (local.set $5
           (if (result i32)
            (i32.gt_s
             (i32.and
              (local.get $3)
              (i32.const 255)
             )
             (i32.and
              (local.get $9)
              (i32.const 255)
             )
            )
            (block (result i32)
             (local.set $3
              (local.get $2)
             )
             (local.set $4
              (i32.const 1)
             )
             (i32.sub
              (local.tee $8
               (local.get $7)
              )
              (local.get $2)
             )
            )
            (block (result i32)
             (local.set $8
              (i32.add
               (local.tee $3
                (local.get $8)
               )
               (i32.const 1)
              )
             )
             (local.set $4
              (i32.const 1)
             )
             (i32.const 1)
            )
           )
          )
         )
         (if
          (i32.lt_u
           (local.tee $7
            (i32.add
             (local.get $4)
             (local.get $8)
            )
           )
           (local.get $6)
          )
          (block
           (local.set $2
            (local.get $3)
           )
           (br $while-in1)
          )
         )
        )
        (if
         (local.get $10)
         (block
          (local.set $10
           (i32.const 1)
          )
          (local.set $8
           (i32.const -1)
          )
          (local.set $4
           (i32.const 0)
          )
          (local.set $9
           (i32.const 1)
          )
          (local.set $7
           (i32.const 1)
          )
          (loop $while-in4
           (if
            (i32.eq
             (local.tee $2
              (i32.load8_s
               (i32.add
                (local.get $1)
                (i32.add
                 (local.get $8)
                 (local.get $9)
                )
               )
              )
             )
             (local.tee $11
              (i32.load8_s
               (i32.add
                (local.get $1)
                (local.get $10)
               )
              )
             )
            )
            (block
             (if
              (i32.eq
               (local.get $7)
               (local.get $9)
              )
              (block
               (local.set $4
                (i32.add
                 (local.get $4)
                 (local.get $7)
                )
               )
               (local.set $9
                (i32.const 1)
               )
              )
              (local.set $9
               (i32.add
                (local.get $9)
                (i32.const 1)
               )
              )
             )
             (local.set $2
              (local.get $8)
             )
            )
            (local.set $7
             (if (result i32)
              (i32.lt_s
               (i32.and
                (local.get $2)
                (i32.const 255)
               )
               (i32.and
                (local.get $11)
                (i32.const 255)
               )
              )
              (block (result i32)
               (local.set $9
                (i32.const 1)
               )
               (i32.sub
                (local.tee $4
                 (local.get $10)
                )
                (local.tee $2
                 (local.get $8)
                )
               )
              )
              (block (result i32)
               (local.set $4
                (i32.add
                 (local.tee $2
                  (local.get $4)
                 )
                 (i32.const 1)
                )
               )
               (local.set $9
                (i32.const 1)
               )
               (i32.const 1)
              )
             )
            )
           )
           (br_if $__rjti$0
            (i32.ge_u
             (local.tee $10
              (i32.add
               (local.get $4)
               (local.get $9)
              )
             )
             (local.get $6)
            )
           )
           (local.set $8
            (local.get $2)
           )
           (br $while-in4)
          )
         )
         (block
          (local.set $2
           (i32.const -1)
          )
          (local.set $7
           (i32.const 1)
          )
          (br $__rjti$0)
         )
        )
       )
       (block
        (local.set $3
         (i32.const -1)
        )
        (local.set $2
         (i32.const -1)
        )
        (local.set $5
         (i32.const 1)
        )
        (local.set $7
         (i32.const 1)
        )
        (br $__rjti$0)
       )
      )
     )
     (block
      (local.set $3
       (i32.const -1)
      )
      (local.set $2
       (i32.const -1)
      )
      (local.set $5
       (i32.const 1)
      )
      (local.set $7
       (i32.const 1)
      )
      (br $__rjti$0)
     )
    )
    (br $label$break$L34)
   )
   (local.set $10
    (if (result i32)
     (call $_memcmp
      (local.get $1)
      (i32.add
       (local.get $1)
       (local.tee $8
        (select
         (local.get $7)
         (local.get $5)
         (local.tee $5
          (i32.gt_u
           (i32.add
            (local.get $2)
            (i32.const 1)
           )
           (i32.add
            (local.get $3)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
      (local.tee $4
       (i32.add
        (local.tee $11
         (select
          (local.get $2)
          (local.get $3)
          (local.get $5)
         )
        )
        (i32.const 1)
       )
      )
     )
     (block (result i32)
      (local.set $8
       (local.tee $3
        (i32.add
         (select
          (local.get $11)
          (local.tee $3
           (i32.add
            (i32.sub
             (local.get $6)
             (local.get $11)
            )
            (i32.const -1)
           )
          )
          (i32.gt_u
           (local.get $11)
           (local.get $3)
          )
         )
         (i32.const 1)
        )
       )
      )
      (local.set $9
       (i32.sub
        (local.get $6)
        (local.get $3)
       )
      )
      (i32.const 0)
     )
     (local.tee $9
      (i32.sub
       (local.get $6)
       (local.get $8)
      )
     )
    )
   )
   (local.set $14
    (i32.or
     (local.get $6)
     (i32.const 63)
    )
   )
   (local.set $16
    (i32.add
     (local.get $6)
     (i32.const -1)
    )
   )
   (local.set $17
    (i32.ne
     (local.get $10)
     (i32.const 0)
    )
   )
   (local.set $7
    (i32.const 0)
   )
   (local.set $3
    (local.get $0)
   )
   (loop $while-in9
    (if
     (i32.lt_u
      (i32.sub
       (local.get $3)
       (local.tee $5
        (local.get $0)
       )
      )
      (local.get $6)
     )
     (local.set $3
      (if (result i32)
       (local.tee $2
        (call $_memchr
         (local.get $3)
         (local.get $14)
        )
       )
       (if (result i32)
        (i32.lt_u
         (i32.sub
          (local.get $2)
          (local.get $5)
         )
         (local.get $6)
        )
        (block
         (local.set $0
          (i32.const 0)
         )
         (br $label$break$L34)
        )
        (local.get $2)
       )
       (i32.add
        (local.get $3)
        (local.get $14)
       )
      )
     )
    )
    (if
     (i32.and
      (i32.load
       (i32.add
        (i32.shl
         (i32.shr_u
          (local.tee $2
           (i32.load8_u
            (i32.add
             (local.get $0)
             (local.get $16)
            )
           )
          )
          (i32.const 5)
         )
         (i32.const 2)
        )
        (local.get $12)
       )
      )
      (i32.shl
       (i32.const 1)
       (i32.and
        (local.get $2)
        (i32.const 31)
       )
      )
     )
     (block $label$break$L48
      (if
       (local.tee $2
        (i32.sub
         (local.get $6)
         (i32.load
          (i32.add
           (i32.shl
            (local.get $2)
            (i32.const 2)
           )
           (local.get $13)
          )
         )
        )
       )
       (block
        (local.set $5
         (select
          (local.get $9)
          (local.get $2)
          (i32.and
           (i32.and
            (local.get $17)
            (i32.ne
             (local.get $7)
             (i32.const 0)
            )
           )
           (i32.lt_u
            (local.get $2)
            (local.get $8)
           )
          )
         )
        )
        (local.set $2
         (i32.const 0)
        )
        (br $label$break$L48)
       )
      )
      (if
       (local.tee $5
        (i32.load8_s
         (i32.add
          (local.get $1)
          (local.tee $2
           (select
            (local.get $4)
            (local.get $7)
            (local.tee $18
             (i32.gt_u
              (local.get $4)
              (local.get $7)
             )
            )
           )
          )
         )
        )
       )
       (block $label$break$L53
        (loop $while-in15
         (if
          (i32.eq
           (i32.load8_u
            (i32.add
             (local.get $0)
             (local.get $2)
            )
           )
           (i32.and
            (local.get $5)
            (i32.const 255)
           )
          )
          (block
           (br_if $label$break$L53
            (i32.eqz
             (local.tee $5
              (i32.load8_s
               (i32.add
                (local.get $1)
                (local.tee $2
                 (i32.add
                  (local.get $2)
                  (i32.const 1)
                 )
                )
               )
              )
             )
            )
           )
           (br $while-in15)
          )
         )
        )
        (local.set $5
         (i32.sub
          (local.get $2)
          (local.get $11)
         )
        )
        (local.set $2
         (i32.const 0)
        )
        (br $label$break$L48)
       )
      )
      (br_if $label$break$L34
       (i32.eqz
        (local.get $18)
       )
      )
      (local.set $2
       (local.get $4)
      )
      (loop $while-in17
       (if
        (i32.ne
         (i32.load8_s
          (i32.add
           (local.get $1)
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const -1)
            )
           )
          )
         )
         (i32.load8_s
          (i32.add
           (local.get $0)
           (local.get $2)
          )
         )
        )
        (block
         (local.set $5
          (local.get $8)
         )
         (local.set $2
          (local.get $10)
         )
         (br $label$break$L48)
        )
       )
       (br_if $while-in17
        (i32.gt_u
         (local.get $2)
         (local.get $7)
        )
       )
      )
      (br $label$break$L34)
     )
     (block
      (local.set $5
       (local.get $6)
      )
      (local.set $2
       (i32.const 0)
      )
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (local.get $5)
     )
    )
    (local.set $7
     (local.get $2)
    )
    (br $while-in9)
   )
  )
  (global.set $STACKTOP
   (local.get $15)
  )
  (local.get $0)
 )
 (func $___memrchr (; 625 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (if (result i32)
   (local.get $1)
   (block $label$break$L1 (result i32)
    (loop $while-in
     (if
      (i32.ne
       (i32.load8_u
        (i32.add
         (local.get $0)
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const -1)
          )
         )
        )
       )
       (i32.const 46)
      )
      (if
       (local.get $1)
       (br $while-in)
       (br $label$break$L1
        (i32.const 0)
       )
      )
     )
    )
    (i32.add
     (local.get $0)
     (local.get $1)
    )
   )
   (i32.const 0)
  )
 )
 (func $_strspn (; 626 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $1
   (i32.const 16159)
  )
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (i64.store
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=8
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=16
   (local.get $3)
   (i64.const 0)
  )
  (i64.store offset=24
   (local.get $3)
   (i64.const 0)
  )
  (local.set $0
   (if (result i32)
    (local.tee $2
     (i32.load8_s
      (i32.const 16159)
     )
    )
    (block $do-once (result i32)
     (if
      (i32.eqz
       (i32.load8_s
        (i32.const 16160)
       )
      )
      (block
       (local.set $1
        (local.get $0)
       )
       (loop $while-in
        (local.set $4
         (i32.add
          (local.get $1)
          (i32.const 1)
         )
        )
        (if
         (i32.eq
          (local.get $2)
          (i32.load8_s
           (local.get $1)
          )
         )
         (block
          (local.set $1
           (local.get $4)
          )
          (br $while-in)
         )
        )
       )
       (br $do-once
        (i32.sub
         (local.get $1)
         (local.get $0)
        )
       )
      )
     )
     (loop $while-in1
      (i32.store
       (local.tee $4
        (i32.add
         (i32.shl
          (i32.shr_u
           (local.tee $2
            (i32.and
             (local.get $2)
             (i32.const 255)
            )
           )
           (i32.const 5)
          )
          (i32.const 2)
         )
         (local.get $3)
        )
       )
       (i32.or
        (i32.load
         (local.get $4)
        )
        (i32.shl
         (i32.const 1)
         (i32.and
          (local.get $2)
          (i32.const 31)
         )
        )
       )
      )
      (br_if $while-in1
       (local.tee $2
        (i32.load8_s
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
     (if
      (local.tee $2
       (i32.load8_s
        (local.get $0)
       )
      )
      (block $label$break$L12
       (local.set $1
        (local.get $0)
       )
       (loop $while-in4
        (br_if $label$break$L12
         (i32.eqz
          (i32.and
           (i32.load
            (i32.add
             (i32.shl
              (i32.shr_u
               (local.tee $4
                (i32.and
                 (local.get $2)
                 (i32.const 255)
                )
               )
               (i32.const 5)
              )
              (i32.const 2)
             )
             (local.get $3)
            )
           )
           (i32.shl
            (i32.const 1)
            (i32.and
             (local.get $4)
             (i32.const 31)
            )
           )
          )
         )
        )
        (br_if $while-in4
         (local.tee $2
          (i32.load8_s
           (local.tee $1
            (i32.add
             (local.get $1)
             (i32.const 1)
            )
           )
          )
         )
        )
       )
      )
      (local.set $1
       (local.get $0)
      )
     )
     (i32.sub
      (local.get $1)
      (local.get $0)
     )
    )
    (i32.const 0)
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $_srand (; 627 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (i64.store
   (local.get $1)
   (i64.const 0)
  )
  (i64.store
   (local.get $1)
   (i64.extend_i32_u
    (i32.add
     (local.get $0)
     (i32.const -1)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $2)
  )
 )
 (func $_strcat (; 628 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $_strcpy
   (i32.add
    (call $_strlen
     (local.get $0)
    )
    (local.get $0)
   )
   (local.get $1)
  )
 )
 (func $_fputc (; 629 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (block $do-once
   (if
    (i32.ge_s
     (i32.load offset=76
      (local.get $1)
     )
     (i32.const 0)
    )
    (block
     (local.set $3
      (i32.and
       (local.get $0)
       (i32.const 255)
      )
     )
     (block $__rjto$0
      (block $__rjti$0
       (br_if $__rjti$0
        (i32.eq
         (i32.load8_s offset=75
          (local.get $1)
         )
         (i32.and
          (local.get $0)
          (i32.const 255)
         )
        )
       )
       (br_if $__rjti$0
        (i32.ge_u
         (local.tee $2
          (i32.load offset=20
           (local.get $1)
          )
         )
         (i32.load offset=16
          (local.get $1)
         )
        )
       )
       (i32.store offset=20
        (local.get $1)
        (i32.add
         (local.get $2)
         (i32.const 1)
        )
       )
       (i32.store8
        (local.get $2)
        (local.get $3)
       )
       (br $__rjto$0)
      )
      (call $___overflow
       (local.get $1)
       (local.get $0)
      )
     )
     (br $do-once)
    )
   )
   (local.set $3
    (i32.and
     (local.get $0)
     (i32.const 255)
    )
   )
   (if
    (i32.ne
     (i32.load8_s offset=75
      (local.get $1)
     )
     (i32.and
      (local.get $0)
      (i32.const 255)
     )
    )
    (if
     (i32.lt_u
      (local.tee $2
       (i32.load offset=20
        (local.get $1)
       )
      )
      (i32.load offset=16
       (local.get $1)
      )
     )
     (block
      (i32.store offset=20
       (local.get $1)
       (i32.add
        (local.get $2)
        (i32.const 1)
       )
      )
      (i32.store8
       (local.get $2)
       (local.get $3)
      )
      (br $do-once)
     )
    )
   )
   (call $___overflow
    (local.get $1)
    (local.get $0)
   )
  )
 )
 (func $_strcspn (; 630 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local.set $4
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 32)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 32)
   )
  )
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.eqz
      (local.tee $2
       (i32.load8_s
        (local.get $1)
       )
      )
     )
    )
    (br_if $__rjti$0
     (i32.eqz
      (i32.load8_s offset=1
       (local.get $1)
      )
     )
    )
    (drop
     (call $_memset
      (local.get $3)
      (i32.const 0)
      (i32.const 32)
     )
    )
    (if
     (local.tee $2
      (i32.load8_s
       (local.get $1)
      )
     )
     (loop $while-in
      (i32.store
       (local.tee $5
        (i32.add
         (i32.shl
          (i32.shr_u
           (local.tee $2
            (i32.and
             (local.get $2)
             (i32.const 255)
            )
           )
           (i32.const 5)
          )
          (i32.const 2)
         )
         (local.get $3)
        )
       )
       (i32.or
        (i32.load
         (local.get $5)
        )
        (i32.shl
         (i32.const 1)
         (i32.and
          (local.get $2)
          (i32.const 31)
         )
        )
       )
      )
      (br_if $while-in
       (local.tee $2
        (i32.load8_s
         (local.tee $1
          (i32.add
           (local.get $1)
           (i32.const 1)
          )
         )
        )
       )
      )
     )
    )
    (if
     (local.tee $2
      (i32.load8_s
       (local.get $0)
      )
     )
     (block $label$break$L1
      (local.set $1
       (local.get $0)
      )
      (loop $while-in1
       (br_if $label$break$L1
        (i32.and
         (i32.load
          (i32.add
           (i32.shl
            (i32.shr_u
             (local.tee $2
              (i32.and
               (local.get $2)
               (i32.const 255)
              )
             )
             (i32.const 5)
            )
            (i32.const 2)
           )
           (local.get $3)
          )
         )
         (i32.shl
          (i32.const 1)
          (i32.and
           (local.get $2)
           (i32.const 31)
          )
         )
        )
       )
       (br_if $while-in1
        (local.tee $2
         (i32.load8_s
          (local.tee $1
           (i32.add
            (local.get $1)
            (i32.const 1)
           )
          )
         )
        )
       )
      )
     )
     (local.set $1
      (local.get $0)
     )
    )
    (br $__rjto$0)
   )
   (local.set $1
    (call $___strchrnul
     (local.get $0)
     (local.get $2)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $4)
  )
  (i32.sub
   (local.get $1)
   (local.get $0)
  )
 )
 (func $_strtok (; 631 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (block $do-once
   (block $__rjti$0
    (br_if $__rjti$0
     (local.get $0)
    )
    (br_if $__rjti$0
     (local.tee $0
      (i32.load
       (i32.const 34320)
      )
     )
    )
    (local.set $0
     (i32.const 0)
    )
    (br $do-once)
   )
   (if
    (i32.eqz
     (i32.load8_s
      (local.tee $0
       (i32.add
        (call $_strspn
         (local.get $0)
        )
        (local.get $0)
       )
      )
     )
    )
    (block
     (i32.store
      (i32.const 34320)
      (i32.const 0)
     )
     (local.set $0
      (i32.const 0)
     )
     (br $do-once)
    )
   )
   (i32.store
    (i32.const 34320)
    (local.tee $1
     (i32.add
      (call $_strcspn
       (local.get $0)
       (i32.const 16159)
      )
      (local.get $0)
     )
    )
   )
   (if
    (i32.load8_s
     (local.get $1)
    )
    (block
     (i32.store
      (i32.const 34320)
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (i32.store8
      (local.get $1)
      (i32.const 0)
     )
    )
    (i32.store
     (i32.const 34320)
     (i32.const 0)
    )
   )
  )
  (local.get $0)
 )
 (func $_cosf (; 632 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.shr_u
    (local.tee $2
     (i32.reinterpret_f32
      (local.get $0)
     )
    )
    (i32.const 31)
   )
  )
  (local.set $0
   (if (result f32)
    (i32.lt_u
     (local.tee $2
      (i32.and
       (local.get $2)
       (i32.const 2147483647)
      )
     )
     (i32.const 1061752795)
    )
    (if (result f32)
     (i32.lt_u
      (local.get $2)
      (i32.const 964689920)
     )
     (f32.const 1)
     (call $___cosdf
      (f64.promote_f32
       (local.get $0)
      )
     )
    )
    (block $label$break$L1 (result f32)
     (if
      (i32.lt_u
       (local.get $2)
       (i32.const 1081824210)
      )
      (block
       (local.set $1
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
       )
       (local.set $3
        (f64.promote_f32
         (local.get $0)
        )
       )
       (if
        (i32.gt_u
         (local.get $2)
         (i32.const 1075235811)
        )
        (br $label$break$L1
         (f32.neg
          (call $___cosdf
           (f64.add
            (select
             (f64.const 3.141592653589793)
             (f64.const -3.141592653589793)
             (local.get $1)
            )
            (local.get $3)
           )
          )
         )
        )
       )
       (if
        (local.get $1)
        (br $label$break$L1
         (call $___sindf
          (f64.add
           (local.get $3)
           (f64.const 1.5707963267948966)
          )
         )
        )
        (br $label$break$L1
         (call $___sindf
          (f64.sub
           (f64.const 1.5707963267948966)
           (local.get $3)
          )
         )
        )
       )
      )
     )
     (if
      (i32.lt_u
       (local.get $2)
       (i32.const 1088565718)
      )
      (block
       (local.set $1
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
       )
       (if
        (i32.gt_u
         (local.get $2)
         (i32.const 1085271519)
        )
        (br $label$break$L1
         (call $___cosdf
          (f64.add
           (select
            (f64.const 6.283185307179586)
            (f64.const -6.283185307179586)
            (local.get $1)
           )
           (f64.promote_f32
            (local.get $0)
           )
          )
         )
        )
       )
       (if
        (local.get $1)
        (br $label$break$L1
         (call $___sindf
          (f64.add
           (f64.promote_f32
            (f32.neg
             (local.get $0)
            )
           )
           (f64.const -4.71238898038469)
          )
         )
        )
        (br $label$break$L1
         (call $___sindf
          (f64.add
           (f64.promote_f32
            (local.get $0)
           )
           (f64.const -4.71238898038469)
          )
         )
        )
       )
      )
     )
     (drop
      (br_if $label$break$L1
       (f32.sub
        (local.get $0)
        (local.get $0)
       )
       (i32.gt_u
        (local.get $2)
        (i32.const 2139095039)
       )
      )
     )
     (block $switch-default
      (block $switch-case1
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-case0 $switch-case1 $switch-default
          (i32.and
           (call $___rem_pio2f
            (local.get $0)
            (local.get $1)
           )
           (i32.const 3)
          )
         )
        )
        (br $label$break$L1
         (call $___cosdf
          (f64.load
           (local.get $1)
          )
         )
        )
       )
       (br $label$break$L1
        (call $___sindf
         (f64.neg
          (f64.load
           (local.get $1)
          )
         )
        )
       )
      )
      (br $label$break$L1
       (f32.neg
        (call $___cosdf
         (f64.load
          (local.get $1)
         )
        )
       )
      )
     )
     (call $___sindf
      (f64.load
       (local.get $1)
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $_sinf (; 633 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (local $1 i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local.set $5
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $1
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $4
   (i32.shr_u
    (local.tee $2
     (i32.reinterpret_f32
      (local.get $0)
     )
    )
    (i32.const 31)
   )
  )
  (if
   (i32.lt_u
    (local.tee $2
     (i32.and
      (local.get $2)
      (i32.const 2147483647)
     )
    )
    (i32.const 1061752795)
   )
   (if
    (i32.ge_u
     (local.get $2)
     (i32.const 964689920)
    )
    (local.set $0
     (call $___sindf
      (f64.promote_f32
       (local.get $0)
      )
     )
    )
   )
   (local.set $0
    (block $label$break$L1 (result f32)
     (if
      (i32.lt_u
       (local.get $2)
       (i32.const 1081824210)
      )
      (block
       (local.set $1
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
       )
       (local.set $3
        (f64.promote_f32
         (local.get $0)
        )
       )
       (if
        (i32.ge_u
         (local.get $2)
         (i32.const 1075235812)
        )
        (br $label$break$L1
         (call $___sindf
          (f64.neg
           (f64.add
            (select
             (f64.const 3.141592653589793)
             (f64.const -3.141592653589793)
             (local.get $1)
            )
            (local.get $3)
           )
          )
         )
        )
       )
       (if
        (local.get $1)
        (br $label$break$L1
         (f32.neg
          (call $___cosdf
           (f64.add
            (local.get $3)
            (f64.const 1.5707963267948966)
           )
          )
         )
        )
        (br $label$break$L1
         (call $___cosdf
          (f64.add
           (local.get $3)
           (f64.const -1.5707963267948966)
          )
         )
        )
       )
      )
     )
     (if
      (i32.lt_u
       (local.get $2)
       (i32.const 1088565718)
      )
      (block
       (local.set $1
        (i32.ne
         (local.get $4)
         (i32.const 0)
        )
       )
       (local.set $3
        (f64.promote_f32
         (local.get $0)
        )
       )
       (if
        (i32.ge_u
         (local.get $2)
         (i32.const 1085271520)
        )
        (br $label$break$L1
         (call $___sindf
          (f64.add
           (select
            (f64.const 6.283185307179586)
            (f64.const -6.283185307179586)
            (local.get $1)
           )
           (local.get $3)
          )
         )
        )
       )
       (if
        (local.get $1)
        (br $label$break$L1
         (call $___cosdf
          (f64.add
           (local.get $3)
           (f64.const 4.71238898038469)
          )
         )
        )
        (br $label$break$L1
         (f32.neg
          (call $___cosdf
           (f64.add
            (local.get $3)
            (f64.const -4.71238898038469)
           )
          )
         )
        )
       )
      )
     )
     (drop
      (br_if $label$break$L1
       (f32.sub
        (local.get $0)
        (local.get $0)
       )
       (i32.gt_u
        (local.get $2)
        (i32.const 2139095039)
       )
      )
     )
     (block $switch-default
      (block $switch-case1
       (block $switch-case0
        (block $switch-case
         (br_table $switch-case $switch-case0 $switch-case1 $switch-default
          (i32.and
           (call $___rem_pio2f
            (local.get $0)
            (local.get $1)
           )
           (i32.const 3)
          )
         )
        )
        (br $label$break$L1
         (call $___sindf
          (f64.load
           (local.get $1)
          )
         )
        )
       )
       (br $label$break$L1
        (call $___cosdf
         (f64.load
          (local.get $1)
         )
        )
       )
      )
      (br $label$break$L1
       (call $___sindf
        (f64.neg
         (f64.load
          (local.get $1)
         )
        )
       )
      )
     )
     (f32.neg
      (call $___cosdf
       (f64.load
        (local.get $1)
       )
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $5)
  )
  (local.get $0)
 )
 (func $_tan (; 634 ;) (; has Stack IR ;) (param $0 f64) (result f64)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local.set $3
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $2
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (if
   (i32.lt_u
    (local.tee $1
     (i32.and
      (i32.wrap_i64
       (i64.shr_u
        (i64.reinterpret_f64
         (local.get $0)
        )
        (i64.const 32)
       )
      )
      (i32.const 2147483647)
     )
    )
    (i32.const 1072243196)
   )
   (if
    (i32.ge_u
     (local.get $1)
     (i32.const 1044381696)
    )
    (local.set $0
     (call $___tan
      (local.get $0)
      (f64.const 0)
      (i32.const 0)
     )
    )
   )
   (local.set $0
    (if (result f64)
     (i32.gt_u
      (local.get $1)
      (i32.const 2146435071)
     )
     (f64.sub
      (local.get $0)
      (local.get $0)
     )
     (block (result f64)
      (local.set $1
       (call $___rem_pio2
        (local.get $0)
        (local.get $2)
       )
      )
      (call $___tan
       (f64.load
        (local.get $2)
       )
       (f64.load offset=8
        (local.get $2)
       )
       (i32.and
        (local.get $1)
        (i32.const 1)
       )
      )
     )
    )
   )
  )
  (global.set $STACKTOP
   (local.get $3)
  )
  (local.get $0)
 )
 (func $_asinf (; 635 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (local $1 i32)
  (local $2 f32)
  (local $3 i32)
  (local $4 f64)
  (if
   (i32.gt_u
    (local.tee $1
     (i32.and
      (local.tee $3
       (i32.reinterpret_f32
        (local.get $0)
       )
      )
      (i32.const 2147483647)
     )
    )
    (i32.const 1065353215)
   )
   (if
    (i32.eq
     (local.get $1)
     (i32.const 1065353216)
    )
    (return
     (f32.demote_f64
      (f64.add
       (f64.mul
        (f64.promote_f32
         (local.get $0)
        )
        (f64.const 1.5707963267948966)
       )
       (f64.const 7.52316384526264e-37)
      )
     )
    )
    (return
     (f32.div
      (f32.const 0)
      (f32.sub
       (local.get $0)
       (local.get $0)
      )
     )
    )
   )
  )
  (if
   (i32.ge_u
    (local.get $1)
    (i32.const 1056964608)
   )
   (return
    (select
     (f32.neg
      (local.tee $0
       (f32.demote_f64
        (f64.sub
         (f64.const 1.5707963267948966)
         (f64.mul
          (f64.add
           (local.tee $4
            (f64.sqrt
             (f64.promote_f32
              (local.tee $0
               (f32.mul
                (f32.sub
                 (f32.const 1)
                 (f32.abs
                  (local.get $0)
                 )
                )
                (f32.const 0.5)
               )
              )
             )
            )
           )
           (f64.mul
            (local.get $4)
            (f64.promote_f32
             (f32.div
              (f32.mul
               (local.get $0)
               (f32.add
                (f32.mul
                 (local.get $0)
                 (f32.sub
                  (f32.const -0.04274342209100723)
                  (f32.mul
                   (local.get $0)
                   (f32.const 0.008656363002955914)
                  )
                 )
                )
                (f32.const 0.16666586697101593)
               )
              )
              (f32.sub
               (f32.const 1)
               (f32.mul
                (local.get $0)
                (f32.const 0.7066296339035034)
               )
              )
             )
            )
           )
          )
          (f64.const 2)
         )
        )
       )
      )
     )
     (local.get $0)
     (i32.lt_s
      (local.get $3)
      (i32.const 0)
     )
    )
   )
  )
  (if
   (i32.lt_u
    (i32.add
     (local.get $1)
     (i32.const -8388608)
    )
    (i32.const 956301312)
   )
   (return
    (local.get $0)
   )
  )
  (f32.add
   (f32.mul
    (f32.div
     (f32.mul
      (local.tee $2
       (f32.mul
        (local.get $0)
        (local.get $0)
       )
      )
      (f32.add
       (f32.mul
        (local.get $2)
        (f32.sub
         (f32.const -0.04274342209100723)
         (f32.mul
          (local.get $2)
          (f32.const 0.008656363002955914)
         )
        )
       )
       (f32.const 0.16666586697101593)
      )
     )
     (f32.sub
      (f32.const 1)
      (f32.mul
       (local.get $2)
       (f32.const 0.7066296339035034)
      )
     )
    )
    (local.get $0)
   )
   (local.get $0)
  )
 )
 (func $_atanf (; 636 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (local $1 i32)
  (local $2 f32)
  (local $3 f32)
  (local $4 i32)
  (local.set $4
   (i32.shr_u
    (local.tee $1
     (i32.reinterpret_f32
      (local.get $0)
     )
    )
    (i32.const 31)
   )
  )
  (if
   (i32.gt_u
    (local.tee $1
     (i32.and
      (local.get $1)
      (i32.const 2147483647)
     )
    )
    (i32.const 1283457023)
   )
   (return
    (select
     (local.get $0)
     (select
      (f32.const -1.570796251296997)
      (f32.const 1.570796251296997)
      (local.get $4)
     )
     (i32.gt_u
      (local.get $1)
      (i32.const 2139095040)
     )
    )
   )
  )
  (if
   (i32.lt_u
    (local.get $1)
    (i32.const 1054867456)
   )
   (local.set $1
    (if (result i32)
     (i32.lt_u
      (local.get $1)
      (i32.const 964689920)
     )
     (return
      (local.get $0)
     )
     (i32.const -1)
    )
   )
   (block
    (local.set $0
     (f32.abs
      (local.get $0)
     )
    )
    (local.set $0
     (if (result f32)
      (i32.lt_u
       (local.get $1)
       (i32.const 1066926080)
      )
      (if (result f32)
       (i32.lt_u
        (local.get $1)
        (i32.const 1060110336)
       )
       (block (result f32)
        (local.set $1
         (i32.const 0)
        )
        (f32.div
         (f32.add
          (f32.mul
           (local.get $0)
           (f32.const 2)
          )
          (f32.const -1)
         )
         (f32.add
          (local.get $0)
          (f32.const 2)
         )
        )
       )
       (block (result f32)
        (local.set $1
         (i32.const 1)
        )
        (f32.div
         (f32.add
          (local.get $0)
          (f32.const -1)
         )
         (f32.add
          (local.get $0)
          (f32.const 1)
         )
        )
       )
      )
      (if (result f32)
       (i32.lt_u
        (local.get $1)
        (i32.const 1075576832)
       )
       (block (result f32)
        (local.set $1
         (i32.const 2)
        )
        (f32.div
         (f32.add
          (local.get $0)
          (f32.const -1.5)
         )
         (f32.add
          (f32.mul
           (local.get $0)
           (f32.const 1.5)
          )
          (f32.const 1)
         )
        )
       )
       (block (result f32)
        (local.set $1
         (i32.const 3)
        )
        (f32.div
         (f32.const -1)
         (local.get $0)
        )
       )
      )
     )
    )
   )
  )
  (local.set $2
   (f32.mul
    (local.tee $3
     (f32.mul
      (local.get $0)
      (local.get $0)
     )
    )
    (local.get $3)
   )
  )
  (local.set $3
   (f32.mul
    (local.get $3)
    (f32.add
     (f32.mul
      (local.get $2)
      (f32.add
       (f32.mul
        (local.get $2)
        (f32.const 0.06168760731816292)
       )
       (f32.const 0.14253635704517365)
      )
     )
     (f32.const 0.333333283662796)
    )
   )
  )
  (local.set $2
   (f32.mul
    (local.get $2)
    (f32.sub
     (f32.const -0.19999158382415771)
     (f32.mul
      (local.get $2)
      (f32.const 0.106480173766613)
     )
    )
   )
  )
  (if (result f32)
   (i32.lt_s
    (local.get $1)
    (i32.const 0)
   )
   (f32.sub
    (local.get $0)
    (f32.mul
     (local.get $0)
     (f32.add
      (local.get $2)
      (local.get $3)
     )
    )
   )
   (select
    (local.tee $0
     (f32.sub
      (f32.load
       (i32.add
        (i32.shl
         (local.get $1)
         (i32.const 2)
        )
        (i32.const 13792)
       )
      )
      (f32.sub
       (f32.sub
        (f32.mul
         (local.get $0)
         (f32.add
          (local.get $2)
          (local.get $3)
         )
        )
        (f32.load
         (i32.add
          (i32.shl
           (local.get $1)
           (i32.const 2)
          )
          (i32.const 13808)
         )
        )
       )
       (local.get $0)
      )
     )
    )
    (f32.neg
     (local.get $0)
    )
    (i32.eqz
     (local.get $4)
    )
   )
  )
 )
 (func $_atan2f (; 637 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (result f32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (block $__rjto$0
   (block $__rjti$0
    (br_if $__rjti$0
     (i32.gt_u
      (local.tee $6
       (i32.and
        (local.tee $5
         (i32.reinterpret_f32
          (local.get $1)
         )
        )
        (i32.const 2147483647)
       )
      )
      (i32.const 2139095040)
     )
    )
    (br_if $__rjti$0
     (i32.gt_u
      (local.tee $3
       (i32.and
        (local.tee $2
         (i32.reinterpret_f32
          (local.get $0)
         )
        )
        (i32.const 2147483647)
       )
      )
      (i32.const 2139095040)
     )
    )
    (block $label$break$L1
     (if
      (i32.eq
       (local.get $5)
       (i32.const 1065353216)
      )
      (block
       (local.set $0
        (call $_atanf
         (local.get $0)
        )
       )
       (br $label$break$L1)
      )
     )
     (local.set $2
      (i32.or
       (local.tee $7
        (i32.shr_u
         (local.get $2)
         (i32.const 31)
        )
       )
       (i32.and
        (i32.shr_u
         (local.get $5)
         (i32.const 30)
        )
        (i32.const 2)
       )
      )
     )
     (if
      (i32.eqz
       (local.get $3)
      )
      (block $switch
       (block $switch-case2
        (block $switch-case1
         (br_table $label$break$L1 $label$break$L1 $switch-case1 $switch-case2 $switch
          (i32.and
           (local.get $2)
           (i32.const 3)
          )
         )
        )
        (local.set $0
         (f32.const 3.1415927410125732)
        )
        (br $label$break$L1)
       )
       (local.set $0
        (f32.const -3.1415927410125732)
       )
       (br $label$break$L1)
      )
     )
     (block $label$break$L14
      (if
       (i32.lt_s
        (local.tee $4
         (i32.and
          (local.get $5)
          (i32.const 2147483647)
         )
        )
        (i32.const 2139095040)
       )
       (block
        (br_if $label$break$L14
         (local.get $4)
        )
        (local.set $0
         (select
          (f32.const -1.5707963705062866)
          (f32.const 1.5707963705062866)
          (local.get $7)
         )
        )
        (br $label$break$L1)
       )
       (block
        (br_if $label$break$L14
         (i32.sub
          (local.get $4)
          (i32.const 2139095040)
         )
        )
        (local.set $4
         (i32.and
          (local.get $2)
          (i32.const 255)
         )
        )
        (if
         (i32.eq
          (local.get $3)
          (i32.const 2139095040)
         )
         (block $switch10
          (block $switch-case14
           (block $switch-case13
            (block $switch-case12
             (block $switch-case11
              (br_table $switch-case11 $switch-case12 $switch-case13 $switch-case14 $switch10
               (i32.and
                (local.get $4)
                (i32.const 3)
               )
              )
             )
             (local.set $0
              (f32.const 0.7853981852531433)
             )
             (br $label$break$L1)
            )
            (local.set $0
             (f32.const -0.7853981852531433)
            )
            (br $label$break$L1)
           )
           (local.set $0
            (f32.const 2.356194496154785)
           )
           (br $label$break$L1)
          )
          (local.set $0
           (f32.const -2.356194496154785)
          )
          (br $label$break$L1)
         )
         (block $switch16
          (block $switch-case20
           (block $switch-case19
            (block $switch-case18
             (block $switch-case17
              (br_table $switch-case17 $switch-case18 $switch-case19 $switch-case20 $switch16
               (i32.and
                (local.get $4)
                (i32.const 3)
               )
              )
             )
             (local.set $0
              (f32.const 0)
             )
             (br $label$break$L1)
            )
            (local.set $0
             (f32.const -0)
            )
            (br $label$break$L1)
           )
           (local.set $0
            (f32.const 3.1415927410125732)
           )
           (br $label$break$L1)
          )
          (local.set $0
           (f32.const -3.1415927410125732)
          )
          (br $label$break$L1)
         )
        )
       )
      )
     )
     (if
      (i32.or
       (i32.eq
        (local.get $3)
        (i32.const 2139095040)
       )
       (i32.lt_u
        (i32.add
         (local.get $6)
         (i32.const 218103808)
        )
        (local.get $3)
       )
      )
      (block
       (local.set $0
        (select
         (f32.const -1.5707963705062866)
         (f32.const 1.5707963705062866)
         (local.get $7)
        )
       )
       (br $label$break$L1)
      )
     )
     (local.set $0
      (if (result f32)
       (i32.and
        (i32.lt_s
         (local.get $5)
         (i32.const 0)
        )
        (i32.lt_u
         (i32.add
          (local.get $3)
          (i32.const 218103808)
         )
         (local.get $6)
        )
       )
       (f32.const 0)
       (call $_atanf
        (f32.abs
         (f32.div
          (local.get $0)
          (local.get $1)
         )
        )
       )
      )
     )
     (block $switch-default26
      (block $switch-case25
       (block $switch-case24
        (br_table $label$break$L1 $switch-case24 $switch-case25 $switch-default26
         (i32.and
          (local.get $2)
          (i32.const 3)
         )
        )
       )
       (local.set $0
        (f32.neg
         (local.get $0)
        )
       )
       (br $label$break$L1)
      )
      (local.set $0
       (f32.sub
        (f32.const 3.1415927410125732)
        (f32.add
         (local.get $0)
         (f32.const 8.742277657347586e-08)
        )
       )
      )
      (br $label$break$L1)
     )
     (local.set $0
      (f32.add
       (f32.add
        (local.get $0)
        (f32.const 8.742277657347586e-08)
       )
       (f32.const -3.1415927410125732)
      )
     )
    )
    (br $__rjto$0)
   )
   (local.set $0
    (f32.add
     (local.get $0)
     (local.get $1)
    )
   )
  )
  (local.get $0)
 )
 (func $_pow (; 638 ;) (; has Stack IR ;) (param $0 f64) (param $1 f64) (result f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 f64)
  (local $9 i64)
  (local $10 i32)
  (local $11 f64)
  (local $12 f64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i64)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 f64)
  (local $21 f64)
  (local $22 f64)
  (if
   (i32.eqz
    (i32.or
     (local.tee $3
      (i32.and
       (local.tee $7
        (i32.wrap_i64
         (i64.shr_u
          (local.tee $9
           (i64.reinterpret_f64
            (local.get $1)
           )
          )
          (i64.const 32)
         )
        )
       )
       (i32.const 2147483647)
      )
     )
     (local.tee $10
      (i32.wrap_i64
       (local.get $9)
      )
     )
    )
   )
   (return
    (f64.const 1)
   )
  )
  (if
   (i32.and
    (i32.eq
     (local.tee $13
      (i32.wrap_i64
       (i64.shr_u
        (local.tee $16
         (i64.reinterpret_f64
          (local.get $0)
         )
        )
        (i64.const 32)
       )
      )
     )
     (i32.const 1072693248)
    )
    (local.tee $17
     (i32.eqz
      (local.tee $14
       (i32.wrap_i64
        (local.get $16)
       )
      )
     )
    )
   )
   (return
    (f64.const 1)
   )
  )
  (block $folding-inner2
   (block $folding-inner1
    (block $folding-inner0
     (if
      (i32.le_u
       (local.tee $5
        (i32.and
         (local.get $13)
         (i32.const 2147483647)
        )
       )
       (i32.const 2146435072)
      )
      (if
       (i32.eqz
        (i32.or
         (i32.and
          (i32.eq
           (local.get $5)
           (i32.const 2146435072)
          )
          (i32.ne
           (local.get $14)
           (i32.const 0)
          )
         )
         (i32.gt_u
          (local.get $3)
          (i32.const 2146435072)
         )
        )
       )
       (if
        (i32.eqz
         (i32.and
          (local.tee $18
           (i32.eq
            (local.get $3)
            (i32.const 2146435072)
           )
          )
          (i32.ne
           (local.get $10)
           (i32.const 0)
          )
         )
        )
        (block
         (block $__rjto$1
          (block $__rjti$1
           (block $__rjti$0
            (br_if $__rjti$0
             (i32.eqz
              (local.tee $15
               (i32.lt_s
                (local.get $13)
                (i32.const 0)
               )
              )
             )
            )
            (local.set $2
             (if (result i32)
              (i32.gt_u
               (local.get $3)
               (i32.const 1128267775)
              )
              (block
               (local.set $2
                (i32.const 2)
               )
               (br $__rjti$0)
              )
              (if (result i32)
               (i32.gt_u
                (local.get $3)
                (i32.const 1072693247)
               )
               (block (result i32)
                (local.set $2
                 (i32.shr_u
                  (local.get $3)
                  (i32.const 20)
                 )
                )
                (if
                 (i32.gt_u
                  (local.get $3)
                  (i32.const 1094713343)
                 )
                 (block
                  (local.set $2
                   (select
                    (i32.sub
                     (i32.const 2)
                     (i32.and
                      (local.tee $19
                       (i32.shr_u
                        (local.get $10)
                        (local.tee $2
                         (i32.sub
                          (i32.const 1075)
                          (local.get $2)
                         )
                        )
                       )
                      )
                      (i32.const 1)
                     )
                    )
                    (i32.const 0)
                    (i32.eq
                     (local.get $10)
                     (i32.shl
                      (local.get $19)
                      (local.get $2)
                     )
                    )
                   )
                  )
                  (br $__rjti$0)
                 )
                )
                (if (result i32)
                 (local.get $10)
                 (i32.const 0)
                 (block
                  (local.set $2
                   (select
                    (i32.sub
                     (i32.const 2)
                     (i32.and
                      (local.tee $10
                       (i32.shr_u
                        (local.get $3)
                        (local.tee $2
                         (i32.sub
                          (i32.const 1043)
                          (local.get $2)
                         )
                        )
                       )
                      )
                      (i32.const 1)
                     )
                    )
                    (i32.const 0)
                    (i32.eq
                     (local.get $3)
                     (i32.shl
                      (local.get $10)
                      (local.get $2)
                     )
                    )
                   )
                  )
                  (br $__rjti$1)
                 )
                )
               )
               (br $__rjti$0)
              )
             )
            )
            (br $__rjto$1)
           )
           (br_if $__rjti$1
            (i32.eqz
             (local.get $10)
            )
           )
           (br $__rjto$1)
          )
          (if
           (local.get $18)
           (block
            (if
             (i32.eqz
              (i32.or
               (local.get $14)
               (i32.add
                (local.get $5)
                (i32.const -1072693248)
               )
              )
             )
             (return
              (f64.const 1)
             )
            )
            (local.set $2
             (i32.gt_s
              (local.get $7)
              (i32.const -1)
             )
            )
            (if
             (i32.gt_u
              (local.get $5)
              (i32.const 1072693247)
             )
             (return
              (select
               (local.get $1)
               (f64.const 0)
               (local.get $2)
              )
             )
             (return
              (select
               (f64.const 0)
               (f64.neg
                (local.get $1)
               )
               (local.get $2)
              )
             )
            )
           )
          )
          (if
           (i32.eq
            (local.get $3)
            (i32.const 1072693248)
           )
           (return
            (select
             (local.get $0)
             (f64.div
              (f64.const 1)
              (local.get $0)
             )
             (i32.gt_s
              (local.get $7)
              (i32.const -1)
             )
            )
           )
          )
          (if
           (i32.eq
            (local.get $7)
            (i32.const 1073741824)
           )
           (return
            (f64.mul
             (local.get $0)
             (local.get $0)
            )
           )
          )
          (if
           (i32.and
            (i32.eq
             (local.get $7)
             (i32.const 1071644672)
            )
            (i32.gt_s
             (local.get $13)
             (i32.const -1)
            )
           )
           (return
            (f64.sqrt
             (local.get $0)
            )
           )
          )
         )
         (local.set $4
          (f64.abs
           (local.get $0)
          )
         )
         (if
          (local.get $17)
          (if
           (i32.or
            (i32.eqz
             (local.get $5)
            )
            (i32.eq
             (i32.or
              (local.get $5)
              (i32.const 1073741824)
             )
             (i32.const 2146435072)
            )
           )
           (block
            (local.set $0
             (select
              (f64.div
               (f64.const 1)
               (local.get $4)
              )
              (local.get $4)
              (i32.lt_s
               (local.get $7)
               (i32.const 0)
              )
             )
            )
            (if
             (i32.eqz
              (local.get $15)
             )
             (return
              (local.get $0)
             )
            )
            (if
             (i32.or
              (i32.add
               (local.get $5)
               (i32.const -1072693248)
              )
              (local.get $2)
             )
             (return
              (select
               (f64.neg
                (local.get $0)
               )
               (local.get $0)
               (i32.eq
                (local.get $2)
                (i32.const 1)
               )
              )
             )
            )
            (br $folding-inner0)
           )
          )
         )
         (if
          (local.get $15)
          (block $label$break$L55
           (block $switch-default
            (block $switch-case1
             (br_table $folding-inner0 $switch-case1 $switch-default
              (local.get $2)
             )
            )
            (local.set $8
             (f64.const -1)
            )
            (br $label$break$L55)
           )
           (local.set $8
            (f64.const 1)
           )
          )
          (local.set $8
           (f64.const 1)
          )
         )
         (if
          (i32.gt_u
           (local.get $3)
           (i32.const 1105199104)
          )
          (block $do-once2
           (if
            (i32.gt_u
             (local.get $3)
             (i32.const 1139802112)
            )
            (if
             (i32.lt_u
              (local.get $5)
              (i32.const 1072693248)
             )
             (return
              (select
               (global.get $inf$asm2wasm$import)
               (f64.const 0)
               (i32.lt_s
                (local.get $7)
                (i32.const 0)
               )
              )
             )
             (return
              (select
               (global.get $inf$asm2wasm$import)
               (f64.const 0)
               (i32.gt_s
                (local.get $7)
                (i32.const 0)
               )
              )
             )
            )
           )
           (if
            (i32.lt_u
             (local.get $5)
             (i32.const 1072693247)
            )
            (return
             (select
              (f64.mul
               (f64.mul
                (local.get $8)
                (f64.const 1.e+300)
               )
               (f64.const 1.e+300)
              )
              (f64.mul
               (f64.mul
                (local.get $8)
                (f64.const 1e-300)
               )
               (f64.const 1e-300)
              )
              (i32.lt_s
               (local.get $7)
               (i32.const 0)
              )
             )
            )
           )
           (if
            (i32.le_u
             (local.get $5)
             (i32.const 1072693248)
            )
            (block
             (local.set $6
              (f64.sub
               (local.tee $0
                (f64.reinterpret_i64
                 (i64.and
                  (i64.reinterpret_f64
                   (f64.add
                    (local.tee $6
                     (f64.mul
                      (local.tee $0
                       (f64.add
                        (local.get $4)
                        (f64.const -1)
                       )
                      )
                      (f64.const 1.4426950216293335)
                     )
                    )
                    (local.tee $4
                     (f64.sub
                      (f64.mul
                       (local.get $0)
                       (f64.const 1.9259629911266175e-08)
                      )
                      (f64.mul
                       (f64.mul
                        (f64.mul
                         (local.get $0)
                         (local.get $0)
                        )
                        (f64.sub
                         (f64.const 0.5)
                         (f64.mul
                          (local.get $0)
                          (f64.sub
                           (f64.const 0.3333333333333333)
                           (f64.mul
                            (local.get $0)
                            (f64.const 0.25)
                           )
                          )
                         )
                        )
                       )
                       (f64.const 1.4426950408889634)
                      )
                     )
                    )
                   )
                  )
                  (i64.const -4294967296)
                 )
                )
               )
               (local.get $6)
              )
             )
             (br $do-once2)
            )
           )
           (return
            (select
             (f64.mul
              (f64.mul
               (local.get $8)
               (f64.const 1.e+300)
              )
              (f64.const 1.e+300)
             )
             (f64.mul
              (f64.mul
               (local.get $8)
               (f64.const 1e-300)
              )
              (f64.const 1e-300)
             )
             (i32.gt_s
              (local.get $7)
              (i32.const 0)
             )
            )
           )
          )
          (block
           (local.set $5
            (i32.add
             (i32.shr_s
              (local.tee $2
               (select
                (i32.wrap_i64
                 (i64.shr_u
                  (i64.reinterpret_f64
                   (local.tee $0
                    (f64.mul
                     (local.get $4)
                     (f64.const 9007199254740992)
                    )
                   )
                  )
                  (i64.const 32)
                 )
                )
                (local.get $5)
                (local.tee $7
                 (i32.lt_u
                  (local.get $5)
                  (i32.const 1048576)
                 )
                )
               )
              )
              (i32.const 20)
             )
             (select
              (i32.const -1076)
              (i32.const -1023)
              (local.get $7)
             )
            )
           )
           (local.set $2
            (i32.or
             (local.tee $3
              (i32.and
               (local.get $2)
               (i32.const 1048575)
              )
             )
             (i32.const 1072693248)
            )
           )
           (if
            (i32.lt_u
             (local.get $3)
             (i32.const 235663)
            )
            (block
             (local.set $3
              (local.get $2)
             )
             (local.set $2
              (i32.const 0)
             )
            )
            (block
             (local.set $3
              (select
               (local.get $2)
               (i32.add
                (local.get $2)
                (i32.const -1048576)
               )
               (local.tee $2
                (i32.lt_u
                 (local.get $3)
                 (i32.const 767610)
                )
               )
              )
             )
             (local.set $5
              (i32.add
               (local.get $5)
               (i32.and
                (i32.xor
                 (local.get $2)
                 (i32.const 1)
                )
                (i32.const 1)
               )
              )
             )
            )
           )
           (local.set $6
            (f64.sub
             (f64.sub
              (f64.sub
               (local.tee $0
                (f64.reinterpret_i64
                 (i64.and
                  (i64.reinterpret_f64
                   (f64.add
                    (f64.add
                     (local.tee $20
                      (f64.load
                       (i32.add
                        (i32.shl
                         (local.get $2)
                         (i32.const 3)
                        )
                        (i32.const 13856)
                       )
                      )
                     )
                     (f64.add
                      (local.tee $6
                       (f64.mul
                        (local.tee $0
                         (f64.reinterpret_i64
                          (i64.and
                           (i64.reinterpret_f64
                            (f64.add
                             (local.tee $12
                              (f64.mul
                               (local.tee $0
                                (f64.reinterpret_i64
                                 (i64.and
                                  (i64.reinterpret_f64
                                   (local.tee $4
                                    (f64.mul
                                     (local.tee $12
                                      (f64.sub
                                       (local.tee $6
                                        (f64.reinterpret_i64
                                         (i64.or
                                          (i64.and
                                           (i64.reinterpret_f64
                                            (select
                                             (local.get $0)
                                             (local.get $4)
                                             (local.get $7)
                                            )
                                           )
                                           (i64.const 4294967295)
                                          )
                                          (i64.shl
                                           (i64.extend_i32_u
                                            (local.get $3)
                                           )
                                           (i64.const 32)
                                          )
                                         )
                                        )
                                       )
                                       (local.tee $11
                                        (f64.load
                                         (i32.add
                                          (i32.shl
                                           (local.get $2)
                                           (i32.const 3)
                                          )
                                          (i32.const 13824)
                                         )
                                        )
                                       )
                                      )
                                     )
                                     (local.tee $21
                                      (f64.div
                                       (f64.const 1)
                                       (f64.add
                                        (local.get $11)
                                        (local.get $6)
                                       )
                                      )
                                     )
                                    )
                                   )
                                  )
                                  (i64.const -4294967296)
                                 )
                                )
                               )
                               (local.tee $0
                                (f64.reinterpret_i64
                                 (i64.and
                                  (i64.reinterpret_f64
                                   (f64.add
                                    (f64.add
                                     (local.tee $22
                                      (f64.mul
                                       (local.get $0)
                                       (local.get $0)
                                      )
                                     )
                                     (f64.const 3)
                                    )
                                    (local.tee $11
                                     (f64.add
                                      (f64.mul
                                       (f64.add
                                        (local.get $4)
                                        (local.get $0)
                                       )
                                       (local.tee $6
                                        (f64.mul
                                         (local.get $21)
                                         (f64.sub
                                          (f64.sub
                                           (local.get $12)
                                           (f64.mul
                                            (local.tee $12
                                             (f64.reinterpret_i64
                                              (i64.shl
                                               (i64.extend_i32_u
                                                (i32.add
                                                 (i32.add
                                                  (i32.or
                                                   (i32.shr_s
                                                    (local.get $3)
                                                    (i32.const 1)
                                                   )
                                                   (i32.const 536870912)
                                                  )
                                                  (i32.const 524288)
                                                 )
                                                 (i32.shl
                                                  (local.get $2)
                                                  (i32.const 18)
                                                 )
                                                )
                                               )
                                               (i64.const 32)
                                              )
                                             )
                                            )
                                            (local.get $0)
                                           )
                                          )
                                          (f64.mul
                                           (f64.sub
                                            (local.get $6)
                                            (f64.sub
                                             (local.get $12)
                                             (local.get $11)
                                            )
                                           )
                                           (local.get $0)
                                          )
                                         )
                                        )
                                       )
                                      )
                                      (f64.mul
                                       (f64.mul
                                        (local.tee $0
                                         (f64.mul
                                          (local.get $4)
                                          (local.get $4)
                                         )
                                        )
                                        (local.get $0)
                                       )
                                       (f64.add
                                        (f64.mul
                                         (local.get $0)
                                         (f64.add
                                          (f64.mul
                                           (local.get $0)
                                           (f64.add
                                            (f64.mul
                                             (local.get $0)
                                             (f64.add
                                              (f64.mul
                                               (local.get $0)
                                               (f64.add
                                                (f64.mul
                                                 (local.get $0)
                                                 (f64.const 0.20697501780033842)
                                                )
                                                (f64.const 0.23066074577556175)
                                               )
                                              )
                                              (f64.const 0.272728123808534)
                                             )
                                            )
                                            (f64.const 0.33333332981837743)
                                           )
                                          )
                                          (f64.const 0.4285714285785502)
                                         )
                                        )
                                        (f64.const 0.5999999999999946)
                                       )
                                      )
                                     )
                                    )
                                   )
                                  )
                                  (i64.const -4294967296)
                                 )
                                )
                               )
                              )
                             )
                             (local.tee $4
                              (f64.add
                               (f64.mul
                                (local.get $6)
                                (local.get $0)
                               )
                               (f64.mul
                                (local.get $4)
                                (f64.sub
                                 (local.get $11)
                                 (f64.sub
                                  (f64.add
                                   (local.get $0)
                                   (f64.const -3)
                                  )
                                  (local.get $22)
                                 )
                                )
                               )
                              )
                             )
                            )
                           )
                           (i64.const -4294967296)
                          )
                         )
                        )
                        (f64.const 0.9617967009544373)
                       )
                      )
                      (local.tee $4
                       (f64.add
                        (f64.load
                         (i32.add
                          (i32.shl
                           (local.get $2)
                           (i32.const 3)
                          )
                          (i32.const 13840)
                         )
                        )
                        (f64.sub
                         (f64.mul
                          (f64.sub
                           (local.get $4)
                           (f64.sub
                            (local.get $0)
                            (local.get $12)
                           )
                          )
                          (f64.const 0.9617966939259756)
                         )
                         (f64.mul
                          (local.get $0)
                          (f64.const 7.028461650952758e-09)
                         )
                        )
                       )
                      )
                     )
                    )
                    (local.tee $11
                     (f64.convert_i32_s
                      (local.get $5)
                     )
                    )
                   )
                  )
                  (i64.const -4294967296)
                 )
                )
               )
               (local.get $11)
              )
              (local.get $20)
             )
             (local.get $6)
            )
           )
          )
         )
         (local.set $1
          (f64.add
           (f64.mul
            (f64.sub
             (local.get $4)
             (local.get $6)
            )
            (local.get $1)
           )
           (f64.mul
            (f64.sub
             (local.get $1)
             (local.tee $4
              (f64.reinterpret_i64
               (i64.and
                (local.get $9)
                (i64.const -4294967296)
               )
              )
             )
            )
            (local.get $0)
           )
          )
         )
         (local.set $2
          (i32.wrap_i64
           (i64.shr_u
            (local.tee $9
             (i64.reinterpret_f64
              (local.tee $4
               (f64.add
                (local.tee $0
                 (f64.mul
                  (local.get $0)
                  (local.get $4)
                 )
                )
                (local.get $1)
               )
              )
             )
            )
            (i64.const 32)
           )
          )
         )
         (local.set $3
          (i32.wrap_i64
           (local.get $9)
          )
         )
         (if
          (i32.gt_s
           (local.get $2)
           (i32.const 1083179007)
          )
          (br_if $folding-inner1
           (i32.or
            (i32.or
             (local.get $3)
             (i32.add
              (local.get $2)
              (i32.const -1083179008)
             )
            )
            (f64.gt
             (f64.add
              (local.get $1)
              (f64.const 8.008566259537294e-17)
             )
             (f64.sub
              (local.get $4)
              (local.get $0)
             )
            )
           )
          )
          (br_if $folding-inner2
           (select
            (i32.gt_u
             (i32.and
              (local.get $2)
              (i32.const 2147482624)
             )
             (i32.const 1083231231)
            )
            (i32.const 0)
            (i32.or
             (i32.or
              (local.get $3)
              (i32.add
               (local.get $2)
               (i32.const 1064252416)
              )
             )
             (f64.le
              (local.get $1)
              (f64.sub
               (local.get $4)
               (local.get $0)
              )
             )
            )
           )
          )
         )
         (local.set $2
          (if (result i32)
           (i32.gt_u
            (local.tee $3
             (i32.and
              (local.get $2)
              (i32.const 2147483647)
             )
            )
            (i32.const 1071644672)
           )
           (block (result i32)
            (local.set $5
             (i32.and
              (i32.shr_u
               (local.tee $3
                (i32.add
                 (local.get $2)
                 (i32.shr_u
                  (i32.const 1048576)
                  (i32.add
                   (i32.shr_u
                    (local.get $3)
                    (i32.const 20)
                   )
                   (i32.const -1022)
                  )
                 )
                )
               )
               (i32.const 20)
              )
              (i32.const 2047)
             )
            )
            (local.set $9
             (i64.reinterpret_f64
              (f64.add
               (local.get $1)
               (local.tee $0
                (f64.sub
                 (local.get $0)
                 (f64.reinterpret_i64
                  (i64.shl
                   (i64.extend_i32_u
                    (i32.and
                     (local.get $3)
                     (i32.shr_s
                      (i32.const -1048576)
                      (i32.add
                       (local.get $5)
                       (i32.const -1023)
                      )
                     )
                    )
                   )
                   (i64.const 32)
                  )
                 )
                )
               )
              )
             )
            )
            (select
             (i32.sub
              (i32.const 0)
              (local.tee $3
               (i32.shr_u
                (i32.or
                 (i32.and
                  (local.get $3)
                  (i32.const 1048575)
                 )
                 (i32.const 1048576)
                )
                (i32.sub
                 (i32.const 1043)
                 (local.get $5)
                )
               )
              )
             )
             (local.get $3)
             (i32.lt_s
              (local.get $2)
              (i32.const 0)
             )
            )
           )
           (i32.const 0)
          )
         )
         (return
          (f64.mul
           (local.get $8)
           (if (result f64)
            (i32.lt_s
             (local.tee $3
              (i32.add
               (i32.wrap_i64
                (i64.shr_u
                 (local.tee $9
                  (i64.reinterpret_f64
                   (local.tee $0
                    (f64.sub
                     (f64.const 1)
                     (f64.sub
                      (f64.sub
                       (f64.div
                        (f64.mul
                         (local.tee $0
                          (f64.add
                           (local.tee $6
                            (f64.mul
                             (local.tee $4
                              (f64.reinterpret_i64
                               (i64.and
                                (local.get $9)
                                (i64.const -4294967296)
                               )
                              )
                             )
                             (f64.const 0.6931471824645996)
                            )
                           )
                           (local.tee $4
                            (f64.sub
                             (f64.mul
                              (f64.sub
                               (local.get $1)
                               (f64.sub
                                (local.get $4)
                                (local.get $0)
                               )
                              )
                              (f64.const 0.6931471805599453)
                             )
                             (f64.mul
                              (local.get $4)
                              (f64.const 1.904654299957768e-09)
                             )
                            )
                           )
                          )
                         )
                         (local.tee $1
                          (f64.sub
                           (local.get $0)
                           (f64.mul
                            (local.tee $1
                             (f64.mul
                              (local.get $0)
                              (local.get $0)
                             )
                            )
                            (f64.add
                             (f64.mul
                              (local.get $1)
                              (f64.add
                               (f64.mul
                                (local.get $1)
                                (f64.add
                                 (f64.mul
                                  (local.get $1)
                                  (f64.add
                                   (f64.mul
                                    (local.get $1)
                                    (f64.const 4.1381367970572385e-08)
                                   )
                                   (f64.const -1.6533902205465252e-06)
                                  )
                                 )
                                 (f64.const 6.613756321437934e-05)
                                )
                               )
                               (f64.const -2.7777777777015593e-03)
                              )
                             )
                             (f64.const 0.16666666666666602)
                            )
                           )
                          )
                         )
                        )
                        (f64.add
                         (local.get $1)
                         (f64.const -2)
                        )
                       )
                       (f64.add
                        (local.tee $1
                         (f64.sub
                          (local.get $4)
                          (f64.sub
                           (local.get $0)
                           (local.get $6)
                          )
                         )
                        )
                        (f64.mul
                         (local.get $0)
                         (local.get $1)
                        )
                       )
                      )
                      (local.get $0)
                     )
                    )
                   )
                  )
                 )
                 (i64.const 32)
                )
               )
               (i32.shl
                (local.get $2)
                (i32.const 20)
               )
              )
             )
             (i32.const 1048576)
            )
            (call $_scalbn
             (local.get $0)
             (local.get $2)
            )
            (f64.reinterpret_i64
             (i64.or
              (i64.and
               (local.get $9)
               (i64.const 4294967295)
              )
              (i64.shl
               (i64.extend_i32_u
                (local.get $3)
               )
               (i64.const 32)
              )
             )
            )
           )
          )
         )
        )
       )
      )
     )
     (return
      (f64.add
       (local.get $0)
       (local.get $1)
      )
     )
    )
    (return
     (f64.div
      (local.tee $0
       (f64.sub
        (local.get $0)
        (local.get $0)
       )
      )
      (local.get $0)
     )
    )
   )
   (return
    (f64.mul
     (f64.mul
      (local.get $8)
      (f64.const 1.e+300)
     )
     (f64.const 1.e+300)
    )
   )
  )
  (f64.mul
   (f64.mul
    (local.get $8)
    (f64.const 1e-300)
   )
   (f64.const 1e-300)
  )
 )
 (func $_emscripten_GetProcAddress (; 639 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (call $_strcpy
   (local.tee $1
    (call $_malloc
     (i32.add
      (call $_strlen
       (local.get $0)
      )
      (i32.const 1)
     )
    )
   )
   (local.get $0)
  )
  (if
   (local.tee $0
    (call $_strstr
     (local.get $1)
     (i32.const 23007)
    )
   )
   (i32.store8
    (local.get $0)
    (i32.const 0)
   )
  )
  (if
   (local.tee $0
    (call $_strstr
     (local.get $1)
     (i32.const 23011)
    )
   )
   (i32.store8
    (local.get $0)
    (i32.const 0)
   )
  )
  (if
   (local.tee $0
    (call $_strstr
     (local.get $1)
     (i32.const 23015)
    )
   )
   (i32.store8
    (local.get $0)
    (i32.const 0)
   )
  )
  (if
   (local.tee $0
    (call $_strstr
     (local.get $1)
     (i32.const 23019)
    )
   )
   (i32.store8
    (local.get $0)
    (i32.const 0)
   )
  )
  (if
   (local.tee $0
    (call $_strstr
     (local.get $1)
     (i32.const 23025)
    )
   )
   (i32.store8
    (local.get $0)
    (i32.const 0)
   )
  )
  (if
   (i32.eqz
    (local.tee $0
     (call $_emscripten_webgl1_get_proc_address
      (local.get $1)
     )
    )
   )
   (local.set $0
    (call $__webgl1_match_ext_proc_address_without_suffix
     (local.get $1)
    )
   )
  )
  (call $_free
   (local.get $1)
  )
  (local.get $0)
 )
 (func $_emscripten_webgl1_get_proc_address (; 640 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (call $_strcmp
    (local.get $0)
    (i32.const 23359)
   )
   (if
    (call $_strcmp
     (local.get $0)
     (i32.const 23375)
    )
    (if
     (call $_strcmp
      (local.get $0)
      (i32.const 23390)
     )
     (if
      (call $_strcmp
       (local.get $0)
       (i32.const 23411)
      )
      (if
       (call $_strcmp
        (local.get $0)
        (i32.const 23424)
       )
       (if
        (call $_strcmp
         (local.get $0)
         (i32.const 23442)
        )
        (if
         (call $_strcmp
          (local.get $0)
          (i32.const 23461)
         )
         (if
          (call $_strcmp
           (local.get $0)
           (i32.const 23475)
          )
          (if
           (call $_strcmp
            (local.get $0)
            (i32.const 23488)
           )
           (if
            (call $_strcmp
             (local.get $0)
             (i32.const 23504)
            )
            (if
             (call $_strcmp
              (local.get $0)
              (i32.const 23528)
             )
             (if
              (call $_strcmp
               (local.get $0)
               (i32.const 23540)
              )
              (if
               (call $_strcmp
                (local.get $0)
                (i32.const 23560)
               )
               (if
                (call $_strcmp
                 (local.get $0)
                 (i32.const 23573)
                )
                (if
                 (call $_strcmp
                  (local.get $0)
                  (i32.const 23589)
                 )
                 (if
                  (call $_strcmp
                   (local.get $0)
                   (i32.const 23614)
                  )
                  (if
                   (call $_strcmp
                    (local.get $0)
                    (i32.const 23622)
                   )
                   (if
                    (call $_strcmp
                     (local.get $0)
                     (i32.const 23635)
                    )
                    (if
                     (call $_strcmp
                      (local.get $0)
                      (i32.const 23649)
                     )
                     (block $do-once
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23664)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 5)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23676)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 5)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23692)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23715)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23741)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23758)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 3)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23778)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23794)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 4)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23809)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 6)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23820)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 14)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23836)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 15)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23857)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 7)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23873)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 16)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23895)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 8)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23910)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 17)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23927)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 9)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23939)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 10)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23951)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23965)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 18)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23980)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 11)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 23990)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 12)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24017)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 5)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24030)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 6)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24045)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 13)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24054)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 14)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24080)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24089)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 3)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24097)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 7)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24123)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24146)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 15)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24158)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 19)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24171)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 16)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24188)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 20)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24206)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 21)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24225)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 22)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24239)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24257)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24276)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 8)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24297)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24317)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 23)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24331)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 6)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24354)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24365)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 24)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24377)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 9)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24415)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 25)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24429)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 7)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24444)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 10)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24464)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 8)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24493)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 9)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24507)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 11)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24526)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 12)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24553)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 13)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24571)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 5)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24583)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 10)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24603)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 11)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24623)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 12)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24638)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 13)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24653)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24674)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 14)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24694)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 15)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24714)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 16)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24740)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 26)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24747)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 6)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24758)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 7)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24770)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 8)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24786)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 9)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24798)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 10)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24815)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 11)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24826)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 12)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24838)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24850)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 17)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24864)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 27)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24878)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24894)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 3)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24907)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 4)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24931)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 14)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24953)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24970)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 15)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24980)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 3)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 24995)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 16)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25010)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 17)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25024)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 17)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25046)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 18)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25060)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 28)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25082)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 18)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25094)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 18)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25114)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25127)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25143)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 19)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25160)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 20)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25176)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 21)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25193)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 3)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25209)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25221)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 22)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25234)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 29)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25246)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 23)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25259)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25271)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 24)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25284)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 25)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25296)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 26)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25309)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25321)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 27)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25334)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 19)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25346)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 28)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25359)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25371)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 29)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25384)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 4)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25396)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 30)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25409)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 20)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25428)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 21)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25447)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 22)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25466)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 19)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25479)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 20)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25497)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25514)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 30)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25532)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25549)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 31)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25567)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25584)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 32)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25602)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 2)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25619)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 33)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25637)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 1)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25659)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 23)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25670)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 34)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25686)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 35)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25705)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 13)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25718)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 36)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25734)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 21)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25748)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 37)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25766)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 31)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25782)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 32)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25804)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 33)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25827)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 34)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25851)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 35)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25876)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 22)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25897)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 38)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25921)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 39)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25942)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 14)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25961)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 40)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 25980)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 24)
                        )
                        (br $do-once)
                       )
                      )
                      (if
                       (i32.eqz
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 26007)
                        )
                       )
                       (block
                        (local.set $0
                         (i32.const 5)
                        )
                        (br $do-once)
                       )
                      )
                      (return
                       (select
                        (i32.const 0)
                        (i32.const 6)
                        (call $_strcmp
                         (local.get $0)
                         (i32.const 26036)
                        )
                       )
                      )
                     )
                     (local.set $0
                      (i32.const 4)
                     )
                    )
                    (local.set $0
                     (i32.const 1)
                    )
                   )
                   (local.set $0
                    (i32.const 2)
                   )
                  )
                  (local.set $0
                   (i32.const 3)
                  )
                 )
                 (local.set $0
                  (i32.const 3)
                 )
                )
                (local.set $0
                 (i32.const 4)
                )
               )
               (local.set $0
                (i32.const 3)
               )
              )
              (local.set $0
               (i32.const 2)
              )
             )
             (local.set $0
              (i32.const 13)
             )
            )
            (local.set $0
             (i32.const 12)
            )
           )
           (local.set $0
            (i32.const 2)
           )
          )
          (local.set $0
           (i32.const 1)
          )
         )
         (local.set $0
          (i32.const 11)
         )
        )
        (local.set $0
         (i32.const 10)
        )
       )
       (local.set $0
        (i32.const 9)
       )
      )
      (local.set $0
       (i32.const 8)
      )
     )
     (local.set $0
      (i32.const 4)
     )
    )
    (local.set $0
     (i32.const 7)
    )
   )
   (local.set $0
    (i32.const 1)
   )
  )
  (local.get $0)
 )
 (func $__webgl1_match_ext_proc_address_without_suffix (; 641 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (if (result i32)
   (call $_strcmp
    (local.get $0)
    (i32.const 23031)
   )
   (if (result i32)
    (call $_strcmp
     (local.get $0)
     (i32.const 23044)
    )
    (if (result i32)
     (call $_strcmp
      (local.get $0)
      (i32.const 23060)
     )
     (if (result i32)
      (call $_strcmp
       (local.get $0)
       (i32.const 23070)
      )
      (if (result i32)
       (call $_strcmp
        (local.get $0)
        (i32.const 23083)
       )
       (if (result i32)
        (call $_strcmp
         (local.get $0)
         (i32.const 23094)
        )
        (if (result i32)
         (call $_strcmp
          (local.get $0)
          (i32.const 23109)
         )
         (if (result i32)
          (call $_strcmp
           (local.get $0)
           (i32.const 23122)
          )
          (if (result i32)
           (call $_strcmp
            (local.get $0)
            (i32.const 23141)
           )
           (if (result i32)
            (call $_strcmp
             (local.get $0)
             (i32.const 23161)
            )
            (if (result i32)
             (call $_strcmp
              (local.get $0)
              (i32.const 23182)
             )
             (if (result i32)
              (call $_strcmp
               (local.get $0)
               (i32.const 23204)
              )
              (if (result i32)
               (call $_strcmp
                (local.get $0)
                (i32.const 23222)
               )
               (if (result i32)
                (call $_strcmp
                 (local.get $0)
                 (i32.const 23243)
                )
                (if (result i32)
                 (call $_strcmp
                  (local.get $0)
                  (i32.const 23261)
                 )
                 (if (result i32)
                  (call $_strcmp
                   (local.get $0)
                   (i32.const 23277)
                  )
                  (if (result i32)
                   (call $_strcmp
                    (local.get $0)
                    (i32.const 23291)
                   )
                   (if (result i32)
                    (call $_strcmp
                     (local.get $0)
                     (i32.const 23313)
                    )
                    (select
                     (i32.const 0)
                     (i32.const 6)
                     (call $_strcmp
                      (local.get $0)
                      (i32.const 23337)
                     )
                    )
                    (i32.const 5)
                   )
                   (i32.const 24)
                  )
                  (i32.const 40)
                 )
                 (i32.const 14)
                )
                (i32.const 39)
               )
               (i32.const 38)
              )
              (i32.const 22)
             )
             (i32.const 35)
            )
            (i32.const 34)
           )
           (i32.const 33)
          )
          (i32.const 32)
         )
         (i32.const 31)
        )
        (i32.const 37)
       )
       (i32.const 21)
      )
      (i32.const 36)
     )
     (i32.const 13)
    )
    (i32.const 35)
   )
   (i32.const 34)
  )
 )
 (func $_malloc (; 642 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local.set $18
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.and
    (i32.add
     (global.get $STACKTOP)
     (i32.const 63)
    )
    (i32.const -64)
   )
  )
  (local.set $23
   (global.get $STACKTOP)
  )
  (global.set $STACKTOP
   (i32.add
    (global.get $STACKTOP)
    (i32.const 16)
   )
  )
  (if
   (i32.ge_s
    (global.get $STACKTOP)
    (global.get $STACK_MAX)
   )
   (call $abortStackOverflow
    (i32.const 16)
   )
  )
  (local.set $12
   (if (result i32)
    (i32.lt_u
     (local.get $0)
     (i32.const 245)
    )
    (block (result i32)
     (if
      (i32.and
       (local.tee $1
        (i32.shr_u
         (local.tee $4
          (i32.load
           (i32.const 34324)
          )
         )
         (local.tee $7
          (i32.shr_u
           (local.tee $14
            (select
             (i32.const 16)
             (i32.and
              (i32.add
               (local.get $0)
               (i32.const 11)
              )
              (i32.const -8)
             )
             (i32.lt_u
              (local.get $0)
              (i32.const 11)
             )
            )
           )
           (i32.const 3)
          )
         )
        )
       )
       (i32.const 3)
      )
      (block
       (if
        (i32.eq
         (local.tee $5
          (i32.load
           (local.tee $1
            (i32.add
             (local.tee $2
              (i32.load offset=8
               (local.tee $3
                (i32.add
                 (i32.shl
                  (local.tee $0
                   (i32.add
                    (i32.xor
                     (i32.and
                      (local.get $1)
                      (i32.const 1)
                     )
                     (i32.const 1)
                    )
                    (local.get $7)
                   )
                  )
                  (i32.const 3)
                 )
                 (i32.const 34364)
                )
               )
              )
             )
             (i32.const 8)
            )
           )
          )
         )
         (local.get $3)
        )
        (i32.store
         (i32.const 34324)
         (i32.and
          (local.get $4)
          (i32.xor
           (i32.shl
            (i32.const 1)
            (local.get $0)
           )
           (i32.const -1)
          )
         )
        )
        (block
         (if
          (i32.gt_u
           (i32.load
            (i32.const 34340)
           )
           (local.get $5)
          )
          (call $_abort)
         )
         (if
          (i32.eq
           (local.get $2)
           (i32.load offset=12
            (local.get $5)
           )
          )
          (block
           (i32.store offset=12
            (local.get $5)
            (local.get $3)
           )
           (i32.store offset=8
            (local.get $3)
            (local.get $5)
           )
          )
          (call $_abort)
         )
        )
       )
       (i32.store offset=4
        (local.get $2)
        (i32.or
         (local.tee $0
          (i32.shl
           (local.get $0)
           (i32.const 3)
          )
         )
         (i32.const 3)
        )
       )
       (i32.store offset=4
        (local.tee $0
         (i32.add
          (local.get $0)
          (local.get $2)
         )
        )
        (i32.or
         (i32.load offset=4
          (local.get $0)
         )
         (i32.const 1)
        )
       )
       (global.set $STACKTOP
        (local.get $18)
       )
       (return
        (local.get $1)
       )
      )
     )
     (if (result i32)
      (i32.gt_u
       (local.get $14)
       (local.tee $12
        (i32.load
         (i32.const 34332)
        )
       )
      )
      (block (result i32)
       (if
        (local.get $1)
        (block
         (if
          (i32.eq
           (local.tee $2
            (i32.load
             (local.tee $5
              (i32.add
               (local.tee $8
                (i32.load offset=8
                 (local.tee $1
                  (i32.add
                   (i32.shl
                    (local.tee $0
                     (i32.add
                      (i32.or
                       (i32.or
                        (i32.or
                         (i32.or
                          (local.tee $0
                           (i32.and
                            (i32.shr_u
                             (local.tee $1
                              (i32.add
                               (i32.and
                                (local.tee $0
                                 (i32.and
                                  (i32.or
                                   (local.tee $0
                                    (i32.shl
                                     (i32.const 2)
                                     (local.get $7)
                                    )
                                   )
                                   (i32.sub
                                    (i32.const 0)
                                    (local.get $0)
                                   )
                                  )
                                  (i32.shl
                                   (local.get $1)
                                   (local.get $7)
                                  )
                                 )
                                )
                                (i32.sub
                                 (i32.const 0)
                                 (local.get $0)
                                )
                               )
                               (i32.const -1)
                              )
                             )
                             (i32.const 12)
                            )
                            (i32.const 16)
                           )
                          )
                          (local.tee $0
                           (i32.and
                            (i32.shr_u
                             (local.tee $1
                              (i32.shr_u
                               (local.get $1)
                               (local.get $0)
                              )
                             )
                             (i32.const 5)
                            )
                            (i32.const 8)
                           )
                          )
                         )
                         (local.tee $0
                          (i32.and
                           (i32.shr_u
                            (local.tee $1
                             (i32.shr_u
                              (local.get $1)
                              (local.get $0)
                             )
                            )
                            (i32.const 2)
                           )
                           (i32.const 4)
                          )
                         )
                        )
                        (local.tee $0
                         (i32.and
                          (i32.shr_u
                           (local.tee $1
                            (i32.shr_u
                             (local.get $1)
                             (local.get $0)
                            )
                           )
                           (i32.const 1)
                          )
                          (i32.const 2)
                         )
                        )
                       )
                       (local.tee $0
                        (i32.and
                         (i32.shr_u
                          (local.tee $1
                           (i32.shr_u
                            (local.get $1)
                            (local.get $0)
                           )
                          )
                          (i32.const 1)
                         )
                         (i32.const 1)
                        )
                       )
                      )
                      (i32.shr_u
                       (local.get $1)
                       (local.get $0)
                      )
                     )
                    )
                    (i32.const 3)
                   )
                   (i32.const 34364)
                  )
                 )
                )
               )
               (i32.const 8)
              )
             )
            )
           )
           (local.get $1)
          )
          (i32.store
           (i32.const 34324)
           (local.tee $11
            (i32.and
             (local.get $4)
             (i32.xor
              (i32.shl
               (i32.const 1)
               (local.get $0)
              )
              (i32.const -1)
             )
            )
           )
          )
          (block
           (if
            (i32.gt_u
             (i32.load
              (i32.const 34340)
             )
             (local.get $2)
            )
            (call $_abort)
           )
           (if
            (i32.eq
             (i32.load offset=12
              (local.get $2)
             )
             (local.get $8)
            )
            (block
             (i32.store offset=12
              (local.get $2)
              (local.get $1)
             )
             (i32.store offset=8
              (local.get $1)
              (local.get $2)
             )
             (local.set $11
              (local.get $4)
             )
            )
            (call $_abort)
           )
          )
         )
         (i32.store offset=4
          (local.get $8)
          (i32.or
           (local.get $14)
           (i32.const 3)
          )
         )
         (i32.store offset=4
          (local.tee $3
           (i32.add
            (local.get $8)
            (local.get $14)
           )
          )
          (i32.or
           (local.tee $4
            (i32.sub
             (local.tee $0
              (i32.shl
               (local.get $0)
               (i32.const 3)
              )
             )
             (local.get $14)
            )
           )
           (i32.const 1)
          )
         )
         (i32.store
          (i32.add
           (local.get $0)
           (local.get $8)
          )
          (local.get $4)
         )
         (if
          (local.get $12)
          (block
           (local.set $8
            (i32.load
             (i32.const 34344)
            )
           )
           (local.set $2
            (i32.add
             (i32.shl
              (local.tee $0
               (i32.shr_u
                (local.get $12)
                (i32.const 3)
               )
              )
              (i32.const 3)
             )
             (i32.const 34364)
            )
           )
           (if
            (i32.and
             (local.get $11)
             (local.tee $0
              (i32.shl
               (i32.const 1)
               (local.get $0)
              )
             )
            )
            (if
             (i32.gt_u
              (i32.load
               (i32.const 34340)
              )
              (local.tee $0
               (i32.load
                (local.tee $1
                 (i32.add
                  (local.get $2)
                  (i32.const 8)
                 )
                )
               )
              )
             )
             (call $_abort)
             (block
              (local.set $13
               (local.get $1)
              )
              (local.set $9
               (local.get $0)
              )
             )
            )
            (block
             (i32.store
              (i32.const 34324)
              (i32.or
               (local.get $0)
               (local.get $11)
              )
             )
             (local.set $13
              (i32.add
               (local.get $2)
               (i32.const 8)
              )
             )
             (local.set $9
              (local.get $2)
             )
            )
           )
           (i32.store
            (local.get $13)
            (local.get $8)
           )
           (i32.store offset=12
            (local.get $9)
            (local.get $8)
           )
           (i32.store offset=8
            (local.get $8)
            (local.get $9)
           )
           (i32.store offset=12
            (local.get $8)
            (local.get $2)
           )
          )
         )
         (i32.store
          (i32.const 34332)
          (local.get $4)
         )
         (i32.store
          (i32.const 34344)
          (local.get $3)
         )
         (global.set $STACKTOP
          (local.get $18)
         )
         (return
          (local.get $5)
         )
        )
       )
       (if (result i32)
        (local.tee $7
         (i32.load
          (i32.const 34328)
         )
        )
        (block
         (local.set $8
          (i32.sub
           (i32.and
            (i32.load offset=4
             (local.tee $0
              (i32.load
               (i32.add
                (i32.shl
                 (i32.add
                  (i32.or
                   (i32.or
                    (i32.or
                     (i32.or
                      (local.tee $0
                       (i32.and
                        (i32.shr_u
                         (local.tee $1
                          (i32.add
                           (i32.and
                            (local.get $7)
                            (i32.sub
                             (i32.const 0)
                             (local.get $7)
                            )
                           )
                           (i32.const -1)
                          )
                         )
                         (i32.const 12)
                        )
                        (i32.const 16)
                       )
                      )
                      (local.tee $0
                       (i32.and
                        (i32.shr_u
                         (local.tee $1
                          (i32.shr_u
                           (local.get $1)
                           (local.get $0)
                          )
                         )
                         (i32.const 5)
                        )
                        (i32.const 8)
                       )
                      )
                     )
                     (local.tee $0
                      (i32.and
                       (i32.shr_u
                        (local.tee $1
                         (i32.shr_u
                          (local.get $1)
                          (local.get $0)
                         )
                        )
                        (i32.const 2)
                       )
                       (i32.const 4)
                      )
                     )
                    )
                    (local.tee $0
                     (i32.and
                      (i32.shr_u
                       (local.tee $1
                        (i32.shr_u
                         (local.get $1)
                         (local.get $0)
                        )
                       )
                       (i32.const 1)
                      )
                      (i32.const 2)
                     )
                    )
                   )
                   (local.tee $0
                    (i32.and
                     (i32.shr_u
                      (local.tee $1
                       (i32.shr_u
                        (local.get $1)
                        (local.get $0)
                       )
                      )
                      (i32.const 1)
                     )
                     (i32.const 1)
                    )
                   )
                  )
                  (i32.shr_u
                   (local.get $1)
                   (local.get $0)
                  )
                 )
                 (i32.const 2)
                )
                (i32.const 34628)
               )
              )
             )
            )
            (i32.const -8)
           )
           (local.get $14)
          )
         )
         (local.set $5
          (local.get $0)
         )
         (loop $while-in
          (block $while-out
           (if
            (local.tee $1
             (i32.load offset=16
              (local.get $0)
             )
            )
            (local.set $0
             (local.get $1)
            )
            (br_if $while-out
             (i32.eqz
              (local.tee $0
               (i32.load offset=20
                (local.get $0)
               )
              )
             )
            )
           )
           (local.set $9
            (i32.lt_u
             (local.tee $1
              (i32.sub
               (i32.and
                (i32.load offset=4
                 (local.get $0)
                )
                (i32.const -8)
               )
               (local.get $14)
              )
             )
             (local.get $8)
            )
           )
           (local.set $8
            (select
             (local.get $1)
             (local.get $8)
             (local.get $9)
            )
           )
           (local.set $5
            (select
             (local.get $0)
             (local.get $5)
             (local.get $9)
            )
           )
           (br $while-in)
          )
         )
         (if
          (i32.gt_u
           (local.tee $13
            (i32.load
             (i32.const 34340)
            )
           )
           (local.get $5)
          )
          (call $_abort)
         )
         (if
          (i32.le_u
           (local.tee $10
            (i32.add
             (local.get $5)
             (local.get $14)
            )
           )
           (local.get $5)
          )
          (call $_abort)
         )
         (local.set $17
          (i32.load offset=24
           (local.get $5)
          )
         )
         (if
          (i32.eq
           (local.tee $0
            (i32.load offset=12
             (local.get $5)
            )
           )
           (local.get $5)
          )
          (block $do-once4
           (if
            (i32.eqz
             (local.tee $0
              (i32.load
               (local.tee $1
                (i32.add
                 (local.get $5)
                 (i32.const 20)
                )
               )
              )
             )
            )
            (br_if $do-once4
             (i32.eqz
              (local.tee $0
               (i32.load
                (local.tee $1
                 (i32.add
                  (local.get $5)
                  (i32.const 16)
                 )
                )
               )
              )
             )
            )
           )
           (loop $while-in7
            (block $while-out6
             (if
              (i32.eqz
               (local.tee $9
                (i32.load
                 (local.tee $11
                  (i32.add
                   (local.get $0)
                   (i32.const 20)
                  )
                 )
                )
               )
              )
              (br_if $while-out6
               (i32.eqz
                (local.tee $9
                 (i32.load
                  (local.tee $11
                   (i32.add
                    (local.get $0)
                    (i32.const 16)
                   )
                  )
                 )
                )
               )
              )
             )
             (local.set $1
              (local.get $11)
             )
             (local.set $0
              (local.get $9)
             )
             (br $while-in7)
            )
           )
           (if
            (i32.gt_u
             (local.get $13)
             (local.get $1)
            )
            (call $_abort)
            (block
             (i32.store
              (local.get $1)
              (i32.const 0)
             )
             (local.set $2
              (local.get $0)
             )
            )
           )
          )
          (block
           (if
            (i32.gt_u
             (local.get $13)
             (local.tee $1
              (i32.load offset=8
               (local.get $5)
              )
             )
            )
            (call $_abort)
           )
           (if
            (i32.ne
             (local.get $5)
             (i32.load offset=12
              (local.get $1)
             )
            )
            (call $_abort)
           )
           (if
            (i32.eq
             (i32.load offset=8
              (local.get $0)
             )
             (local.get $5)
            )
            (block
             (i32.store offset=12
              (local.get $1)
              (local.get $0)
             )
             (i32.store offset=8
              (local.get $0)
              (local.get $1)
             )
             (local.set $2
              (local.get $0)
             )
            )
            (call $_abort)
           )
          )
         )
         (if
          (local.get $17)
          (block $label$break$L78
           (if
            (i32.eq
             (i32.load
              (local.tee $0
               (i32.add
                (i32.shl
                 (local.tee $1
                  (i32.load offset=28
                   (local.get $5)
                  )
                 )
                 (i32.const 2)
                )
                (i32.const 34628)
               )
              )
             )
             (local.get $5)
            )
            (block
             (i32.store
              (local.get $0)
              (local.get $2)
             )
             (if
              (i32.eqz
               (local.get $2)
              )
              (block
               (i32.store
                (i32.const 34328)
                (i32.and
                 (local.get $7)
                 (i32.xor
                  (i32.shl
                   (i32.const 1)
                   (local.get $1)
                  )
                  (i32.const -1)
                 )
                )
               )
               (br $label$break$L78)
              )
             )
            )
            (if
             (i32.gt_u
              (i32.load
               (i32.const 34340)
              )
              (local.get $17)
             )
             (call $_abort)
             (block
              (i32.store
               (select
                (i32.add
                 (local.get $17)
                 (i32.const 16)
                )
                (i32.add
                 (local.get $17)
                 (i32.const 20)
                )
                (i32.eq
                 (i32.load offset=16
                  (local.get $17)
                 )
                 (local.get $5)
                )
               )
               (local.get $2)
              )
              (br_if $label$break$L78
               (i32.eqz
                (local.get $2)
               )
              )
             )
            )
           )
           (if
            (i32.gt_u
             (local.tee $0
              (i32.load
               (i32.const 34340)
              )
             )
             (local.get $2)
            )
            (call $_abort)
           )
           (i32.store offset=24
            (local.get $2)
            (local.get $17)
           )
           (if
            (local.tee $1
             (i32.load offset=16
              (local.get $5)
             )
            )
            (if
             (i32.gt_u
              (local.get $0)
              (local.get $1)
             )
             (call $_abort)
             (block
              (i32.store offset=16
               (local.get $2)
               (local.get $1)
              )
              (i32.store offset=24
               (local.get $1)
               (local.get $2)
              )
             )
            )
           )
           (if
            (local.tee $0
             (i32.load offset=20
              (local.get $5)
             )
            )
            (if
             (i32.gt_u
              (i32.load
               (i32.const 34340)
              )
              (local.get $0)
             )
             (call $_abort)
             (block
              (i32.store offset=20
               (local.get $2)
               (local.get $0)
              )
              (i32.store offset=24
               (local.get $0)
               (local.get $2)
              )
             )
            )
           )
          )
         )
         (if
          (i32.lt_u
           (local.get $8)
           (i32.const 16)
          )
          (block
           (i32.store offset=4
            (local.get $5)
            (i32.or
             (local.tee $0
              (i32.add
               (local.get $8)
               (local.get $14)
              )
             )
             (i32.const 3)
            )
           )
           (i32.store offset=4
            (local.tee $0
             (i32.add
              (local.get $0)
              (local.get $5)
             )
            )
            (i32.or
             (i32.load offset=4
              (local.get $0)
             )
             (i32.const 1)
            )
           )
          )
          (block
           (i32.store offset=4
            (local.get $5)
            (i32.or
             (local.get $14)
             (i32.const 3)
            )
           )
           (i32.store offset=4
            (local.get $10)
            (i32.or
             (local.get $8)
             (i32.const 1)
            )
           )
           (i32.store
            (i32.add
             (local.get $8)
             (local.get $10)
            )
            (local.get $8)
           )
           (if
            (local.get $12)
            (block
             (local.set $9
              (i32.load
               (i32.const 34344)
              )
             )
             (local.set $2
              (i32.add
               (i32.shl
                (local.tee $0
                 (i32.shr_u
                  (local.get $12)
                  (i32.const 3)
                 )
                )
                (i32.const 3)
               )
               (i32.const 34364)
              )
             )
             (if
              (i32.and
               (local.get $4)
               (local.tee $0
                (i32.shl
                 (i32.const 1)
                 (local.get $0)
                )
               )
              )
              (if
               (i32.gt_u
                (i32.load
                 (i32.const 34340)
                )
                (local.tee $0
                 (i32.load
                  (local.tee $1
                   (i32.add
                    (local.get $2)
                    (i32.const 8)
                   )
                  )
                 )
                )
               )
               (call $_abort)
               (block
                (local.set $6
                 (local.get $1)
                )
                (local.set $3
                 (local.get $0)
                )
               )
              )
              (block
               (i32.store
                (i32.const 34324)
                (i32.or
                 (local.get $0)
                 (local.get $4)
                )
               )
               (local.set $6
                (i32.add
                 (local.get $2)
                 (i32.const 8)
                )
               )
               (local.set $3
                (local.get $2)
               )
              )
             )
             (i32.store
              (local.get $6)
              (local.get $9)
             )
             (i32.store offset=12
              (local.get $3)
              (local.get $9)
             )
             (i32.store offset=8
              (local.get $9)
              (local.get $3)
             )
             (i32.store offset=12
              (local.get $9)
              (local.get $2)
             )
            )
           )
           (i32.store
            (i32.const 34332)
            (local.get $8)
           )
           (i32.store
            (i32.const 34344)
            (local.get $10)
           )
          )
         )
         (global.set $STACKTOP
          (local.get $18)
         )
         (return
          (i32.add
           (local.get $5)
           (i32.const 8)
          )
         )
        )
        (local.get $14)
       )
      )
      (local.get $14)
     )
    )
    (if (result i32)
     (i32.gt_u
      (local.get $0)
      (i32.const -65)
     )
     (i32.const -1)
     (block $do-once (result i32)
      (local.set $15
       (i32.and
        (local.tee $0
         (i32.add
          (local.get $0)
          (i32.const 11)
         )
        )
        (i32.const -8)
       )
      )
      (if (result i32)
       (local.tee $9
        (i32.load
         (i32.const 34328)
        )
       )
       (block (result i32)
        (local.set $2
         (i32.sub
          (i32.const 0)
          (local.get $15)
         )
        )
        (block $__rjto$1
         (block $__rjti$1
          (if
           (local.tee $0
            (i32.load
             (i32.add
              (i32.shl
               (local.tee $19
                (if (result i32)
                 (local.tee $0
                  (i32.shr_u
                   (local.get $0)
                   (i32.const 8)
                  )
                 )
                 (if (result i32)
                  (i32.gt_u
                   (local.get $15)
                   (i32.const 16777215)
                  )
                  (i32.const 31)
                  (block (result i32)
                   (local.set $11
                    (i32.and
                     (i32.shr_u
                      (i32.add
                       (local.tee $0
                        (i32.shl
                         (local.get $0)
                         (local.tee $6
                          (i32.and
                           (i32.shr_u
                            (i32.add
                             (local.get $0)
                             (i32.const 1048320)
                            )
                            (i32.const 16)
                           )
                           (i32.const 8)
                          )
                         )
                        )
                       )
                       (i32.const 520192)
                      )
                      (i32.const 16)
                     )
                     (i32.const 4)
                    )
                   )
                   (i32.or
                    (i32.and
                     (i32.shr_u
                      (local.get $15)
                      (i32.add
                       (local.tee $0
                        (i32.add
                         (i32.sub
                          (i32.const 14)
                          (i32.or
                           (local.tee $0
                            (i32.and
                             (i32.shr_u
                              (i32.add
                               (local.tee $3
                                (i32.shl
                                 (local.get $0)
                                 (local.get $11)
                                )
                               )
                               (i32.const 245760)
                              )
                              (i32.const 16)
                             )
                             (i32.const 2)
                            )
                           )
                           (i32.or
                            (local.get $6)
                            (local.get $11)
                           )
                          )
                         )
                         (i32.shr_u
                          (i32.shl
                           (local.get $3)
                           (local.get $0)
                          )
                          (i32.const 15)
                         )
                        )
                       )
                       (i32.const 7)
                      )
                     )
                     (i32.const 1)
                    )
                    (i32.shl
                     (local.get $0)
                     (i32.const 1)
                    )
                   )
                  )
                 )
                 (i32.const 0)
                )
               )
               (i32.const 2)
              )
              (i32.const 34628)
             )
            )
           )
           (block
            (local.set $3
             (i32.shl
              (local.get $15)
              (select
               (i32.const 0)
               (i32.sub
                (i32.const 25)
                (i32.shr_u
                 (local.get $19)
                 (i32.const 1)
                )
               )
               (i32.eq
                (local.get $19)
                (i32.const 31)
               )
              )
             )
            )
            (local.set $6
             (i32.const 0)
            )
            (loop $while-in15
             (if
              (i32.lt_u
               (local.tee $11
                (i32.sub
                 (i32.and
                  (i32.load offset=4
                   (local.get $0)
                  )
                  (i32.const -8)
                 )
                 (local.get $15)
                )
               )
               (local.get $2)
              )
              (local.set $2
               (if (result i32)
                (local.get $11)
                (block (result i32)
                 (local.set $6
                  (local.get $0)
                 )
                 (local.get $11)
                )
                (block
                 (local.set $6
                  (i32.const 0)
                 )
                 (local.set $2
                  (local.get $0)
                 )
                 (br $__rjti$1)
                )
               )
              )
             )
             (local.set $0
              (select
               (local.get $13)
               (local.tee $13
                (i32.load offset=20
                 (local.get $0)
                )
               )
               (i32.or
                (i32.eqz
                 (local.get $13)
                )
                (i32.eq
                 (local.get $13)
                 (local.tee $11
                  (i32.load
                   (i32.add
                    (i32.add
                     (local.get $0)
                     (i32.const 16)
                    )
                    (i32.shl
                     (i32.shr_u
                      (local.get $3)
                      (i32.const 31)
                     )
                     (i32.const 2)
                    )
                   )
                  )
                 )
                )
               )
              )
             )
             (local.set $3
              (i32.shl
               (local.get $3)
               (i32.const 1)
              )
             )
             (if
              (local.get $11)
              (block
               (local.set $13
                (local.get $0)
               )
               (local.set $0
                (local.get $11)
               )
               (br $while-in15)
              )
             )
            )
           )
           (block
            (local.set $0
             (i32.const 0)
            )
            (local.set $6
             (i32.const 0)
            )
           )
          )
          (local.set $0
           (if (result i32)
            (i32.or
             (local.get $0)
             (local.get $6)
            )
            (block (result i32)
             (local.set $3
              (local.get $0)
             )
             (local.get $6)
            )
            (block (result i32)
             (drop
              (br_if $do-once
               (local.get $15)
               (i32.eqz
                (local.tee $0
                 (i32.and
                  (local.get $9)
                  (i32.or
                   (local.tee $0
                    (i32.shl
                     (i32.const 2)
                     (local.get $19)
                    )
                   )
                   (i32.sub
                    (i32.const 0)
                    (local.get $0)
                   )
                  )
                 )
                )
               )
              )
             )
             (local.set $3
              (i32.load
               (i32.add
                (i32.shl
                 (i32.add
                  (i32.or
                   (i32.or
                    (i32.or
                     (i32.or
                      (local.tee $0
                       (i32.and
                        (i32.shr_u
                         (local.tee $3
                          (i32.add
                           (i32.and
                            (local.get $0)
                            (i32.sub
                             (i32.const 0)
                             (local.get $0)
                            )
                           )
                           (i32.const -1)
                          )
                         )
                         (i32.const 12)
                        )
                        (i32.const 16)
                       )
                      )
                      (local.tee $0
                       (i32.and
                        (i32.shr_u
                         (local.tee $3
                          (i32.shr_u
                           (local.get $3)
                           (local.get $0)
                          )
                         )
                         (i32.const 5)
                        )
                        (i32.const 8)
                       )
                      )
                     )
                     (local.tee $0
                      (i32.and
                       (i32.shr_u
                        (local.tee $3
                         (i32.shr_u
                          (local.get $3)
                          (local.get $0)
                         )
                        )
                        (i32.const 2)
                       )
                       (i32.const 4)
                      )
                     )
                    )
                    (local.tee $0
                     (i32.and
                      (i32.shr_u
                       (local.tee $3
                        (i32.shr_u
                         (local.get $3)
                         (local.get $0)
                        )
                       )
                       (i32.const 1)
                      )
                      (i32.const 2)
                     )
                    )
                   )
                   (local.tee $0
                    (i32.and
                     (i32.shr_u
                      (local.tee $3
                       (i32.shr_u
                        (local.get $3)
                        (local.get $0)
                       )
                      )
                      (i32.const 1)
                     )
                     (i32.const 1)
                    )
                   )
                  )
                  (i32.shr_u
                   (local.get $3)
                   (local.get $0)
                  )
                 )
                 (i32.const 2)
                )
                (i32.const 34628)
               )
              )
             )
             (i32.const 0)
            )
           )
          )
          (local.set $6
           (if (result i32)
            (local.get $3)
            (block
             (local.set $6
              (local.get $2)
             )
             (local.set $2
              (local.get $3)
             )
             (br $__rjti$1)
            )
            (block (result i32)
             (local.set $3
              (local.get $0)
             )
             (local.get $2)
            )
           )
          )
          (br $__rjto$1)
         )
         (local.set $3
          (local.get $0)
         )
         (loop $while-in17
          (local.set $11
           (i32.lt_u
            (local.tee $13
             (i32.sub
              (i32.and
               (i32.load offset=4
                (local.get $2)
               )
               (i32.const -8)
              )
              (local.get $15)
             )
            )
            (local.get $6)
           )
          )
          (local.set $6
           (select
            (local.get $13)
            (local.get $6)
            (local.get $11)
           )
          )
          (local.set $3
           (select
            (local.get $2)
            (local.get $3)
            (local.get $11)
           )
          )
          (if
           (block (result i32)
            (if
             (i32.eqz
              (local.tee $0
               (i32.load offset=16
                (local.get $2)
               )
              )
             )
             (local.set $0
              (i32.load offset=20
               (local.get $2)
              )
             )
            )
            (local.get $0)
           )
           (block
            (local.set $2
             (local.get $0)
            )
            (br $while-in17)
           )
          )
         )
        )
        (if (result i32)
         (local.get $3)
         (if (result i32)
          (i32.lt_u
           (local.get $6)
           (i32.sub
            (i32.load
             (i32.const 34332)
            )
            (local.get $15)
           )
          )
          (block
           (if
            (i32.gt_u
             (local.tee $13
              (i32.load
               (i32.const 34340)
              )
             )
             (local.get $3)
            )
            (call $_abort)
           )
           (if
            (i32.le_u
             (local.tee $10
              (i32.add
               (local.get $3)
               (local.get $15)
              )
             )
             (local.get $3)
            )
            (call $_abort)
           )
           (local.set $11
            (i32.load offset=24
             (local.get $3)
            )
           )
           (if
            (i32.eq
             (local.tee $0
              (i32.load offset=12
               (local.get $3)
              )
             )
             (local.get $3)
            )
            (block $do-once18
             (if
              (i32.eqz
               (local.tee $0
                (i32.load
                 (local.tee $2
                  (i32.add
                   (local.get $3)
                   (i32.const 20)
                  )
                 )
                )
               )
              )
              (br_if $do-once18
               (i32.eqz
                (local.tee $0
                 (i32.load
                  (local.tee $2
                   (i32.add
                    (local.get $3)
                    (i32.const 16)
                   )
                  )
                 )
                )
               )
              )
             )
             (loop $while-in21
              (block $while-out20
               (if
                (i32.eqz
                 (local.tee $8
                  (i32.load
                   (local.tee $5
                    (i32.add
                     (local.get $0)
                     (i32.const 20)
                    )
                   )
                  )
                 )
                )
                (br_if $while-out20
                 (i32.eqz
                  (local.tee $8
                   (i32.load
                    (local.tee $5
                     (i32.add
                      (local.get $0)
                      (i32.const 16)
                     )
                    )
                   )
                  )
                 )
                )
               )
               (local.set $2
                (local.get $5)
               )
               (local.set $0
                (local.get $8)
               )
               (br $while-in21)
              )
             )
             (if
              (i32.gt_u
               (local.get $13)
               (local.get $2)
              )
              (call $_abort)
              (block
               (i32.store
                (local.get $2)
                (i32.const 0)
               )
               (local.set $12
                (local.get $0)
               )
              )
             )
            )
            (block
             (if
              (i32.gt_u
               (local.get $13)
               (local.tee $2
                (i32.load offset=8
                 (local.get $3)
                )
               )
              )
              (call $_abort)
             )
             (if
              (i32.ne
               (local.get $3)
               (i32.load offset=12
                (local.get $2)
               )
              )
              (call $_abort)
             )
             (if
              (i32.eq
               (i32.load offset=8
                (local.get $0)
               )
               (local.get $3)
              )
              (block
               (i32.store offset=12
                (local.get $2)
                (local.get $0)
               )
               (i32.store offset=8
                (local.get $0)
                (local.get $2)
               )
               (local.set $12
                (local.get $0)
               )
              )
              (call $_abort)
             )
            )
           )
           (if
            (local.get $11)
            (block $label$break$L176
             (if
              (i32.eq
               (i32.load
                (local.tee $0
                 (i32.add
                  (i32.shl
                   (local.tee $2
                    (i32.load offset=28
                     (local.get $3)
                    )
                   )
                   (i32.const 2)
                  )
                  (i32.const 34628)
                 )
                )
               )
               (local.get $3)
              )
              (block
               (i32.store
                (local.get $0)
                (local.get $12)
               )
               (if
                (i32.eqz
                 (local.get $12)
                )
                (block
                 (i32.store
                  (i32.const 34328)
                  (local.tee $1
                   (i32.and
                    (local.get $9)
                    (i32.xor
                     (i32.shl
                      (i32.const 1)
                      (local.get $2)
                     )
                     (i32.const -1)
                    )
                   )
                  )
                 )
                 (br $label$break$L176)
                )
               )
              )
              (if
               (i32.gt_u
                (i32.load
                 (i32.const 34340)
                )
                (local.get $11)
               )
               (call $_abort)
               (block
                (i32.store
                 (select
                  (i32.add
                   (local.get $11)
                   (i32.const 16)
                  )
                  (i32.add
                   (local.get $11)
                   (i32.const 20)
                  )
                  (i32.eq
                   (i32.load offset=16
                    (local.get $11)
                   )
                   (local.get $3)
                  )
                 )
                 (local.get $12)
                )
                (if
                 (i32.eqz
                  (local.get $12)
                 )
                 (block
                  (local.set $1
                   (local.get $9)
                  )
                  (br $label$break$L176)
                 )
                )
               )
              )
             )
             (if
              (i32.gt_u
               (local.tee $0
                (i32.load
                 (i32.const 34340)
                )
               )
               (local.get $12)
              )
              (call $_abort)
             )
             (i32.store offset=24
              (local.get $12)
              (local.get $11)
             )
             (if
              (local.tee $2
               (i32.load offset=16
                (local.get $3)
               )
              )
              (if
               (i32.gt_u
                (local.get $0)
                (local.get $2)
               )
               (call $_abort)
               (block
                (i32.store offset=16
                 (local.get $12)
                 (local.get $2)
                )
                (i32.store offset=24
                 (local.get $2)
                 (local.get $12)
                )
               )
              )
             )
             (if
              (local.tee $0
               (i32.load offset=20
                (local.get $3)
               )
              )
              (if
               (i32.gt_u
                (i32.load
                 (i32.const 34340)
                )
                (local.get $0)
               )
               (call $_abort)
               (block
                (i32.store offset=20
                 (local.get $12)
                 (local.get $0)
                )
                (i32.store offset=24
                 (local.get $0)
                 (local.get $12)
                )
                (local.set $1
                 (local.get $9)
                )
               )
              )
              (local.set $1
               (local.get $9)
              )
             )
            )
            (local.set $1
             (local.get $9)
            )
           )
           (if
            (i32.lt_u
             (local.get $6)
             (i32.const 16)
            )
            (block
             (i32.store offset=4
              (local.get $3)
              (i32.or
               (local.tee $0
                (i32.add
                 (local.get $6)
                 (local.get $15)
                )
               )
               (i32.const 3)
              )
             )
             (i32.store offset=4
              (local.tee $0
               (i32.add
                (local.get $0)
                (local.get $3)
               )
              )
              (i32.or
               (i32.load offset=4
                (local.get $0)
               )
               (i32.const 1)
              )
             )
            )
            (block $label$break$L200
             (i32.store offset=4
              (local.get $3)
              (i32.or
               (local.get $15)
               (i32.const 3)
              )
             )
             (i32.store offset=4
              (local.get $10)
              (i32.or
               (local.get $6)
               (i32.const 1)
              )
             )
             (i32.store
              (i32.add
               (local.get $6)
               (local.get $10)
              )
              (local.get $6)
             )
             (local.set $0
              (i32.shr_u
               (local.get $6)
               (i32.const 3)
              )
             )
             (if
              (i32.lt_u
               (local.get $6)
               (i32.const 256)
              )
              (block
               (local.set $2
                (i32.add
                 (i32.shl
                  (local.get $0)
                  (i32.const 3)
                 )
                 (i32.const 34364)
                )
               )
               (if
                (i32.and
                 (local.tee $1
                  (i32.load
                   (i32.const 34324)
                  )
                 )
                 (local.tee $0
                  (i32.shl
                   (i32.const 1)
                   (local.get $0)
                  )
                 )
                )
                (if
                 (i32.gt_u
                  (i32.load
                   (i32.const 34340)
                  )
                  (local.tee $0
                   (i32.load
                    (local.tee $1
                     (i32.add
                      (local.get $2)
                      (i32.const 8)
                     )
                    )
                   )
                  )
                 )
                 (call $_abort)
                 (block
                  (local.set $14
                   (local.get $1)
                  )
                  (local.set $7
                   (local.get $0)
                  )
                 )
                )
                (block
                 (i32.store
                  (i32.const 34324)
                  (i32.or
                   (local.get $0)
                   (local.get $1)
                  )
                 )
                 (local.set $14
                  (i32.add
                   (local.get $2)
                   (i32.const 8)
                  )
                 )
                 (local.set $7
                  (local.get $2)
                 )
                )
               )
               (i32.store
                (local.get $14)
                (local.get $10)
               )
               (i32.store offset=12
                (local.get $7)
                (local.get $10)
               )
               (i32.store offset=8
                (local.get $10)
                (local.get $7)
               )
               (i32.store offset=12
                (local.get $10)
                (local.get $2)
               )
               (br $label$break$L200)
              )
             )
             (local.set $2
              (i32.add
               (i32.shl
                (local.tee $5
                 (if (result i32)
                  (local.tee $0
                   (i32.shr_u
                    (local.get $6)
                    (i32.const 8)
                   )
                  )
                  (if (result i32)
                   (i32.gt_u
                    (local.get $6)
                    (i32.const 16777215)
                   )
                   (i32.const 31)
                   (block (result i32)
                    (local.set $9
                     (i32.and
                      (i32.shr_u
                       (i32.add
                        (local.tee $0
                         (i32.shl
                          (local.get $0)
                          (local.tee $5
                           (i32.and
                            (i32.shr_u
                             (i32.add
                              (local.get $0)
                              (i32.const 1048320)
                             )
                             (i32.const 16)
                            )
                            (i32.const 8)
                           )
                          )
                         )
                        )
                        (i32.const 520192)
                       )
                       (i32.const 16)
                      )
                      (i32.const 4)
                     )
                    )
                    (i32.or
                     (i32.and
                      (i32.shr_u
                       (local.get $6)
                       (i32.add
                        (local.tee $0
                         (i32.add
                          (i32.sub
                           (i32.const 14)
                           (i32.or
                            (local.tee $0
                             (i32.and
                              (i32.shr_u
                               (i32.add
                                (local.tee $2
                                 (i32.shl
                                  (local.get $0)
                                  (local.get $9)
                                 )
                                )
                                (i32.const 245760)
                               )
                               (i32.const 16)
                              )
                              (i32.const 2)
                             )
                            )
                            (i32.or
                             (local.get $5)
                             (local.get $9)
                            )
                           )
                          )
                          (i32.shr_u
                           (i32.shl
                            (local.get $2)
                            (local.get $0)
                           )
                           (i32.const 15)
                          )
                         )
                        )
                        (i32.const 7)
                       )
                      )
                      (i32.const 1)
                     )
                     (i32.shl
                      (local.get $0)
                      (i32.const 1)
                     )
                    )
                   )
                  )
                  (i32.const 0)
                 )
                )
                (i32.const 2)
               )
               (i32.const 34628)
              )
             )
             (i32.store offset=28
              (local.get $10)
              (local.get $5)
             )
             (i32.store offset=20
              (local.get $10)
              (i32.const 0)
             )
             (i32.store offset=16
              (local.get $10)
              (i32.const 0)
             )
             (if
              (i32.eqz
               (i32.and
                (local.get $1)
                (local.tee $0
                 (i32.shl
                  (i32.const 1)
                  (local.get $5)
                 )
                )
               )
              )
              (block
               (i32.store
                (i32.const 34328)
                (i32.or
                 (local.get $0)
                 (local.get $1)
                )
               )
               (i32.store
                (local.get $2)
                (local.get $10)
               )
               (i32.store offset=24
                (local.get $10)
                (local.get $2)
               )
               (i32.store offset=12
                (local.get $10)
                (local.get $10)
               )
               (i32.store offset=8
                (local.get $10)
                (local.get $10)
               )
               (br $label$break$L200)
              )
             )
             (if
              (i32.eq
               (i32.and
                (i32.load offset=4
                 (local.tee $0
                  (i32.load
                   (local.get $2)
                  )
                 )
                )
                (i32.const -8)
               )
               (local.get $6)
              )
              (local.set $4
               (local.get $0)
              )
              (block $label$break$L218
               (local.set $2
                (i32.shl
                 (local.get $6)
                 (select
                  (i32.const 0)
                  (i32.sub
                   (i32.const 25)
                   (i32.shr_u
                    (local.get $5)
                    (i32.const 1)
                   )
                  )
                  (i32.eq
                   (local.get $5)
                   (i32.const 31)
                  )
                 )
                )
               )
               (loop $while-in30
                (if
                 (local.tee $1
                  (i32.load
                   (local.tee $5
                    (i32.add
                     (i32.add
                      (local.get $0)
                      (i32.const 16)
                     )
                     (i32.shl
                      (i32.shr_u
                       (local.get $2)
                       (i32.const 31)
                      )
                      (i32.const 2)
                     )
                    )
                   )
                  )
                 )
                 (block
                  (local.set $2
                   (i32.shl
                    (local.get $2)
                    (i32.const 1)
                   )
                  )
                  (if
                   (i32.eq
                    (i32.and
                     (i32.load offset=4
                      (local.get $1)
                     )
                     (i32.const -8)
                    )
                    (local.get $6)
                   )
                   (block
                    (local.set $4
                     (local.get $1)
                    )
                    (br $label$break$L218)
                   )
                   (block
                    (local.set $0
                     (local.get $1)
                    )
                    (br $while-in30)
                   )
                  )
                 )
                )
               )
               (if
                (i32.gt_u
                 (i32.load
                  (i32.const 34340)
                 )
                 (local.get $5)
                )
                (call $_abort)
                (block
                 (i32.store
                  (local.get $5)
                  (local.get $10)
                 )
                 (i32.store offset=24
                  (local.get $10)
                  (local.get $0)
                 )
                 (i32.store offset=12
                  (local.get $10)
                  (local.get $10)
                 )
                 (i32.store offset=8
                  (local.get $10)
                  (local.get $10)
                 )
                 (br $label$break$L200)
                )
               )
              )
             )
             (if
              (i32.and
               (i32.le_u
                (local.tee $0
                 (i32.load
                  (i32.const 34340)
                 )
                )
                (local.get $4)
               )
               (i32.le_u
                (local.get $0)
                (local.tee $1
                 (i32.load offset=8
                  (local.tee $0
                   (local.get $4)
                  )
                 )
                )
               )
              )
              (block
               (i32.store offset=12
                (local.get $1)
                (local.get $10)
               )
               (i32.store offset=8
                (local.get $0)
                (local.get $10)
               )
               (i32.store offset=8
                (local.get $10)
                (local.get $1)
               )
               (i32.store offset=12
                (local.get $10)
                (local.get $4)
               )
               (i32.store offset=24
                (local.get $10)
                (i32.const 0)
               )
              )
              (call $_abort)
             )
            )
           )
           (global.set $STACKTOP
            (local.get $18)
           )
           (return
            (i32.add
             (local.get $3)
             (i32.const 8)
            )
           )
          )
          (local.get $15)
         )
         (local.get $15)
        )
       )
       (local.get $15)
      )
     )
    )
   )
  )
  (block $folding-inner2
   (block $folding-inner1
    (if
     (i32.ge_u
      (local.tee $3
       (i32.load
        (i32.const 34332)
       )
      )
      (local.get $12)
     )
     (block
      (local.set $0
       (i32.load
        (i32.const 34344)
       )
      )
      (if
       (i32.gt_u
        (local.tee $2
         (i32.sub
          (local.get $3)
          (local.get $12)
         )
        )
        (i32.const 15)
       )
       (block
        (i32.store
         (i32.const 34344)
         (local.tee $1
          (i32.add
           (local.get $0)
           (local.get $12)
          )
         )
        )
        (i32.store
         (i32.const 34332)
         (local.get $2)
        )
        (i32.store offset=4
         (local.get $1)
         (i32.or
          (local.get $2)
          (i32.const 1)
         )
        )
        (i32.store
         (i32.add
          (local.get $0)
          (local.get $3)
         )
         (local.get $2)
        )
        (i32.store offset=4
         (local.get $0)
         (i32.or
          (local.get $12)
          (i32.const 3)
         )
        )
       )
       (block
        (i32.store
         (i32.const 34332)
         (i32.const 0)
        )
        (i32.store
         (i32.const 34344)
         (i32.const 0)
        )
        (i32.store offset=4
         (local.get $0)
         (i32.or
          (local.get $3)
          (i32.const 3)
         )
        )
        (i32.store offset=4
         (local.tee $1
          (i32.add
           (local.get $0)
           (local.get $3)
          )
         )
         (i32.or
          (i32.load offset=4
           (local.get $1)
          )
          (i32.const 1)
         )
        )
       )
      )
      (br $folding-inner1)
     )
    )
    (block $folding-inner0
     (if
      (i32.gt_u
       (local.tee $11
        (i32.load
         (i32.const 34336)
        )
       )
       (local.get $12)
      )
      (block
       (i32.store
        (i32.const 34336)
        (local.tee $2
         (i32.sub
          (local.get $11)
          (local.get $12)
         )
        )
       )
       (br $folding-inner0)
      )
     )
     (if
      (i32.le_u
       (local.tee $7
        (i32.and
         (local.tee $4
          (i32.add
           (local.tee $0
            (if (result i32)
             (i32.load
              (i32.const 34796)
             )
             (i32.load
              (i32.const 34804)
             )
             (block (result i32)
              (i32.store
               (i32.const 34804)
               (i32.const 4096)
              )
              (i32.store
               (i32.const 34800)
               (i32.const 4096)
              )
              (i32.store
               (i32.const 34808)
               (i32.const -1)
              )
              (i32.store
               (i32.const 34812)
               (i32.const -1)
              )
              (i32.store
               (i32.const 34816)
               (i32.const 0)
              )
              (i32.store
               (i32.const 34768)
               (i32.const 0)
              )
              (i32.store
               (i32.const 34796)
               (i32.xor
                (i32.and
                 (local.get $23)
                 (i32.const -16)
                )
                (i32.const 1431655768)
               )
              )
              (i32.const 4096)
             )
            )
           )
           (local.tee $13
            (i32.add
             (local.get $12)
             (i32.const 47)
            )
           )
          )
         )
         (local.tee $3
          (i32.sub
           (i32.const 0)
           (local.get $0)
          )
         )
        )
       )
       (local.get $12)
      )
      (br $folding-inner2)
     )
     (if
      (local.tee $2
       (i32.load
        (i32.const 34764)
       )
      )
      (if
       (i32.or
        (i32.le_u
         (local.tee $0
          (i32.add
           (local.tee $1
            (i32.load
             (i32.const 34756)
            )
           )
           (local.get $7)
          )
         )
         (local.get $1)
        )
        (i32.gt_u
         (local.get $0)
         (local.get $2)
        )
       )
       (br $folding-inner2)
      )
     )
     (local.set $9
      (i32.add
       (local.get $12)
       (i32.const 48)
      )
     )
     (block $__rjto$7
      (block $__rjti$7
       (if
        (i32.and
         (i32.load
          (i32.const 34768)
         )
         (i32.const 4)
        )
        (local.set $2
         (i32.const 0)
        )
        (block
         (block $do-once37
          (block $__rjti$3
           (block $__rjti$2
            (br_if $__rjti$2
             (i32.eqz
              (local.tee $1
               (i32.load
                (i32.const 34348)
               )
              )
             )
            )
            (local.set $6
             (i32.const 34772)
            )
            (loop $while-in34
             (block $while-out33
              (if
               (i32.le_u
                (local.tee $0
                 (i32.load
                  (local.get $6)
                 )
                )
                (local.get $1)
               )
               (br_if $while-out33
                (i32.gt_u
                 (i32.add
                  (local.get $0)
                  (i32.load offset=4
                   (local.get $6)
                  )
                 )
                 (local.get $1)
                )
               )
              )
              (br_if $while-in34
               (local.tee $6
                (i32.load offset=8
                 (local.get $6)
                )
               )
              )
              (br $__rjti$2)
             )
            )
            (if
             (i32.lt_u
              (local.tee $2
               (i32.and
                (i32.sub
                 (local.get $4)
                 (local.get $11)
                )
                (local.get $3)
               )
              )
              (i32.const 2147483647)
             )
             (block
              (local.set $0
               (call $_sbrk
                (local.get $2)
               )
              )
              (br_if $__rjti$3
               (i32.ne
                (local.get $0)
                (i32.add
                 (i32.load
                  (local.get $6)
                 )
                 (i32.load offset=4
                  (local.get $6)
                 )
                )
               )
              )
              (br_if $__rjti$7
               (i32.ne
                (local.get $0)
                (i32.const -1)
               )
              )
             )
             (local.set $2
              (i32.const 0)
             )
            )
            (br $do-once37)
           )
           (local.set $2
            (if (result i32)
             (i32.eq
              (local.tee $0
               (call $_sbrk
                (i32.const 0)
               )
              )
              (i32.const -1)
             )
             (i32.const 0)
             (block (result i32)
              (local.set $4
               (i32.add
                (local.tee $3
                 (i32.load
                  (i32.const 34756)
                 )
                )
                (local.tee $2
                 (i32.add
                  (select
                   (i32.sub
                    (i32.and
                     (i32.add
                      (local.get $0)
                      (local.tee $1
                       (i32.add
                        (local.tee $2
                         (i32.load
                          (i32.const 34800)
                         )
                        )
                        (i32.const -1)
                       )
                      )
                     )
                     (i32.sub
                      (i32.const 0)
                      (local.get $2)
                     )
                    )
                    (local.get $0)
                   )
                   (i32.const 0)
                   (i32.and
                    (local.get $0)
                    (local.get $1)
                   )
                  )
                  (local.get $7)
                 )
                )
               )
              )
              (if (result i32)
               (i32.and
                (i32.lt_u
                 (local.get $2)
                 (i32.const 2147483647)
                )
                (i32.gt_u
                 (local.get $2)
                 (local.get $12)
                )
               )
               (block
                (if
                 (local.tee $1
                  (i32.load
                   (i32.const 34764)
                  )
                 )
                 (if
                  (i32.or
                   (i32.le_u
                    (local.get $4)
                    (local.get $3)
                   )
                   (i32.gt_u
                    (local.get $4)
                    (local.get $1)
                   )
                  )
                  (block
                   (local.set $2
                    (i32.const 0)
                   )
                   (br $do-once37)
                  )
                 )
                )
                (br_if $__rjti$7
                 (i32.eq
                  (local.get $0)
                  (local.tee $1
                   (call $_sbrk
                    (local.get $2)
                   )
                  )
                 )
                )
                (local.set $0
                 (local.get $1)
                )
                (br $__rjti$3)
               )
               (i32.const 0)
              )
             )
            )
           )
           (br $do-once37)
          )
          (if
           (i32.eqz
            (i32.and
             (i32.and
              (i32.ne
               (local.get $0)
               (i32.const -1)
              )
              (i32.lt_u
               (local.get $2)
               (i32.const 2147483647)
              )
             )
             (i32.gt_u
              (local.get $9)
              (local.get $2)
             )
            )
           )
           (if
            (i32.eq
             (local.get $0)
             (i32.const -1)
            )
            (block
             (local.set $2
              (i32.const 0)
             )
             (br $do-once37)
            )
            (br $__rjti$7)
           )
          )
          (br_if $__rjti$7
           (i32.ge_u
            (local.tee $3
             (i32.and
              (i32.add
               (local.tee $1
                (i32.load
                 (i32.const 34804)
                )
               )
               (i32.sub
                (local.get $13)
                (local.get $2)
               )
              )
              (i32.sub
               (i32.const 0)
               (local.get $1)
              )
             )
            )
            (i32.const 2147483647)
           )
          )
          (local.set $1
           (i32.sub
            (i32.const 0)
            (local.get $2)
           )
          )
          (local.set $2
           (if (result i32)
            (i32.eq
             (call $_sbrk
              (local.get $3)
             )
             (i32.const -1)
            )
            (block (result i32)
             (drop
              (call $_sbrk
               (local.get $1)
              )
             )
             (i32.const 0)
            )
            (block
             (local.set $2
              (i32.add
               (local.get $2)
               (local.get $3)
              )
             )
             (br $__rjti$7)
            )
           )
          )
         )
         (i32.store
          (i32.const 34768)
          (i32.or
           (i32.load
            (i32.const 34768)
           )
           (i32.const 4)
          )
         )
        )
       )
       (if
        (i32.lt_u
         (local.get $7)
         (i32.const 2147483647)
        )
        (block
         (local.set $0
          (call $_sbrk
           (local.get $7)
          )
         )
         (local.set $3
          (i32.gt_u
           (local.tee $1
            (i32.sub
             (local.tee $9
              (call $_sbrk
               (i32.const 0)
              )
             )
             (local.get $0)
            )
           )
           (i32.add
            (local.get $12)
            (i32.const 40)
           )
          )
         )
         (local.set $2
          (select
           (local.get $1)
           (local.get $2)
           (local.get $3)
          )
         )
         (br_if $__rjti$7
          (i32.eqz
           (i32.or
            (i32.or
             (i32.xor
              (local.get $3)
              (i32.const 1)
             )
             (i32.eq
              (local.get $0)
              (i32.const -1)
             )
            )
            (i32.xor
             (i32.and
              (i32.and
               (i32.ne
                (local.get $0)
                (i32.const -1)
               )
               (i32.ne
                (local.get $9)
                (i32.const -1)
               )
              )
              (i32.lt_u
               (local.get $0)
               (local.get $9)
              )
             )
             (i32.const 1)
            )
           )
          )
         )
        )
       )
       (br $__rjto$7)
      )
      (i32.store
       (i32.const 34756)
       (local.tee $1
        (i32.add
         (i32.load
          (i32.const 34756)
         )
         (local.get $2)
        )
       )
      )
      (if
       (i32.gt_u
        (local.get $1)
        (i32.load
         (i32.const 34760)
        )
       )
       (i32.store
        (i32.const 34760)
        (local.get $1)
       )
      )
      (if
       (local.tee $4
        (i32.load
         (i32.const 34348)
        )
       )
       (block $label$break$L294
        (local.set $6
         (i32.const 34772)
        )
        (block $__rjto$4
         (block $__rjti$4
          (loop $while-in41
           (br_if $__rjti$4
            (i32.eq
             (i32.add
              (local.tee $9
               (i32.load
                (local.get $6)
               )
              )
              (local.tee $3
               (i32.load offset=4
                (local.get $6)
               )
              )
             )
             (local.get $0)
            )
           )
           (br_if $while-in41
            (local.tee $6
             (i32.load offset=8
              (local.get $6)
             )
            )
           )
          )
          (br $__rjto$4)
         )
         (if
          (i32.eqz
           (i32.and
            (i32.load offset=12
             (local.tee $1
              (local.get $6)
             )
            )
            (i32.const 8)
           )
          )
          (if
           (i32.and
            (i32.le_u
             (local.get $9)
             (local.get $4)
            )
            (i32.gt_u
             (local.get $0)
             (local.get $4)
            )
           )
           (block
            (i32.store offset=4
             (local.get $1)
             (i32.add
              (local.get $2)
              (local.get $3)
             )
            )
            (local.set $3
             (i32.add
              (local.get $4)
              (local.tee $1
               (select
                (i32.and
                 (i32.sub
                  (i32.const 0)
                  (local.tee $0
                   (i32.add
                    (local.get $4)
                    (i32.const 8)
                   )
                  )
                 )
                 (i32.const 7)
                )
                (i32.const 0)
                (i32.and
                 (local.get $0)
                 (i32.const 7)
                )
               )
              )
             )
            )
            (local.set $1
             (i32.sub
              (local.tee $0
               (i32.add
                (i32.load
                 (i32.const 34336)
                )
                (local.get $2)
               )
              )
              (local.get $1)
             )
            )
            (i32.store
             (i32.const 34348)
             (local.get $3)
            )
            (i32.store
             (i32.const 34336)
             (local.get $1)
            )
            (i32.store offset=4
             (local.get $3)
             (i32.or
              (local.get $1)
              (i32.const 1)
             )
            )
            (i32.store offset=4
             (i32.add
              (local.get $0)
              (local.get $4)
             )
             (i32.const 40)
            )
            (i32.store
             (i32.const 34352)
             (i32.load
              (i32.const 34812)
             )
            )
            (br $label$break$L294)
           )
          )
         )
        )
        (if
         (i32.lt_u
          (local.get $0)
          (local.tee $6
           (i32.load
            (i32.const 34340)
           )
          )
         )
         (block
          (i32.store
           (i32.const 34340)
           (local.get $0)
          )
          (local.set $6
           (local.get $0)
          )
         )
        )
        (local.set $1
         (i32.add
          (local.get $0)
          (local.get $2)
         )
        )
        (local.set $11
         (i32.const 34772)
        )
        (block $__rjto$5
         (block $__rjti$5
          (loop $while-in43
           (br_if $__rjti$5
            (i32.eq
             (i32.load
              (local.get $11)
             )
             (local.get $1)
            )
           )
           (br_if $while-in43
            (local.tee $11
             (i32.load offset=8
              (local.get $11)
             )
            )
           )
          )
          (br $__rjto$5)
         )
         (if
          (i32.eqz
           (i32.and
            (i32.load offset=12
             (local.get $11)
            )
            (i32.const 8)
           )
          )
          (block
           (i32.store
            (local.get $11)
            (local.get $0)
           )
           (i32.store offset=4
            (local.get $11)
            (i32.add
             (i32.load offset=4
              (local.get $11)
             )
             (local.get $2)
            )
           )
           (local.set $7
            (i32.add
             (local.tee $11
              (i32.add
               (local.get $0)
               (select
                (i32.and
                 (i32.sub
                  (i32.const 0)
                  (local.tee $0
                   (i32.add
                    (local.get $0)
                    (i32.const 8)
                   )
                  )
                 )
                 (i32.const 7)
                )
                (i32.const 0)
                (i32.and
                 (local.get $0)
                 (i32.const 7)
                )
               )
              )
             )
             (local.get $12)
            )
           )
           (local.set $8
            (i32.sub
             (i32.sub
              (local.tee $2
               (i32.add
                (local.get $1)
                (select
                 (i32.and
                  (i32.sub
                   (i32.const 0)
                   (local.tee $0
                    (i32.add
                     (local.get $1)
                     (i32.const 8)
                    )
                   )
                  )
                  (i32.const 7)
                 )
                 (i32.const 0)
                 (i32.and
                  (local.get $0)
                  (i32.const 7)
                 )
                )
               )
              )
              (local.get $11)
             )
             (local.get $12)
            )
           )
           (i32.store offset=4
            (local.get $11)
            (i32.or
             (local.get $12)
             (i32.const 3)
            )
           )
           (if
            (i32.eq
             (local.get $2)
             (local.get $4)
            )
            (block
             (i32.store
              (i32.const 34336)
              (local.tee $0
               (i32.add
                (i32.load
                 (i32.const 34336)
                )
                (local.get $8)
               )
              )
             )
             (i32.store
              (i32.const 34348)
              (local.get $7)
             )
             (i32.store offset=4
              (local.get $7)
              (i32.or
               (local.get $0)
               (i32.const 1)
              )
             )
            )
            (block $label$break$L317
             (if
              (i32.eq
               (i32.load
                (i32.const 34344)
               )
               (local.get $2)
              )
              (block
               (i32.store
                (i32.const 34332)
                (local.tee $0
                 (i32.add
                  (i32.load
                   (i32.const 34332)
                  )
                  (local.get $8)
                 )
                )
               )
               (i32.store
                (i32.const 34344)
                (local.get $7)
               )
               (i32.store offset=4
                (local.get $7)
                (i32.or
                 (local.get $0)
                 (i32.const 1)
                )
               )
               (i32.store
                (i32.add
                 (local.get $0)
                 (local.get $7)
                )
                (local.get $0)
               )
               (br $label$break$L317)
              )
             )
             (if
              (i32.eq
               (i32.and
                (local.tee $0
                 (i32.load offset=4
                  (local.get $2)
                 )
                )
                (i32.const 3)
               )
               (i32.const 1)
              )
              (block
               (local.set $13
                (i32.and
                 (local.get $0)
                 (i32.const -8)
                )
               )
               (local.set $1
                (i32.shr_u
                 (local.get $0)
                 (i32.const 3)
                )
               )
               (block $label$break$L325
                (if
                 (i32.lt_u
                  (local.get $0)
                  (i32.const 256)
                 )
                 (block
                  (local.set $9
                   (i32.load offset=12
                    (local.get $2)
                   )
                  )
                  (if
                   (i32.ne
                    (local.tee $3
                     (i32.load offset=8
                      (local.get $2)
                     )
                    )
                    (local.tee $0
                     (i32.add
                      (i32.shl
                       (local.get $1)
                       (i32.const 3)
                      )
                      (i32.const 34364)
                     )
                    )
                   )
                   (block $do-once46
                    (if
                     (i32.gt_u
                      (local.get $6)
                      (local.get $3)
                     )
                     (call $_abort)
                    )
                    (br_if $do-once46
                     (i32.eq
                      (i32.load offset=12
                       (local.get $3)
                      )
                      (local.get $2)
                     )
                    )
                    (call $_abort)
                   )
                  )
                  (if
                   (i32.eq
                    (local.get $3)
                    (local.get $9)
                   )
                   (block
                    (i32.store
                     (i32.const 34324)
                     (i32.and
                      (i32.load
                       (i32.const 34324)
                      )
                      (i32.xor
                       (i32.shl
                        (i32.const 1)
                        (local.get $1)
                       )
                       (i32.const -1)
                      )
                     )
                    )
                    (br $label$break$L325)
                   )
                  )
                  (if
                   (i32.eq
                    (local.get $0)
                    (local.get $9)
                   )
                   (local.set $20
                    (i32.add
                     (local.get $9)
                     (i32.const 8)
                    )
                   )
                   (block $do-once48
                    (if
                     (i32.gt_u
                      (local.get $6)
                      (local.get $9)
                     )
                     (call $_abort)
                    )
                    (if
                     (i32.eq
                      (i32.load
                       (local.tee $0
                        (i32.add
                         (local.get $9)
                         (i32.const 8)
                        )
                       )
                      )
                      (local.get $2)
                     )
                     (block
                      (local.set $20
                       (local.get $0)
                      )
                      (br $do-once48)
                     )
                    )
                    (call $_abort)
                   )
                  )
                  (i32.store offset=12
                   (local.get $3)
                   (local.get $9)
                  )
                  (i32.store
                   (local.get $20)
                   (local.get $3)
                  )
                 )
                 (block
                  (local.set $10
                   (i32.load offset=24
                    (local.get $2)
                   )
                  )
                  (if
                   (i32.eq
                    (local.tee $0
                     (i32.load offset=12
                      (local.get $2)
                     )
                    )
                    (local.get $2)
                   )
                   (block $do-once50
                    (if
                     (local.tee $0
                      (i32.load
                       (local.tee $3
                        (i32.add
                         (local.tee $1
                          (i32.add
                           (local.get $2)
                           (i32.const 16)
                          )
                         )
                         (i32.const 4)
                        )
                       )
                      )
                     )
                     (local.set $1
                      (local.get $3)
                     )
                     (br_if $do-once50
                      (i32.eqz
                       (local.tee $0
                        (i32.load
                         (local.get $1)
                        )
                       )
                      )
                     )
                    )
                    (loop $while-in53
                     (block $while-out52
                      (if
                       (i32.eqz
                        (local.tee $4
                         (i32.load
                          (local.tee $9
                           (i32.add
                            (local.get $0)
                            (i32.const 20)
                           )
                          )
                         )
                        )
                       )
                       (br_if $while-out52
                        (i32.eqz
                         (local.tee $4
                          (i32.load
                           (local.tee $9
                            (i32.add
                             (local.get $0)
                             (i32.const 16)
                            )
                           )
                          )
                         )
                        )
                       )
                      )
                      (local.set $1
                       (local.get $9)
                      )
                      (local.set $0
                       (local.get $4)
                      )
                      (br $while-in53)
                     )
                    )
                    (if
                     (i32.gt_u
                      (local.get $6)
                      (local.get $1)
                     )
                     (call $_abort)
                     (block
                      (i32.store
                       (local.get $1)
                       (i32.const 0)
                      )
                      (local.set $16
                       (local.get $0)
                      )
                     )
                    )
                   )
                   (block
                    (if
                     (i32.gt_u
                      (local.get $6)
                      (local.tee $1
                       (i32.load offset=8
                        (local.get $2)
                       )
                      )
                     )
                     (call $_abort)
                    )
                    (if
                     (i32.ne
                      (local.get $2)
                      (i32.load offset=12
                       (local.get $1)
                      )
                     )
                     (call $_abort)
                    )
                    (if
                     (i32.eq
                      (i32.load offset=8
                       (local.get $0)
                      )
                      (local.get $2)
                     )
                     (block
                      (i32.store offset=12
                       (local.get $1)
                       (local.get $0)
                      )
                      (i32.store offset=8
                       (local.get $0)
                       (local.get $1)
                      )
                      (local.set $16
                       (local.get $0)
                      )
                     )
                     (call $_abort)
                    )
                   )
                  )
                  (br_if $label$break$L325
                   (i32.eqz
                    (local.get $10)
                   )
                  )
                  (if
                   (i32.eq
                    (i32.load
                     (local.tee $0
                      (i32.add
                       (i32.shl
                        (local.tee $1
                         (i32.load offset=28
                          (local.get $2)
                         )
                        )
                        (i32.const 2)
                       )
                       (i32.const 34628)
                      )
                     )
                    )
                    (local.get $2)
                   )
                   (block $do-once54
                    (i32.store
                     (local.get $0)
                     (local.get $16)
                    )
                    (br_if $do-once54
                     (local.get $16)
                    )
                    (i32.store
                     (i32.const 34328)
                     (i32.and
                      (i32.load
                       (i32.const 34328)
                      )
                      (i32.xor
                       (i32.shl
                        (i32.const 1)
                        (local.get $1)
                       )
                       (i32.const -1)
                      )
                     )
                    )
                    (br $label$break$L325)
                   )
                   (if
                    (i32.gt_u
                     (i32.load
                      (i32.const 34340)
                     )
                     (local.get $10)
                    )
                    (call $_abort)
                    (block
                     (i32.store
                      (select
                       (i32.add
                        (local.get $10)
                        (i32.const 16)
                       )
                       (i32.add
                        (local.get $10)
                        (i32.const 20)
                       )
                       (i32.eq
                        (i32.load offset=16
                         (local.get $10)
                        )
                        (local.get $2)
                       )
                      )
                      (local.get $16)
                     )
                     (br_if $label$break$L325
                      (i32.eqz
                       (local.get $16)
                      )
                     )
                    )
                   )
                  )
                  (if
                   (i32.gt_u
                    (local.tee $0
                     (i32.load
                      (i32.const 34340)
                     )
                    )
                    (local.get $16)
                   )
                   (call $_abort)
                  )
                  (i32.store offset=24
                   (local.get $16)
                   (local.get $10)
                  )
                  (if
                   (local.tee $1
                    (i32.load offset=16
                     (local.get $2)
                    )
                   )
                   (if
                    (i32.gt_u
                     (local.get $0)
                     (local.get $1)
                    )
                    (call $_abort)
                    (block
                     (i32.store offset=16
                      (local.get $16)
                      (local.get $1)
                     )
                     (i32.store offset=24
                      (local.get $1)
                      (local.get $16)
                     )
                    )
                   )
                  )
                  (br_if $label$break$L325
                   (i32.eqz
                    (local.tee $0
                     (i32.load offset=20
                      (local.get $2)
                     )
                    )
                   )
                  )
                  (if
                   (i32.gt_u
                    (i32.load
                     (i32.const 34340)
                    )
                    (local.get $0)
                   )
                   (call $_abort)
                   (block
                    (i32.store offset=20
                     (local.get $16)
                     (local.get $0)
                    )
                    (i32.store offset=24
                     (local.get $0)
                     (local.get $16)
                    )
                   )
                  )
                 )
                )
               )
               (local.set $2
                (i32.add
                 (local.get $2)
                 (local.get $13)
                )
               )
               (local.set $8
                (i32.add
                 (local.get $8)
                 (local.get $13)
                )
               )
              )
             )
             (i32.store offset=4
              (local.get $2)
              (i32.and
               (i32.load offset=4
                (local.get $2)
               )
               (i32.const -2)
              )
             )
             (i32.store offset=4
              (local.get $7)
              (i32.or
               (local.get $8)
               (i32.const 1)
              )
             )
             (i32.store
              (i32.add
               (local.get $7)
               (local.get $8)
              )
              (local.get $8)
             )
             (local.set $0
              (i32.shr_u
               (local.get $8)
               (i32.const 3)
              )
             )
             (if
              (i32.lt_u
               (local.get $8)
               (i32.const 256)
              )
              (block
               (local.set $2
                (i32.add
                 (i32.shl
                  (local.get $0)
                  (i32.const 3)
                 )
                 (i32.const 34364)
                )
               )
               (if
                (i32.and
                 (local.tee $1
                  (i32.load
                   (i32.const 34324)
                  )
                 )
                 (local.tee $0
                  (i32.shl
                   (i32.const 1)
                   (local.get $0)
                  )
                 )
                )
                (block $do-once58
                 (if
                  (i32.le_u
                   (i32.load
                    (i32.const 34340)
                   )
                   (local.tee $0
                    (i32.load
                     (local.tee $1
                      (i32.add
                       (local.get $2)
                       (i32.const 8)
                      )
                     )
                    )
                   )
                  )
                  (block
                   (local.set $21
                    (local.get $1)
                   )
                   (local.set $17
                    (local.get $0)
                   )
                   (br $do-once58)
                  )
                 )
                 (call $_abort)
                )
                (block
                 (i32.store
                  (i32.const 34324)
                  (i32.or
                   (local.get $0)
                   (local.get $1)
                  )
                 )
                 (local.set $21
                  (i32.add
                   (local.get $2)
                   (i32.const 8)
                  )
                 )
                 (local.set $17
                  (local.get $2)
                 )
                )
               )
               (i32.store
                (local.get $21)
                (local.get $7)
               )
               (i32.store offset=12
                (local.get $17)
                (local.get $7)
               )
               (i32.store offset=8
                (local.get $7)
                (local.get $17)
               )
               (i32.store offset=12
                (local.get $7)
                (local.get $2)
               )
               (br $label$break$L317)
              )
             )
             (local.set $2
              (i32.add
               (i32.shl
                (local.tee $3
                 (if (result i32)
                  (local.tee $0
                   (i32.shr_u
                    (local.get $8)
                    (i32.const 8)
                   )
                  )
                  (if (result i32)
                   (i32.gt_u
                    (local.get $8)
                    (i32.const 16777215)
                   )
                   (i32.const 31)
                   (block (result i32)
                    (local.set $3
                     (i32.and
                      (i32.shr_u
                       (i32.add
                        (local.tee $0
                         (i32.shl
                          (local.get $0)
                          (local.tee $2
                           (i32.and
                            (i32.shr_u
                             (i32.add
                              (local.get $0)
                              (i32.const 1048320)
                             )
                             (i32.const 16)
                            )
                            (i32.const 8)
                           )
                          )
                         )
                        )
                        (i32.const 520192)
                       )
                       (i32.const 16)
                      )
                      (i32.const 4)
                     )
                    )
                    (i32.or
                     (i32.and
                      (i32.shr_u
                       (local.get $8)
                       (i32.add
                        (local.tee $0
                         (i32.add
                          (i32.sub
                           (i32.const 14)
                           (i32.or
                            (local.tee $0
                             (i32.and
                              (i32.shr_u
                               (i32.add
                                (local.tee $1
                                 (i32.shl
                                  (local.get $0)
                                  (local.get $3)
                                 )
                                )
                                (i32.const 245760)
                               )
                               (i32.const 16)
                              )
                              (i32.const 2)
                             )
                            )
                            (i32.or
                             (local.get $2)
                             (local.get $3)
                            )
                           )
                          )
                          (i32.shr_u
                           (i32.shl
                            (local.get $1)
                            (local.get $0)
                           )
                           (i32.const 15)
                          )
                         )
                        )
                        (i32.const 7)
                       )
                      )
                      (i32.const 1)
                     )
                     (i32.shl
                      (local.get $0)
                      (i32.const 1)
                     )
                    )
                   )
                  )
                  (i32.const 0)
                 )
                )
                (i32.const 2)
               )
               (i32.const 34628)
              )
             )
             (i32.store offset=28
              (local.get $7)
              (local.get $3)
             )
             (i32.store offset=20
              (local.get $7)
              (i32.const 0)
             )
             (i32.store offset=16
              (local.get $7)
              (i32.const 0)
             )
             (if
              (i32.eqz
               (i32.and
                (local.tee $1
                 (i32.load
                  (i32.const 34328)
                 )
                )
                (local.tee $0
                 (i32.shl
                  (i32.const 1)
                  (local.get $3)
                 )
                )
               )
              )
              (block
               (i32.store
                (i32.const 34328)
                (i32.or
                 (local.get $0)
                 (local.get $1)
                )
               )
               (i32.store
                (local.get $2)
                (local.get $7)
               )
               (i32.store offset=24
                (local.get $7)
                (local.get $2)
               )
               (i32.store offset=12
                (local.get $7)
                (local.get $7)
               )
               (i32.store offset=8
                (local.get $7)
                (local.get $7)
               )
               (br $label$break$L317)
              )
             )
             (if
              (i32.eq
               (i32.and
                (i32.load offset=4
                 (local.tee $0
                  (i32.load
                   (local.get $2)
                  )
                 )
                )
                (i32.const -8)
               )
               (local.get $8)
              )
              (local.set $5
               (local.get $0)
              )
              (block $label$break$L410
               (local.set $2
                (i32.shl
                 (local.get $8)
                 (select
                  (i32.const 0)
                  (i32.sub
                   (i32.const 25)
                   (i32.shr_u
                    (local.get $3)
                    (i32.const 1)
                   )
                  )
                  (i32.eq
                   (local.get $3)
                   (i32.const 31)
                  )
                 )
                )
               )
               (loop $while-in64
                (if
                 (local.tee $1
                  (i32.load
                   (local.tee $3
                    (i32.add
                     (i32.add
                      (local.get $0)
                      (i32.const 16)
                     )
                     (i32.shl
                      (i32.shr_u
                       (local.get $2)
                       (i32.const 31)
                      )
                      (i32.const 2)
                     )
                    )
                   )
                  )
                 )
                 (block
                  (local.set $2
                   (i32.shl
                    (local.get $2)
                    (i32.const 1)
                   )
                  )
                  (if
                   (i32.eq
                    (i32.and
                     (i32.load offset=4
                      (local.get $1)
                     )
                     (i32.const -8)
                    )
                    (local.get $8)
                   )
                   (block
                    (local.set $5
                     (local.get $1)
                    )
                    (br $label$break$L410)
                   )
                   (block
                    (local.set $0
                     (local.get $1)
                    )
                    (br $while-in64)
                   )
                  )
                 )
                )
               )
               (if
                (i32.gt_u
                 (i32.load
                  (i32.const 34340)
                 )
                 (local.get $3)
                )
                (call $_abort)
                (block
                 (i32.store
                  (local.get $3)
                  (local.get $7)
                 )
                 (i32.store offset=24
                  (local.get $7)
                  (local.get $0)
                 )
                 (i32.store offset=12
                  (local.get $7)
                  (local.get $7)
                 )
                 (i32.store offset=8
                  (local.get $7)
                  (local.get $7)
                 )
                 (br $label$break$L317)
                )
               )
              )
             )
             (if
              (i32.and
               (i32.le_u
                (local.tee $0
                 (i32.load
                  (i32.const 34340)
                 )
                )
                (local.get $5)
               )
               (i32.le_u
                (local.get $0)
                (local.tee $1
                 (i32.load offset=8
                  (local.tee $0
                   (local.get $5)
                  )
                 )
                )
               )
              )
              (block
               (i32.store offset=12
                (local.get $1)
                (local.get $7)
               )
               (i32.store offset=8
                (local.get $0)
                (local.get $7)
               )
               (i32.store offset=8
                (local.get $7)
                (local.get $1)
               )
               (i32.store offset=12
                (local.get $7)
                (local.get $5)
               )
               (i32.store offset=24
                (local.get $7)
                (i32.const 0)
               )
              )
              (call $_abort)
             )
            )
           )
           (global.set $STACKTOP
            (local.get $18)
           )
           (return
            (i32.add
             (local.get $11)
             (i32.const 8)
            )
           )
          )
         )
        )
        (local.set $6
         (i32.const 34772)
        )
        (loop $while-in66
         (block $while-out65
          (if
           (i32.le_u
            (local.tee $1
             (i32.load
              (local.get $6)
             )
            )
            (local.get $4)
           )
           (br_if $while-out65
            (i32.gt_u
             (local.tee $9
              (i32.add
               (local.get $1)
               (i32.load offset=4
                (local.get $6)
               )
              )
             )
             (local.get $4)
            )
           )
          )
          (local.set $6
           (i32.load offset=8
            (local.get $6)
           )
          )
          (br $while-in66)
         )
        )
        (i32.store
         (i32.const 34348)
         (local.tee $5
          (i32.add
           (local.tee $1
            (select
             (i32.and
              (i32.sub
               (i32.const 0)
               (local.tee $1
                (i32.add
                 (local.get $0)
                 (i32.const 8)
                )
               )
              )
              (i32.const 7)
             )
             (i32.const 0)
             (i32.and
              (local.get $1)
              (i32.const 7)
             )
            )
           )
           (local.get $0)
          )
         )
        )
        (i32.store
         (i32.const 34336)
         (local.tee $1
          (i32.sub
           (local.tee $3
            (i32.add
             (local.get $2)
             (i32.const -40)
            )
           )
           (local.get $1)
          )
         )
        )
        (i32.store offset=4
         (local.get $5)
         (i32.or
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store offset=4
         (i32.add
          (local.get $0)
          (local.get $3)
         )
         (i32.const 40)
        )
        (i32.store
         (i32.const 34352)
         (i32.load
          (i32.const 34812)
         )
        )
        (i32.store offset=4
         (local.tee $3
          (select
           (local.get $4)
           (local.tee $1
            (i32.add
             (select
              (i32.and
               (i32.sub
                (i32.const 0)
                (local.tee $1
                 (i32.add
                  (local.tee $3
                   (i32.add
                    (local.get $9)
                    (i32.const -47)
                   )
                  )
                  (i32.const 8)
                 )
                )
               )
               (i32.const 7)
              )
              (i32.const 0)
              (i32.and
               (local.get $1)
               (i32.const 7)
              )
             )
             (local.get $3)
            )
           )
           (i32.lt_u
            (local.get $1)
            (i32.add
             (local.get $4)
             (i32.const 16)
            )
           )
          )
         )
         (i32.const 27)
        )
        (i64.store offset=8 align=4
         (local.get $3)
         (i64.load align=4
          (i32.const 34772)
         )
        )
        (i64.store offset=16 align=4
         (local.get $3)
         (i64.load align=4
          (i32.const 34780)
         )
        )
        (i32.store
         (i32.const 34772)
         (local.get $0)
        )
        (i32.store
         (i32.const 34776)
         (local.get $2)
        )
        (i32.store
         (i32.const 34784)
         (i32.const 0)
        )
        (i32.store
         (i32.const 34780)
         (i32.add
          (local.get $3)
          (i32.const 8)
         )
        )
        (local.set $0
         (i32.add
          (local.get $3)
          (i32.const 24)
         )
        )
        (loop $while-in68
         (i32.store
          (local.tee $1
           (i32.add
            (local.get $0)
            (i32.const 4)
           )
          )
          (i32.const 7)
         )
         (if
          (i32.lt_u
           (i32.add
            (local.get $0)
            (i32.const 8)
           )
           (local.get $9)
          )
          (block
           (local.set $0
            (local.get $1)
           )
           (br $while-in68)
          )
         )
        )
        (if
         (i32.ne
          (local.get $3)
          (local.get $4)
         )
         (block
          (i32.store offset=4
           (local.get $3)
           (i32.and
            (i32.load offset=4
             (local.get $3)
            )
            (i32.const -2)
           )
          )
          (i32.store offset=4
           (local.get $4)
           (i32.or
            (local.tee $5
             (i32.sub
              (local.get $3)
              (local.get $4)
             )
            )
            (i32.const 1)
           )
          )
          (i32.store
           (local.get $3)
           (local.get $5)
          )
          (local.set $0
           (i32.shr_u
            (local.get $5)
            (i32.const 3)
           )
          )
          (if
           (i32.lt_u
            (local.get $5)
            (i32.const 256)
           )
           (block
            (local.set $2
             (i32.add
              (i32.shl
               (local.get $0)
               (i32.const 3)
              )
              (i32.const 34364)
             )
            )
            (if
             (i32.and
              (local.tee $1
               (i32.load
                (i32.const 34324)
               )
              )
              (local.tee $0
               (i32.shl
                (i32.const 1)
                (local.get $0)
               )
              )
             )
             (if
              (i32.gt_u
               (i32.load
                (i32.const 34340)
               )
               (local.tee $0
                (i32.load
                 (local.tee $1
                  (i32.add
                   (local.get $2)
                   (i32.const 8)
                  )
                 )
                )
               )
              )
              (call $_abort)
              (block
               (local.set $22
                (local.get $1)
               )
               (local.set $10
                (local.get $0)
               )
              )
             )
             (block
              (i32.store
               (i32.const 34324)
               (i32.or
                (local.get $0)
                (local.get $1)
               )
              )
              (local.set $22
               (i32.add
                (local.get $2)
                (i32.const 8)
               )
              )
              (local.set $10
               (local.get $2)
              )
             )
            )
            (i32.store
             (local.get $22)
             (local.get $4)
            )
            (i32.store offset=12
             (local.get $10)
             (local.get $4)
            )
            (i32.store offset=8
             (local.get $4)
             (local.get $10)
            )
            (i32.store offset=12
             (local.get $4)
             (local.get $2)
            )
            (br $label$break$L294)
           )
          )
          (local.set $2
           (i32.add
            (i32.shl
             (local.tee $3
              (if (result i32)
               (local.tee $0
                (i32.shr_u
                 (local.get $5)
                 (i32.const 8)
                )
               )
               (if (result i32)
                (i32.gt_u
                 (local.get $5)
                 (i32.const 16777215)
                )
                (i32.const 31)
                (block (result i32)
                 (local.set $3
                  (i32.and
                   (i32.shr_u
                    (i32.add
                     (local.tee $0
                      (i32.shl
                       (local.get $0)
                       (local.tee $2
                        (i32.and
                         (i32.shr_u
                          (i32.add
                           (local.get $0)
                           (i32.const 1048320)
                          )
                          (i32.const 16)
                         )
                         (i32.const 8)
                        )
                       )
                      )
                     )
                     (i32.const 520192)
                    )
                    (i32.const 16)
                   )
                   (i32.const 4)
                  )
                 )
                 (i32.or
                  (i32.and
                   (i32.shr_u
                    (local.get $5)
                    (i32.add
                     (local.tee $0
                      (i32.add
                       (i32.sub
                        (i32.const 14)
                        (i32.or
                         (local.tee $0
                          (i32.and
                           (i32.shr_u
                            (i32.add
                             (local.tee $1
                              (i32.shl
                               (local.get $0)
                               (local.get $3)
                              )
                             )
                             (i32.const 245760)
                            )
                            (i32.const 16)
                           )
                           (i32.const 2)
                          )
                         )
                         (i32.or
                          (local.get $2)
                          (local.get $3)
                         )
                        )
                       )
                       (i32.shr_u
                        (i32.shl
                         (local.get $1)
                         (local.get $0)
                        )
                        (i32.const 15)
                       )
                      )
                     )
                     (i32.const 7)
                    )
                   )
                   (i32.const 1)
                  )
                  (i32.shl
                   (local.get $0)
                   (i32.const 1)
                  )
                 )
                )
               )
               (i32.const 0)
              )
             )
             (i32.const 2)
            )
            (i32.const 34628)
           )
          )
          (i32.store offset=28
           (local.get $4)
           (local.get $3)
          )
          (i32.store offset=20
           (local.get $4)
           (i32.const 0)
          )
          (i32.store offset=16
           (local.get $4)
           (i32.const 0)
          )
          (if
           (i32.eqz
            (i32.and
             (local.tee $1
              (i32.load
               (i32.const 34328)
              )
             )
             (local.tee $0
              (i32.shl
               (i32.const 1)
               (local.get $3)
              )
             )
            )
           )
           (block
            (i32.store
             (i32.const 34328)
             (i32.or
              (local.get $0)
              (local.get $1)
             )
            )
            (i32.store
             (local.get $2)
             (local.get $4)
            )
            (i32.store offset=24
             (local.get $4)
             (local.get $2)
            )
            (i32.store offset=12
             (local.get $4)
             (local.get $4)
            )
            (i32.store offset=8
             (local.get $4)
             (local.get $4)
            )
            (br $label$break$L294)
           )
          )
          (if
           (i32.eq
            (i32.and
             (i32.load offset=4
              (local.tee $0
               (i32.load
                (local.get $2)
               )
              )
             )
             (i32.const -8)
            )
            (local.get $5)
           )
           (local.set $8
            (local.get $0)
           )
           (block $label$break$L451
            (local.set $6
             (i32.shl
              (local.get $5)
              (select
               (i32.const 0)
               (i32.sub
                (i32.const 25)
                (i32.shr_u
                 (local.get $3)
                 (i32.const 1)
                )
               )
               (i32.eq
                (local.get $3)
                (i32.const 31)
               )
              )
             )
            )
            (loop $while-in71
             (if
              (local.tee $1
               (i32.load
                (local.tee $2
                 (i32.add
                  (i32.add
                   (local.get $0)
                   (i32.const 16)
                  )
                  (i32.shl
                   (i32.shr_u
                    (local.get $6)
                    (i32.const 31)
                   )
                   (i32.const 2)
                  )
                 )
                )
               )
              )
              (block
               (local.set $6
                (i32.shl
                 (local.get $6)
                 (i32.const 1)
                )
               )
               (if
                (i32.eq
                 (i32.and
                  (i32.load offset=4
                   (local.get $1)
                  )
                  (i32.const -8)
                 )
                 (local.get $5)
                )
                (block
                 (local.set $8
                  (local.get $1)
                 )
                 (br $label$break$L451)
                )
                (block
                 (local.set $0
                  (local.get $1)
                 )
                 (br $while-in71)
                )
               )
              )
             )
            )
            (if
             (i32.gt_u
              (i32.load
               (i32.const 34340)
              )
              (local.get $2)
             )
             (call $_abort)
             (block
              (i32.store
               (local.get $2)
               (local.get $4)
              )
              (i32.store offset=24
               (local.get $4)
               (local.get $0)
              )
              (i32.store offset=12
               (local.get $4)
               (local.get $4)
              )
              (i32.store offset=8
               (local.get $4)
               (local.get $4)
              )
              (br $label$break$L294)
             )
            )
           )
          )
          (if
           (i32.and
            (i32.le_u
             (local.tee $0
              (i32.load
               (i32.const 34340)
              )
             )
             (local.get $8)
            )
            (i32.le_u
             (local.get $0)
             (local.tee $1
              (i32.load offset=8
               (local.tee $0
                (local.get $8)
               )
              )
             )
            )
           )
           (block
            (i32.store offset=12
             (local.get $1)
             (local.get $4)
            )
            (i32.store offset=8
             (local.get $0)
             (local.get $4)
            )
            (i32.store offset=8
             (local.get $4)
             (local.get $1)
            )
            (i32.store offset=12
             (local.get $4)
             (local.get $8)
            )
            (i32.store offset=24
             (local.get $4)
             (i32.const 0)
            )
           )
           (call $_abort)
          )
         )
        )
       )
       (block
        (if
         (i32.or
          (i32.eqz
           (local.tee $1
            (i32.load
             (i32.const 34340)
            )
           )
          )
          (i32.lt_u
           (local.get $0)
           (local.get $1)
          )
         )
         (i32.store
          (i32.const 34340)
          (local.get $0)
         )
        )
        (i32.store
         (i32.const 34772)
         (local.get $0)
        )
        (i32.store
         (i32.const 34776)
         (local.get $2)
        )
        (i32.store
         (i32.const 34784)
         (i32.const 0)
        )
        (i32.store
         (i32.const 34360)
         (i32.load
          (i32.const 34796)
         )
        )
        (i32.store
         (i32.const 34356)
         (i32.const -1)
        )
        (i32.store
         (i32.const 34376)
         (i32.const 34364)
        )
        (i32.store
         (i32.const 34372)
         (i32.const 34364)
        )
        (i32.store
         (i32.const 34384)
         (i32.const 34372)
        )
        (i32.store
         (i32.const 34380)
         (i32.const 34372)
        )
        (i32.store
         (i32.const 34392)
         (i32.const 34380)
        )
        (i32.store
         (i32.const 34388)
         (i32.const 34380)
        )
        (i32.store
         (i32.const 34400)
         (i32.const 34388)
        )
        (i32.store
         (i32.const 34396)
         (i32.const 34388)
        )
        (i32.store
         (i32.const 34408)
         (i32.const 34396)
        )
        (i32.store
         (i32.const 34404)
         (i32.const 34396)
        )
        (i32.store
         (i32.const 34416)
         (i32.const 34404)
        )
        (i32.store
         (i32.const 34412)
         (i32.const 34404)
        )
        (i32.store
         (i32.const 34424)
         (i32.const 34412)
        )
        (i32.store
         (i32.const 34420)
         (i32.const 34412)
        )
        (i32.store
         (i32.const 34432)
         (i32.const 34420)
        )
        (i32.store
         (i32.const 34428)
         (i32.const 34420)
        )
        (i32.store
         (i32.const 34440)
         (i32.const 34428)
        )
        (i32.store
         (i32.const 34436)
         (i32.const 34428)
        )
        (i32.store
         (i32.const 34448)
         (i32.const 34436)
        )
        (i32.store
         (i32.const 34444)
         (i32.const 34436)
        )
        (i32.store
         (i32.const 34456)
         (i32.const 34444)
        )
        (i32.store
         (i32.const 34452)
         (i32.const 34444)
        )
        (i32.store
         (i32.const 34464)
         (i32.const 34452)
        )
        (i32.store
         (i32.const 34460)
         (i32.const 34452)
        )
        (i32.store
         (i32.const 34472)
         (i32.const 34460)
        )
        (i32.store
         (i32.const 34468)
         (i32.const 34460)
        )
        (i32.store
         (i32.const 34480)
         (i32.const 34468)
        )
        (i32.store
         (i32.const 34476)
         (i32.const 34468)
        )
        (i32.store
         (i32.const 34488)
         (i32.const 34476)
        )
        (i32.store
         (i32.const 34484)
         (i32.const 34476)
        )
        (i32.store
         (i32.const 34496)
         (i32.const 34484)
        )
        (i32.store
         (i32.const 34492)
         (i32.const 34484)
        )
        (i32.store
         (i32.const 34504)
         (i32.const 34492)
        )
        (i32.store
         (i32.const 34500)
         (i32.const 34492)
        )
        (i32.store
         (i32.const 34512)
         (i32.const 34500)
        )
        (i32.store
         (i32.const 34508)
         (i32.const 34500)
        )
        (i32.store
         (i32.const 34520)
         (i32.const 34508)
        )
        (i32.store
         (i32.const 34516)
         (i32.const 34508)
        )
        (i32.store
         (i32.const 34528)
         (i32.const 34516)
        )
        (i32.store
         (i32.const 34524)
         (i32.const 34516)
        )
        (i32.store
         (i32.const 34536)
         (i32.const 34524)
        )
        (i32.store
         (i32.const 34532)
         (i32.const 34524)
        )
        (i32.store
         (i32.const 34544)
         (i32.const 34532)
        )
        (i32.store
         (i32.const 34540)
         (i32.const 34532)
        )
        (i32.store
         (i32.const 34552)
         (i32.const 34540)
        )
        (i32.store
         (i32.const 34548)
         (i32.const 34540)
        )
        (i32.store
         (i32.const 34560)
         (i32.const 34548)
        )
        (i32.store
         (i32.const 34556)
         (i32.const 34548)
        )
        (i32.store
         (i32.const 34568)
         (i32.const 34556)
        )
        (i32.store
         (i32.const 34564)
         (i32.const 34556)
        )
        (i32.store
         (i32.const 34576)
         (i32.const 34564)
        )
        (i32.store
         (i32.const 34572)
         (i32.const 34564)
        )
        (i32.store
         (i32.const 34584)
         (i32.const 34572)
        )
        (i32.store
         (i32.const 34580)
         (i32.const 34572)
        )
        (i32.store
         (i32.const 34592)
         (i32.const 34580)
        )
        (i32.store
         (i32.const 34588)
         (i32.const 34580)
        )
        (i32.store
         (i32.const 34600)
         (i32.const 34588)
        )
        (i32.store
         (i32.const 34596)
         (i32.const 34588)
        )
        (i32.store
         (i32.const 34608)
         (i32.const 34596)
        )
        (i32.store
         (i32.const 34604)
         (i32.const 34596)
        )
        (i32.store
         (i32.const 34616)
         (i32.const 34604)
        )
        (i32.store
         (i32.const 34612)
         (i32.const 34604)
        )
        (i32.store
         (i32.const 34624)
         (i32.const 34612)
        )
        (i32.store
         (i32.const 34620)
         (i32.const 34612)
        )
        (i32.store
         (i32.const 34348)
         (local.tee $3
          (i32.add
           (local.tee $1
            (select
             (i32.and
              (i32.sub
               (i32.const 0)
               (local.tee $1
                (i32.add
                 (local.get $0)
                 (i32.const 8)
                )
               )
              )
              (i32.const 7)
             )
             (i32.const 0)
             (i32.and
              (local.get $1)
              (i32.const 7)
             )
            )
           )
           (local.get $0)
          )
         )
        )
        (i32.store
         (i32.const 34336)
         (local.tee $1
          (i32.sub
           (local.tee $2
            (i32.add
             (local.get $2)
             (i32.const -40)
            )
           )
           (local.get $1)
          )
         )
        )
        (i32.store offset=4
         (local.get $3)
         (i32.or
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.store offset=4
         (i32.add
          (local.get $0)
          (local.get $2)
         )
         (i32.const 40)
        )
        (i32.store
         (i32.const 34352)
         (i32.load
          (i32.const 34812)
         )
        )
       )
      )
      (if
       (i32.gt_u
        (local.tee $0
         (i32.load
          (i32.const 34336)
         )
        )
        (local.get $12)
       )
       (block
        (i32.store
         (i32.const 34336)
         (local.tee $2
          (i32.sub
           (local.get $0)
           (local.get $12)
          )
         )
        )
        (br $folding-inner0)
       )
      )
     )
     (i32.store
      (i32.const 34304)
      (i32.const 48)
     )
     (br $folding-inner2)
    )
    (i32.store
     (i32.const 34348)
     (local.tee $1
      (i32.add
       (local.tee $0
        (i32.load
         (i32.const 34348)
        )
       )
       (local.get $12)
      )
     )
    )
    (i32.store offset=4
     (local.get $1)
     (i32.or
      (local.get $2)
      (i32.const 1)
     )
    )
    (i32.store offset=4
     (local.get $0)
     (i32.or
      (local.get $12)
      (i32.const 3)
     )
    )
   )
   (global.set $STACKTOP
    (local.get $18)
   )
   (return
    (i32.add
     (local.get $0)
     (i32.const 8)
    )
   )
  )
  (global.set $STACKTOP
   (local.get $18)
  )
  (i32.const 0)
 )
 (func $_free (; 643 ;) (; has Stack IR ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return)
  )
  (if
   (i32.lt_u
    (local.tee $5
     (i32.add
      (local.get $0)
      (i32.const -8)
     )
    )
    (local.tee $11
     (i32.load
      (i32.const 34340)
     )
    )
   )
   (call $_abort)
  )
  (if
   (i32.eq
    (local.tee $12
     (i32.and
      (local.tee $0
       (i32.load
        (i32.add
         (local.get $0)
         (i32.const -4)
        )
       )
      )
      (i32.const 3)
     )
    )
    (i32.const 1)
   )
   (call $_abort)
  )
  (local.set $7
   (i32.add
    (local.get $5)
    (local.tee $2
     (i32.and
      (local.get $0)
      (i32.const -8)
     )
    )
   )
  )
  (if
   (i32.and
    (local.get $0)
    (i32.const 1)
   )
   (block
    (local.set $3
     (local.tee $4
      (local.get $5)
     )
    )
    (local.set $1
     (local.get $2)
    )
   )
   (block $label$break$L10
    (local.set $10
     (i32.load
      (local.get $5)
     )
    )
    (if
     (i32.eqz
      (local.get $12)
     )
     (return)
    )
    (if
     (i32.lt_u
      (local.tee $0
       (i32.sub
        (local.get $5)
        (local.get $10)
       )
      )
      (local.get $11)
     )
     (call $_abort)
    )
    (local.set $5
     (i32.add
      (local.get $2)
      (local.get $10)
     )
    )
    (if
     (i32.eq
      (i32.load
       (i32.const 34344)
      )
      (local.get $0)
     )
     (block
      (if
       (i32.ne
        (i32.and
         (local.tee $1
          (i32.load offset=4
           (local.get $7)
          )
         )
         (i32.const 3)
        )
        (i32.const 3)
       )
       (block
        (local.set $4
         (local.get $0)
        )
        (local.set $3
         (local.get $0)
        )
        (local.set $1
         (local.get $5)
        )
        (br $label$break$L10)
       )
      )
      (i32.store
       (i32.const 34332)
       (local.get $5)
      )
      (i32.store offset=4
       (local.get $7)
       (i32.and
        (local.get $1)
        (i32.const -2)
       )
      )
      (i32.store offset=4
       (local.get $0)
       (i32.or
        (local.get $5)
        (i32.const 1)
       )
      )
      (i32.store
       (i32.add
        (local.get $0)
        (local.get $5)
       )
       (local.get $5)
      )
      (return)
     )
    )
    (local.set $2
     (i32.shr_u
      (local.get $10)
      (i32.const 3)
     )
    )
    (if
     (i32.lt_u
      (local.get $10)
      (i32.const 256)
     )
     (block
      (local.set $4
       (i32.load offset=12
        (local.get $0)
       )
      )
      (if
       (i32.ne
        (local.tee $3
         (i32.load offset=8
          (local.get $0)
         )
        )
        (local.tee $1
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 3)
          )
          (i32.const 34364)
         )
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $11)
          (local.get $3)
         )
         (call $_abort)
        )
        (if
         (i32.ne
          (local.get $0)
          (i32.load offset=12
           (local.get $3)
          )
         )
         (call $_abort)
        )
       )
      )
      (if
       (i32.eq
        (local.get $3)
        (local.get $4)
       )
       (block
        (i32.store
         (i32.const 34324)
         (i32.and
          (i32.load
           (i32.const 34324)
          )
          (i32.xor
           (i32.shl
            (i32.const 1)
            (local.get $2)
           )
           (i32.const -1)
          )
         )
        )
        (local.set $4
         (local.get $0)
        )
        (local.set $3
         (local.get $0)
        )
        (local.set $1
         (local.get $5)
        )
        (br $label$break$L10)
       )
      )
      (if
       (i32.eq
        (local.get $1)
        (local.get $4)
       )
       (local.set $6
        (i32.add
         (local.get $4)
         (i32.const 8)
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $11)
          (local.get $4)
         )
         (call $_abort)
        )
        (if
         (i32.eq
          (i32.load
           (local.tee $1
            (i32.add
             (local.get $4)
             (i32.const 8)
            )
           )
          )
          (local.get $0)
         )
         (local.set $6
          (local.get $1)
         )
         (call $_abort)
        )
       )
      )
      (i32.store offset=12
       (local.get $3)
       (local.get $4)
      )
      (i32.store
       (local.get $6)
       (local.get $3)
      )
      (local.set $4
       (local.get $0)
      )
      (local.set $3
       (local.get $0)
      )
      (local.set $1
       (local.get $5)
      )
      (br $label$break$L10)
     )
    )
    (local.set $13
     (i32.load offset=24
      (local.get $0)
     )
    )
    (if
     (i32.eq
      (local.tee $2
       (i32.load offset=12
        (local.get $0)
       )
      )
      (local.get $0)
     )
     (block $do-once
      (if
       (local.tee $2
        (i32.load
         (local.tee $10
          (i32.add
           (local.tee $6
            (i32.add
             (local.get $0)
             (i32.const 16)
            )
           )
           (i32.const 4)
          )
         )
        )
       )
       (local.set $6
        (local.get $10)
       )
       (br_if $do-once
        (i32.eqz
         (local.tee $2
          (i32.load
           (local.get $6)
          )
         )
        )
       )
      )
      (loop $while-in
       (block $while-out
        (if
         (i32.eqz
          (local.tee $12
           (i32.load
            (local.tee $10
             (i32.add
              (local.get $2)
              (i32.const 20)
             )
            )
           )
          )
         )
         (br_if $while-out
          (i32.eqz
           (local.tee $12
            (i32.load
             (local.tee $10
              (i32.add
               (local.get $2)
               (i32.const 16)
              )
             )
            )
           )
          )
         )
        )
        (local.set $6
         (local.get $10)
        )
        (local.set $2
         (local.get $12)
        )
        (br $while-in)
       )
      )
      (if
       (i32.gt_u
        (local.get $11)
        (local.get $6)
       )
       (call $_abort)
       (block
        (i32.store
         (local.get $6)
         (i32.const 0)
        )
        (local.set $8
         (local.get $2)
        )
       )
      )
     )
     (block
      (if
       (i32.gt_u
        (local.get $11)
        (local.tee $6
         (i32.load offset=8
          (local.get $0)
         )
        )
       )
       (call $_abort)
      )
      (if
       (i32.ne
        (local.get $0)
        (i32.load offset=12
         (local.get $6)
        )
       )
       (call $_abort)
      )
      (if
       (i32.eq
        (i32.load offset=8
         (local.get $2)
        )
        (local.get $0)
       )
       (block
        (i32.store offset=12
         (local.get $6)
         (local.get $2)
        )
        (i32.store offset=8
         (local.get $2)
         (local.get $6)
        )
        (local.set $8
         (local.get $2)
        )
       )
       (call $_abort)
      )
     )
    )
    (if
     (local.get $13)
     (block
      (if
       (i32.eq
        (i32.load
         (local.tee $6
          (i32.add
           (i32.shl
            (local.tee $2
             (i32.load offset=28
              (local.get $0)
             )
            )
            (i32.const 2)
           )
           (i32.const 34628)
          )
         )
        )
        (local.get $0)
       )
       (block
        (i32.store
         (local.get $6)
         (local.get $8)
        )
        (if
         (i32.eqz
          (local.get $8)
         )
         (block
          (i32.store
           (i32.const 34328)
           (i32.and
            (i32.load
             (i32.const 34328)
            )
            (i32.xor
             (i32.shl
              (i32.const 1)
              (local.get $2)
             )
             (i32.const -1)
            )
           )
          )
          (local.set $4
           (local.get $0)
          )
          (local.set $3
           (local.get $0)
          )
          (local.set $1
           (local.get $5)
          )
          (br $label$break$L10)
         )
        )
       )
       (if
        (i32.gt_u
         (i32.load
          (i32.const 34340)
         )
         (local.get $13)
        )
        (call $_abort)
        (block
         (i32.store
          (select
           (local.tee $2
            (i32.add
             (local.get $13)
             (i32.const 16)
            )
           )
           (i32.add
            (local.get $13)
            (i32.const 20)
           )
           (i32.eq
            (i32.load
             (local.get $2)
            )
            (local.get $0)
           )
          )
          (local.get $8)
         )
         (if
          (i32.eqz
           (local.get $8)
          )
          (block
           (local.set $4
            (local.get $0)
           )
           (local.set $3
            (local.get $0)
           )
           (local.set $1
            (local.get $5)
           )
           (br $label$break$L10)
          )
         )
        )
       )
      )
      (if
       (i32.gt_u
        (local.tee $6
         (i32.load
          (i32.const 34340)
         )
        )
        (local.get $8)
       )
       (call $_abort)
      )
      (i32.store offset=24
       (local.get $8)
       (local.get $13)
      )
      (if
       (local.tee $2
        (i32.load offset=16
         (local.get $0)
        )
       )
       (if
        (i32.gt_u
         (local.get $6)
         (local.get $2)
        )
        (call $_abort)
        (block
         (i32.store offset=16
          (local.get $8)
          (local.get $2)
         )
         (i32.store offset=24
          (local.get $2)
          (local.get $8)
         )
        )
       )
      )
      (if
       (local.tee $2
        (i32.load offset=20
         (local.get $0)
        )
       )
       (if
        (i32.gt_u
         (i32.load
          (i32.const 34340)
         )
         (local.get $2)
        )
        (call $_abort)
        (block
         (i32.store offset=20
          (local.get $8)
          (local.get $2)
         )
         (i32.store offset=24
          (local.get $2)
          (local.get $8)
         )
         (local.set $4
          (local.get $0)
         )
         (local.set $3
          (local.get $0)
         )
         (local.set $1
          (local.get $5)
         )
        )
       )
       (block
        (local.set $4
         (local.get $0)
        )
        (local.set $3
         (local.get $0)
        )
        (local.set $1
         (local.get $5)
        )
       )
      )
     )
     (block
      (local.set $4
       (local.get $0)
      )
      (local.set $3
       (local.get $0)
      )
      (local.set $1
       (local.get $5)
      )
     )
    )
   )
  )
  (if
   (i32.ge_u
    (local.get $4)
    (local.get $7)
   )
   (call $_abort)
  )
  (if
   (i32.eqz
    (i32.and
     (local.tee $0
      (i32.load offset=4
       (local.get $7)
      )
     )
     (i32.const 1)
    )
   )
   (call $_abort)
  )
  (local.set $1
   (i32.shr_u
    (local.tee $4
     (if (result i32)
      (i32.and
       (local.get $0)
       (i32.const 2)
      )
      (block (result i32)
       (i32.store offset=4
        (local.get $7)
        (i32.and
         (local.get $0)
         (i32.const -2)
        )
       )
       (i32.store offset=4
        (local.get $3)
        (i32.or
         (local.get $1)
         (i32.const 1)
        )
       )
       (i32.store
        (i32.add
         (local.get $1)
         (local.get $4)
        )
        (local.get $1)
       )
       (local.get $1)
      )
      (block (result i32)
       (if
        (i32.eq
         (i32.load
          (i32.const 34348)
         )
         (local.get $7)
        )
        (block
         (i32.store
          (i32.const 34336)
          (local.tee $0
           (i32.add
            (i32.load
             (i32.const 34336)
            )
            (local.get $1)
           )
          )
         )
         (i32.store
          (i32.const 34348)
          (local.get $3)
         )
         (i32.store offset=4
          (local.get $3)
          (i32.or
           (local.get $0)
           (i32.const 1)
          )
         )
         (if
          (i32.ne
           (local.get $3)
           (i32.load
            (i32.const 34344)
           )
          )
          (return)
         )
         (i32.store
          (i32.const 34344)
          (i32.const 0)
         )
         (i32.store
          (i32.const 34332)
          (i32.const 0)
         )
         (return)
        )
       )
       (if
        (i32.eq
         (i32.load
          (i32.const 34344)
         )
         (local.get $7)
        )
        (block
         (i32.store
          (i32.const 34332)
          (local.tee $0
           (i32.add
            (i32.load
             (i32.const 34332)
            )
            (local.get $1)
           )
          )
         )
         (i32.store
          (i32.const 34344)
          (local.get $4)
         )
         (i32.store offset=4
          (local.get $3)
          (i32.or
           (local.get $0)
           (i32.const 1)
          )
         )
         (i32.store
          (i32.add
           (local.get $0)
           (local.get $4)
          )
          (local.get $0)
         )
         (return)
        )
       )
       (local.set $5
        (i32.add
         (i32.and
          (local.get $0)
          (i32.const -8)
         )
         (local.get $1)
        )
       )
       (local.set $6
        (i32.shr_u
         (local.get $0)
         (i32.const 3)
        )
       )
       (block $label$break$L111
        (if
         (i32.lt_u
          (local.get $0)
          (i32.const 256)
         )
         (block
          (local.set $1
           (i32.load offset=12
            (local.get $7)
           )
          )
          (if
           (i32.ne
            (local.tee $2
             (i32.load offset=8
              (local.get $7)
             )
            )
            (local.tee $0
             (i32.add
              (i32.shl
               (local.get $6)
               (i32.const 3)
              )
              (i32.const 34364)
             )
            )
           )
           (block
            (if
             (i32.gt_u
              (i32.load
               (i32.const 34340)
              )
              (local.get $2)
             )
             (call $_abort)
            )
            (if
             (i32.ne
              (local.get $7)
              (i32.load offset=12
               (local.get $2)
              )
             )
             (call $_abort)
            )
           )
          )
          (if
           (i32.eq
            (local.get $1)
            (local.get $2)
           )
           (block
            (i32.store
             (i32.const 34324)
             (i32.and
              (i32.load
               (i32.const 34324)
              )
              (i32.xor
               (i32.shl
                (i32.const 1)
                (local.get $6)
               )
               (i32.const -1)
              )
             )
            )
            (br $label$break$L111)
           )
          )
          (if
           (i32.eq
            (local.get $0)
            (local.get $1)
           )
           (local.set $16
            (i32.add
             (local.get $1)
             (i32.const 8)
            )
           )
           (block
            (if
             (i32.gt_u
              (i32.load
               (i32.const 34340)
              )
              (local.get $1)
             )
             (call $_abort)
            )
            (if
             (i32.eq
              (i32.load
               (local.tee $0
                (i32.add
                 (local.get $1)
                 (i32.const 8)
                )
               )
              )
              (local.get $7)
             )
             (local.set $16
              (local.get $0)
             )
             (call $_abort)
            )
           )
          )
          (i32.store offset=12
           (local.get $2)
           (local.get $1)
          )
          (i32.store
           (local.get $16)
           (local.get $2)
          )
         )
         (block
          (local.set $8
           (i32.load offset=24
            (local.get $7)
           )
          )
          (if
           (i32.eq
            (local.tee $0
             (i32.load offset=12
              (local.get $7)
             )
            )
            (local.get $7)
           )
           (block $do-once6
            (if
             (local.tee $0
              (i32.load
               (local.tee $2
                (i32.add
                 (local.tee $1
                  (i32.add
                   (local.get $7)
                   (i32.const 16)
                  )
                 )
                 (i32.const 4)
                )
               )
              )
             )
             (local.set $1
              (local.get $2)
             )
             (br_if $do-once6
              (i32.eqz
               (local.tee $0
                (i32.load
                 (local.get $1)
                )
               )
              )
             )
            )
            (loop $while-in9
             (block $while-out8
              (if
               (i32.eqz
                (local.tee $6
                 (i32.load
                  (local.tee $2
                   (i32.add
                    (local.get $0)
                    (i32.const 20)
                   )
                  )
                 )
                )
               )
               (br_if $while-out8
                (i32.eqz
                 (local.tee $6
                  (i32.load
                   (local.tee $2
                    (i32.add
                     (local.get $0)
                     (i32.const 16)
                    )
                   )
                  )
                 )
                )
               )
              )
              (local.set $1
               (local.get $2)
              )
              (local.set $0
               (local.get $6)
              )
              (br $while-in9)
             )
            )
            (if
             (i32.gt_u
              (i32.load
               (i32.const 34340)
              )
              (local.get $1)
             )
             (call $_abort)
             (block
              (i32.store
               (local.get $1)
               (i32.const 0)
              )
              (local.set $9
               (local.get $0)
              )
             )
            )
           )
           (block
            (if
             (i32.gt_u
              (i32.load
               (i32.const 34340)
              )
              (local.tee $1
               (i32.load offset=8
                (local.get $7)
               )
              )
             )
             (call $_abort)
            )
            (if
             (i32.ne
              (local.get $7)
              (i32.load offset=12
               (local.get $1)
              )
             )
             (call $_abort)
            )
            (if
             (i32.eq
              (i32.load offset=8
               (local.get $0)
              )
              (local.get $7)
             )
             (block
              (i32.store offset=12
               (local.get $1)
               (local.get $0)
              )
              (i32.store offset=8
               (local.get $0)
               (local.get $1)
              )
              (local.set $9
               (local.get $0)
              )
             )
             (call $_abort)
            )
           )
          )
          (if
           (local.get $8)
           (block
            (if
             (i32.eq
              (i32.load
               (local.tee $1
                (i32.add
                 (i32.shl
                  (local.tee $0
                   (i32.load offset=28
                    (local.get $7)
                   )
                  )
                  (i32.const 2)
                 )
                 (i32.const 34628)
                )
               )
              )
              (local.get $7)
             )
             (block
              (i32.store
               (local.get $1)
               (local.get $9)
              )
              (if
               (i32.eqz
                (local.get $9)
               )
               (block
                (i32.store
                 (i32.const 34328)
                 (i32.and
                  (i32.load
                   (i32.const 34328)
                  )
                  (i32.xor
                   (i32.shl
                    (i32.const 1)
                    (local.get $0)
                   )
                   (i32.const -1)
                  )
                 )
                )
                (br $label$break$L111)
               )
              )
             )
             (if
              (i32.gt_u
               (i32.load
                (i32.const 34340)
               )
               (local.get $8)
              )
              (call $_abort)
              (block
               (i32.store
                (select
                 (local.tee $0
                  (i32.add
                   (local.get $8)
                   (i32.const 16)
                  )
                 )
                 (i32.add
                  (local.get $8)
                  (i32.const 20)
                 )
                 (i32.eq
                  (i32.load
                   (local.get $0)
                  )
                  (local.get $7)
                 )
                )
                (local.get $9)
               )
               (br_if $label$break$L111
                (i32.eqz
                 (local.get $9)
                )
               )
              )
             )
            )
            (if
             (i32.gt_u
              (local.tee $1
               (i32.load
                (i32.const 34340)
               )
              )
              (local.get $9)
             )
             (call $_abort)
            )
            (i32.store offset=24
             (local.get $9)
             (local.get $8)
            )
            (if
             (local.tee $0
              (i32.load offset=16
               (local.get $7)
              )
             )
             (if
              (i32.gt_u
               (local.get $1)
               (local.get $0)
              )
              (call $_abort)
              (block
               (i32.store offset=16
                (local.get $9)
                (local.get $0)
               )
               (i32.store offset=24
                (local.get $0)
                (local.get $9)
               )
              )
             )
            )
            (if
             (local.tee $0
              (i32.load offset=20
               (local.get $7)
              )
             )
             (if
              (i32.gt_u
               (i32.load
                (i32.const 34340)
               )
               (local.get $0)
              )
              (call $_abort)
              (block
               (i32.store offset=20
                (local.get $9)
                (local.get $0)
               )
               (i32.store offset=24
                (local.get $0)
                (local.get $9)
               )
              )
             )
            )
           )
          )
         )
        )
       )
       (i32.store offset=4
        (local.get $3)
        (i32.or
         (local.get $5)
         (i32.const 1)
        )
       )
       (i32.store
        (i32.add
         (local.get $4)
         (local.get $5)
        )
        (local.get $5)
       )
       (if (result i32)
        (i32.eq
         (i32.load
          (i32.const 34344)
         )
         (local.get $3)
        )
        (block
         (i32.store
          (i32.const 34332)
          (local.get $5)
         )
         (return)
        )
        (local.get $5)
       )
      )
     )
    )
    (i32.const 3)
   )
  )
  (if
   (i32.lt_u
    (local.get $4)
    (i32.const 256)
   )
   (block
    (local.set $0
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 3)
      )
      (i32.const 34364)
     )
    )
    (if
     (i32.and
      (local.tee $4
       (i32.load
        (i32.const 34324)
       )
      )
      (local.tee $1
       (i32.shl
        (i32.const 1)
        (local.get $1)
       )
      )
     )
     (if
      (i32.gt_u
       (i32.load
        (i32.const 34340)
       )
       (local.tee $4
        (i32.load
         (local.tee $1
          (i32.add
           (local.get $0)
           (i32.const 8)
          )
         )
        )
       )
      )
      (call $_abort)
      (block
       (local.set $17
        (local.get $1)
       )
       (local.set $15
        (local.get $4)
       )
      )
     )
     (block
      (i32.store
       (i32.const 34324)
       (i32.or
        (local.get $1)
        (local.get $4)
       )
      )
      (local.set $17
       (i32.add
        (local.get $0)
        (i32.const 8)
       )
      )
      (local.set $15
       (local.get $0)
      )
     )
    )
    (i32.store
     (local.get $17)
     (local.get $3)
    )
    (i32.store offset=12
     (local.get $15)
     (local.get $3)
    )
    (i32.store offset=8
     (local.get $3)
     (local.get $15)
    )
    (i32.store offset=12
     (local.get $3)
     (local.get $0)
    )
    (return)
   )
  )
  (local.set $0
   (i32.add
    (i32.shl
     (local.tee $1
      (if (result i32)
       (local.tee $0
        (i32.shr_u
         (local.get $4)
         (i32.const 8)
        )
       )
       (if (result i32)
        (i32.gt_u
         (local.get $4)
         (i32.const 16777215)
        )
        (i32.const 31)
        (block (result i32)
         (local.set $0
          (i32.and
           (i32.shr_u
            (i32.add
             (local.tee $1
              (i32.shl
               (local.get $0)
               (local.tee $5
                (i32.and
                 (i32.shr_u
                  (i32.add
                   (local.get $0)
                   (i32.const 1048320)
                  )
                  (i32.const 16)
                 )
                 (i32.const 8)
                )
               )
              )
             )
             (i32.const 520192)
            )
            (i32.const 16)
           )
           (i32.const 4)
          )
         )
         (local.set $1
          (i32.and
           (i32.shr_u
            (i32.add
             (local.tee $2
              (i32.shl
               (local.get $1)
               (local.get $0)
              )
             )
             (i32.const 245760)
            )
            (i32.const 16)
           )
           (i32.const 2)
          )
         )
         (i32.or
          (i32.and
           (i32.shr_u
            (local.get $4)
            (i32.add
             (local.tee $0
              (i32.add
               (i32.sub
                (i32.const 14)
                (i32.or
                 (i32.or
                  (local.get $0)
                  (local.get $5)
                 )
                 (local.get $1)
                )
               )
               (i32.shr_u
                (i32.shl
                 (local.get $2)
                 (local.get $1)
                )
                (i32.const 15)
               )
              )
             )
             (i32.const 7)
            )
           )
           (i32.const 1)
          )
          (i32.shl
           (local.get $0)
           (i32.const 1)
          )
         )
        )
       )
       (i32.const 0)
      )
     )
     (i32.const 2)
    )
    (i32.const 34628)
   )
  )
  (i32.store offset=28
   (local.get $3)
   (local.get $1)
  )
  (i32.store offset=20
   (local.get $3)
   (i32.const 0)
  )
  (i32.store offset=16
   (local.get $3)
   (i32.const 0)
  )
  (if
   (i32.and
    (local.tee $5
     (i32.load
      (i32.const 34328)
     )
    )
    (local.tee $2
     (i32.shl
      (i32.const 1)
      (local.get $1)
     )
    )
   )
   (block $label$break$L197
    (if
     (i32.eq
      (i32.and
       (i32.load offset=4
        (local.tee $0
         (i32.load
          (local.get $0)
         )
        )
       )
       (i32.const -8)
      )
      (local.get $4)
     )
     (local.set $14
      (local.get $0)
     )
     (block $label$break$L200
      (local.set $5
       (i32.shl
        (local.get $4)
        (select
         (i32.const 0)
         (i32.sub
          (i32.const 25)
          (i32.shr_u
           (local.get $1)
           (i32.const 1)
          )
         )
         (i32.eq
          (local.get $1)
          (i32.const 31)
         )
        )
       )
      )
      (loop $while-in17
       (if
        (local.tee $1
         (i32.load
          (local.tee $2
           (i32.add
            (i32.add
             (local.get $0)
             (i32.const 16)
            )
            (i32.shl
             (i32.shr_u
              (local.get $5)
              (i32.const 31)
             )
             (i32.const 2)
            )
           )
          )
         )
        )
        (block
         (local.set $5
          (i32.shl
           (local.get $5)
           (i32.const 1)
          )
         )
         (if
          (i32.eq
           (i32.and
            (i32.load offset=4
             (local.get $1)
            )
            (i32.const -8)
           )
           (local.get $4)
          )
          (block
           (local.set $14
            (local.get $1)
           )
           (br $label$break$L200)
          )
          (block
           (local.set $0
            (local.get $1)
           )
           (br $while-in17)
          )
         )
        )
       )
      )
      (if
       (i32.gt_u
        (i32.load
         (i32.const 34340)
        )
        (local.get $2)
       )
       (call $_abort)
       (block
        (i32.store
         (local.get $2)
         (local.get $3)
        )
        (i32.store offset=24
         (local.get $3)
         (local.get $0)
        )
        (i32.store offset=12
         (local.get $3)
         (local.get $3)
        )
        (i32.store offset=8
         (local.get $3)
         (local.get $3)
        )
        (br $label$break$L197)
       )
      )
     )
    )
    (if
     (i32.and
      (i32.le_u
       (local.tee $0
        (i32.load
         (i32.const 34340)
        )
       )
       (local.get $14)
      )
      (i32.le_u
       (local.get $0)
       (local.tee $1
        (i32.load offset=8
         (local.tee $0
          (local.get $14)
         )
        )
       )
      )
     )
     (block
      (i32.store offset=12
       (local.get $1)
       (local.get $3)
      )
      (i32.store offset=8
       (local.get $0)
       (local.get $3)
      )
      (i32.store offset=8
       (local.get $3)
       (local.get $1)
      )
      (i32.store offset=12
       (local.get $3)
       (local.get $14)
      )
      (i32.store offset=24
       (local.get $3)
       (i32.const 0)
      )
     )
     (call $_abort)
    )
   )
   (block
    (i32.store
     (i32.const 34328)
     (i32.or
      (local.get $2)
      (local.get $5)
     )
    )
    (i32.store
     (local.get $0)
     (local.get $3)
    )
    (i32.store offset=24
     (local.get $3)
     (local.get $0)
    )
    (i32.store offset=12
     (local.get $3)
     (local.get $3)
    )
    (i32.store offset=8
     (local.get $3)
     (local.get $3)
    )
   )
  )
  (i32.store
   (i32.const 34356)
   (local.tee $0
    (i32.add
     (i32.load
      (i32.const 34356)
     )
     (i32.const -1)
    )
   )
  )
  (if
   (local.get $0)
   (return)
  )
  (local.set $0
   (i32.const 34780)
  )
  (loop $while-in19
   (local.set $0
    (i32.add
     (local.tee $1
      (i32.load
       (local.get $0)
      )
     )
     (i32.const 8)
    )
   )
   (br_if $while-in19
    (local.get $1)
   )
  )
  (i32.store
   (i32.const 34356)
   (i32.const -1)
  )
 )
 (func $_calloc (; 644 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (if
   (local.get $0)
   (block
    (local.set $2
     (i32.mul
      (local.get $0)
      (local.get $1)
     )
    )
    (if
     (i32.gt_u
      (i32.or
       (local.get $0)
       (local.get $1)
      )
      (i32.const 65535)
     )
     (local.set $2
      (select
       (local.get $2)
       (i32.const -1)
       (i32.eq
        (local.get $1)
        (i32.div_u
         (local.get $2)
         (local.get $0)
        )
       )
      )
     )
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $0
     (call $_malloc
      (local.get $2)
     )
    )
   )
   (return
    (local.get $0)
   )
  )
  (if
   (i32.eqz
    (i32.and
     (i32.load
      (i32.add
       (local.get $0)
       (i32.const -4)
      )
     )
     (i32.const 3)
    )
   )
   (return
    (local.get $0)
   )
  )
  (drop
   (call $_memset
    (local.get $0)
    (i32.const 0)
    (local.get $2)
   )
  )
  (local.get $0)
 )
 (func $_realloc (; 645 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (if
   (i32.eqz
    (local.get $0)
   )
   (return
    (call $_malloc
     (local.get $1)
    )
   )
  )
  (if
   (i32.gt_u
    (local.get $1)
    (i32.const -65)
   )
   (block
    (i32.store
     (i32.const 34304)
     (i32.const 48)
    )
    (return
     (i32.const 0)
    )
   )
  )
  (if
   (local.tee $2
    (call $_try_realloc_chunk
     (i32.add
      (local.get $0)
      (i32.const -8)
     )
     (select
      (i32.const 16)
      (i32.and
       (i32.add
        (local.get $1)
        (i32.const 11)
       )
       (i32.const -8)
      )
      (i32.lt_u
       (local.get $1)
       (i32.const 11)
      )
     )
    )
   )
   (return
    (i32.add
     (local.get $2)
     (i32.const 8)
    )
   )
  )
  (if
   (i32.eqz
    (local.tee $2
     (call $_malloc
      (local.get $1)
     )
    )
   )
   (return
    (i32.const 0)
   )
  )
  (drop
   (call $_memcpy
    (local.get $2)
    (local.get $0)
    (select
     (local.tee $3
      (i32.sub
       (i32.and
        (local.tee $3
         (i32.load
          (i32.add
           (local.get $0)
           (i32.const -4)
          )
         )
        )
        (i32.const -8)
       )
       (select
        (i32.const 4)
        (i32.const 8)
        (i32.and
         (local.get $3)
         (i32.const 3)
        )
       )
      )
     )
     (local.get $1)
     (i32.lt_u
      (local.get $3)
      (local.get $1)
     )
    )
   )
  )
  (call $_free
   (local.get $0)
  )
  (local.get $2)
 )
 (func $_try_realloc_chunk (; 646 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (if
   (i32.eqz
    (i32.and
     (i32.gt_u
      (local.tee $4
       (i32.add
        (local.get $0)
        (local.tee $2
         (i32.and
          (local.tee $7
           (i32.load offset=4
            (local.get $0)
           )
          )
          (i32.const -8)
         )
        )
       )
      )
      (local.get $0)
     )
     (i32.and
      (i32.ne
       (local.tee $8
        (i32.and
         (local.get $7)
         (i32.const 3)
        )
       )
       (i32.const 1)
      )
      (i32.le_u
       (local.tee $10
        (i32.load
         (i32.const 34340)
        )
       )
       (local.get $0)
      )
     )
    )
   )
   (call $_abort)
  )
  (if
   (i32.eqz
    (i32.and
     (local.tee $6
      (i32.load offset=4
       (local.get $4)
      )
     )
     (i32.const 1)
    )
   )
   (call $_abort)
  )
  (block $folding-inner0
   (if
    (i32.eqz
     (local.get $8)
    )
    (block
     (br_if $folding-inner0
      (i32.lt_u
       (local.get $1)
       (i32.const 256)
      )
     )
     (if
      (i32.ge_u
       (local.get $2)
       (i32.add
        (local.get $1)
        (i32.const 4)
       )
      )
      (if
       (i32.le_u
        (i32.sub
         (local.get $2)
         (local.get $1)
        )
        (i32.shl
         (i32.load
          (i32.const 34804)
         )
         (i32.const 1)
        )
       )
       (return
        (local.get $0)
       )
      )
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.ge_u
     (local.get $2)
     (local.get $1)
    )
    (block
     (if
      (i32.le_u
       (local.tee $3
        (i32.sub
         (local.get $2)
         (local.get $1)
        )
       )
       (i32.const 15)
      )
      (return
       (local.get $0)
      )
     )
     (i32.store offset=4
      (local.get $0)
      (i32.or
       (i32.or
        (local.get $1)
        (i32.and
         (local.get $7)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
     )
     (i32.store offset=4
      (local.tee $1
       (i32.add
        (local.get $0)
        (local.get $1)
       )
      )
      (i32.or
       (local.get $3)
       (i32.const 3)
      )
     )
     (i32.store offset=4
      (local.get $4)
      (i32.or
       (i32.load offset=4
        (local.get $4)
       )
       (i32.const 1)
      )
     )
     (call $_dispose_chunk
      (local.get $1)
      (local.get $3)
     )
     (return
      (local.get $0)
     )
    )
   )
   (if
    (i32.eq
     (i32.load
      (i32.const 34348)
     )
     (local.get $4)
    )
    (block
     (br_if $folding-inner0
      (i32.le_u
       (local.tee $3
        (i32.add
         (i32.load
          (i32.const 34336)
         )
         (local.get $2)
        )
       )
       (local.get $1)
      )
     )
     (i32.store offset=4
      (local.get $0)
      (i32.or
       (i32.or
        (local.get $1)
        (i32.and
         (local.get $7)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
     )
     (i32.store offset=4
      (local.tee $2
       (i32.add
        (local.get $0)
        (local.get $1)
       )
      )
      (i32.or
       (local.tee $1
        (i32.sub
         (local.get $3)
         (local.get $1)
        )
       )
       (i32.const 1)
      )
     )
     (i32.store
      (i32.const 34348)
      (local.get $2)
     )
     (i32.store
      (i32.const 34336)
      (local.get $1)
     )
     (return
      (local.get $0)
     )
    )
   )
   (if
    (i32.eq
     (i32.load
      (i32.const 34344)
     )
     (local.get $4)
    )
    (block
     (br_if $folding-inner0
      (i32.lt_u
       (local.tee $2
        (i32.add
         (i32.load
          (i32.const 34332)
         )
         (local.get $2)
        )
       )
       (local.get $1)
      )
     )
     (if
      (i32.gt_u
       (local.tee $3
        (i32.sub
         (local.get $2)
         (local.get $1)
        )
       )
       (i32.const 15)
      )
      (block
       (i32.store offset=4
        (local.get $0)
        (i32.or
         (i32.or
          (local.get $1)
          (i32.and
           (local.get $7)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
       )
       (i32.store offset=4
        (local.tee $1
         (i32.add
          (local.get $0)
          (local.get $1)
         )
        )
        (i32.or
         (local.get $3)
         (i32.const 1)
        )
       )
       (i32.store
        (local.tee $2
         (i32.add
          (local.get $0)
          (local.get $2)
         )
        )
        (local.get $3)
       )
       (i32.store offset=4
        (local.get $2)
        (i32.and
         (i32.load offset=4
          (local.get $2)
         )
         (i32.const -2)
        )
       )
      )
      (block
       (i32.store offset=4
        (local.get $0)
        (i32.or
         (i32.or
          (local.get $2)
          (i32.and
           (local.get $7)
           (i32.const 1)
          )
         )
         (i32.const 2)
        )
       )
       (i32.store offset=4
        (local.tee $1
         (i32.add
          (local.get $0)
          (local.get $2)
         )
        )
        (i32.or
         (i32.load offset=4
          (local.get $1)
         )
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.const 0)
       )
       (local.set $3
        (i32.const 0)
       )
      )
     )
     (i32.store
      (i32.const 34332)
      (local.get $3)
     )
     (i32.store
      (i32.const 34344)
      (local.get $1)
     )
     (return
      (local.get $0)
     )
    )
   )
   (br_if $folding-inner0
    (i32.and
     (local.get $6)
     (i32.const 2)
    )
   )
   (br_if $folding-inner0
    (i32.lt_u
     (local.tee $11
      (i32.add
       (local.get $2)
       (i32.and
        (local.get $6)
        (i32.const -8)
       )
      )
     )
     (local.get $1)
    )
   )
   (local.set $12
    (i32.sub
     (local.get $11)
     (local.get $1)
    )
   )
   (local.set $2
    (i32.shr_u
     (local.get $6)
     (i32.const 3)
    )
   )
   (block $label$break$L49
    (if
     (i32.lt_u
      (local.get $6)
      (i32.const 256)
     )
     (block
      (local.set $5
       (i32.load offset=12
        (local.get $4)
       )
      )
      (if
       (i32.ne
        (local.tee $6
         (i32.load offset=8
          (local.get $4)
         )
        )
        (local.tee $8
         (i32.add
          (i32.shl
           (local.get $2)
           (i32.const 3)
          )
          (i32.const 34364)
         )
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $10)
          (local.get $6)
         )
         (call $_abort)
        )
        (if
         (i32.ne
          (local.get $4)
          (i32.load offset=12
           (local.get $6)
          )
         )
         (call $_abort)
        )
       )
      )
      (if
       (i32.eq
        (local.get $5)
        (local.get $6)
       )
       (block
        (i32.store
         (i32.const 34324)
         (i32.and
          (i32.load
           (i32.const 34324)
          )
          (i32.xor
           (i32.shl
            (i32.const 1)
            (local.get $2)
           )
           (i32.const -1)
          )
         )
        )
        (br $label$break$L49)
       )
      )
      (if
       (i32.eq
        (local.get $5)
        (local.get $8)
       )
       (local.set $3
        (i32.add
         (local.get $5)
         (i32.const 8)
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $10)
          (local.get $5)
         )
         (call $_abort)
        )
        (if
         (i32.eq
          (i32.load
           (local.tee $2
            (i32.add
             (local.get $5)
             (i32.const 8)
            )
           )
          )
          (local.get $4)
         )
         (local.set $3
          (local.get $2)
         )
         (call $_abort)
        )
       )
      )
      (i32.store offset=12
       (local.get $6)
       (local.get $5)
      )
      (i32.store
       (local.get $3)
       (local.get $6)
      )
     )
     (block
      (local.set $9
       (i32.load offset=24
        (local.get $4)
       )
      )
      (if
       (i32.eq
        (local.tee $3
         (i32.load offset=12
          (local.get $4)
         )
        )
        (local.get $4)
       )
       (block $do-once
        (if
         (local.tee $3
          (i32.load
           (local.tee $6
            (i32.add
             (local.tee $2
              (i32.add
               (local.get $4)
               (i32.const 16)
              )
             )
             (i32.const 4)
            )
           )
          )
         )
         (local.set $2
          (local.get $6)
         )
         (br_if $do-once
          (i32.eqz
           (local.tee $3
            (i32.load
             (local.get $2)
            )
           )
          )
         )
        )
        (loop $while-in
         (block $while-out
          (if
           (i32.eqz
            (local.tee $8
             (i32.load
              (local.tee $6
               (i32.add
                (local.get $3)
                (i32.const 20)
               )
              )
             )
            )
           )
           (br_if $while-out
            (i32.eqz
             (local.tee $8
              (i32.load
               (local.tee $6
                (i32.add
                 (local.get $3)
                 (i32.const 16)
                )
               )
              )
             )
            )
           )
          )
          (local.set $2
           (local.get $6)
          )
          (local.set $3
           (local.get $8)
          )
          (br $while-in)
         )
        )
        (if
         (i32.gt_u
          (local.get $10)
          (local.get $2)
         )
         (call $_abort)
         (block
          (i32.store
           (local.get $2)
           (i32.const 0)
          )
          (local.set $5
           (local.get $3)
          )
         )
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $10)
          (local.tee $2
           (i32.load offset=8
            (local.get $4)
           )
          )
         )
         (call $_abort)
        )
        (if
         (i32.ne
          (local.get $4)
          (i32.load offset=12
           (local.get $2)
          )
         )
         (call $_abort)
        )
        (if
         (i32.eq
          (i32.load offset=8
           (local.get $3)
          )
          (local.get $4)
         )
         (block
          (i32.store offset=12
           (local.get $2)
           (local.get $3)
          )
          (i32.store offset=8
           (local.get $3)
           (local.get $2)
          )
          (local.set $5
           (local.get $3)
          )
         )
         (call $_abort)
        )
       )
      )
      (if
       (local.get $9)
       (block
        (if
         (i32.eq
          (i32.load
           (local.tee $2
            (i32.add
             (i32.shl
              (local.tee $3
               (i32.load offset=28
                (local.get $4)
               )
              )
              (i32.const 2)
             )
             (i32.const 34628)
            )
           )
          )
          (local.get $4)
         )
         (block
          (i32.store
           (local.get $2)
           (local.get $5)
          )
          (if
           (i32.eqz
            (local.get $5)
           )
           (block
            (i32.store
             (i32.const 34328)
             (i32.and
              (i32.load
               (i32.const 34328)
              )
              (i32.xor
               (i32.shl
                (i32.const 1)
                (local.get $3)
               )
               (i32.const -1)
              )
             )
            )
            (br $label$break$L49)
           )
          )
         )
         (if
          (i32.gt_u
           (i32.load
            (i32.const 34340)
           )
           (local.get $9)
          )
          (call $_abort)
          (block
           (i32.store
            (select
             (local.tee $3
              (i32.add
               (local.get $9)
               (i32.const 16)
              )
             )
             (i32.add
              (local.get $9)
              (i32.const 20)
             )
             (i32.eq
              (i32.load
               (local.get $3)
              )
              (local.get $4)
             )
            )
            (local.get $5)
           )
           (br_if $label$break$L49
            (i32.eqz
             (local.get $5)
            )
           )
          )
         )
        )
        (if
         (i32.gt_u
          (local.tee $2
           (i32.load
            (i32.const 34340)
           )
          )
          (local.get $5)
         )
         (call $_abort)
        )
        (i32.store offset=24
         (local.get $5)
         (local.get $9)
        )
        (if
         (local.tee $3
          (i32.load offset=16
           (local.get $4)
          )
         )
         (if
          (i32.gt_u
           (local.get $2)
           (local.get $3)
          )
          (call $_abort)
          (block
           (i32.store offset=16
            (local.get $5)
            (local.get $3)
           )
           (i32.store offset=24
            (local.get $3)
            (local.get $5)
           )
          )
         )
        )
        (if
         (local.tee $3
          (i32.load offset=20
           (local.get $4)
          )
         )
         (if
          (i32.gt_u
           (i32.load
            (i32.const 34340)
           )
           (local.get $3)
          )
          (call $_abort)
          (block
           (i32.store offset=20
            (local.get $5)
            (local.get $3)
           )
           (i32.store offset=24
            (local.get $3)
            (local.get $5)
           )
          )
         )
        )
       )
      )
     )
    )
   )
   (if
    (i32.lt_u
     (local.get $12)
     (i32.const 16)
    )
    (block
     (i32.store offset=4
      (local.get $0)
      (i32.or
       (i32.or
        (local.get $11)
        (i32.and
         (local.get $7)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
     )
     (i32.store offset=4
      (local.tee $1
       (i32.add
        (local.get $0)
        (local.get $11)
       )
      )
      (i32.or
       (i32.load offset=4
        (local.get $1)
       )
       (i32.const 1)
      )
     )
    )
    (block
     (i32.store offset=4
      (local.get $0)
      (i32.or
       (i32.or
        (local.get $1)
        (i32.and
         (local.get $7)
         (i32.const 1)
        )
       )
       (i32.const 2)
      )
     )
     (i32.store offset=4
      (local.tee $1
       (i32.add
        (local.get $0)
        (local.get $1)
       )
      )
      (i32.or
       (local.get $12)
       (i32.const 3)
      )
     )
     (i32.store offset=4
      (local.tee $3
       (i32.add
        (local.get $0)
        (local.get $11)
       )
      )
      (i32.or
       (i32.load offset=4
        (local.get $3)
       )
       (i32.const 1)
      )
     )
     (call $_dispose_chunk
      (local.get $1)
      (local.get $12)
     )
    )
   )
   (return
    (local.get $0)
   )
  )
  (i32.const 0)
 )
 (func $_dispose_chunk (; 647 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local.set $6
   (i32.add
    (local.get $0)
    (local.get $1)
   )
  )
  (if
   (i32.and
    (local.tee $8
     (i32.load offset=4
      (local.get $0)
     )
    )
    (i32.const 1)
   )
   (block
    (local.set $2
     (local.get $0)
    )
    (local.set $4
     (local.get $1)
    )
   )
   (block $label$break$L1
    (local.set $5
     (i32.load
      (local.get $0)
     )
    )
    (if
     (i32.eqz
      (i32.and
       (local.get $8)
       (i32.const 3)
      )
     )
     (return)
    )
    (if
     (i32.lt_u
      (local.tee $0
       (i32.sub
        (local.get $0)
        (local.get $5)
       )
      )
      (local.tee $11
       (i32.load
        (i32.const 34340)
       )
      )
     )
     (call $_abort)
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (local.get $5)
     )
    )
    (if
     (i32.eq
      (i32.load
       (i32.const 34344)
      )
      (local.get $0)
     )
     (block
      (if
       (i32.ne
        (i32.and
         (local.tee $4
          (i32.load offset=4
           (local.get $6)
          )
         )
         (i32.const 3)
        )
        (i32.const 3)
       )
       (block
        (local.set $2
         (local.get $0)
        )
        (local.set $4
         (local.get $1)
        )
        (br $label$break$L1)
       )
      )
      (i32.store
       (i32.const 34332)
       (local.get $1)
      )
      (i32.store offset=4
       (local.get $6)
       (i32.and
        (local.get $4)
        (i32.const -2)
       )
      )
      (i32.store offset=4
       (local.get $0)
       (i32.or
        (local.get $1)
        (i32.const 1)
       )
      )
      (i32.store
       (local.get $6)
       (local.get $1)
      )
      (return)
     )
    )
    (local.set $8
     (i32.shr_u
      (local.get $5)
      (i32.const 3)
     )
    )
    (if
     (i32.lt_u
      (local.get $5)
      (i32.const 256)
     )
     (block
      (local.set $2
       (i32.load offset=12
        (local.get $0)
       )
      )
      (if
       (i32.ne
        (local.tee $5
         (i32.load offset=8
          (local.get $0)
         )
        )
        (local.tee $4
         (i32.add
          (i32.shl
           (local.get $8)
           (i32.const 3)
          )
          (i32.const 34364)
         )
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $11)
          (local.get $5)
         )
         (call $_abort)
        )
        (if
         (i32.ne
          (local.get $0)
          (i32.load offset=12
           (local.get $5)
          )
         )
         (call $_abort)
        )
       )
      )
      (if
       (i32.eq
        (local.get $2)
        (local.get $5)
       )
       (block
        (i32.store
         (i32.const 34324)
         (i32.and
          (i32.load
           (i32.const 34324)
          )
          (i32.xor
           (i32.shl
            (i32.const 1)
            (local.get $8)
           )
           (i32.const -1)
          )
         )
        )
        (local.set $2
         (local.get $0)
        )
        (local.set $4
         (local.get $1)
        )
        (br $label$break$L1)
       )
      )
      (if
       (i32.eq
        (local.get $2)
        (local.get $4)
       )
       (local.set $3
        (i32.add
         (local.get $2)
         (i32.const 8)
        )
       )
       (block
        (if
         (i32.gt_u
          (local.get $11)
          (local.get $2)
         )
         (call $_abort)
        )
        (if
         (i32.eq
          (i32.load
           (local.tee $4
            (i32.add
             (local.get $2)
             (i32.const 8)
            )
           )
          )
          (local.get $0)
         )
         (local.set $3
          (local.get $4)
         )
         (call $_abort)
        )
       )
      )
      (i32.store offset=12
       (local.get $5)
       (local.get $2)
      )
      (i32.store
       (local.get $3)
       (local.get $5)
      )
      (local.set $2
       (local.get $0)
      )
      (local.set $4
       (local.get $1)
      )
      (br $label$break$L1)
     )
    )
    (local.set $10
     (i32.load offset=24
      (local.get $0)
     )
    )
    (if
     (i32.eq
      (local.tee $3
       (i32.load offset=12
        (local.get $0)
       )
      )
      (local.get $0)
     )
     (block $do-once
      (if
       (local.tee $3
        (i32.load
         (local.tee $8
          (i32.add
           (local.tee $5
            (i32.add
             (local.get $0)
             (i32.const 16)
            )
           )
           (i32.const 4)
          )
         )
        )
       )
       (local.set $5
        (local.get $8)
       )
       (br_if $do-once
        (i32.eqz
         (local.tee $3
          (i32.load
           (local.get $5)
          )
         )
        )
       )
      )
      (loop $while-in
       (block $while-out
        (if
         (i32.eqz
          (local.tee $12
           (i32.load
            (local.tee $8
             (i32.add
              (local.get $3)
              (i32.const 20)
             )
            )
           )
          )
         )
         (br_if $while-out
          (i32.eqz
           (local.tee $12
            (i32.load
             (local.tee $8
              (i32.add
               (local.get $3)
               (i32.const 16)
              )
             )
            )
           )
          )
         )
        )
        (local.set $5
         (local.get $8)
        )
        (local.set $3
         (local.get $12)
        )
        (br $while-in)
       )
      )
      (if
       (i32.gt_u
        (local.get $11)
        (local.get $5)
       )
       (call $_abort)
       (block
        (i32.store
         (local.get $5)
         (i32.const 0)
        )
        (local.set $7
         (local.get $3)
        )
       )
      )
     )
     (block
      (if
       (i32.gt_u
        (local.get $11)
        (local.tee $5
         (i32.load offset=8
          (local.get $0)
         )
        )
       )
       (call $_abort)
      )
      (if
       (i32.ne
        (local.get $0)
        (i32.load offset=12
         (local.get $5)
        )
       )
       (call $_abort)
      )
      (if
       (i32.eq
        (i32.load offset=8
         (local.get $3)
        )
        (local.get $0)
       )
       (block
        (i32.store offset=12
         (local.get $5)
         (local.get $3)
        )
        (i32.store offset=8
         (local.get $3)
         (local.get $5)
        )
        (local.set $7
         (local.get $3)
        )
       )
       (call $_abort)
      )
     )
    )
    (if
     (local.get $10)
     (block
      (if
       (i32.eq
        (i32.load
         (local.tee $5
          (i32.add
           (i32.shl
            (local.tee $3
             (i32.load offset=28
              (local.get $0)
             )
            )
            (i32.const 2)
           )
           (i32.const 34628)
          )
         )
        )
        (local.get $0)
       )
       (block
        (i32.store
         (local.get $5)
         (local.get $7)
        )
        (if
         (i32.eqz
          (local.get $7)
         )
         (block
          (i32.store
           (i32.const 34328)
           (i32.and
            (i32.load
             (i32.const 34328)
            )
            (i32.xor
             (i32.shl
              (i32.const 1)
              (local.get $3)
             )
             (i32.const -1)
            )
           )
          )
          (local.set $2
           (local.get $0)
          )
          (local.set $4
           (local.get $1)
          )
          (br $label$break$L1)
         )
        )
       )
       (if
        (i32.gt_u
         (i32.load
          (i32.const 34340)
         )
         (local.get $10)
        )
        (call $_abort)
        (block
         (i32.store
          (select
           (local.tee $3
            (i32.add
             (local.get $10)
             (i32.const 16)
            )
           )
           (i32.add
            (local.get $10)
            (i32.const 20)
           )
           (i32.eq
            (i32.load
             (local.get $3)
            )
            (local.get $0)
           )
          )
          (local.get $7)
         )
         (if
          (i32.eqz
           (local.get $7)
          )
          (block
           (local.set $2
            (local.get $0)
           )
           (local.set $4
            (local.get $1)
           )
           (br $label$break$L1)
          )
         )
        )
       )
      )
      (if
       (i32.gt_u
        (local.tee $5
         (i32.load
          (i32.const 34340)
         )
        )
        (local.get $7)
       )
       (call $_abort)
      )
      (i32.store offset=24
       (local.get $7)
       (local.get $10)
      )
      (if
       (local.tee $3
        (i32.load offset=16
         (local.get $0)
        )
       )
       (if
        (i32.gt_u
         (local.get $5)
         (local.get $3)
        )
        (call $_abort)
        (block
         (i32.store offset=16
          (local.get $7)
          (local.get $3)
         )
         (i32.store offset=24
          (local.get $3)
          (local.get $7)
         )
        )
       )
      )
      (if
       (local.tee $3
        (i32.load offset=20
         (local.get $0)
        )
       )
       (if
        (i32.gt_u
         (i32.load
          (i32.const 34340)
         )
         (local.get $3)
        )
        (call $_abort)
        (block
         (i32.store offset=20
          (local.get $7)
          (local.get $3)
         )
         (i32.store offset=24
          (local.get $3)
          (local.get $7)
         )
         (local.set $2
          (local.get $0)
         )
         (local.set $4
          (local.get $1)
         )
        )
       )
       (block
        (local.set $2
         (local.get $0)
        )
        (local.set $4
         (local.get $1)
        )
       )
      )
     )
     (block
      (local.set $2
       (local.get $0)
      )
      (local.set $4
       (local.get $1)
      )
     )
    )
   )
  )
  (if
   (i32.lt_u
    (local.get $6)
    (local.tee $8
     (i32.load
      (i32.const 34340)
     )
    )
   )
   (call $_abort)
  )
  (if
   (i32.and
    (local.tee $0
     (i32.load offset=4
      (local.get $6)
     )
    )
    (i32.const 2)
   )
   (block
    (i32.store offset=4
     (local.get $6)
     (i32.and
      (local.get $0)
      (i32.const -2)
     )
    )
    (i32.store offset=4
     (local.get $2)
     (i32.or
      (local.get $4)
      (i32.const 1)
     )
    )
    (i32.store
     (i32.add
      (local.get $2)
      (local.get $4)
     )
     (local.get $4)
    )
   )
   (block
    (if
     (i32.eq
      (i32.load
       (i32.const 34348)
      )
      (local.get $6)
     )
     (block
      (i32.store
       (i32.const 34336)
       (local.tee $0
        (i32.add
         (i32.load
          (i32.const 34336)
         )
         (local.get $4)
        )
       )
      )
      (i32.store
       (i32.const 34348)
       (local.get $2)
      )
      (i32.store offset=4
       (local.get $2)
       (i32.or
        (local.get $0)
        (i32.const 1)
       )
      )
      (if
       (i32.ne
        (local.get $2)
        (i32.load
         (i32.const 34344)
        )
       )
       (return)
      )
      (i32.store
       (i32.const 34344)
       (i32.const 0)
      )
      (i32.store
       (i32.const 34332)
       (i32.const 0)
      )
      (return)
     )
    )
    (if
     (i32.eq
      (i32.load
       (i32.const 34344)
      )
      (local.get $6)
     )
     (block
      (i32.store
       (i32.const 34332)
       (local.tee $0
        (i32.add
         (i32.load
          (i32.const 34332)
         )
         (local.get $4)
        )
       )
      )
      (i32.store
       (i32.const 34344)
       (local.get $2)
      )
      (i32.store offset=4
       (local.get $2)
       (i32.or
        (local.get $0)
        (i32.const 1)
       )
      )
      (i32.store
       (i32.add
        (local.get $0)
        (local.get $2)
       )
       (local.get $0)
      )
      (return)
     )
    )
    (local.set $4
     (i32.add
      (i32.and
       (local.get $0)
       (i32.const -8)
      )
      (local.get $4)
     )
    )
    (local.set $5
     (i32.shr_u
      (local.get $0)
      (i32.const 3)
     )
    )
    (block $label$break$L99
     (if
      (i32.lt_u
       (local.get $0)
       (i32.const 256)
      )
      (block
       (local.set $1
        (i32.load offset=12
         (local.get $6)
        )
       )
       (if
        (i32.ne
         (local.tee $3
          (i32.load offset=8
           (local.get $6)
          )
         )
         (local.tee $0
          (i32.add
           (i32.shl
            (local.get $5)
            (i32.const 3)
           )
           (i32.const 34364)
          )
         )
        )
        (block
         (if
          (i32.gt_u
           (local.get $8)
           (local.get $3)
          )
          (call $_abort)
         )
         (if
          (i32.ne
           (local.get $6)
           (i32.load offset=12
            (local.get $3)
           )
          )
          (call $_abort)
         )
        )
       )
       (if
        (i32.eq
         (local.get $1)
         (local.get $3)
        )
        (block
         (i32.store
          (i32.const 34324)
          (i32.and
           (i32.load
            (i32.const 34324)
           )
           (i32.xor
            (i32.shl
             (i32.const 1)
             (local.get $5)
            )
            (i32.const -1)
           )
          )
         )
         (br $label$break$L99)
        )
       )
       (if
        (i32.eq
         (local.get $0)
         (local.get $1)
        )
        (local.set $14
         (i32.add
          (local.get $1)
          (i32.const 8)
         )
        )
        (block
         (if
          (i32.gt_u
           (local.get $8)
           (local.get $1)
          )
          (call $_abort)
         )
         (if
          (i32.eq
           (i32.load
            (local.tee $0
             (i32.add
              (local.get $1)
              (i32.const 8)
             )
            )
           )
           (local.get $6)
          )
          (local.set $14
           (local.get $0)
          )
          (call $_abort)
         )
        )
       )
       (i32.store offset=12
        (local.get $3)
        (local.get $1)
       )
       (i32.store
        (local.get $14)
        (local.get $3)
       )
      )
      (block
       (local.set $7
        (i32.load offset=24
         (local.get $6)
        )
       )
       (if
        (i32.eq
         (local.tee $0
          (i32.load offset=12
           (local.get $6)
          )
         )
         (local.get $6)
        )
        (block $do-once6
         (if
          (local.tee $0
           (i32.load
            (local.tee $3
             (i32.add
              (local.tee $1
               (i32.add
                (local.get $6)
                (i32.const 16)
               )
              )
              (i32.const 4)
             )
            )
           )
          )
          (local.set $1
           (local.get $3)
          )
          (br_if $do-once6
           (i32.eqz
            (local.tee $0
             (i32.load
              (local.get $1)
             )
            )
           )
          )
         )
         (loop $while-in9
          (block $while-out8
           (if
            (i32.eqz
             (local.tee $5
              (i32.load
               (local.tee $3
                (i32.add
                 (local.get $0)
                 (i32.const 20)
                )
               )
              )
             )
            )
            (br_if $while-out8
             (i32.eqz
              (local.tee $5
               (i32.load
                (local.tee $3
                 (i32.add
                  (local.get $0)
                  (i32.const 16)
                 )
                )
               )
              )
             )
            )
           )
           (local.set $1
            (local.get $3)
           )
           (local.set $0
            (local.get $5)
           )
           (br $while-in9)
          )
         )
         (if
          (i32.gt_u
           (local.get $8)
           (local.get $1)
          )
          (call $_abort)
          (block
           (i32.store
            (local.get $1)
            (i32.const 0)
           )
           (local.set $9
            (local.get $0)
           )
          )
         )
        )
        (block
         (if
          (i32.gt_u
           (local.get $8)
           (local.tee $1
            (i32.load offset=8
             (local.get $6)
            )
           )
          )
          (call $_abort)
         )
         (if
          (i32.ne
           (local.get $6)
           (i32.load offset=12
            (local.get $1)
           )
          )
          (call $_abort)
         )
         (if
          (i32.eq
           (i32.load offset=8
            (local.get $0)
           )
           (local.get $6)
          )
          (block
           (i32.store offset=12
            (local.get $1)
            (local.get $0)
           )
           (i32.store offset=8
            (local.get $0)
            (local.get $1)
           )
           (local.set $9
            (local.get $0)
           )
          )
          (call $_abort)
         )
        )
       )
       (if
        (local.get $7)
        (block
         (if
          (i32.eq
           (i32.load
            (local.tee $1
             (i32.add
              (i32.shl
               (local.tee $0
                (i32.load offset=28
                 (local.get $6)
                )
               )
               (i32.const 2)
              )
              (i32.const 34628)
             )
            )
           )
           (local.get $6)
          )
          (block
           (i32.store
            (local.get $1)
            (local.get $9)
           )
           (if
            (i32.eqz
             (local.get $9)
            )
            (block
             (i32.store
              (i32.const 34328)
              (i32.and
               (i32.load
                (i32.const 34328)
               )
               (i32.xor
                (i32.shl
                 (i32.const 1)
                 (local.get $0)
                )
                (i32.const -1)
               )
              )
             )
             (br $label$break$L99)
            )
           )
          )
          (if
           (i32.gt_u
            (i32.load
             (i32.const 34340)
            )
            (local.get $7)
           )
           (call $_abort)
           (block
            (i32.store
             (select
              (local.tee $0
               (i32.add
                (local.get $7)
                (i32.const 16)
               )
              )
              (i32.add
               (local.get $7)
               (i32.const 20)
              )
              (i32.eq
               (i32.load
                (local.get $0)
               )
               (local.get $6)
              )
             )
             (local.get $9)
            )
            (br_if $label$break$L99
             (i32.eqz
              (local.get $9)
             )
            )
           )
          )
         )
         (if
          (i32.gt_u
           (local.tee $1
            (i32.load
             (i32.const 34340)
            )
           )
           (local.get $9)
          )
          (call $_abort)
         )
         (i32.store offset=24
          (local.get $9)
          (local.get $7)
         )
         (if
          (local.tee $0
           (i32.load offset=16
            (local.get $6)
           )
          )
          (if
           (i32.gt_u
            (local.get $1)
            (local.get $0)
           )
           (call $_abort)
           (block
            (i32.store offset=16
             (local.get $9)
             (local.get $0)
            )
            (i32.store offset=24
             (local.get $0)
             (local.get $9)
            )
           )
          )
         )
         (if
          (local.tee $0
           (i32.load offset=20
            (local.get $6)
           )
          )
          (if
           (i32.gt_u
            (i32.load
             (i32.const 34340)
            )
            (local.get $0)
           )
           (call $_abort)
           (block
            (i32.store offset=20
             (local.get $9)
             (local.get $0)
            )
            (i32.store offset=24
             (local.get $0)
             (local.get $9)
            )
           )
          )
         )
        )
       )
      )
     )
    )
    (i32.store offset=4
     (local.get $2)
     (i32.or
      (local.get $4)
      (i32.const 1)
     )
    )
    (i32.store
     (i32.add
      (local.get $2)
      (local.get $4)
     )
     (local.get $4)
    )
    (if
     (i32.eq
      (i32.load
       (i32.const 34344)
      )
      (local.get $2)
     )
     (block
      (i32.store
       (i32.const 34332)
       (local.get $4)
      )
      (return)
     )
    )
   )
  )
  (local.set $1
   (i32.shr_u
    (local.get $4)
    (i32.const 3)
   )
  )
  (if
   (i32.lt_u
    (local.get $4)
    (i32.const 256)
   )
   (block
    (local.set $0
     (i32.add
      (i32.shl
       (local.get $1)
       (i32.const 3)
      )
      (i32.const 34364)
     )
    )
    (if
     (i32.and
      (local.tee $4
       (i32.load
        (i32.const 34324)
       )
      )
      (local.tee $1
       (i32.shl
        (i32.const 1)
        (local.get $1)
       )
      )
     )
     (if
      (i32.gt_u
       (i32.load
        (i32.const 34340)
       )
       (local.tee $4
        (i32.load
         (local.tee $1
          (i32.add
           (local.get $0)
           (i32.const 8)
          )
         )
        )
       )
      )
      (call $_abort)
      (block
       (local.set $15
        (local.get $1)
       )
       (local.set $13
        (local.get $4)
       )
      )
     )
     (block
      (i32.store
       (i32.const 34324)
       (i32.or
        (local.get $1)
        (local.get $4)
       )
      )
      (local.set $15
       (i32.add
        (local.get $0)
        (i32.const 8)
       )
      )
      (local.set $13
       (local.get $0)
      )
     )
    )
    (i32.store
     (local.get $15)
     (local.get $2)
    )
    (i32.store offset=12
     (local.get $13)
     (local.get $2)
    )
    (i32.store offset=8
     (local.get $2)
     (local.get $13)
    )
    (i32.store offset=12
     (local.get $2)
     (local.get $0)
    )
    (return)
   )
  )
  (local.set $0
   (i32.add
    (i32.shl
     (local.tee $1
      (if (result i32)
       (local.tee $0
        (i32.shr_u
         (local.get $4)
         (i32.const 8)
        )
       )
       (if (result i32)
        (i32.gt_u
         (local.get $4)
         (i32.const 16777215)
        )
        (i32.const 31)
        (block (result i32)
         (local.set $0
          (i32.and
           (i32.shr_u
            (i32.add
             (local.tee $1
              (i32.shl
               (local.get $0)
               (local.tee $3
                (i32.and
                 (i32.shr_u
                  (i32.add
                   (local.get $0)
                   (i32.const 1048320)
                  )
                  (i32.const 16)
                 )
                 (i32.const 8)
                )
               )
              )
             )
             (i32.const 520192)
            )
            (i32.const 16)
           )
           (i32.const 4)
          )
         )
         (local.set $1
          (i32.and
           (i32.shr_u
            (i32.add
             (local.tee $5
              (i32.shl
               (local.get $1)
               (local.get $0)
              )
             )
             (i32.const 245760)
            )
            (i32.const 16)
           )
           (i32.const 2)
          )
         )
         (i32.or
          (i32.and
           (i32.shr_u
            (local.get $4)
            (i32.add
             (local.tee $0
              (i32.add
               (i32.sub
                (i32.const 14)
                (i32.or
                 (i32.or
                  (local.get $0)
                  (local.get $3)
                 )
                 (local.get $1)
                )
               )
               (i32.shr_u
                (i32.shl
                 (local.get $5)
                 (local.get $1)
                )
                (i32.const 15)
               )
              )
             )
             (i32.const 7)
            )
           )
           (i32.const 1)
          )
          (i32.shl
           (local.get $0)
           (i32.const 1)
          )
         )
        )
       )
       (i32.const 0)
      )
     )
     (i32.const 2)
    )
    (i32.const 34628)
   )
  )
  (i32.store offset=28
   (local.get $2)
   (local.get $1)
  )
  (i32.store offset=20
   (local.get $2)
   (i32.const 0)
  )
  (i32.store offset=16
   (local.get $2)
   (i32.const 0)
  )
  (block $folding-inner0
   (if
    (i32.eqz
     (i32.and
      (local.tee $3
       (i32.load
        (i32.const 34328)
       )
      )
      (local.tee $5
       (i32.shl
        (i32.const 1)
        (local.get $1)
       )
      )
     )
    )
    (block
     (i32.store
      (i32.const 34328)
      (i32.or
       (local.get $3)
       (local.get $5)
      )
     )
     (i32.store
      (local.get $0)
      (local.get $2)
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.ne
     (local.get $4)
     (i32.and
      (i32.load offset=4
       (local.tee $0
        (i32.load
         (local.get $0)
        )
       )
      )
      (i32.const -8)
     )
    )
    (block $label$break$L189
     (local.set $3
      (i32.shl
       (local.get $4)
       (select
        (i32.const 0)
        (i32.sub
         (i32.const 25)
         (i32.shr_u
          (local.get $1)
          (i32.const 1)
         )
        )
        (i32.eq
         (local.get $1)
         (i32.const 31)
        )
       )
      )
     )
     (loop $while-in16
      (if
       (local.tee $1
        (i32.load
         (local.tee $5
          (i32.add
           (i32.add
            (local.get $0)
            (i32.const 16)
           )
           (i32.shl
            (i32.shr_u
             (local.get $3)
             (i32.const 31)
            )
            (i32.const 2)
           )
          )
         )
        )
       )
       (block
        (local.set $3
         (i32.shl
          (local.get $3)
          (i32.const 1)
         )
        )
        (if
         (i32.eq
          (i32.and
           (i32.load offset=4
            (local.get $1)
           )
           (i32.const -8)
          )
          (local.get $4)
         )
         (block
          (local.set $0
           (local.get $1)
          )
          (br $label$break$L189)
         )
         (block
          (local.set $0
           (local.get $1)
          )
          (br $while-in16)
         )
        )
       )
      )
     )
     (if
      (i32.gt_u
       (i32.load
        (i32.const 34340)
       )
       (local.get $5)
      )
      (call $_abort)
     )
     (i32.store
      (local.get $5)
      (local.get $2)
     )
     (br $folding-inner0)
    )
   )
   (if
    (i32.eqz
     (i32.and
      (i32.le_u
       (local.tee $1
        (i32.load
         (i32.const 34340)
        )
       )
       (local.get $0)
      )
      (i32.le_u
       (local.get $1)
       (local.tee $4
        (i32.load offset=8
         (local.tee $1
          (local.get $0)
         )
        )
       )
      )
     )
    )
    (call $_abort)
   )
   (i32.store offset=12
    (local.get $4)
    (local.get $2)
   )
   (i32.store offset=8
    (local.get $1)
    (local.get $2)
   )
   (i32.store offset=8
    (local.get $2)
    (local.get $4)
   )
   (i32.store offset=12
    (local.get $2)
    (local.get $0)
   )
   (i32.store offset=24
    (local.get $2)
    (i32.const 0)
   )
   (return)
  )
  (i32.store offset=24
   (local.get $2)
   (local.get $0)
  )
  (i32.store offset=12
   (local.get $2)
   (local.get $2)
  )
  (i32.store offset=8
   (local.get $2)
   (local.get $2)
  )
 )
 (func $_sbrk (; 648 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (local $1 i32)
  (if
   (i32.lt_s
    (local.tee $0
     (i32.add
      (local.get $0)
      (local.tee $1
       (i32.load
        (i32.const 35888)
       )
      )
     )
    )
    (i32.const 0)
   )
   (block
    (i32.store
     (i32.const 34304)
     (i32.const 48)
    )
    (return
     (i32.const -1)
    )
   )
  )
  (if
   (i32.gt_u
    (local.get $0)
    (call $_emscripten_get_heap_size)
   )
   (if
    (i32.eqz
     (call $_emscripten_resize_heap
      (local.get $0)
     )
    )
    (block
     (i32.store
      (i32.const 34304)
      (i32.const 48)
     )
     (return
      (i32.const -1)
     )
    )
   )
  )
  (i32.store
   (i32.const 35888)
   (local.get $0)
  )
  (local.get $1)
 )
 (func $_emscripten_glBlendColor$legalf32 (; 649 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (param $2 f32) (param $3 f32)
  (call $_emscripten_glBlendColor
   (f64.promote_f32
    (local.get $0)
   )
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
   (f64.promote_f32
    (local.get $3)
   )
  )
 )
 (func $_emscripten_glClearColor$legalf32 (; 650 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (param $2 f32) (param $3 f32)
  (call $_emscripten_glClearColor
   (f64.promote_f32
    (local.get $0)
   )
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
   (f64.promote_f32
    (local.get $3)
   )
  )
 )
 (func $_emscripten_glClearDepthf$legalf32 (; 651 ;) (; has Stack IR ;) (param $0 f32)
  (call $_emscripten_glClearDepthf
   (f64.promote_f32
    (local.get $0)
   )
  )
 )
 (func $_emscripten_glDepthRangef$legalf32 (; 652 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32)
  (call $_emscripten_glDepthRangef
   (f64.promote_f32
    (local.get $0)
   )
   (f64.promote_f32
    (local.get $1)
   )
  )
 )
 (func $_emscripten_glLineWidth$legalf32 (; 653 ;) (; has Stack IR ;) (param $0 f32)
  (call $_emscripten_glLineWidth
   (f64.promote_f32
    (local.get $0)
   )
  )
 )
 (func $_emscripten_glPolygonOffset$legalf32 (; 654 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32)
  (call $_emscripten_glPolygonOffset
   (f64.promote_f32
    (local.get $0)
   )
   (f64.promote_f32
    (local.get $1)
   )
  )
 )
 (func $_emscripten_glSampleCoverage$legalf32 (; 655 ;) (; has Stack IR ;) (param $0 f32) (param $1 i32)
  (call $_emscripten_glSampleCoverage
   (f64.promote_f32
    (local.get $0)
   )
   (local.get $1)
  )
 )
 (func $_emscripten_glTexParameterf$legalf32 (; 656 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32)
  (call $_emscripten_glTexParameterf
   (local.get $0)
   (local.get $1)
   (f64.promote_f32
    (local.get $2)
   )
  )
 )
 (func $_emscripten_glUniform1f$legalf32 (; 657 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32)
  (call $_emscripten_glUniform1f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
  )
 )
 (func $_emscripten_glUniform2f$legalf32 (; 658 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32)
  (call $_emscripten_glUniform2f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
  )
 )
 (func $_emscripten_glUniform3f$legalf32 (; 659 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32)
  (call $_emscripten_glUniform3f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
   (f64.promote_f32
    (local.get $3)
   )
  )
 )
 (func $_emscripten_glUniform4f$legalf32 (; 660 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32) (param $4 f32)
  (call $_emscripten_glUniform4f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
   (f64.promote_f32
    (local.get $3)
   )
   (f64.promote_f32
    (local.get $4)
   )
  )
 )
 (func $_emscripten_glVertexAttrib1f$legalf32 (; 661 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32)
  (call $_emscripten_glVertexAttrib1f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
  )
 )
 (func $_emscripten_glVertexAttrib2f$legalf32 (; 662 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32)
  (call $_emscripten_glVertexAttrib2f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
  )
 )
 (func $_emscripten_glVertexAttrib3f$legalf32 (; 663 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32)
  (call $_emscripten_glVertexAttrib3f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
   (f64.promote_f32
    (local.get $3)
   )
  )
 )
 (func $_emscripten_glVertexAttrib4f$legalf32 (; 664 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32) (param $4 f32)
  (call $_emscripten_glVertexAttrib4f
   (local.get $0)
   (f64.promote_f32
    (local.get $1)
   )
   (f64.promote_f32
    (local.get $2)
   )
   (f64.promote_f32
    (local.get $3)
   )
   (f64.promote_f32
    (local.get $4)
   )
  )
 )
 (func $_emscripten_get_sbrk_ptr (; 665 ;) (; has Stack IR ;) (result i32)
  (i32.const 35888)
 )
 (func $_llvm_maxnum_f64 (; 666 ;) (; has Stack IR ;) (param $0 f64) (param $1 f64) (result f64)
  (if
   (f64.ne
    (local.get $0)
    (local.get $0)
   )
   (return
    (local.get $1)
   )
  )
  (if
   (f64.ne
    (local.get $1)
    (local.get $1)
   )
   (return
    (local.get $0)
   )
  )
  (f64.max
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_llvm_minnum_f64 (; 667 ;) (; has Stack IR ;) (param $0 f64) (param $1 f64) (result f64)
  (if
   (f64.ne
    (local.get $0)
    (local.get $0)
   )
   (return
    (local.get $1)
   )
  )
  (if
   (f64.ne
    (local.get $1)
    (local.get $1)
   )
   (return
    (local.get $0)
   )
  )
  (f64.min
   (local.get $0)
   (local.get $1)
  )
 )
 (func $_llvm_round_f32 (; 668 ;) (; has Stack IR ;) (param $0 f64) (result f64)
  (select
   (f64.floor
    (f64.add
     (local.get $0)
     (f64.const 0.5)
    )
   )
   (f64.ceil
    (f64.sub
     (local.get $0)
     (f64.const 0.5)
    )
   )
   (f64.ge
    (local.get $0)
    (f64.const 0)
   )
  )
 )
 (func $_memcpy (; 669 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (if
   (i32.ge_s
    (local.get $2)
    (i32.const 8192)
   )
   (block
    (drop
     (call $_emscripten_memcpy_big
      (local.get $0)
      (local.get $1)
      (local.get $2)
     )
    )
    (return
     (local.get $0)
    )
   )
  )
  (local.set $4
   (local.get $0)
  )
  (local.set $3
   (i32.add
    (local.get $0)
    (local.get $2)
   )
  )
  (if
   (i32.eq
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.and
     (local.get $1)
     (i32.const 3)
    )
   )
   (block
    (loop $while-in
     (if
      (i32.and
       (local.get $0)
       (i32.const 3)
      )
      (block
       (if
        (i32.eqz
         (local.get $2)
        )
        (return
         (local.get $4)
        )
       )
       (i32.store8
        (local.get $0)
        (i32.load8_s
         (local.get $1)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 1)
        )
       )
       (local.set $2
        (i32.sub
         (local.get $2)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $5
     (i32.add
      (local.tee $2
       (i32.and
        (local.get $3)
        (i32.const -4)
       )
      )
      (i32.const -64)
     )
    )
    (loop $while-in1
     (if
      (i32.le_s
       (local.get $0)
       (local.get $5)
      )
      (block
       (i32.store
        (local.get $0)
        (i32.load
         (local.get $1)
        )
       )
       (i32.store offset=4
        (local.get $0)
        (i32.load offset=4
         (local.get $1)
        )
       )
       (i32.store offset=8
        (local.get $0)
        (i32.load offset=8
         (local.get $1)
        )
       )
       (i32.store offset=12
        (local.get $0)
        (i32.load offset=12
         (local.get $1)
        )
       )
       (i32.store offset=16
        (local.get $0)
        (i32.load offset=16
         (local.get $1)
        )
       )
       (i32.store offset=20
        (local.get $0)
        (i32.load offset=20
         (local.get $1)
        )
       )
       (i32.store offset=24
        (local.get $0)
        (i32.load offset=24
         (local.get $1)
        )
       )
       (i32.store offset=28
        (local.get $0)
        (i32.load offset=28
         (local.get $1)
        )
       )
       (i32.store offset=32
        (local.get $0)
        (i32.load offset=32
         (local.get $1)
        )
       )
       (i32.store offset=36
        (local.get $0)
        (i32.load offset=36
         (local.get $1)
        )
       )
       (i32.store offset=40
        (local.get $0)
        (i32.load offset=40
         (local.get $1)
        )
       )
       (i32.store offset=44
        (local.get $0)
        (i32.load offset=44
         (local.get $1)
        )
       )
       (i32.store offset=48
        (local.get $0)
        (i32.load offset=48
         (local.get $1)
        )
       )
       (i32.store offset=52
        (local.get $0)
        (i32.load offset=52
         (local.get $1)
        )
       )
       (i32.store offset=56
        (local.get $0)
        (i32.load offset=56
         (local.get $1)
        )
       )
       (i32.store offset=60
        (local.get $0)
        (i32.load offset=60
         (local.get $1)
        )
       )
       (local.set $0
        (i32.sub
         (local.get $0)
         (i32.const -64)
        )
       )
       (local.set $1
        (i32.sub
         (local.get $1)
         (i32.const -64)
        )
       )
       (br $while-in1)
      )
     )
    )
    (loop $while-in3
     (if
      (i32.lt_s
       (local.get $0)
       (local.get $2)
      )
      (block
       (i32.store
        (local.get $0)
        (i32.load
         (local.get $1)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (br $while-in3)
      )
     )
    )
   )
   (block
    (local.set $2
     (i32.sub
      (local.get $3)
      (i32.const 4)
     )
    )
    (loop $while-in5
     (if
      (i32.lt_s
       (local.get $0)
       (local.get $2)
      )
      (block
       (i32.store8
        (local.get $0)
        (i32.load8_s
         (local.get $1)
        )
       )
       (i32.store8 offset=1
        (local.get $0)
        (i32.load8_s offset=1
         (local.get $1)
        )
       )
       (i32.store8 offset=2
        (local.get $0)
        (i32.load8_s offset=2
         (local.get $1)
        )
       )
       (i32.store8 offset=3
        (local.get $0)
        (i32.load8_s offset=3
         (local.get $1)
        )
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (local.set $1
        (i32.add
         (local.get $1)
         (i32.const 4)
        )
       )
       (br $while-in5)
      )
     )
    )
   )
  )
  (loop $while-in7
   (if
    (i32.lt_s
     (local.get $0)
     (local.get $3)
    )
    (block
     (i32.store8
      (local.get $0)
      (i32.load8_s
       (local.get $1)
      )
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (local.set $1
      (i32.add
       (local.get $1)
       (i32.const 1)
      )
     )
     (br $while-in7)
    )
   )
  )
  (local.get $4)
 )
 (func $_memmove (; 670 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (if
   (i32.and
    (i32.lt_s
     (local.get $1)
     (local.get $0)
    )
    (i32.lt_s
     (local.get $0)
     (i32.add
      (local.get $1)
      (local.get $2)
     )
    )
   )
   (block
    (local.set $3
     (local.get $0)
    )
    (local.set $1
     (i32.add
      (local.get $1)
      (local.get $2)
     )
    )
    (local.set $0
     (i32.add
      (local.get $0)
      (local.get $2)
     )
    )
    (loop $while-in
     (if
      (i32.gt_s
       (local.get $2)
       (i32.const 0)
      )
      (block
       (local.set $2
        (i32.sub
         (local.get $2)
         (i32.const 1)
        )
       )
       (i32.store8
        (local.tee $0
         (i32.sub
          (local.get $0)
          (i32.const 1)
         )
        )
        (i32.load8_s
         (local.tee $1
          (i32.sub
           (local.get $1)
           (i32.const 1)
          )
         )
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $0
     (local.get $3)
    )
   )
   (drop
    (call $_memcpy
     (local.get $0)
     (local.get $1)
     (local.get $2)
    )
   )
  )
  (local.get $0)
 )
 (func $_memset (; 671 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local.set $4
   (i32.add
    (local.get $0)
    (local.get $2)
   )
  )
  (local.set $3
   (i32.and
    (local.get $1)
    (i32.const 255)
   )
  )
  (if
   (i32.ge_s
    (local.get $2)
    (i32.const 67)
   )
   (block
    (loop $while-in
     (if
      (i32.and
       (local.get $0)
       (i32.const 3)
      )
      (block
       (i32.store8
        (local.get $0)
        (local.get $3)
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 1)
        )
       )
       (br $while-in)
      )
     )
    )
    (local.set $1
     (i32.or
      (i32.or
       (i32.or
        (i32.shl
         (local.get $3)
         (i32.const 8)
        )
        (local.get $3)
       )
       (i32.shl
        (local.get $3)
        (i32.const 16)
       )
      )
      (i32.shl
       (local.get $3)
       (i32.const 24)
      )
     )
    )
    (local.set $6
     (i32.add
      (local.tee $5
       (i32.and
        (local.get $4)
        (i32.const -4)
       )
      )
      (i32.const -64)
     )
    )
    (loop $while-in1
     (if
      (i32.le_s
       (local.get $0)
       (local.get $6)
      )
      (block
       (i32.store
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=4
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=8
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=12
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=16
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=20
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=24
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=28
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=32
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=36
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=40
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=44
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=48
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=52
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=56
        (local.get $0)
        (local.get $1)
       )
       (i32.store offset=60
        (local.get $0)
        (local.get $1)
       )
       (local.set $0
        (i32.sub
         (local.get $0)
         (i32.const -64)
        )
       )
       (br $while-in1)
      )
     )
    )
    (loop $while-in3
     (if
      (i32.lt_s
       (local.get $0)
       (local.get $5)
      )
      (block
       (i32.store
        (local.get $0)
        (local.get $1)
       )
       (local.set $0
        (i32.add
         (local.get $0)
         (i32.const 4)
        )
       )
       (br $while-in3)
      )
     )
    )
   )
  )
  (loop $while-in5
   (if
    (i32.lt_s
     (local.get $0)
     (local.get $4)
    )
    (block
     (i32.store8
      (local.get $0)
      (local.get $3)
     )
     (local.set $0
      (i32.add
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $while-in5)
    )
   )
  )
  (i32.sub
   (local.get $4)
   (local.get $2)
  )
 )
 (func $dynCall_ff (; 672 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (result f32)
  (call_indirect (type $FUNCSIG$ff)
   (local.get $1)
   (i32.and
    (local.get $0)
    (i32.const 7)
   )
  )
 )
 (func $dynCall_fff (; 673 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (result f32)
  (call_indirect (type $FUNCSIG$fff)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 8)
   )
  )
 )
 (func $dynCall_i (; 674 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (call_indirect (type $FUNCSIG$i)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 16)
   )
  )
 )
 (func $dynCall_ii (; 675 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (call_indirect (type $FUNCSIG$ii)
   (local.get $1)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 15)
    )
    (i32.const 20)
   )
  )
 )
 (func $dynCall_iidiiii (; 676 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f64) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (result i32)
  (call_indirect (type $FUNCSIG$iidiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 1)
    )
    (i32.const 36)
   )
  )
 )
 (func $dynCall_iii (; 677 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (call_indirect (type $FUNCSIG$iii)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 38)
   )
  )
 )
 (func $dynCall_iiii (; 678 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (call_indirect (type $FUNCSIG$iiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 15)
    )
    (i32.const 42)
   )
  )
 )
 (func $dynCall_iiiii (; 679 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (call_indirect (type $FUNCSIG$iiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (i32.const 58)
  )
 )
 (func $dynCall_v (; 680 ;) (; has Stack IR ;) (param $0 i32)
  (call_indirect (type $FUNCSIG$v)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 63)
   )
  )
 )
 (func $dynCall_vf (; 681 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32)
  (call_indirect (type $FUNCSIG$vf)
   (local.get $1)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 71)
   )
  )
 )
 (func $dynCall_vff (; 682 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32)
  (call_indirect (type $FUNCSIG$vff)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 75)
   )
  )
 )
 (func $dynCall_vffff (; 683 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32) (param $4 f32)
  (call_indirect (type $FUNCSIG$vffff)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 79)
   )
  )
 )
 (func $dynCall_vfi (; 684 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 i32)
  (call_indirect (type $FUNCSIG$vfi)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 1)
    )
    (i32.const 83)
   )
  )
 )
 (func $dynCall_vi (; 685 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call_indirect (type $FUNCSIG$vi)
   (local.get $1)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 31)
    )
    (i32.const 85)
   )
  )
 )
 (func $dynCall_vidd (; 686 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f64) (param $3 f64)
  (call_indirect (type $FUNCSIG$vidd)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 117)
   )
  )
 )
 (func $dynCall_vif (; 687 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32)
  (call_indirect (type $FUNCSIG$vif)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 121)
   )
  )
 )
 (func $dynCall_viff (; 688 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32) (param $3 f32)
  (call_indirect (type $FUNCSIG$viff)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 125)
   )
  )
 )
 (func $dynCall_vifff (; 689 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32) (param $3 f32) (param $4 f32)
  (call_indirect (type $FUNCSIG$vifff)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 129)
   )
  )
 )
 (func $dynCall_viffff (; 690 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32) (param $3 f32) (param $4 f32) (param $5 f32)
  (call_indirect (type $FUNCSIG$viffff)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 133)
   )
  )
 )
 (func $dynCall_vii (; 691 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (call_indirect (type $FUNCSIG$vii)
   (local.get $1)
   (local.get $2)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 63)
    )
    (i32.const 137)
   )
  )
 )
 (func $dynCall_viif (; 692 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 f32)
  (call_indirect (type $FUNCSIG$viif)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 1)
    )
    (i32.const 201)
   )
  )
 )
 (func $dynCall_viii (; 693 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (call_indirect (type $FUNCSIG$viii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 63)
    )
    (i32.const 203)
   )
  )
 )
 (func $dynCall_viiii (; 694 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (call_indirect (type $FUNCSIG$viiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 31)
    )
    (i32.const 267)
   )
  )
 )
 (func $dynCall_viiiii (; 695 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (call_indirect (type $FUNCSIG$viiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 7)
    )
    (i32.const 299)
   )
  )
 )
 (func $dynCall_viiiiii (; 696 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (call_indirect (type $FUNCSIG$viiiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 1)
    )
    (i32.const 307)
   )
  )
 )
 (func $dynCall_viiiiiii (; 697 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (call_indirect (type $FUNCSIG$viiiiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (local.get $7)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 309)
   )
  )
 )
 (func $dynCall_viiiiiiii (; 698 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32)
  (call_indirect (type $FUNCSIG$viiiiiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (local.get $7)
   (local.get $8)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 313)
   )
  )
 )
 (func $dynCall_viiiiiiiii (; 699 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32) (param $9 i32)
  (call_indirect (type $FUNCSIG$viiiiiiiii)
   (local.get $1)
   (local.get $2)
   (local.get $3)
   (local.get $4)
   (local.get $5)
   (local.get $6)
   (local.get $7)
   (local.get $8)
   (local.get $9)
   (i32.add
    (i32.and
     (local.get $0)
     (i32.const 3)
    )
    (i32.const 317)
   )
  )
 )
 (func $b0 (; 700 ;) (; has Stack IR ;) (param $0 f32) (result f32)
  (call $nullFunc_ff
   (i32.const 0)
  )
  (f32.const 0)
 )
 (func $b1 (; 701 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (result f32)
  (call $nullFunc_fff
   (i32.const 1)
  )
  (f32.const 0)
 )
 (func $b2 (; 702 ;) (; has Stack IR ;) (result i32)
  (call $nullFunc_i
   (i32.const 2)
  )
  (i32.const 0)
 )
 (func $b3 (; 703 ;) (; has Stack IR ;) (param $0 i32) (result i32)
  (call $nullFunc_ii
   (i32.const 3)
  )
  (i32.const 0)
 )
 (func $b4 (; 704 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (result i32)
  (call $nullFunc_iidiiii
   (i32.const 4)
  )
  (i32.const 0)
 )
 (func $b5 (; 705 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (result i32)
  (call $nullFunc_iii
   (i32.const 5)
  )
  (i32.const 0)
 )
 (func $b6 (; 706 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (call $nullFunc_iiii
   (i32.const 6)
  )
  (i32.const 0)
 )
 (func $b7 (; 707 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (call $nullFunc_iiiii
   (i32.const 7)
  )
  (i32.const 0)
 )
 (func $b8 (; 708 ;) (; has Stack IR ;) (param $0 i32) (param $1 i64) (param $2 i32) (result i64)
  (call $nullFunc_jiji
   (i32.const 8)
  )
  (i64.const 0)
 )
 (func $b9 (; 709 ;) (; has Stack IR ;)
  (call $nullFunc_v
   (i32.const 9)
  )
 )
 (func $b10 (; 710 ;) (; has Stack IR ;) (param $0 f32)
  (call $nullFunc_vf
   (i32.const 10)
  )
 )
 (func $b11 (; 711 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32)
  (call $nullFunc_vff
   (i32.const 11)
  )
 )
 (func $b12 (; 712 ;) (; has Stack IR ;) (param $0 f32) (param $1 f32) (param $2 f32) (param $3 f32)
  (call $nullFunc_vffff
   (i32.const 12)
  )
 )
 (func $b13 (; 713 ;) (; has Stack IR ;) (param $0 f32) (param $1 i32)
  (call $nullFunc_vfi
   (i32.const 13)
  )
 )
 (func $b14 (; 714 ;) (; has Stack IR ;) (param $0 i32)
  (call $nullFunc_vi
   (i32.const 14)
  )
 )
 (func $b15 (; 715 ;) (; has Stack IR ;) (param $0 i32) (param $1 f64) (param $2 f64)
  (call $nullFunc_vidd
   (i32.const 15)
  )
 )
 (func $b16 (; 716 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32)
  (call $nullFunc_vif
   (i32.const 16)
  )
 )
 (func $b17 (; 717 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32)
  (call $nullFunc_viff
   (i32.const 17)
  )
 )
 (func $b18 (; 718 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32)
  (call $nullFunc_vifff
   (i32.const 18)
  )
 )
 (func $b19 (; 719 ;) (; has Stack IR ;) (param $0 i32) (param $1 f32) (param $2 f32) (param $3 f32) (param $4 f32)
  (call $nullFunc_viffff
   (i32.const 19)
  )
 )
 (func $b20 (; 720 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32)
  (call $nullFunc_vii
   (i32.const 20)
  )
 )
 (func $b21 (; 721 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 f32)
  (call $nullFunc_viif
   (i32.const 21)
  )
 )
 (func $b22 (; 722 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (call $nullFunc_viii
   (i32.const 22)
  )
 )
 (func $b23 (; 723 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (call $nullFunc_viiii
   (i32.const 23)
  )
 )
 (func $b24 (; 724 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (call $nullFunc_viiiii
   (i32.const 24)
  )
 )
 (func $b25 (; 725 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (call $nullFunc_viiiiii
   (i32.const 25)
  )
 )
 (func $b26 (; 726 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32)
  (call $nullFunc_viiiiiii
   (i32.const 26)
  )
 )
 (func $b27 (; 727 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32)
  (call $nullFunc_viiiiiiii
   (i32.const 27)
  )
 )
 (func $b28 (; 728 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32) (param $6 i32) (param $7 i32) (param $8 i32)
  (call $nullFunc_viiiiiiiii
   (i32.const 28)
  )
 )
 (func $b29 (; 729 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i64) (param $3 i32)
  (call $nullFunc_viiji
   (i32.const 29)
  )
 )
 (func $legalstub$dynCall_jiji (; 730 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i64)
  (call $setTempRet0
   (i32.wrap_i64
    (i64.shr_u
     (local.tee $5
      (call_indirect (type $FUNCSIG$jiji)
       (local.get $1)
       (i64.or
        (i64.extend_i32_u
         (local.get $2)
        )
        (i64.shl
         (i64.extend_i32_u
          (local.get $3)
         )
         (i64.const 32)
        )
       )
       (local.get $4)
       (i32.add
        (i32.and
         (local.get $0)
         (i32.const 3)
        )
        (i32.const 59)
       )
      )
     )
     (i64.const 32)
    )
   )
  )
  (i32.wrap_i64
   (local.get $5)
  )
 )
 (func $legalstub$dynCall_viiji (; 731 ;) (; has Stack IR ;) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (call_indirect (type $FUNCSIG$viiji)
   (local.get $1)
   (local.get $2)
   (i64.or
    (i64.extend_i32_u
     (local.get $3)
    )
    (i64.shl
     (i64.extend_i32_u
      (local.get $4)
     )
     (i64.const 32)
    )
   )
   (local.get $5)
   (i32.const 321)
  )
 )
)
